,source
0,"def get_context_data(self,request):
"
1,"def __getattribute__(self,attr):
"
2,"def __setattr__(self,attr,value):
"
3,"def test_vpnservice_create(self):
"
4,"def test_vpnservices_get(self):
"
5,"def test_vpnservice_get(self):
"
6,"def test_ikepolicy_create(self):
"
7,"def test_ikepolicies_get(self):
"
8,"def test_ikepolicy_get(self):
"
9,"def test_ipsecpolicy_create(self):
"
10,"def test_ipsecpolicies_get(self):
"
11,"def test_ipsecpolicy_get(self):
"
12,"def test_ipsecsiteconnection_create(self):
"
13,"def test_ipsecsiteconnections_get(self):
"
14,"def test_ipsecsiteconnection_get(self):
"
15,"def __init__(self,* args,** kwargs):
"
16,"def get_template_names(self):
"
17,"def get_content_type(self):
"
18,"def get_data(self):
"
19,"def get_context_data(self,** kwargs):
"
20,"def render_to_response(self,context,** response_kwargs):
"
21,"def material(self):
"
22,"def __init__(self,basepath):
"
23,"def IsDir(self):
"
24,"def IsFile(self):
"
25,"def GetModTime(self):
"
26,"def names_path(self):
"
27,"def realpath(self):
"
28,"def path(self):
"
29,"def CheckUpdate(self):
"
30,"def LoadNames(self):
"
31,"def GetItem(self,user,route,has_perm = False,need_perm = False):
"
32,"def GetRange(self,user,route,start,end,has_perm = False,need_perm = False):
"
33,"def EffectiveId(self,user):
"
34,"def GetInfo(self):
"
35,"def GetInfoForUser(self,user):
"
36,"def GetAttachLink(self,session):
"
37,"def __init__(self,board,path):
"
38,"def __init__(self,rosters,host):
"
39,"def get_loginid(self):
"
40,"def recv_close(self):
"
41,"def stream_closed(self):
"
42,"def sent_close(self):
"
43,"def close(self):
"
44,"def ping(self,iq):
"
45,"def message(self,elem):
"
46,"def make_jid(self,userid):
"
47,"def refresh(self):
"
48,"def ping_result(self,iq):
"
49,"def ping_client(self):
"
50,"def get_uid(self):
"
51,"def recv_msg(self,from_,msgtext):
"
52,"def check_msg(self):
"
53,"def deliver_msg(self,start):
"
54,"def steal_msg(self):
"
55,"def presence(self,elem):
"
56,"def send_presence(self,elem):
"
57,"def recv_presence(self,elem):
"
58,"def roster(self,iq):
"
59,"def get_roster(self,iq,roster):
"
60,"def set_roster(self,iq,roster):
"
61,"def push(self,roster,query):
"
62,"def disco_info(self,iq):
"
63,"def disco_items(self,iq):
"
64,"def __init__(self,con):
"
65,"def get_connections(self,filter = ''):
"
66,"def get_connection(self,server):
"
67,"def get_server_by_bay(self,baynum):
"
68,"def get_server_by_name(self,name):
"
69,"def get_available_servers(self,server_hardware_type = None,enclosure_group = None,server_profile = None):
"
70,"def get_servers(self):
"
71,"def get_utilization(self,server):
"
72,"def get_env_conf(self,server):
"
73,"def set_server_powerstate(self,server,state,force = False,blocking = True,verbose = False):
"
74,"def delete_server(self,server,force = False,blocking = True,verbose = False):
"
75,"def update_server(self,server):
"
76,"def add_server(self,server,blocking = True,verbose = False):
"
77,"def get_server_schema(self):
"
78,"def get_bios(self,server):
"
79,"def get_ilo_sso_url(self,server):
"
80,"def get_java_remote_console_url(self,server):
"
81,"def get_remote_console_url(self,server):
"
82,"def get_server_hardware_types(self):
"
83,"def remove_server_hardware_type(self,server_hardware_type,force = False,blocking = True,verbose = False):
"
84,"def get_server_type_schema(self):
"
85,"def get_server_hardware_type(self,server_type):
"
86,"def set_server_hardware_type(self,server_hardware_type,name,description):
"
87,"def create_server_profile(self,affinity = 'Bay',biosSettings = None,bootSettings = None,bootModeSetting = None,profileConnectionV4 = None,description = None,firmwareSettingsV3 = None,hideUnusedFlexNics = True,localStorageSettingsV3 = None,macType = 'Virtual',name = None,sanStorageV3 = None,serialNumber = None,serialNumberType = 'Physical',serverHardwareTypeUri = None,serverHardwareUri = None,serverProfileTemplateUri = None,uuid = None,wwnType = 'Virtual',blocking = True,verbose = False):
"
88,"def post_server_profile(self,profile,blocking = True,verbose = False):
"
89,"def remove_server_profile(self,profile,force = False,blocking = True,verbose = False):
"
90,"def get_server_profiles(self):
"
91,"def update_server_profile(self,profile,blocking = True,verbose = False):
"
92,"def update_server_profile_from_template(self,profile,blocking = True,verbose = False):
"
93,"def get_server_profile_by_name(self,name):
"
94,"def get_profile_message(self,profile):
"
95,"def get_profile_compliance_preview(self,profile):
"
96,"def create_server_profile_template(self,name = None,description = None,serverProfileDescription = None,serverHardwareTypeUri = None,enclosureGroupUri = None,affinity = None,hideUnusedFlexNics = None,profileConnectionV4 = None,firmwareSettingsV3 = None,bootSettings = None,bootModeSetting = None,blocking = True,verbose = False):
"
97,"def remove_server_profile_template(self,profile_template,blocking = True,verbose = False):
"
98,"def get_server_profile_templates(self):
"
99,"def get_server_profile_template_by_name(self,name):
"
100,"def update_server_profile_template(self,profile_template,blocking = True,verbose = False):
"
101,"def get_server_profile_from_template(self,profile_template):
"
102,"def get_enclosures(self):
"
103,"def add_enclosure(self,enclosure,blocking = True,verbose = False):
"
104,"def remove_enclosure(self,enclosure,force = False,blocking = True,verbose = False):
"
105,"def create_enclosure_group(self,associatedLIGs,name,powerMode = 'RedundantPowerSupply'):
"
106,"def delete_enclosure_group(self,egroup):
"
107,"def get_enclosure_groups(self):
"
108,"def update_enclosure_group(self,enclosuregroup):
"
109,"def get_pool(self,pooltype):
"
110,"def get_vmac_pool(self):
"
111,"def get_vwwn_pool(self):
"
112,"def get_vsn_pool(self):
"
113,"def get_profile_networks(self):
"
114,"def get_profile_schema(self):
"
115,"def get_profile_available_servers(self):
"
116,"def get_profile_available_storage_systems(self):
"
117,"def get_profile_ports(self):
"
118,"def allocate_pool_ids(self,url,count):
"
119,"def release_pool_ids(self,url,idList):
"
120,"def allocate_range_ids(self,allocatorUrl,count):
"
121,"def release_range_ids(self,collectorUrl,idList):
"
122,"def enable_range(self,url):
"
123,"def disable_range(self,url):
"
124,"def __init__(self,msg,regentry = None,selector = None):
"
125,"def getbiosziplocation(self,romfamily,schemadir,biosversion):
"
126,"def _update_location_map(self,biossection = False,registries = False,monolith = None):
"
127,"def bios_helper_function(self,data,root):
"
128,"def validate(self,item,selector = None,currdict = None,monolith = None,newarg = None,checkall = False,regloc = None):
"
129,"def bios_validate(self,item,regname,selector = None,currdict = None,checkall = False,monolith = None):
"
130,"def bios_info(self,item,regname,selector):
"
131,"def find_schema(self,schname):
"
132,"def find_registry(self,regname):
"
133,"def find_bios_registry(self,regname):
"
134,"def get_errors(self):
"
135,"def __init__(self,item):
"
136,"def set_root(self,newroot):
"
137,"def __init__(self,d):
"
138,"def set_root(self,newroot):
"
139,"def __init__(self,d):
"
140,"def __init__(self,item):
"
141,"def set_root(self,newroot):
"
142,"def __init__(self,d):
"
143,"def validate_attribute_values(self,tdict):
"
144,"def validate_att_val_bios(self,tdict):
"
145,"def get_validator_bios(self,attrname):
"
146,"def validate_attribute(self,attrentry,attrval,name):
"
147,"def __init__(self,d):
"
148,"def __init__(self,d):
"
149,"def __init__(self,d):
"
150,"def __init__(self,d):
"
151,"def __init__(self,d):
"
152,"def __init__(self,d):
"
153,"def validate(self,newval,name):
"
154,"def __init__(self,d):
"
155,"def with_tz(self,tz):
"
156,"def __sub__(self,operand):
"
157,"def __mul__(self,operand):
"
158,"def __div__(self,operand):
"
159,"def clone(self):
"
160,"def ny_str(self):
"
161,"def requester(self):
"
162,"def __init__(self,scope,audit_enabled = True):
"
163,"def __init__(self,text):
"
164,"def render(self,context):
"
165,"def eru_deployed(self):
"
166,"def eru_info(self):
"
167,"def cluster(self):
"
168,"def __init__(self,logging_level = logging.INFO,read_timer = 1):
"
169,"def __del__(self):
"
170,"def check_for_update(self):
"
171,"def setup(self,kwargs,in_shapes):
"
172,"def forward_pass(self,buffers,training_pass = True):
"
173,"def backward_pass(self,buffers):
"
174,"def __init__(self,out_name = '',targets_name = 'targets',mask_name = '',name = None):
"
175,"def __call__(self,true_labels,predicted,mask = None):
"
176,"def __call__(self,true_labels,predicted,mask = None):
"
177,"def __init__(self,threshold = 0.5,out_name = '',targets_name = 'targets',mask_name = '',name = None):
"
178,"def __call__(self,true_labels,predicted,mask = None):
"
179,"def __call__(self,true_labels,predicted,mask = None):
"
180,"def __init__(self,added =(),modified =(),typechanged =(),ignored_fallbacks =()):
"
181,"def update_from(self,config_mod,path = ''):
"
182,"def update_add(self,config_mod,path = ''):
"
183,"def ensure_coherence(self):
"
184,"def __init__(self):
"
185,"def set_k_values(self,kp,kd,ki):
"
186,"def clear_error(self):
"
187,"def pid(self,target,process_var,timestep):
"
188,"def completenames(self,text,* ignored):
"
189,"def completedefault(self,text,line,begidx,endidx):
"
190,"def do_sub(self,raw_args):
"
191,"def do_stop(self,raw_args):
"
192,"def do_kill(self,raw_args):
"
193,"def do_shell(self,cmd):
"
194,"def setUp(self):
"
195,"def tearDown(self):
"
196,"def test_0(self):
"
197,"def test_180(self):
"
198,"def test_middle(self):
"
199,"def test_series(self):
"
200,"def test_manually_confirm(self):
"
201,"def test_over_max(self):
"
202,"def test_under_min(self):
"
203,"def link(self,obj):
"
204,"def get_object(self,bits):
"
205,"def items(self,obj):
"
206,"def item_pubdate(self,item):
"
207,"def item_categories(self,item):
"
208,"def __init__(self,methods = None):
"
209,"def add(self,name,func):
"
210,"def is_immutable(self):
"
211,"def __reduce_ex__(self,protocol):
"
212,"def __delitem__(self,key):
"
213,"def __delslice__(self,i,j):
"
214,"def __iadd__(self,other):
"
215,"def __setitem__(self,key,value):
"
216,"def __setslice__(self,i,j,value):
"
217,"def append(self,item):
"
218,"def extend(self,iterable):
"
219,"def insert(self,pos,value):
"
220,"def pop(self,index = - 1):
"
221,"def reverse(self):
"
222,"def sort(self,cmp = None,key = None,reverse = None):
"
223,"def __reduce_ex__(self,protocol):
"
224,"def setdefault(self,key,default = None):
"
225,"def update(self,* args,** kwargs):
"
226,"def pop(self,key,default = None):
"
227,"def popitem(self):
"
228,"def __setitem__(self,key,value):
"
229,"def __delitem__(self,key):
"
230,"def clear(self):
"
231,"def __reduce_ex__(self,protocol):
"
232,"def add(self,key,value):
"
233,"def popitemlist(self):
"
234,"def poplist(self,key):
"
235,"def setlist(self,key,new_list):
"
236,"def setlistdefault(self,key,default_list = None):
"
237,"def get(self,key,default = None,type = None):
"
238,"def copy(self):
"
239,"def __copy__(self):
"
240,"def __getstate__(self):
"
241,"def __setstate__(self,value):
"
242,"def __getitem__(self,key):
"
243,"def __setitem__(self,key,value):
"
244,"def add(self,key,value):
"
245,"def getlist(self,key,type = None):
"
246,"def setlist(self,key,new_list):
"
247,"def setdefault(self,key,default = None):
"
248,"def setlistdefault(self,key,default_list = None):
"
249,"def items(self,multi = False):
"
250,"def lists(self):
"
251,"def listvalues(self):
"
252,"def iteritems(self,multi = False):
"
253,"def iterlists(self):
"
254,"def itervalues(self):
"
255,"def iterlistvalues(self):
"
256,"def copy(self):
"
257,"def update(self,other_dict):
"
258,"def poplist(self,key):
"
259,"def __repr__(self):
"
260,"def __init__(self,omd,key,value):
"
261,"def unlink(self,omd):
"
262,"def __init__(self,mapping = None):
"
263,"def __eq__(self,other):
"
264,"def __ne__(self,other):
"
265,"def __reduce_ex__(self,protocol):
"
266,"def __getstate__(self):
"
267,"def __setstate__(self,values):
"
268,"def __getitem__(self,key):
"
269,"def __setitem__(self,key,value):
"
270,"def __delitem__(self,key):
"
271,"def iteritems(self,multi = False):
"
272,"def iterlists(self):
"
273,"def iterlistvalues(self):
"
274,"def add(self,key,value):
"
275,"def getlist(self,key,type = None):
"
276,"def setlist(self,key,new_list):
"
277,"def setlistdefault(self,key,default_list = None):
"
278,"def update(self,mapping):
"
279,"def poplist(self,key):
"
280,"def __init__(self,defaults = None,_list = None):
"
281,"def __getitem__(self,key,_index_operation = True):
"
282,"def __eq__(self,other):
"
283,"def __ne__(self,other):
"
284,"def get(self,key,default = None,type = None):
"
285,"def getlist(self,key,type = None):
"
286,"def get_all(self,name):
"
287,"def iteritems(self,lower = False):
"
288,"def iterkeys(self,lower = False):
"
289,"def keys(self,lower = False):
"
290,"def items(self,lower = False):
"
291,"def __delitem__(self,key,_index_operation = True):
"
292,"def remove(self,key):
"
293,"def pop(self,key = None,default = _missing):
"
294,"def popitem(self):
"
295,"def __contains__(self,key):
"
296,"def __iter__(self):
"
297,"def __len__(self):
"
298,"def add(self,_key,_value,** kw):
"
299,"def add_header(self,_key,_value,** _kw):
"
300,"def clear(self):
"
301,"def set(self,_key,_value,** kw):
"
302,"def setdefault(self,key,value):
"
303,"def __setitem__(self,key,value):
"
304,"def to_list(self,charset = 'utf-8'):
"
305,"def copy(self):
"
306,"def __copy__(self):
"
307,"def __str__(self,charset = 'utf-8'):
"
308,"def __repr__(self):
"
309,"def __delitem__(self,key):
"
310,"def __setitem__(self,key,value):
"
311,"def add(self,item):
"
312,"def extend(self,iterable):
"
313,"def insert(self,pos,value):
"
314,"def pop(self,index = - 1):
"
315,"def popitem(self):
"
316,"def setdefault(self,key,default):
"
317,"def __init__(self,environ):
"
318,"def __eq__(self,other):
"
319,"def __getitem__(self,key,_index_operation = False):
"
320,"def __len__(self):
"
321,"def copy(self):
"
322,"def __reduce_ex__(self,protocol):
"
323,"def __init__(self,dicts = None):
"
324,"def __getitem__(self,key):
"
325,"def get(self,key,default = None,type = None):
"
326,"def getlist(self,key,type = None):
"
327,"def keys(self):
"
328,"def iteritems(self,multi = False):
"
329,"def items(self,multi = False):
"
330,"def lists(self):
"
331,"def iterlistvalues(self):
"
332,"def listvalues(self):
"
333,"def iterkeys(self):
"
334,"def copy(self):
"
335,"def to_dict(self,flat = True):
"
336,"def __len__(self):
"
337,"def __contains__(self,key):
"
338,"def __repr__(self):
"
339,"def copy(self):
"
340,"def __copy__(self):
"
341,"def copy(self):
"
342,"def __copy__(self):
"
343,"def copy(self):
"
344,"def __copy__(self):
"
345,"def __init__(self,values =()):
"
346,"def _value_matches(self,value,item):
"
347,"def __getitem__(self,key):
"
348,"def quality(self,key):
"
349,"def __contains__(self,value):
"
350,"def __repr__(self):
"
351,"def index(self,key):
"
352,"def find(self,key):
"
353,"def itervalues(self):
"
354,"def to_header(self):
"
355,"def __str__(self):
"
356,"def best_match(self,matches,default = None):
"
357,"def best(self):
"
358,"def _value_matches(self,value,item):
"
359,"def accept_html(self):
"
360,"def accept_xhtml(self):
"
361,"def _value_matches(self,value,item):
"
362,"def _value_matches(self,value,item):
"
363,"def __init__(self,values =(),on_update = None):
"
364,"def _get_cache_value(self,key,empty,type):
"
365,"def _set_cache_value(self,key,value,type):
"
366,"def _del_cache_value(self,key):
"
367,"def to_header(self):
"
368,"def __str__(self):
"
369,"def __repr__(self):
"
370,"def __init__(self,initial = None,on_update = None):
"
371,"def __repr__(self):
"
372,"def __init__(self,headers = None,on_update = None):
"
373,"def add(self,header):
"
374,"def remove(self,header):
"
375,"def update(self,iterable):
"
376,"def discard(self,header):
"
377,"def find(self,header):
"
378,"def index(self,header):
"
379,"def clear(self):
"
380,"def as_set(self,preserve_casing = False):
"
381,"def to_header(self):
"
382,"def __getitem__(self,idx):
"
383,"def __delitem__(self,idx):
"
384,"def __setitem__(self,idx,value):
"
385,"def __contains__(self,header):
"
386,"def __len__(self):
"
387,"def __iter__(self):
"
388,"def __nonzero__(self):
"
389,"def __str__(self):
"
390,"def __repr__(self):
"
391,"def __init__(self,strong_etags = None,weak_etags = None,star_tag = False):
"
392,"def as_set(self,include_weak = False):
"
393,"def is_weak(self,etag):
"
394,"def contains_weak(self,etag):
"
395,"def contains(self,etag):
"
396,"def contains_raw(self,etag):
"
397,"def to_header(self):
"
398,"def __call__(self,etag = None,data = None,include_weak = False):
"
399,"def __nonzero__(self):
"
400,"def __str__(self):
"
401,"def __iter__(self):
"
402,"def __contains__(self,etag):
"
403,"def __repr__(self):
"
404,"def __init__(self,auth_type,data = None):
"
405,"def qop(self):
"
406,"def __init__(self,auth_type = None,values = None,on_update = None):
"
407,"def set_basic(self,realm = 'authentication required'):
"
408,"def set_digest(self,realm,nonce,qop =('auth',),opaque = None,algorithm = None,stale = False):
"
409,"def __str__(self):
"
410,"def __repr__(self):
"
411,"def _get_stale(self):
"
412,"def _set_stale(self,value):
"
413,"def __init__(self,stream = None,filename = None,name = None,content_type = 'application/octet-stream',content_length = - 1,headers = None):
"
414,"def save(self,dst,buffer_size = 16384):
"
415,"def close(self):
"
416,"def __nonzero__(self):
"
417,"def __getattr__(self,name):
"
418,"def __iter__(self):
"
419,"def __repr__(self):
"
420,"def __init__(self,length):
"
421,"def __call__(self,val):
"
422,"def __init__(self,instance = None,initial = None):
"
423,"def context_validate(self,data):
"
424,"def __init__(self,pid,tid,n):
"
425,"def __init__(self):
"
426,"def doOperation(self,args):
"
427,"def setUp(self):
"
428,"def testExecute(self):
"
429,"def testWaitForImage(self):
"
430,"def testExecuteWithStringSubstitutions(self):
"
431,"def testImageOutput(self):
"
432,"def testTypeNamePrefixes(self):
"
433,"def testDefaultNames(self):
"
434,"def testNodesConstructWithDefaultValues(self):
"
435,"def testDirectoryCreation(self):
"
436,"def test(self):
"
437,"def __init__(self):
"
438,"def parameterChanged(self,parameter):
"
439,"def __init__(self,parameterHandler,parenting = None):
"
440,"def __init__(self,name = ""TextWriter"",requiresSequenceExecution = False):
"
441,"def execute(self):
"
442,"def executeSequence(self,frames):
"
443,"def hash(self,context):
"
444,"def requiresSequenceExecution(self):
"
445,"def __processText(self,context):
"
446,"def test(self):
"
447,"def testOverwrite(self):
"
448,"def testDirtyPropogation(self):
"
449,"def testPassThrough(self):
"
450,"def test(self):
"
451,"def testImageWithANegativeDataWindow(self):
"
452,"def testHashVariesPerTileAndChannel(self):
"
453,"def setUp(self):
"
454,"def test(self):
"
455,"def testSerialisation(self):
"
456,"def testShader(self):
"
457,"def testShaderHash(self):
"
458,"def testCoshaderHash(self):
"
459,"def testParameterOrdering(self):
"
460,"def testCoshader(self):
"
461,"def testInputAcceptance(self):
"
462,"def testParameterDefaultValue(self):
"
463,"def testParameterMinMax(self):
"
464,"def testReload(self):
"
465,"def testReloadRemovesOldParameters(self):
"
466,"def testAutomaticReloadOnScriptLoad(self):
"
467,"def testReloadPreservesConnections(self):
"
468,"def testReloadPreservesConnectionsWhenMinMaxOrDefaultChanges(self):
"
469,"def testReloadPreservesPartialConnectionsWhenMinMaxOrDefaultChanges(self):
"
470,"def testReloadPreservesValuesWhenMinMaxOrDefaultChanges(self):
"
471,"def testOutputParameters(self):
"
472,"def testAssignmentDirtyPropagation(self):
"
473,"def testArrayParameters(self):
"
474,"def testFixedCoshaderArrayParameters(self):
"
475,"def testCoshaderType(self):
"
476,"def testCantConnectSurfaceShaderIntoCoshaderInput(self):
"
477,"def testConnectionsBetweenParameters(self):
"
478,"def testFixedCoshaderArrayParameterHash(self):
"
479,"def testDisabling(self):
"
480,"def testDisablingCoshaders(self):
"
481,"def testCorrespondingInput(self):
"
482,"def testCoshaderPassThrough(self):
"
483,"def testSplineParameters(self):
"
484,"def testSplineParameterSerialisationKeepsExistingValues(self):
"
485,"def testSplineParameterDefaultValueAnnotation(self):
"
486,"def testCoshadersInBox(self):
"
487,"def testShaderInBoxWithExternalCoshader(self):
"
488,"def testNumericTypeAnnotations(self):
"
489,"def testCoshaderTypeAnnotations(self):
"
490,"def testMultipleCoshaderTypeAnnotations(self):
"
491,"def testSplitCoshaderPassThrough(self):
"
492,"def testSerialDisabledShaders(self):
"
493,"def testDynamicCoshaderArrayParameters(self):
"
494,"def testSerialiseDynamicCoshaderArrayParameters(self):
"
495,"def testConvertFixedCoshaderArrayToDynamic(self):
"
496,"def testConvertFixedCoshaderArrayToDynamicWithFirstPlugUnconnected(self):
"
497,"def testConvertFixedCoshaderArrayToDynamicDuringLoading(self):
"
498,"def testHashThroughBox(self):
"
499,"def testDanglingBoxConnection(self):
"
500,"def testUnconnectedCustomBoxInput(self):
"
501,"def testCoshaderSwitching(self):
"
502,"def testCoshaderTypingPreventsNewInvalidSwitchInputs(self):
"
503,"def testAcceptInputFromEmptySwitch(self):
"
504,"def testCoshaderSwitchingInBox(self):
"
505,"def testRepeatability(self):
"
506,"def testHandlesAreHumanReadable(self):
"
507,"def testHandlesAreUniqueEvenIfNodeNamesArent(self):
"
508,"def testShaderTypesInState(self):
"
509,"def testAssignmentAttributeName(self):
"
510,"def testVolumeShader(self):
"
511,"def testInputAcceptanceFromDots(self):
"
512,"def testShaderTypeOverride(self):
"
513,"def testReferencePromotedCoshader(self):
"
514,"def testLoadAndGIL(self):
"
515,"def test(self):
"
516,"def testOutputDirectoryCreation(self):
"
517,"def testHash(self):
"
518,"def testConstruct(self):
"
519,"def testRunTimeTyped(self):
"
520,"def testAffects(self):
"
521,"def testNoExtraInputs(self):
"
522,"def __init__(self,plug,parenting = None):
"
523,"def hasLabel(self):
"
524,"def _updateFromPlug(self):
"
525,"def __menuDefinition(self):
"
526,"def __setValue(self,value,* unused):
"
527,"def __init__(self,plug,parenting = None):
"
528,"def hasLabel(self):
"
529,"def _updateFromPlug(self):
"
530,"def __menuDefinition(self):
"
531,"def __toggleMinimumExpansionDepth(self,* unused):
"
532,"def __init__(self,plug,parenting = None):
"
533,"def _updateFromPlug(self):
"
534,"def __init__(self,plug,parenting = None):
"
535,"def hasLabel(self):
"
536,"def _updateFromPlug(self):
"
537,"def __menuDefinition(self):
"
538,"def __init__(self,name = ""AddNode""):
"
539,"def enabledPlug(self):
"
540,"def correspondingInput(self,output):
"
541,"def affects(self,input):
"
542,"def hash(self,output,context,h):
"
543,"def compute(self,plug,context):
"
544,"def test(self):
"
545,"def testIsLeaf(self):
"
546,"def testConstructWithFilter(self):
"
547,"def testBrokenSymbolicLinks(self):
"
548,"def testSymLinkInfo(self):
"
549,"def testCopy(self):
"
550,"def testEmptyPath(self):
"
551,"def testRelativePath(self):
"
552,"def testRelativePathChildren(self):
"
553,"def testChildrenOfFile(self):
"
554,"def testModificationTimes(self):
"
555,"def testOwner(self):
"
556,"def testGroup(self):
"
557,"def testPropertyNames(self):
"
558,"def testSequences(self):
"
559,"def setUp(self):
"
560,"def tearDown(self):
"
561,"def __dictPath(self):
"
562,"def test(self):
"
563,"def testNonLeafChildren(self):
"
564,"def testCopy(self):
"
565,"def testInfo(self):
"
566,"def testInfoOfInvalidPath(self):
"
567,"def testFilter(self):
"
568,"def testIsEmpty(self):
"
569,"def testProperties(self):
"
570,"def __init__(self,plug,parenting = None):
"
571,"def hasLabel(self):
"
572,"def setPlug(self,plug):
"
573,"def setReadOnly(self,readOnly):
"
574,"def childPlugValueWidget(self,childPlug,lazy = True):
"
575,"def _updateFromPlug(self):
"
576,"def __addMenuDefinition(self):
"
577,"def __addItem(self,name,value):
"
578,"def __init__(self,childPlug):
"
579,"def setPlug(self,plug):
"
580,"def hasLabel(self):
"
581,"def childPlugValueWidget(self,childPlug,lazy = True):
"
582,"def setReadOnly(self,readOnly):
"
583,"def _updateFromPlug(self):
"
584,"def __init__(self,plug,path = None,parenting = None):
"
585,"def getToolTip(self):
"
586,"def _pathChooserDialogue(self):
"
587,"def _updateFromPlug(self):
"
588,"def _setPlugFromPath(self,path):
"
589,"def __plugMetadataChanged(self,nodeTypeId,plugPath,key,plug):
"
590,"def __extensions(self):
"
591,"def __init__(self,graphComponent,horizontalAlignment = GafferUI.Label.HorizontalAlignment.Left,verticalAlignment = GafferUI.Label.VerticalAlignment.Center,numComponents = 1,formatter = None,parenting = None):
"
592,"def setText(self,text):
"
593,"def setGraphComponent(self,graphComponent):
"
594,"def getGraphComponent(self):
"
595,"def setNumComponents(self,numComponents):
"
596,"def getNumComponents(self):
"
597,"def setFormatter(self,formatter):
"
598,"def getFormatter(self):
"
599,"def __setupConnections(self,reuseUntil = None):
"
600,"def __parentChanged(self,child,oldParent):
"
601,"def __setText(self,* unwantedArgs):
"
602,"def __buttonPress(self,widget,event):
"
603,"def __dragBegin(self,widget,event):
"
604,"def __dragEnd(self,widget,event):
"
605,"def __init__(self,plug,parenting = None):
"
606,"def _updateFromPlug(self):
"
607,"def __menuDefinition(self):
"
608,"def __applyPreset(self,unused,preset):
"
609,"def __plugMetadataChanged(self,nodeTypeId,plugPath,key,plug):
"
610,"def setSelection(self,selection):
"
611,"def getSelection(self):
"
612,"def nodeEditor(self):
"
613,"def plugEditor(self):
"
614,"def _updateFromSet(self):
"
615,"def __updateFromSetInternal(self,lazy = True):
"
616,"def __plugListingSelectionChanged(self,listing):
"
617,"def __sectionEditorNameChanged(self,sectionEditor,oldName,newName):
"
618,"def __repr__(self):
"
619,"def __init__(self,* args,** kw):
"
620,"def __init__(self,* args,** kw):
"
621,"def __init__(self,topLevelWidget,key,target = None,parenting = None):
"
622,"def setTarget(self,target):
"
623,"def getTarget(self):
"
624,"def setKey(self,key):
"
625,"def getKey(self,key):
"
626,"def _updateFromValue(self,value):
"
627,"def _updateFromWidget(self,value):
"
628,"def _deregisterValue(self):
"
629,"def __update(self):
"
630,"def __nodeMetadataChanged(self,nodeTypeId,key,node):
"
631,"def __plugMetadataChanged(self,nodeTypeId,plugPath,key,plug):
"
632,"def __init__(self,key,target = None,parenting = None):
"
633,"def _updateFromValue(self,value):
"
634,"def __stateChanged(self,* unused):
"
635,"def __init__(self,key,target = None,acceptEmptyString = True,parenting = None):
"
636,"def textWidget(self):
"
637,"def _updateFromValue(self,value):
"
638,"def __editingFinished(self,* unused):
"
639,"def __init__(self,key,target = None,parenting = None):
"
640,"def textWidget(self):
"
641,"def _updateFromValue(self,value):
"
642,"def __editingFinished(self,* unused):
"
643,"def __init__(self,key,target = None,parenting = None):
"
644,"def _updateFromValue(self,value):
"
645,"def __buttonRelease(self,swatch,event):
"
646,"def __init__(self,key,labelsAndValues,target = None,parenting = None):
"
647,"def _updateFromValue(self,value):
"
648,"def __menuDefinition(self):
"
649,"def __setValue(self,unused,value):
"
650,"def __init__(self):
"
651,"def parent(self):
"
652,"def child(self,name):
"
653,"def isAncestorOf(self,item):
"
654,"def append(self,child):
"
655,"def insert(self,index,child):
"
656,"def remove(self,child):
"
657,"def index(self,child):
"
658,"def name(self):
"
659,"def fullName(self):
"
660,"def __len__(self):
"
661,"def __getitem__(self,index):
"
662,"def __init__(self,sectionName):
"
663,"def name(self):
"
664,"def __init__(self,plug):
"
665,"def name(self):
"
666,"def __init__(self,rootItem,path,root = ""/"",filter = None):
"
667,"def rootItem(self):
"
668,"def item(self):
"
669,"def copy(self):
"
670,"def isLeaf(self):
"
671,"def isValid(self):
"
672,"def _children(self):
"
673,"def __init__(self,parenting = None):
"
674,"def setPlugParent(self,parent):
"
675,"def getPlugParent(self):
"
676,"def setSelection(self,selection):
"
677,"def getSelection(self):
"
678,"def selectionChangedSignal(self):
"
679,"def __updatePath(self):
"
680,"def __updatePathLazily(self):
"
681,"def __updateMetadata(self):
"
682,"def __childAddedOrRemoved(self,parent,child):
"
683,"def __childNameChanged(self,child):
"
684,"def __updateChildNameChangedConnection(self,child):
"
685,"def __dragEnter(self,listing,event):
"
686,"def __dragMove(self,listing,event):
"
687,"def __dragEnd(self,listing,event):
"
688,"def __selectionChanged(self,pathListing):
"
689,"def __deleteButtonClicked(self,button):
"
690,"def __nodeMetadataChanged(self,nodeTypeId,key,node):
"
691,"def __plugMetadataChanged(self,nodeTypeId,plugPath,key,plug):
"
692,"def __keyPress(self,widget,event):
"
693,"def __addMenuDefinition(self):
"
694,"def __addPlug(self,plugType):
"
695,"def __addSection(self):
"
696,"def __selectedItem(self):
"
697,"def __deleteSelected(self):
"
698,"def __init__(self,parenting = None):
"
699,"def setPlug(self,plug):
"
700,"def getPlug(self):
"
701,"def __updatePath(self):
"
702,"def __plugMetadataChanged(self,nodeTypeId,plugPath,key,plug):
"
703,"def __selectionChanged(self,listing):
"
704,"def __dragEnter(self,listing,event):
"
705,"def __dragMove(self,listing,event):
"
706,"def __dragEnd(self,listing,event):
"
707,"def __addButtonClicked(self,button):
"
708,"def __deleteButtonClicked(self,button):
"
709,"def __nameEditingFinished(self,nameWidget):
"
710,"def __valuePlugSet(self,plug):
"
711,"def __init__(self,parenting = None):
"
712,"def setPlug(self,plug):
"
713,"def getPlug(self):
"
714,"def __plugMetadataChanged(self,nodeTypeId,plugPath,key,plug):
"
715,"def __updateWidgetMenuText(self):
"
716,"def __updateWidgetSettings(self):
"
717,"def __widgetMenuDefinition(self):
"
718,"def __updateGadgetMenuText(self):
"
719,"def __gadgetMenuDefinition(self):
"
720,"def __registerOrDeregisterMetadata(self,unused,key,value):
"
721,"def __init__(self,parenting = None):
"
722,"def setPlugParent(self,plugParent):
"
723,"def getPlugParent(self):
"
724,"def setSection(self,section):
"
725,"def getSection(self):
"
726,"def nameChangedSignal(self):
"
727,"def __nameWidgetEditingFinished(self,nameWidget):
"
728,"def testConstruction(self):
"
729,"def testSetValue(self):
"
730,"def testSetRange(self):
"
731,"def testSetZeroRange(self):
"
732,"def testSetPosition(self):
"
733,"def testValuesOutsideRangeAreClamped(self):
"
734,"def testPositionsOutsideRangeAreClamped(self):
"
735,"def testHardRange(self):
"
736,"def testSetRangeClampsValue(self):
"
737,"def testMultipleValues(self):
"
738,"def __init__(self,** kw):
"
739,"def __init__(self):
"
740,"def testOwner(self):
"
741,"def testParent(self):
"
742,"def testCanDie(self):
"
743,"def testAncestor(self):
"
744,"def testIsAncestorOf(self):
"
745,"def testGafferWidgetAsTopLevel(self):
"
746,"def testToolTip(self):
"
747,"def testEnabledState(self):
"
748,"def testDisabledWidgetsDontGetSignals(self):
"
749,"def testCanDieAfterUsingSignals(self):
"
750,"def testVisibility(self):
"
751,"def testGetVisibleForNewWidgets(self):
"
752,"def testVisibilityOfParentlessWidgets(self):
"
753,"def testVisibilityWhenTransferringWidgets(self):
"
754,"def testSignals(self):
"
755,"def testBound(self):
"
756,"def testParentChangedSignal(self):
"
757,"def testHighlighting(self):
"
758,"def testWidgetAt(self):
"
759,"def testMousePosition(self):
"
760,"def testAddressAndObject(self):
"
761,"def testSetVisibleWithNonBool(self):
"
762,"def tearDown(self):
"
763,"def test_has_applicable_batch_data_true(self):
"
764,"def test_has_applicable_batch_data_false(self):
"
765,"def test_is_relevant_alias(self):
"
766,"def test_provider_metrics_500(self):
"
767,"def test_provider_metrics_400(self):
"
768,"def test_provider_metrics_nonsense_xml(self):
"
769,"def test_provider_metrics_nonsense_txt(self):
"
770,"def test_provider_metrics_empty(self):
"
771,"def _build_hash_key(self,key):
"
772,"def _get_client(self):
"
773,"def __init__(self,max_cache_age = 60 * 60):
"
774,"def flush_cache(self):
"
775,"def get_cache_entry(self,key):
"
776,"def __init__(self):
"
777,"def _extract_metrics(self,page,status_code = 200,id = None):
"
778,"def setUp(self):
"
779,"def tearDown(self):
"
780,"def test_get_provider(self):
"
781,"def test_get_providers(self):
"
782,"def test_get_providers_filters_by_metrics(self):
"
783,"def test_get_providers_filters_by_biblio(self):
"
784,"def test_get_providers_filters_by_aliases(self):
"
785,"def test_lookup_xml_from_dom(self):
"
786,"def test_lookup_xml_from_soup(self):
"
787,"def test_extract_xml(self):
"
788,"def test_doi_from_url_string(self):
"
789,"def test_is_issn_in_doaj_false(self):
"
790,"def test_is_issn_in_doaj_true(self):
"
791,"def test_import_products(self):
"
792,"def test_import_products_bad_providername(self):
"
793,"def test_get_all_static_meta(self):
"
794,"def test_get_all_metric_names(self):
"
795,"def __init__(self,** kwargs):
"
796,"def alias_tuple(self):
"
797,"def my_alias_tuple_for_comparing(self):
"
798,"def is_equivalent_alias(self,given_namespace,given_nid):
"
799,"def __init__(self,alias_rows):
"
800,"def display_best_url(self):
"
801,"def display_pmid(self):
"
802,"def display_pmc(self):
"
803,"def display_doi(self):
"
804,"def display_arxiv(self):
"
805,"def has_formal_alias(self):
"
806,"def resolved_url(self):
"
807,"def get_genre(self):
"
808,"def get_host(self):
"
809,"def _guess_genre_and_host_from_aliases(self):
"
810,"def to_dict(self):
"
811,"def tweet_text(self):
"
812,"def urls(self):
"
813,"def has_country(self):
"
814,"def set_attributes_from_altmetric_post(self,post):
"
815,"def setUp(self):
"
816,"def tearDown(self):
"
817,"def testRepositoryInit(self):
"
818,"def testConfiguration(self):
"
819,"def testRepositoryInitWhenExists(self):
"
820,"def testStatus(self):
"
821,"def testAdding(self):
"
822,"def testCommitting(self):
"
823,"def _clean(self):
"
824,"def test_find_repository(self):
"
825,"def __init__(self,profile):
"
826,"def build(self,session):
"
827,"def get_no_txn(self,session):
"
828,"def __init__(self,thread):
"
829,"def _get_thread(self,session):
"
830,"def _add_messages(self,thread_model):
"
831,"def add_messages(self):
"
832,"def get_thread(self):
"
833,"def GetClassID(self):
"
834,"def GetColumnInfo(self,index):
"
835,"def GetItemData(self,colid,colData):
"
836,"def __init__(self,level = logging.DEBUG):
"
837,"def getLogger(self,name,level = logging.DEBUG):
"
838,"def get_feature_descriptions(self,request,* types):
"
839,"def list_stored_queries(self,request):
"
840,"def get_features(self,request,parms):
"
841,"def supports_feature_versioning(self):
"
842,"def __init__(self,models):
"
843,"def list_stored_queries(self,request):
"
844,"def get_feature_descriptions(self,request,* types):
"
845,"def get_features(self,request,parms):
"
846,"def AdHocQuery(self,request,parms):
"
847,"def SQ_GetFeatureById(self,request,parms):
"
848,"def _parse_xml_DescribeFeatureType(self,request):
"
849,"def _response_xml_DescribeFeatureType(self,response):
"
850,"def _response_json_DescribeFeatureType(self,response,callback = None):
"
851,"def DescribeFeatureType(self,request,kwargs):
"
852,"def _parse_xml_GetFeature(self,request):
"
853,"def GetFeature(self,request,kwargs):
"
854,"def CreateStoredQuery(self,request,kwargs):
"
855,"def DropStoredQuery(self,request,kwargs):
"
856,"def Transaction(self,request,kwargs):
"
857,"def GetFeatureWithLock(self,request,kwargs):
"
858,"def LockFeature(self,request,kwargs):
"
859,"def GetPropertyValue(self,request,kwargs):
"
860,"def __init__(self,** kwargs):
"
861,"def get_capabilities_response(self,request,params):
"
862,"def get_capabilities_response(self,request,params):
"
863,"def __init__(self,parent,eventId):
"
864,"def savePressed(self):
"
865,"def closePressed(self):
"
866,"def roundSelected(self,ourRound,ourColumn):
"
867,"def assignWidgets(self):
"
868,"def __init__(self,parent = None):
"
869,"def __lt__(self,otherItem):
"
870,"def __init__(self,addr,chain):
"
871,"def handle_connect(self):
"
872,"def close(self):
"
873,"def collect_incoming_data(self,data):
"
874,"def found_terminator(self):
"
875,"def log(self,* args):
"
876,"def __init__(self):
"
877,"def end(self):
"
878,"def __init__(self):
"
879,"def __init__(self):
"
880,"def increment(self):
"
881,"def value(self):
"
882,"def test_add_task(self):
"
883,"def test_yield_task(self):
"
884,"def test_add_task_exception(self):
"
885,"def test_yield_task_exception(self):
"
886,"def test_awaitable(self):
"
887,"def __init__(self,address = None):
"
888,"def register_server(self,address):
"
889,"def remove_server(self,address):
"
890,"def remove_all_servers(self):
"
891,"def register_handler(self,event_name,event_handler,run_on_main_loop = False,request_handler = None,persist = False):
"
892,"def remove_handler(self,handler_sig):
"
893,"def start_listening(self):
"
894,"def send_to_server(self,address,event_name,event_args):
"
895,"def send(self,event_name,event_args,broadcast = True):
"
896,"def __getattr__(self,path):
"
897,"def log_error(self,error):
"
898,"def enable_traceback_logging(self):
"
899,"def __init__(self,path,connection):
"
900,"def __call__(self,* args,** kwargs):
"
901,"def __getattr__(self,path):
"
902,"def __init__(self,format = formats.XMLFormat):
"
903,"def _split_path(self,path):
"
904,"def debug_only(self,debug = True):
"
905,"def respond_to(self,method,path,headers,data,body,response_headers = None):
"
906,"def _lookup_response(self,method,path,headers,data):
"
907,"def get(self,path,headers = None):
"
908,"def post(self,path,headers = None,data = None):
"
909,"def put(self,path,headers = None,data = None):
"
910,"def delete(self,path,headers = None):
"
911,"def __init__(self,env_path):
"
912,"def get_project_description(self):
"
913,"def get_users(self):
"
914,"def _get_non_authorised_user(self,user_name):
"
915,"def _get_user_login(self,user_name):
"
916,"def get_severities(self):
"
917,"def get_issue_types(self):
"
918,"def get_issue_priorities(self):
"
919,"def get_issue_resolutions(self):
"
920,"def get_components(self):
"
921,"def get_versions(self):
"
922,"def get_issues(self):
"
923,"def get_custom_fields_declared(self):
"
924,"def _get_data_from_enum(self,type_name):
"
925,"def __init__(self):
"
926,"def Filter(self,pkt):
"
927,"def __init__(self,* args):
"
928,"def indication(self,pdu):
"
929,"def response(self,pdu):
"
930,"def __init__(self,peer):
"
931,"def handle_connect(self):
"
932,"def handle_expt(self):
"
933,"def readable(self):
"
934,"def writable(self):
"
935,"def handle_close(self):
"
936,"def indication(self,pdu):
"
937,"def __init__(self,director,peer):
"
938,"def handle_close(self):
"
939,"def idle_timeout(self):
"
940,"def indication(self,pdu):
"
941,"def response(self,pdu):
"
942,"def flush(self):
"
943,"def __init__(self,timeout = 0,actorClass = TCPClientActor,sid = None,sapID = None):
"
944,"def add_actor(self,actor):
"
945,"def remove_actor(self,actor):
"
946,"def get_actor(self,address):
"
947,"def connect(self,address,reconnect = 0):
"
948,"def disconnect(self,address):
"
949,"def indication(self,pdu):
"
950,"def __init__(self,sock,peer):
"
951,"def handle_connect(self):
"
952,"def readable(self):
"
953,"def writable(self):
"
954,"def handle_close(self):
"
955,"def indication(self,pdu):
"
956,"def __init__(self,director,sock,peer):
"
957,"def handle_close(self):
"
958,"def idle_timeout(self):
"
959,"def indication(self,pdu):
"
960,"def response(self,pdu):
"
961,"def flush(self):
"
962,"def handle_accept(self):
"
963,"def handle_close(self):
"
964,"def add_actor(self,actor):
"
965,"def remove_actor(self,actor):
"
966,"def get_actor(self,address):
"
967,"def indication(self,pdu):
"
968,"def __init__(self,fn,cid = None,sid = None):
"
969,"def packetize(self,pdu,streamBuffer):
"
970,"def indication(self,pdu):
"
971,"def confirmation(self,pdu):
"
972,"def __init__(self,stp,aseID = None,sapID = None):
"
973,"def indication(self,addPeer = None,delPeer = None):
"
974,"def __init__(self,dropPercent = 0.0):
"
975,"def add_node(self,node):
"
976,"def remove_node(self,node):
"
977,"def process_pdu(self,pdu):
"
978,"def __len__(self):
"
979,"def __init__(self,addr,lan = None,promiscuous = False,spoofing = False,sid = None):
"
980,"def bind(self,lan):
"
981,"def indication(self,pdu):
"
982,"def request(self,apdu):
"
983,"def confirmation(self,apdu):
"
984,"def __init__(self,db,client,store_path,add_limit_size,add_limit_percent,delete_torrents,link_type = 'soft'):
"
985,"def try_decode(self,value):
"
986,"def is_legal_path(self,path):
"
987,"def populate_torrents_seeded(self):
"
988,"def find_hash_checks(self,torrent,result):
"
989,"def parse_torrent(self,torrent):
"
990,"def link_files(self,destination_path,files):
"
991,"def handle_torrentfile(self,path,dry_run = False):
"
992,"def check_torrent_in_client(self,torrent):
"
993,"def open_torrentfile(self,path):
"
994,"def print_status(self,status,torrentfile,message):
"
995,"def __init__(self,* args,** kwargs):
"
996,"def __init__(self,* args,** kwargs):
"
997,"def choose_a_file(self):
"
998,"def convert_file(self):
"
999,"def __init__(self,tabs = None,config = None,normal = normal):
"
1000,"def active_window(self):
"
1001,"def keypress(self,keys):
"
1002,"def test_attrs(self):
"
1003,"def test_init(self):
"
1004,"def test_iter_errors(self):
"
1005,"def setUp(self):
"
1006,"def message_for(self,instance,schema,* args,** kwargs):
"
1007,"def test_minimum(self):
"
1008,"def test_maximum(self):
"
1009,"def test_anyOf(self):
"
1010,"def test_single_nesting(self):
"
1011,"def test_multiple_nesting(self):
"
1012,"def test_additionalProperties(self):
"
1013,"def test_patternProperties(self):
"
1014,"def test_additionalItems(self):
"
1015,"def test_additionalItems_with_items(self):
"
1016,"def setUp(self):
"
1017,"def test_valid_instances_are_valid(self):
"
1018,"def test_invalid_instances_are_not_valid(self):
"
1019,"def test_non_existent_properties_are_ignored(self):
"
1020,"def test_it_creates_a_ref_resolver_if_not_provided(self):
"
1021,"def test_it_delegates_to_a_ref_resolver(self):
"
1022,"def test_it_delegates_to_a_legacy_ref_resolver(self):
"
1023,"def test_is_type_is_true_for_valid_type(self):
"
1024,"def test_is_type_is_false_for_invalid_type(self):
"
1025,"def test_is_type_evades_bool_inheriting_from_int(self):
"
1026,"def test_is_type_raises_exception_for_unknown_type(self):
"
1027,"def test_is_type_is_true_for_any_type(self):
"
1028,"def test_is_type_does_not_evade_bool_if_it_is_being_tested(self):
"
1029,"def test_non_string_custom_types(self):
"
1030,"def test(self,format = format):
"
1031,"def test_draft_3(self):
"
1032,"def test_draft_4(self):
"
1033,"def test_custom_validator(self):
"
1034,"def test_validator_for_jsonschema_default(self):
"
1035,"def test_validator_for_custom_default(self):
"
1036,"def test_draft3_validator_is_chosen(self):
"
1037,"def test_draft4_validator_is_chosen(self):
"
1038,"def test_draft4_validator_is_the_default(self):
"
1039,"def setUp(self):
"
1040,"def test_it_does_not_retrieve_schema_urls_from_the_network(self):
"
1041,"def test_it_resolves_local_refs(self):
"
1042,"def test_it_resolves_local_refs_with_id(self):
"
1043,"def test_it_retrieves_stored_refs(self):
"
1044,"def test_it_retrieves_unstored_refs_via_requests(self):
"
1045,"def test_it_retrieves_unstored_refs_via_urlopen(self):
"
1046,"def test_it_can_construct_a_base_uri_from_a_schema(self):
"
1047,"def test_it_can_construct_a_base_uri_from_a_schema_without_id(self):
"
1048,"def test_custom_uri_scheme_handlers(self):
"
1049,"def test_cache_remote_on(self):
"
1050,"def test_cache_remote_off(self):
"
1051,"def test_if_you_give_it_junk_you_get_a_resolution_error(self):
"
1052,"def test_helpful_error_message_on_failed_pop_scope(self):
"
1053,"def test_it_properly_formats_an_error_message(self):
"
1054,"def setUp(self):
"
1055,"def tearDown(self):
"
1056,"def testGenerateL2Report(self):
"
1057,"def testGenerateL3Report(self):
"
1058,"def tearDown(self):
"
1059,"def test_device_open_default_key(self):
"
1060,"def test_device_open_key_pass(self):
"
1061,"def setUp(self,mock_connect):
"
1062,"def test_repr(self):
"
1063,"def test_dev_setter_exception(self):
"
1064,"def test_rpc_setter_exception(self):
"
1065,"def configure(self):
"
1066,"def test_tube_temp(self):
"
1067,"def __init__(self,client_id,key = None,verify_cert = True,translate_otp = True,api_urls = DEFAULT_API_URLS,ca_certs_bundle_path = None):
"
1068,"def verify(self,otp,timestamp = False,sl = None,timeout = None,return_response = False):
"
1069,"def verify_multi(self,otp_list,max_time_window = DEFAULT_MAX_TIME_WINDOW,sl = None,timeout = None):
"
1070,"def generate_query_string(self,otp,nonce,timestamp = False,sl = None,timeout = None):
"
1071,"def generate_message_signature(self,query_string):
"
1072,"def parse_parameters_from_response(self,response):
"
1073,"def get_parameters_as_dictionary(self,query_string):
"
1074,"def _init_request_urls(self,api_urls):
"
1075,"def _get_ca_bundle_path(self):
"
1076,"def _is_valid_ca_bundle_file(self,file_path):
"
1077,"def __init__(self,url,timeout,verify_cert,ca_bundle_path = None):
"
1078,"def run(self):
"
1079,"def setUp(self):
"
1080,"def test_find_contact_by_id(self):
"
1081,"def test_find_contact_by_id_exception(self):
"
1082,"def setUp(self):
"
1083,"def test_polling_command(self):
"
1084,"def test_get_contact_by_id(self):
"
1085,"def test_send_message(self):
"
1086,"def test_send_message_to_id(self):
"
1087,"def test_get_display_name(self):
"
1088,"def test_to_tab_delimited(self):
"
1089,"def test_to_tab_dictionary(self):
"
1090,"def setUp(self):
"
1091,"def testSource(self):
"
1092,"def __init__(self):
"
1093,"def createGeojsonDataset(self,item,params):
"
1094,"def setUp(self):
"
1095,"def list_helper(self,data):
"
1096,"def test_folder_permissions_list(self):
"
1097,"def test_folder_permissions_set(self):
"
1098,"def test_folder_permissions_update(self):
"
1099,"def test_file_permissions_list(self):
"
1100,"def test_file_permissions_set(self):
"
1101,"def test_file_permissions_update(self):
"
1102,"def __init__(self,f,* args,** kwargs):
"
1103,"def open(self,fp,mode = 'r'):
"
1104,"def close(self):
"
1105,"def __iter__(self):
"
1106,"def __enter__(self):
"
1107,"def __exit__(self,exc_type,exc_val,exc_tb):
"
1108,"def next(self):
"
1109,"def parse(self,s):
"
1110,"def readline(self):
"
1111,"def read(self):
"
1112,"def handle(self,* args,** options):
"
1113,"def __init__(self,sources):
"
1114,"def find_module(self,fullname,path = None):
"
1115,"def load_module(self,fullname):
"
1116,"def get_source(self,name):
"
1117,"def _set_acl(self,value):
"
1118,"def _del_acl(self):
"
1119,"def __getitem__(self,name):
"
1120,"def __setitem__(self,name,principal):
"
1121,"def __delitem__(self,name):
"
1122,"def iterkeys(self):
"
1123,"def search(self,match = 'any',** kwargs):
"
1124,"def hash_password(self,password,hashed = None):
"
1125,"def validate_password(self,clear,hashed):
"
1126,"def test_simple_filter(self):
"
1127,"def test_translated_filter(self):
"
1128,"def test_all_languages_filter(self):
"
1129,"def test_deferred_language_filter(self):
"
1130,"def test_simple_extra(self):
"
1131,"def _try_all_cache_using_methods(self,qs,length):
"
1132,"def test_iter_caches(self):
"
1133,"def test_pickling_caches(self):
"
1134,"def test_len_caches(self):
"
1135,"def test_bool_caches(self):
"
1136,"def test_simple_iter(self):
"
1137,"def test_iter_unique_reply(self):
"
1138,"def test_iter_deferred_language(self):
"
1139,"def test_update_shared(self):
"
1140,"def test_update_translated(self):
"
1141,"def test_update_mixed(self):
"
1142,"def test_update_deferred_language(self):
"
1143,"def test_update_fallbacks(self):
"
1144,"def test_values_list_translated(self):
"
1145,"def test_values_list_shared(self):
"
1146,"def test_values_list_mixed(self):
"
1147,"def test_values_list_deferred_language(self):
"
1148,"def test_values_list_language_all(self):
"
1149,"def test_values_shared(self):
"
1150,"def test_values_translated(self):
"
1151,"def test_values_mixed(self):
"
1152,"def test_values_post_language(self):
"
1153,"def test_values_post_filter(self):
"
1154,"def test_values_deferred_language(self):
"
1155,"def test_values_language_all(self):
"
1156,"def test_empty_in_bulk(self):
"
1157,"def test_in_bulk(self):
"
1158,"def test_untranslated_in_bulk(self):
"
1159,"def test_all_languages_in_bulk(self):
"
1160,"def test_in_bulk_deferred_language(self):
"
1161,"def test_delete_all(self):
"
1162,"def test_delete_translation(self):
"
1163,"def test_delete_translation_deferred_language(self):
"
1164,"def test_delete_fallbacks(self):
"
1165,"def test_simple(self):
"
1166,"def test_cached(self):
"
1167,"def test_not_exist(self):
"
1168,"def test_aggregate(self):
"
1169,"def test_annotate(self):
"
1170,"def test_notimplemented(self):
"
1171,"def test_versions(self):
"
1172,"def test_defer(self):
"
1173,"def test_all_languages_exclude(self):
"
1174,"def test_invalid_all_languages_exclude(self):
"
1175,"def test_qobject_filter(self):
"
1176,"def test_aware_qobject_filter(self):
"
1177,"def test_defer(self):
"
1178,"def __init__(self):
"
1179,"def base_url(self):
"
1180,"def index(self):
"
1181,"def doc_type(self):
"
1182,"def scroll_size(self):
"
1183,"def headers(self):
"
1184,"def servers(self):
"
1185,"def active_server(self):
"
1186,"def ab_command(self):
"
1187,"def ab_requests(self):
"
1188,"def ab_concurrency(self):
"
1189,"def analytics(self):
"
1190,"def user_id(self):
"
1191,"def dump_file(self):
"
1192,"def chunk_size(self):
"
1193,"def set(self,key,value):
"
1194,"def save(self):
"
1195,"def __init__(self,* args,** kwargs):
"
1196,"def view(self):
"
1197,"def is_valid_json(self):
"
1198,"def is_enabled(self):
"
1199,"def get_text(self):
"
1200,"def init_client(self):
"
1201,"def save_settings(self):
"
1202,"def client(self):
"
1203,"def track_command(self):
"
1204,"def show_input_panel(self,label,default,callback):
"
1205,"def show_response(self,response,title = """"):
"
1206,"def show_index_list_panel(self,callback):
"
1207,"def show_doc_type_list_panel(self,callback):
"
1208,"def show_analyzer_list_panel(self,callback):
"
1209,"def show_switch_server_list_panel(self,callback):
"
1210,"def show_script_list_panel(self,callback):
"
1211,"def show_search_template_list_panel(self,callback):
"
1212,"def show_alias_list_panel(self,callback):
"
1213,"def show_index_template_list_panel(self,callback):
"
1214,"def show_warmer_list_panel(self,callback):
"
1215,"def show_field_list_panel(self,callback):
"
1216,"def show_repository_list_panel(self,callback):
"
1217,"def show_snapshot_list_panel(self,repository,callback):
"
1218,"def show_output_panel(self,text,syntax = None):
"
1219,"def show_object_output_panel(self,obj):
"
1220,"def show_active_server(self):
"
1221,"def run_request(self,* args,** kwargs):
"
1222,"def run_request_wrapper(self,* args,** kwargs):
"
1223,"def request_thread(self,* args,** kwargs):
"
1224,"def run(self,* args,** kwargs):
"
1225,"def run_request_wrapper(self,* args,** kwargs):
"
1226,"def is_enabled(self):
"
1227,"def run_request_wrapper(self,* args,** kwargs):
"
1228,"def extend_options(self,options,search_type = None):
"
1229,"def is_enabled(self):
"
1230,"def is_enabled(self):
"
1231,"def run_request(self,id = None):
"
1232,"def is_enabled(self):
"
1233,"def run_request(self,index = None,name = None):
"
1234,"def is_enabled(self):
"
1235,"def run_request(self,index = None):
"
1236,"def run(self,text,syntax = None):
"
1237,"def status_code(self):
"
1238,"def error(self):
"
1239,"def info(self):
"
1240,"def __str__(self):
"
1241,"def __str__(self):
"
1242,"def __str__(self):
"
1243,"def _create_violation_by_line_number(self,line_number):
"
1244,"def test_get_violation_if_found_with_valid_file(self):
"
1245,"def test_get_violation_if_found_with_invalid_file(self):
"
1246,"def get_file_path(self,env):
"
1247,"def test_get_config_dict(self):
"
1248,"def process(self,ast):
"
1249,"def get_objective_scope_visibility(self,node):
"
1250,"def _reset_referenced_flag(self,scope_tree):
"
1251,"def check_reachability(self,ref_id_node):
"
1252,"def __init__(self):
"
1253,"def listen_node_types(self):
"
1254,"def _make_description_by_option_name(self,option_name):
"
1255,"def test_initialises_to_none(self):
"
1256,"def test_can_convert_to_list(self):
"
1257,"def test_can_convert_to_tuple(self):
"
1258,"def __getattr__(self,name):
"
1259,"def __setattr__(self,name,val):
"
1260,"def setup(self):
"
1261,"def __init__(self,renderFunction):
"
1262,"def update(self):
"
1263,"def __call__(self,* args):
"
1264,"def __call__(self,values):
"
1265,"def __len__(self):
"
1266,"def get_params(self,** tags):
"
1267,"def get_output_shape_for(self,input_shape):
"
1268,"def get_output_for(self,input,** kwargs):
"
1269,"def add_param(self,spec,shape,name = None,** tags):
"
1270,"def __init__(self,incomings,name = None):
"
1271,"def get_output_shape_for(self,input_shapes):
"
1272,"def get_output_for(self,inputs,** kwargs):
"
1273,"def test_autocrop_array_shapes(self):
"
1274,"def test_crop_inputs(self):
"
1275,"def layer(self):
"
1276,"def crop_layer_0(self):
"
1277,"def crop_layer_1(self):
"
1278,"def test_get_output_shape_for(self,layer):
"
1279,"def test_get_output_shape_for_cropped(self,crop_layer_0,crop_layer_1):
"
1280,"def test_get_output_for(self,layer):
"
1281,"def test_get_output_for_cropped(self,crop_layer_0,crop_layer_1):
"
1282,"def layer(self):
"
1283,"def crop_layer(self):
"
1284,"def test_get_output_shape_for(self,layer):
"
1285,"def test_get_output_for(self,layer):
"
1286,"def test_get_output_for_cropped(self,crop_layer):
"
1287,"def test_bad_coeffs_fails(self,layer):
"
1288,"def layer(self):
"
1289,"def test_get_output_for(self,layer):
"
1290,"def layer(self):
"
1291,"def test_get_output_for(self,layer):
"
1292,"def single(self,mask = False):
"
1293,"def fragment(self,first = False,last = False,mask = False):
"
1294,"def completed(self):
"
1295,"def completed(self,state):
"
1296,"def extend(self,data):
"
1297,"def __len__(self):
"
1298,"def __str__(self):
"
1299,"def __unicode__(self):
"
1300,"def __init__(self,text = None):
"
1301,"def is_binary(self):
"
1302,"def is_text(self):
"
1303,"def __init__(self,bytes = None):
"
1304,"def is_binary(self):
"
1305,"def is_text(self):
"
1306,"def __len__(self):
"
1307,"def __str__(self):
"
1308,"def __unicode__(self):
"
1309,"def __init__(self,data = None):
"
1310,"def __init__(self,data):
"
1311,"def __init__(self):
"
1312,"def __len__(self):
"
1313,"def add(self,id,proxy):
"
1314,"def clean(self):
"
1315,"def has_key(self,id):
"
1316,"def get_proxy(self,id):
"
1317,"def __init__(self):
"
1318,"def __len__(self):
"
1319,"def add(self,group,user):
"
1320,"def clean(self):
"
1321,"def has(self,group,user):
"
1322,"def setUp(self):
"
1323,"def test_01_add(self):
"
1324,"def test_02_read_update(self):
"
1325,"def test_03_delete(self):
"
1326,"def handle(self,** options):
"
1327,"def process_request(self,request):
"
1328,"def test_extractor(self):
"
1329,"def __init__(self,socket_handler,host = 'localhost',ready_event = None,h2 = True,secure = True):
"
1330,"def _start_server(self):
"
1331,"def _wrap_socket(self,sock):
"
1332,"def run(self):
"
1333,"def set_up(self,secure = True,proxy = False):
"
1334,"def _start_server(self,socket_handler):
"
1335,"def get_connection(self):
"
1336,"def get_encoder(self):
"
1337,"def tear_down(self):
"
1338,"def __init__(self):
"
1339,"def read_data(self,language):
"
1340,"def __init__(self,dataset):
"
1341,"def get_num_features(self):
"
1342,"def build_features(self):
"
1343,"def get_sequence_features(self,sequence):
"
1344,"def get_emission_features(self,sequence,pos,y):
"
1345,"def get_transition_features(self,sequence,pos,y,y_prev):
"
1346,"def get_initial_features(self,sequence,y):
"
1347,"def get_final_features(self,sequence,y_prev):
"
1348,"def add_initial_features(self,sequence,y,features):
"
1349,"def add_final_features(self,sequence,y_prev,features):
"
1350,"def add_emission_features(self,sequence,pos,y,features):
"
1351,"def add_transition_features(self,sequence,pos,y,y_prev,features):
"
1352,"def add_feature(self,feat_name):
"
1353,"def __init__(self,verbose = 2):
"
1354,"def fit_transform(self,X,projection = ""sum"",scaler = preprocessing.MinMaxScaler()):
"
1355,"def map(self,projected_X,inverse_X = None,clusterer = cluster.DBSCAN(eps = 0.5,min_samples = 3),nr_cubes = 10,overlap_perc = 0.1):
"
1356,"def visualize(self,complex,color_function = """",path_html = ""mapper_visualization_output.html"",title = ""My Data"",graph_link_distance = 30,graph_gravity = 0.1,graph_charge = - 120,custom_tooltips = None,width_html = 0,height_html = 0,show_tooltips = True,show_title = True,show_meta = True):
"
1357,"def __init__(self):
"
1358,"def save(self):
"
1359,"def setUp(self):
"
1360,"def __init__(self,extensions,regex,partials = None,index = None):
"
1361,"def insert_variable(self,choice):
"
1362,"def run(self,edit,string = ''):
"
1363,"def __init__(self,num = 0,width = 0,height = 0,host = ""localhost"",port = 3142):
"
1364,"def _generateHeader(self,cmd,size):
"
1365,"def _connect(self):
"
1366,"def update(self,data):
"
1367,"def setMasterBrightness(self,brightness):
"
1368,"def get(self):
"
1369,"def get(self):
"
1370,"def get(self):
"
1371,"def __init__(self,debug):
"
1372,"def input_options(self,options,require = False,prompt = None,fallback_prompt = None,numrange = None,default = None,max_width = 72):
"
1373,"def input_(self,prompt = None):
"
1374,"def _encoding(self):
"
1375,"def _colorize(self,color,text):
"
1376,"def colorize(self,color,text):
"
1377,"def _fsencoding(self):
"
1378,"def colordiff(self,a,b,highlight = 'red'):
"
1379,"def color_diff_suffix(self,a,b,highlight = 'red'):
"
1380,"def __init__(self,base):
"
1381,"def __call__(self,string):
"
1382,"def _dictunbaser(self,string):
"
1383,"def createarray(self):
"
1384,"def appendurl(self,url):
"
1385,"def passarray(self):
"
1386,"def __init__(self,session,properties = None,** kwargs):
"
1387,"def remove(self):
"
1388,"def setup(self):
"
1389,"def test_get_permissions(self):
"
1390,"def test_remove_advertiser(self):
"
1391,"def test_it_should_remove_child_advertisers_when_removing_agency(self):
"
1392,"def test_it_should_remove_child_agencies_and_advertisers_when_removing_organization(self):
"
1393,"def test_it_should_add_entity_ids_on_save(self):
"
1394,"def test_it_should_add_access_to_empty_permissions(self):
"
1395,"def run(self,view,model,input_format,trainfile,num_engines,simsdir,overwrite,max_sims,simsfile,modelfile):
"
1396,"def find_done(self,outdir):
"
1397,"def __call__(self,* args,** kwargs):
"
1398,"def __init__(self):
"
1399,"def id(self):
"
1400,"def id(self,value):
"
1401,"def outer_id(self):
"
1402,"def outer_id(self,value):
"
1403,"def type_name(self):
"
1404,"def type_name(self,value):
"
1405,"def message(self):
"
1406,"def message(self,value):
"
1407,"def has_full_stack(self):
"
1408,"def has_full_stack(self,value):
"
1409,"def stack(self):
"
1410,"def stack(self,value):
"
1411,"def parsed_stack(self):
"
1412,"def parsed_stack(self,value):
"
1413,"def _initialize(self):
"
1414,"def write(self):
"
1415,"def test_construct(self):
"
1416,"def test_service_endpoint_uri_works_as_expected(self):
"
1417,"def test_queue_works_as_expected(self):
"
1418,"def test_send_buffer_size_works_as_expected(self):
"
1419,"def test_send_works_as_expected(self):
"
1420,"def __init__(self,sender):
"
1421,"def run(self):
"
1422,"def __init__(self,data):
"
1423,"def write(self):
"
1424,"def __repr__(self):
"
1425,"def __getnewargs__(self):
"
1426,"def __eq__(self,other):
"
1427,"def __ne__(self,other):
"
1428,"def __getslice__(self,i,j):
"
1429,"def __init__(self):
"
1430,"def load_profile(self,profile_directory):
"
1431,"def load_json_profile(self,json_profiles):
"
1432,"def add_profile(self,profile,index,langsize):
"
1433,"def clear(self):
"
1434,"def create(self,alpha = None):
"
1435,"def _create_detector(self):
"
1436,"def set_seed(self,seed):
"
1437,"def get_lang_list(self):
"
1438,"def __init__(self,init,option_name):
"
1439,"def run(self,** kwargs):
"
1440,"def get_src_tenants(self,search_opts):
"
1441,"def __init__(self,cloud,host = None,int_host = None,config_migrate = None):
"
1442,"def run(self,command,** kwargs):
"
1443,"def __init__(self,runner,src,instance_id):
"
1444,"def __enter__(self):
"
1445,"def __exit__(self,exc_type,exc_val,exc_tb):
"
1446,"def __init__(self,dest_libvirt,dest_nova,libvirt_name,nova_vm_id):
"
1447,"def __enter__(self):
"
1448,"def __exit__(self,exc_type,exc_val,exc_tb):
"
1449,"def do(self):
"
1450,"def undo(self):
"
1451,"def __init__(self,remote_runner):
"
1452,"def get_backing_file(self,instance_id):
"
1453,"def get_xml(self,libvirt_instance_name):
"
1454,"def destroy_vm(self,libvirt_instance_name):
"
1455,"def move_backing_file(self,source_file,instance_id):
"
1456,"def __init__(self,element):
"
1457,"def __repr__(self):
"
1458,"def __eq__(self,other):
"
1459,"def __init__(self,interface):
"
1460,"def __eq__(self,other):
"
1461,"def __repr__(self):
"
1462,"def element(self):
"
1463,"def __init__(self,contents):
"
1464,"def _get(self,element,attribute):
"
1465,"def _set(self,element,attribute,value):
"
1466,"def interfaces(self):
"
1467,"def interfaces(self,other):
"
1468,"def dump(self):
"
1469,"def copy(self,context,source_object,destination_object):
"
1470,"def __init__(self,host = None,path = None):
"
1471,"def __repr__(self):
"
1472,"def copy(self,context,source_object,destination_object):
"
1473,"def __init__(self,name = None):
"
1474,"def write(self,message):
"
1475,"def flush(self):
"
1476,"def __init__(self,filename = '%(scenario)s-%(date)s.log',date_format = '%F-%H-%M-%S',** kwargs):
"
1477,"def get_filename(self,filename):
"
1478,"def __init__(self,name_format = '%(name)s',** kwargs):
"
1479,"def filter(self,record):
"
1480,"def setUp(self):
"
1481,"def test_verify_rollback(self):
"
1482,"def setUp(self):
"
1483,"def test_action(self):
"
1484,"def test_treats_self_as_separate_objects(self):
"
1485,"def test_takes_value_from_cache(self):
"
1486,"def test_resets_cache_when_modifier_called(self):
"
1487,"def redir(self):
"
1488,"def calculate_user_engagement_score(self,user,start_date,end_date):
"
1489,"def __init__(self,root_tk_app):
"
1490,"def set_countdown_duration(self,minutes,seconds):
"
1491,"def subscribe_to_time_changes(self,time_change_callback):
"
1492,"def fire_time_change_callbacks(self):
"
1493,"def refresh_timer(self):
"
1494,"def __init__(self):
"
1495,"def dumpHandlers(self):
"
1496,"def restoreHandlers(self,handlers):
"
1497,"def _init(self):
"
1498,"def plugin(self,owner):
"
1499,"def plugout(self):
"
1500,"def StreamInit(self):
"
1501,"def RegisterNamespace(self,xmlns,order = 'info'):
"
1502,"def RegisterProtocol(self,tag_name,Proto,xmlns = None,order = 'info'):
"
1503,"def RegisterNamespaceHandler(self,xmlns,handler,typ = '',ns = '',makefirst = 0,system = 0):
"
1504,"def RegisterHandler(self,name,handler,typ = '',ns = '',xmlns = None,makefirst = 0,system = 0):
"
1505,"def RegisterHandlerOnce(self,name,handler,typ = '',ns = '',xmlns = None,makefirst = 0,system = 0):
"
1506,"def UnregisterHandler(self,name,handler,typ = '',ns = '',xmlns = None):
"
1507,"def RegisterDefaultHandler(self,handler):
"
1508,"def RegisterEventHandler(self,handler):
"
1509,"def returnStanzaHandler(self,conn,stanza):
"
1510,"def streamErrorHandler(self,conn,error):
"
1511,"def RegisterCycleHandler(self,handler):
"
1512,"def UnregisterCycleHandler(self,handler):
"
1513,"def Event(self,realm,event,data):
"
1514,"def WaitForResponse(self,ID,timeout = DefaultTimeout):
"
1515,"def SendAndWaitForResponse(self,stanza,timeout = DefaultTimeout):
"
1516,"def SendAndCallForResponse(self,stanza,func,args = { }):
"
1517,"def disconnect(self):
"
1518,"def __init__(self,parent,vid,name = None,play_audio = False,repeat = 0,aspect = None,size =[1,1],pos =[0,0],sub_theme = '',options = BGUI_DEFAULT):
"
1519,"def play(self,start,end,use_frames = True,fps = None):
"
1520,"def on_finish(self):
"
1521,"def on_finish(self,value):
"
1522,"def _draw(self):
"
1523,"def __init__(self,var_name):
"
1524,"def render(self,context):
"
1525,"def __init__(self,validators = None,filters = None,** kwargs):
"
1526,"def _ensure_callable_or_list(self,field,msg_flag):
"
1527,"def setUp(self):
"
1528,"def _test_for_expected_error(self,Cls,loc,expected):
"
1529,"def test_geopoint_validation(self):
"
1530,"def test_point_validation(self):
"
1531,"def test_linestring_validation(self):
"
1532,"def test_polygon_validation(self):
"
1533,"def test_multipoint_validation(self):
"
1534,"def test_multilinestring_validation(self):
"
1535,"def test_multipolygon_validation(self):
"
1536,"def test_indexes_geopoint(self):
"
1537,"def test_geopoint_embedded_indexes(self):
"
1538,"def test_indexes_2dsphere(self):
"
1539,"def test_indexes_2dsphere_embedded(self):
"
1540,"def test_geo_indexes_recursion(self):
"
1541,"def test_geo_indexes_auto_index(self):
"
1542,"def forwards(self,orm):
"
1543,"def backwards(self,orm):
"
1544,"def calculate_user_engagement_score(self,user,start_date,end_date):
"
1545,"def accept(self,visitor):
"
1546,"def _decode(self,obj,context):
"
1547,"def _encode(self,obj,context):
"
1548,"def __init__(self,request):
"
1549,"def returnAllOptions(self):
"
1550,"def getNumExecutors(self):
"
1551,"def getTime(self):
"
1552,"def getProc(self):
"
1553,"def getMem(self):
"
1554,"def getQueue(self):
"
1555,"def getPpn(self):
"
1556,"def getRestart(self):
"
1557,"def getBackupDir(self):
"
1558,"def returnSampleArgs(self):
"
1559,"def __init__(self,router,interface,vlan = None):
"
1560,"def __str__(self):
"
1561,"def __init__(self,ncs_services_url,user,password,port_map,log_system):
"
1562,"def getResource(self,port,label_type,label_value):
"
1563,"def getTarget(self,port,label_type,label_value):
"
1564,"def createConnectionId(self,source_target,dest_target):
"
1565,"def canSwapLabel(self,label_type):
"
1566,"def _createAuthzHeader(self):
"
1567,"def _createHeaders(self):
"
1568,"def setupLink(self,connection_id,source_target,dest_target,bandwidth):
"
1569,"def teardownLink(self,connection_id,source_target,dest_target,bandwidth):
"
1570,"def __init__(self,soap_resource,provider):
"
1571,"def _createSOAPFault(self,err,provider_nsa,connection_id = None,service_type = None):
"
1572,"def reserve(self,soap_data,request_info):
"
1573,"def reserveCommit(self,soap_data,request_info):
"
1574,"def reserveAbort(self,soap_data,request_info):
"
1575,"def provision(self,soap_data,request_info):
"
1576,"def release(self,soap_data,request_info):
"
1577,"def terminate(self,soap_data,request_info):
"
1578,"def querySummary(self,soap_data,request_info):
"
1579,"def querySummarySync(self,soap_data,request_info):
"
1580,"def queryRecursive(self,soap_data,request_info):
"
1581,"def setUp(self):
"
1582,"def tearDown(self):
"
1583,"def testActivation(self):
"
1584,"def check_response(self,result,url,parse = lambda r:r['results']):
"
1585,"def setUp(self):
"
1586,"def test_todays_filings(self):
"
1587,"def test_form_types(self):
"
1588,"def test_filings_by_form_type(self):
"
1589,"def test_amended_filings(self):
"
1590,"def test_latest(self):
"
1591,"def test_committee_ies(self):
"
1592,"def test_race_totals(self):
"
1593,"def test_candidate_ies(self):
"
1594,"def test_president_ies(self):
"
1595,"def test_superpacs(self):
"
1596,"def test_latest(self):
"
1597,"def test_detail(self):
"
1598,"def test_filter(self):
"
1599,"def test_leaders(self):
"
1600,"def test_candidates_for_state(self):
"
1601,"def test_candidates_for_state_and_chamber(self):
"
1602,"def test_candidates_for_state_and_chamber_and_district(self):
"
1603,"def test_late_contributions(self):
"
1604,"def test_latest(self):
"
1605,"def test_detail(self):
"
1606,"def test_filter(self):
"
1607,"def test_contributions(self):
"
1608,"def test_contributions_to_candidate(self):
"
1609,"def test_late_contributions(self):
"
1610,"def test_filings(self):
"
1611,"def test_ie_totals(self):
"
1612,"def test_leadership(self):
"
1613,"def test_latest(self):
"
1614,"def test_date(self):
"
1615,"def test_candidates(self):
"
1616,"def test_detail_using_id(self):
"
1617,"def test_detail_using_name(self):
"
1618,"def test_state_total(self):
"
1619,"def test_zip_total(self):
"
1620,"def __init__(self,json = None,auth = None):
"
1621,"def fetchAttachments(self):
"
1622,"def sendMessage(self):
"
1623,"def markAsRead(self):
"
1624,"def getSender(self):
"
1625,"def getSenderEmail(self):
"
1626,"def getSenderName(self):
"
1627,"def getSubject(self):
"
1628,"def getBody(self):
"
1629,"def setRecipients(self,val):
"
1630,"def addRecipient(self,address,name = None):
"
1631,"def setSubject(self,val):
"
1632,"def setBody(self,val):
"
1633,"def setBodyHTML(self,val = None):
"
1634,"def render_image(self,h,comp,size,randomize = False,** kw):
"
1635,"def render_file(self,h,comp,size,** kw):
"
1636,"def render(self,h,comp,* args):
"
1637,"def render_Gallery_view(self,h,comp,model):
"
1638,"def render_Gallery_crop(self,h,comp,model):
"
1639,"def render_cover(self,h,comp,model):
"
1640,"def render_gallery_badge(self,h,* args):
"
1641,"def render_asset(self,h,comp,model,* args):
"
1642,"def render_asset_anonymous(self,h,comp,model,* args):
"
1643,"def emit_event(self,comp,kind,data = None):
"
1644,"def handle_event(self,comp,event):
"
1645,"def __init__(self,data,source =[]):
"
1646,"def source(self):
"
1647,"def emitter(self):
"
1648,"def last_relay(self):
"
1649,"def is_(self,kind):
"
1650,"def is_kind_of(self,kind):
"
1651,"def append(self,relay):
"
1652,"def cast_as(self,sub_kind):
"
1653,"def add_plugin_args(self):
"
1654,"def _set_metadata(self):
"
1655,"def _snapshot_volume(self):
"
1656,"def _register_image(self,block_device_map = None,root_device = None):
"
1657,"def finalize(self):
"
1658,"def __enter__(self):
"
1659,"def __init__(self,accounts = None,debug = False):
"
1660,"def prep_for_audit(self):
"
1661,"def _check_inclusion_in_network_whitelist(self,cidr):
"
1662,"def check_rds_ec2_rfc1918(self,sg_item):
"
1663,"def check_securitygroup_large_subnet(self,sg_item):
"
1664,"def check_securitygroup_zero_subnet(self,sg_item):
"
1665,"def check_securitygroup_any(self,sg_item):
"
1666,"def check_securitygroup_10net(self,sg_item):
"
1667,"def setUp(self):
"
1668,"def tearDown(self):
"
1669,"def test_es_auditor(self):
"
1670,"def __init__(self,accounts = None,debug = False):
"
1671,"def slurp(self):
"
1672,"def __init__(self,region = None,account = None,name = None,config = { }):
"
1673,"def __init__(self,channel_names = None,channel_indexes = None,name = None,description = None,file_origin = None,** annotations):
"
1674,"def __init__(self,lib,errno):
"
1675,"def __init__(self,lib):
"
1676,"def __getattr__(self,attr):
"
1677,"def decorate_with_error(self,f):
"
1678,"def __init__(self,filename = '',dllname = ''):
"
1679,"def read_segment(self,import_neuroshare_segment = True,lazy = False,cascade = True):
"
1680,"def setUp(self):
"
1681,"def test__get_fake_values(self):
"
1682,"def test__fake_neo__cascade(self):
"
1683,"def test__fake_neo__nocascade(self):
"
1684,"def setUp(self):
"
1685,"def test_init(self):
"
1686,"def check_creation(self,seg):
"
1687,"def test__creation(self):
"
1688,"def test__merge(self):
"
1689,"def test__children(self):
"
1690,"def test__size(self):
"
1691,"def test__filter_none(self):
"
1692,"def test__filter_annotation_single(self):
"
1693,"def test__filter_single_annotation_nores(self):
"
1694,"def test__filter_attribute_single(self):
"
1695,"def test__filter_attribute_single_nores(self):
"
1696,"def test__filter_multi(self):
"
1697,"def test__filter_multi_nores(self):
"
1698,"def test__filter_multi_partres(self):
"
1699,"def test__filter_single_annotation_obj_single(self):
"
1700,"def test__filter_single_annotation_obj_multi(self):
"
1701,"def test__filter_single_annotation_obj_none(self):
"
1702,"def test__filter_single_annotation_norecur(self):
"
1703,"def test__filter_single_attribute_norecur(self):
"
1704,"def test__filter_single_annotation_nodata(self):
"
1705,"def test__filter_single_attribute_nodata(self):
"
1706,"def test__filter_single_annotation_nodata_norecur(self):
"
1707,"def test__filter_single_attribute_nodata_norecur(self):
"
1708,"def test__filter_single_annotation_container(self):
"
1709,"def test__filter_single_attribute_container(self):
"
1710,"def test__filter_single_annotation_container_norecur(self):
"
1711,"def test__filter_single_attribute_container_norecur(self):
"
1712,"def test__filter_single_annotation_nodata_container(self):
"
1713,"def test__filter_single_attribute_nodata_container(self):
"
1714,"def test__filter_single_annotation_nodata_container_norecur(self):
"
1715,"def test__filter_single_attribute_nodata_container_norecur(self):
"
1716,"def test__filterdata_multi_nores(self):
"
1717,"def test__filterdata_multi_partres(self):
"
1718,"def test__pretty(self):
"
1719,"def test__construct_subsegment_by_unit(self):
"
1720,"def test_segment_take_spikes_by_unit(self):
"
1721,"def test_segment_take_spiketrains_by_unit(self):
"
1722,"def test_segment_take_analogsignal_by_unit(self):
"
1723,"def test_segment_take_analogsignal_by_channelindex(self):
"
1724,"def test_seg_take_slice_of_analogsignalarray_by_unit(self):
"
1725,"def test_seg_take_slice_of_analogsignalarray_by_channelindex(self):
"
1726,"def process_exception(self,request,exception):
"
1727,"def tearDown(self):
"
1728,"def run(self,url,request_type,* args,** kwargs):
"
1729,"def setUp(self):
"
1730,"def test_items_sets_the_collection(self):
"
1731,"def test_items_returns_every_name_from_the_collection_with_the_added_options(self):
"
1732,"def test_callback_uses_find_to_instantiate_the_operation_if_the_index_is_in_the_collection(self):
"
1733,"def test_callback_calls_execute_on_the_operation(self):
"
1734,"def test_callback_doesnt_call_find_if_the_index_is_bigger_than_the_collection_length(self):
"
1735,"def test_callback_calls_execute_on_the_previous_operation_if_index_is_0(self):
"
1736,"def test_callback_calls_the_input_method_on_the_command_with_deferred_add_as_callback_if_index_is_1(self):
"
1737,"def test_base_add_calls_add_with_the_text_and_cleans_the_cache_for_the_element(self):
"
1738,"def test_base_add_calls_add_and_execute_if_renavigate_is_true(self):
"
1739,"def setUp(self):
"
1740,"def test_items_returns_every_name_from_the_collection_without_goback(self):
"
1741,"def test_trello_element_property(self):
"
1742,"def test_callback_calls_execute_command_with_the_index(self):
"
1743,"def test_callback_calls_the_input_method_on_the_command_with_deferred_add_as_callback_if_index_is_1(self):
"
1744,"def test_next_operation_class(self):
"
1745,"def test_add_creates_a_board_with_the_text(self):
"
1746,"def setUp(self):
"
1747,"def test_trello_element_property(self):
"
1748,"def test_next_operation_class(self):
"
1749,"def test_add_creates_a_list_with_the_text(self):
"
1750,"def setUp(self):
"
1751,"def test_items_returns_every_name_from_the_collection_with_custom_actions(self):
"
1752,"def test_trello_element_property(self):
"
1753,"def test_next_operation_class(self):
"
1754,"def test_add_creates_a_card_with_the_text_and_description(self):
"
1755,"def test_split_card_contents_returns_the_name_and_description_splitted_by_new_lines(self):
"
1756,"def setUp(self):
"
1757,"def test_nextset(self):
"
1758,"def test_skip_nextset(self):
"
1759,"def test_ok_and_next(self):
"
1760,"def test_multi_cursor(self):
"
1761,"def test_multi_statement_warnings(self):
"
1762,"def __init__(self,parent = None):
"
1763,"def get_plugin_title(self):
"
1764,"def get_plugin_icon(self):
"
1765,"def get_focus_widget(self):
"
1766,"def get_plugin_actions(self):
"
1767,"def on_first_registration(self):
"
1768,"def register_plugin(self):
"
1769,"def refresh_plugin(self):
"
1770,"def closing_plugin(self,cancelable = False):
"
1771,"def apply_plugin_settings(self,options):
"
1772,"def run_memoryprofiler(self):
"
1773,"def analyze(self,filename):
"
1774,"def setUp(self):
"
1775,"def tearDown(self):
"
1776,"def __init__(self,parent):
"
1777,"def __init__(self,parent,id,pos,size,style,name,sm,method):
"
1778,"def OnRbGenerateRadiobutton(self,event):
"
1779,"def OnRbSelectRadiobutton(self,event):
"
1780,"def OnRbCreateNewRadiobutton(self,event):
"
1781,"def OnTxtMethodDescripSetFocus(self,event):
"
1782,"def OnTxtMethodDescripKillFocus(self,event):
"
1783,"def getMethod(self):
"
1784,"def __del__(self):
"
1785,"def onSetFocus(self,event):
"
1786,"def onCheckBox(self,event):
"
1787,"def onBtnClearButton(self,event):
"
1788,"def onBtnOKButton(self,event):
"
1789,"def onBtnCancelButton(self,event):
"
1790,"def onBtnApplyButton(self,event):
"
1791,"def setup(self):
"
1792,"def test_create_session_factory(self):
"
1793,"def test_get_session(self):
"
1794,"def test_thread_coloring(self,backend,skip_opencl,elements,elem_node_map,elem_node,mat,x):
"
1795,"def __init__(self):
"
1796,"def onUpdate(self,resource):
"
1797,"def __onUpdate(self,resource):
"
1798,"def __notify(self,observer,resource):
"
1799,"def get(self,targetURI = None):
"
1800,"def set(self,targetURI):
"
1801,"def create(self,targetURI):
"
1802,"def delete(self,targetURI):
"
1803,"def __init__(self,app_id,app_secret):
"
1804,"def access_token(self):
"
1805,"def _send_request(self,method,url,** kwargs):
"
1806,"def _grant_access_token(self):
"
1807,"def _get_wechat_server_ips(self):
"
1808,"def __init__(self):
"
1809,"def __init__(self,prop_dict = { }):
"
1810,"def hashes(self):
"
1811,"def hashes(self,val):
"
1812,"def mime_type(self):
"
1813,"def mime_type(self,val):
"
1814,"def __init__(self,request_url,client):
"
1815,"def append_to_request_url(self,url_segment):
"
1816,"def __init__(self,request_url,client,options):
"
1817,"def get(self):
"
1818,"def __getitem__(self,key):
"
1819,"def request(self,expand = None,select = None,top = None,order_by = None,options = None):
"
1820,"def get(self):
"
1821,"def collection_page(self):
"
1822,"def __getitem__(self,index):
"
1823,"def shared(self):
"
1824,"def _init_next_page_request(self,next_page_link,client,options):
"
1825,"def __init__(self,ffi):
"
1826,"def __getattr__(self,name):
"
1827,"def __init__(self,f = None,level = ""info"",default = DEBUG):
"
1828,"def emit(self,eventDict):
"
1829,"def __init__(self,** kwargs):
"
1830,"def msg(self,message,** kw):
"
1831,"def info(self,message,** kw):
"
1832,"def debug(self,message,** kw):
"
1833,"def warning(self,message,** kw):
"
1834,"def error(self,message,** kw):
"
1835,"def critical(self,message,** kw):
"
1836,"def __init__(self,value = None):
"
1837,"def __init__(self,value = None):
"
1838,"def __init__(self,value = None):
"
1839,"def __init__(self,value = None):
"
1840,"def __init__(self,value = None):
"
1841,"def __init__(self,value = None):
"
1842,"def __init__(self,value = None):
"
1843,"def __init__(self,key = None):
"
1844,"def read(self,istream):
"
1845,"def write(self,ostream):
"
1846,"def validate(self):
"
1847,"def __validate(self):
"
1848,"def set_setting(self,setting,value):
"
1849,"def tearDown(self):
"
1850,"def test_init_with_none(self):
"
1851,"def test_init_with_args(self):
"
1852,"def test_validate_with_invalid_protocol_versions(self):
"
1853,"def test_validate_with_invalid_protocol_version(self):
"
1854,"def test_read_with_empty_protocol_list(self):
"
1855,"def test_read_with_one_protocol_version(self):
"
1856,"def test_read_with_two_protocol_versions(self):
"
1857,"def _test_write(self,payload,expected):
"
1858,"def test_write_with_empty_protocol_list(self):
"
1859,"def test_write_with_one_protocol_version(self):
"
1860,"def test_write_with_two_protocol_versions(self):
"
1861,"def tearDown(self):
"
1862,"def test_init_with_none(self):
"
1863,"def test_init_with_args(self):
"
1864,"def test_validate_with_invalid_protocol_versions(self):
"
1865,"def test_validate_with_invalid_protocol_version(self):
"
1866,"def test_read_with_empty_protocol_list(self):
"
1867,"def test_read_with_one_protocol_version(self):
"
1868,"def test_read_with_two_protocol_versions(self):
"
1869,"def _test_write(self,payload,expected):
"
1870,"def test_write_with_empty_protocol_list(self):
"
1871,"def test_write_with_one_protocol_version(self):
"
1872,"def test_write_with_two_protocol_versions(self):
"
1873,"def tearDown(self):
"
1874,"def test_init(self):
"
1875,"def test_init_with_args(self):
"
1876,"def test_get_object_type(self):
"
1877,"def test_validate_on_invalid_value(self):
"
1878,"def test_validate_on_invalid_data_type(self):
"
1879,"def test_validate_on_invalid_name(self):
"
1880,"def test_repr(self):
"
1881,"def test_str(self):
"
1882,"def test_equal_on_equal(self):
"
1883,"def test_equal_on_not_equal_value(self):
"
1884,"def test_equal_on_not_equal_data_type(self):
"
1885,"def test_equal_on_type_mismatch(self):
"
1886,"def test_not_equal_on_equal(self):
"
1887,"def test_not_equal_on_not_equal_value(self):
"
1888,"def test_not_equal_on_not_equal_data_type(self):
"
1889,"def test_not_equal_on_type_mismatch(self):
"
1890,"def test_save(self):
"
1891,"def test_get(self):
"
1892,"def test_add_multiple_names(self):
"
1893,"def test_remove_name(self):
"
1894,"def test_remove_and_add_name(self):
"
1895,"def test_update_with_add_name(self):
"
1896,"def test_update_with_remove_name(self):
"
1897,"def test_update_with_remove_and_add_name(self):
"
1898,"def _lib_dir_option(self,dir):
"
1899,"def execute(self):
"
1900,"def execute(self):
"
1901,"def __init__(self,model,cases):
"
1902,"def configure(self):
"
1903,"def __init__(self,surrogate,nfi = 1):
"
1904,"def configure(self):
"
1905,"def __init__(self,filename,format):
"
1906,"def data(self):
"
1907,"def drivers(self):
"
1908,"def simulation_info(self):
"
1909,"def _fetch(self,query):
"
1910,"def _write(self,query,out,format):
"
1911,"def _setup(self,query):
"
1912,"def restore(self,assembly,case_id):
"
1913,"def _set(self,assembly,name,value):
"
1914,"def __init__(self,dataset):
"
1915,"def fetch(self):
"
1916,"def write(self,out,format = None):
"
1917,"def driver(self,driver_name):
"
1918,"def case(self,case_itername):
"
1919,"def parent_case(self,parent_case_id):
"
1920,"def vars(self,* args):
"
1921,"def local(self):
"
1922,"def by_case(self):
"
1923,"def by_variable(self):
"
1924,"def var_names(self):
"
1925,"def __init__(self,filename):
"
1926,"def simulation_info(self):
"
1927,"def read_iteration_case_from_hdf5(self,hdf5file,driver_name,iteration_case_name):
"
1928,"def read_from_hdf5(self,value):
"
1929,"def read_simulation_info(self):
"
1930,"def drivers(self):
"
1931,"def cases(self):
"
1932,"def _next(self):
"
1933,"def execute(self):
"
1934,"def __init__(self):
"
1935,"def shape(self):
"
1936,"def extent(self):
"
1937,"def _get_coord_sys(self):
"
1938,"def _set_coord_sys(self,sys):
"
1939,"def copy(self):
"
1940,"def is_equivalent(self,other,logger,tolerance = 0.):
"
1941,"def extract(self,imin,imax,jmin = None,jmax = None,kmin = None,kmax = None,grid_ghosts = None,flow_ghosts = None):
"
1942,"def extend(self,axis,delta,grid_points,flow_points,normal = None):
"
1943,"def make_cartesian(self,axis = 'z'):
"
1944,"def make_cylindrical(self,axis = 'z'):
"
1945,"def make_left_handed(self):
"
1946,"def make_right_handed(self):
"
1947,"def translate(self,delta_x,delta_y,delta_z):
"
1948,"def rotate_about_x(self,deg):
"
1949,"def rotate_about_y(self,deg):
"
1950,"def rotate_about_z(self,deg):
"
1951,"def promote(self):
"
1952,"def demote(self):
"
1953,"def __init__(self):
"
1954,"def start_iteration(self):
"
1955,"def _grad(self,m,me,la,n,f,g,df,dg,xnew):
"
1956,"def requires_derivs(self):
"
1957,"def __init__(self):
"
1958,"def parent(self):
"
1959,"def parent(self,value):
"
1960,"def _branch_moved(self):
"
1961,"def name(self):
"
1962,"def name(self,name):
"
1963,"def _fix_loggers(self,container,recurse):
"
1964,"def get_pathname(self,rel_to_scope = None):
"
1965,"def get_trait(self,name,copy = False):
"
1966,"def __deepcopy__(self,memo):
"
1967,"def __getstate__(self):
"
1968,"def __setstate__(self,state):
"
1969,"def _repair_traits(self):
"
1970,"def add_trait(self,name,trait,refresh = True):
"
1971,"def remove_trait(self,name):
"
1972,"def get_attr_w_copy(self,path):
"
1973,"def _add_after_parent_set(self,name,obj):
"
1974,"def _prep_for_add(self,name,obj):
"
1975,"def _post_container_add(self,name,obj,removed):
"
1976,"def add(self,name,obj):
"
1977,"def _check_recursion(self,obj):
"
1978,"def _get_proxy(self,proxy):
"
1979,"def _check_rename(self,oldname,newname):
"
1980,"def rename(self,oldname,newname):
"
1981,"def remove(self,name):
"
1982,"def configure(self):
"
1983,"def copy(self):
"
1984,"def _relink(self):
"
1985,"def cpath_updated(self):
"
1986,"def revert_to_defaults(self,recurse = True):
"
1987,"def _items(self,visited,recurse = False,** metadata):
"
1988,"def items(self,recurse = False,** metadata):
"
1989,"def list_containers(self):
"
1990,"def list_vars(self):
"
1991,"def _alltraits(self,traits = None,events = False,** metadata):
"
1992,"def contains(self,path):
"
1993,"def _get_metadata_failed(self,traitpath,metaname):
"
1994,"def get_metadata(self,traitpath,metaname = None):
"
1995,"def set_metadata(self,traitpath,metaname,value):
"
1996,"def get(self,path):
"
1997,"def get_flattened_value(self,path):
"
1998,"def set_flattened_value(self,path,value):
"
1999,"def get_iotype(self,name):
"
2000,"def set(self,path,value):
"
2001,"def save_to_egg(self,name,version,py_dir = None,src_dir = None,src_files = None,child_objs = None,dst_dir = None,observer = None,need_requirements = True):
"
2002,"def save(self,outstream,fmt = SAVE_CPICKLE,proto = - 1):
"
2003,"def post_load(self):
"
2004,"def pre_delete(self):
"
2005,"def get_dyn_trait(self,pathname,iotype = None,trait = None):
"
2006,"def get_trait_typenames(self,pathname,iotype = None):
"
2007,"def raise_exception(self,msg,exception_class = Exception):
"
2008,"def build_trait(self,ref_name,iotype = None,trait = None):
"
2009,"def __init__(self,default_value,allow_none = True,** metadata):
"
2010,"def validate(self,obj,name,value):
"
2011,"def post_setattr(self,obj,name,value):
"
2012,"def get_attribute(self,name,value,trait,meta):
"
2013,"def __init__(self):
"
2014,"def installed(self):
"
2015,"def __getattr__(self,name):
"
2016,"def __init__(self):
"
2017,"def size(self):
"
2018,"def rank(self):
"
2019,"def execute(self):
"
2020,"def configure(self):
"
2021,"def test_MDF(self):
"
2022,"def __init__(self):
"
2023,"def execute(self):
"
2024,"def __init__(self):
"
2025,"def execute(self):
"
2026,"def list_deriv_vars(self):
"
2027,"def provideJ(self):
"
2028,"def setUp(self):
"
2029,"def test_list_constraints(self):
"
2030,"def test_list_eq_constraints(self):
"
2031,"def test_list_ineq_constraints(self):
"
2032,"def _check_eq_eval_constraints(self,drv):
"
2033,"def _check_ineq_eval_constraints(self,drv):
"
2034,"def test_constraint_scaler_adder(self):
"
2035,"def test_add_constraint_eq_eq(self):
"
2036,"def test_add_constraint(self):
"
2037,"def test_add_eq_constraint(self):
"
2038,"def test_add_ineq_constraint(self):
"
2039,"def test_eval_constraint(self):
"
2040,"def test_eval_eq_constraint(self):
"
2041,"def test_eval_ineq_constraint(self):
"
2042,"def test_pseudocomps(self):
"
2043,"def test_custom_pseudocomp_creation(self):
"
2044,"def test_custom_jacobian(self):
"
2045,"def setUp(self):
"
2046,"def test_unsupported(self):
"
2047,"def test_get_2sided_constraints(self):
"
2048,"def test_list_constraints(self):
"
2049,"def test_gradient(self):
"
2050,"def test_replace(self):
"
2051,"def execute(self):
"
2052,"def execute(self):
"
2053,"def test_set_to_unset_default(self):
"
2054,"def test_set_to_default(self):
"
2055,"def test_set_recursive(self):
"
2056,"def __init__(self):
"
2057,"def set(self,newtext,location):
"
2058,"def set_array(self,newtext,start_location,end_location):
"
2059,"def replace(self,text):
"
2060,"def replace_array(self,text):
"
2061,"def postParse(self,instring,loc,tokenlist):
"
2062,"def postParse(self,instring,loc,tokenlist):
"
2063,"def postParse(self,instring,loc,tokenlist):
"
2064,"def postParse(self,instring,loc,tokenlist):
"
2065,"def __init__(self):
"
2066,"def set_template_file(self,filename):
"
2067,"def set_generated_file(self,filename):
"
2068,"def set_delimiters(self,delimiter):
"
2069,"def reset_anchor(self):
"
2070,"def transfer_var(self,value,row,field):
"
2071,"def transfer_array(self,value,row_start,field_start,field_end,row_end = None,sep = "",""):
"
2072,"def transfer_2Darray(self,value,row_start,row_end,field_start,field_end,sep = "",""):
"
2073,"def clearline(self,row):
"
2074,"def generate(self):
"
2075,"def __init__(self,end_of_line_comment_char = None,full_line_comment_char = None):
"
2076,"def set_file(self,filename):
"
2077,"def set_delimiters(self,delimiter):
"
2078,"def reset_anchor(self):
"
2079,"def transfer_line(self,row):
"
2080,"def transfer_var(self,row,field,fieldend = None):
"
2081,"def transfer_keyvar(self,key,field,occurrence = 1,rowoffset = 0):
"
2082,"def transfer_array(self,rowstart,fieldstart,rowend = None,fieldend = None):
"
2083,"def _parse_line(self):
"
2084,"def _reset_tokens(self):
"
2085,"def __init__(self):
"
2086,"def solve_nonlinear(self,params,unknowns,resids):
"
2087,"def linearize(self,params,unknowns,resids):
"
2088,"def __init__(self):
"
2089,"def solve_nonlinear(self,params,unknowns,resids):
"
2090,"def linearize(self,params,unknowns,resids):
"
2091,"def __init__(self):
"
2092,"def solve_nonlinear(self,params,unknowns,resids):
"
2093,"def apply_nonlinear(self,params,unknowns,resids):
"
2094,"def linearize(self,params,unknowns,resids):
"
2095,"def __init__(self,expr,out = 'out'):
"
2096,"def __init__(self):
"
2097,"def __init__(self,root = None,driver = None,impl = None,comm = None):
"
2098,"def __getitem__(self,name):
"
2099,"def _rec_get_param(self,absname):
"
2100,"def __setitem__(self,name,val):
"
2101,"def _setup_connections(self,params_dict,unknowns_dict):
"
2102,"def _get_ubc_vars(self,connections):
"
2103,"def setup(self,check = True,out_stream = sys.stdout):
"
2104,"def cleanup(self):
"
2105,"def _check_dangling_params(self,out_stream = sys.stdout):
"
2106,"def _check_mode(self,out_stream = sys.stdout):
"
2107,"def _check_no_unknown_comps(self,out_stream = sys.stdout):
"
2108,"def _check_no_recorders(self,out_stream = sys.stdout):
"
2109,"def _check_no_connect_comps(self,out_stream = sys.stdout):
"
2110,"def _check_mpi(self,out_stream = sys.stdout):
"
2111,"def _check_graph(self,out_stream = sys.stdout):
"
2112,"def _check_unmarked_pbos(self,out_stream = sys.stdout):
"
2113,"def check_setup(self,out_stream = sys.stdout):
"
2114,"def pre_run_check(self):
"
2115,"def run(self):
"
2116,"def run_once(self):
"
2117,"def _mode(self,mode,indep_list,unknown_list):
"
2118,"def calc_gradient(self,indep_list,unknown_list,mode = 'auto',return_format = 'array',dv_scale = None,cn_scale = None,sparsity = None):
"
2119,"def _calc_gradient_fd(self,indep_list,unknown_list,return_format,dv_scale = None,cn_scale = None,sparsity = None):
"
2120,"def _calc_gradient_ln_solver(self,indep_list,unknown_list,return_format,mode,dv_scale = None,cn_scale = None,sparsity = None):
"
2121,"def _get_voi_key(self,voi,grp):
"
2122,"def check_total_derivatives(self,out_stream = sys.stdout):
"
2123,"def _start_recorders(self):
"
2124,"def _json_system_tree(self):
"
2125,"def _setup_communicators(self):
"
2126,"def _setup_units(self,connections,params_dict,unknowns_dict):
"
2127,"def _add_implicit_connections(self,connections):
"
2128,"def print_all_convergence(self):
"
2129,"def __init__(self,out,** sqlite_dict_args):
"
2130,"def record_iteration(self,params,unknowns,resids,metadata):
"
2131,"def record_derivatives(self,derivs,metadata):
"
2132,"def close(self):
"
2133,"def __init__(self,regr = 'constant',rho_regr = 'constant',theta = None,theta0 = None,thetaL = None,thetaU = None):
"
2134,"def _build_R(self,lvl,theta):
"
2135,"def rlf(self,lvl,theta = None):
"
2136,"def _max_rlf(self,lvl,initial_range,tol):
"
2137,"def predict(self,X,eval_MSE = True):
"
2138,"def _check_list_structure(self,X,y):
"
2139,"def __init__(self,regr = 'constant',rho_regr = 'constant',theta = None,theta0 = None,thetaL = None,thetaU = None,tolerance = TOLERANCE_DEFAULT,initial_range = INITIAL_RANGE_DEFAULT):
"
2140,"def predict(self,new_x):
"
2141,"def train_multifi(self,X,Y):
"
2142,"def _fit_adapter(self,X,Y):
"
2143,"def predict(self,new_x):
"
2144,"def __init__(self):
"
2145,"def set(self,newtext,location):
"
2146,"def set_array(self,newtext,start_location,end_location):
"
2147,"def replace(self,text):
"
2148,"def replace_array(self,text):
"
2149,"def postParse(self,instring,loc,tokenlist):
"
2150,"def postParse(self,instring,loc,tokenlist):
"
2151,"def postParse(self,instring,loc,tokenlist):
"
2152,"def postParse(self,instring,loc,tokenlist):
"
2153,"def __init__(self):
"
2154,"def set_template_file(self,filename):
"
2155,"def set_generated_file(self,filename):
"
2156,"def set_delimiters(self,delimiter):
"
2157,"def mark_anchor(self,anchor,occurrence = 1):
"
2158,"def reset_anchor(self):
"
2159,"def transfer_var(self,value,row,field):
"
2160,"def transfer_array(self,value,row_start,field_start,field_end,row_end = None,sep = "",""):
"
2161,"def transfer_2Darray(self,value,row_start,row_end,field_start,field_end):
"
2162,"def clearline(self,row):
"
2163,"def generate(self):
"
2164,"def __init__(self,end_of_line_comment_char = None,full_line_comment_char = None):
"
2165,"def set_file(self,filename):
"
2166,"def set_delimiters(self,delimiter):
"
2167,"def mark_anchor(self,anchor,occurrence = 1):
"
2168,"def reset_anchor(self):
"
2169,"def transfer_line(self,row):
"
2170,"def transfer_var(self,row,field,fieldend = None):
"
2171,"def transfer_keyvar(self,key,field,occurrence = 1,rowoffset = 0):
"
2172,"def transfer_array(self,rowstart,fieldstart,rowend = None,fieldend = None):
"
2173,"def transfer_2Darray(self,rowstart,fieldstart,rowend,fieldend = None):
"
2174,"def _parse_line(self):
"
2175,"def _reset_tokens(self):
"
2176,"def __init__(self):
"
2177,"def _populate_file(self,original_file,values):
"
2178,"def create_db(self,instance_db_name):
"
2179,"def syncdb_and_migrate(self,instance_name):
"
2180,"def add_instance_to_supervisor(self,instance_name):
"
2181,"def add_instance_to_nginx(self,instance_name):
"
2182,"def restart_server(self):
"
2183,"def disable_instance(self,instance_name):
"
2184,"def destroy_instance(self,instance_name):
"
2185,"def abort(self,msg,status = 1):
"
2186,"def can_retrieve(self,user):
"
2187,"def get_serializer_class(self,user = None):
"
2188,"def test_slide_on_default_projector(self):
"
2189,"def test_invalid_slide_on_default_projector(self):
"
2190,"def test_get(self):
"
2191,"def test_retrieve(self):
"
2192,"def test_update(self):
"
2193,"def test_update_wrong_datatype(self):
"
2194,"def test_update_wrong_datatype_that_can_be_converted(self):
"
2195,"def test_update_good_choice(self):
"
2196,"def test_update_bad_choice(self):
"
2197,"def test_update_validator_ok(self):
"
2198,"def test_update_validator_invalid(self):
"
2199,"def test_update_only_with_key(self):
"
2200,"def test_metadata_with_hidden(self):
"
2201,"def test_validate_no_data(self):
"
2202,"def test_validate_no_username(self,generate_username):
"
2203,"def test_validate_no_username_in_patch_request(self):
"
2204,"def __init__(self):
"
2205,"def length(self,data,minimum = - 1,maximum = - 1):
"
2206,"def regexp(self,data,regex,flags = 0):
"
2207,"def username(self,data):
"
2208,"def full_name(self,data):
"
2209,"def email(self,data):
"
2210,"def url(self,data):
"
2211,"def is_integer(self,data):
"
2212,"def float(self,data):
"
2213,"def __init__(self,* args,** kwargs):
"
2214,"def _routeFrom(self,prefix,label,rd):
"
2215,"def generateVifBGPRoute(self,macAdress,ipPrefix,prefixLen,label):
"
2216,"def _getRDFromLabel(self,label):
"
2217,"def _routeForReAdvertisement(self,prefix,label):
"
2218,"def _readvertise(self,nlri):
"
2219,"def _readvertiseStop(self,nlri):
"
2220,"def vifPlugged(self,macAddress,ipAddressPrefix,localPort,advertiseSubnet):
"
2221,"def vifUnplugged(self,macAddress,ipAddressPrefix,advertiseSubnet):
"
2222,"def _route2trackedEntry(self,route):
"
2223,"def _toReadvertise(self,route):
"
2224,"def _imported(self,route):
"
2225,"def _newBestRoute(self,entry,newRoute):
"
2226,"def _bestRouteRemoved(self,entry,oldRoute,last):
"
2227,"def getLGMap(self):
"
2228,"def __init__(self,origin):
"
2229,"def pack(self):
"
2230,"def __len__(self):
"
2231,"def __str__(self):
"
2232,"def __repr__(self):
"
2233,"def __cmp__(self,other):
"
2234,"def emit(self,eventDict):
"
2235,"def __init__(self,name,label,r,deferred,** kwargs):
"
2236,"def inConnectionLost(self):
"
2237,"def errReceived(self,data):
"
2238,"def outReceived(self,data):
"
2239,"def outConnectionLost(self):
"
2240,"def errConnectionLost(self):
"
2241,"def connectionMade(self):
"
2242,"def processExited(self,reason):
"
2243,"def __init__(self,r,name,label,cmd,args,env):
"
2244,"def routeSignal(self,signum,frame):
"
2245,"def processResult(self,result):
"
2246,"def running(self):
"
2247,"def update(self,watchDict):
"
2248,"def cleanupLinks(self,directory):
"
2249,"def clean_old_files(self,directory,age,recurse = True):
"
2250,"def clean_elderly(self):
"
2251,"def recursive_clean(self,directory,age,recurse):
"
2252,"def startService(self):
"
2253,"def stopService(self):
"
2254,"def __init__(self,** kwargs):
"
2255,"def _generate(self):
"
2256,"def test_voronoi(self):
"
2257,"def setup_class(self):
"
2258,"def test_init_w_no_network(self):
"
2259,"def test_init_w_components(self):
"
2260,"def test_set_component_add(self):
"
2261,"def test_set_component_add_twice(self):
"
2262,"def test_set_component_remove(self):
"
2263,"def test_set_component_remove_twice(self):
"
2264,"def __init__(self,las_out_filename):
"
2265,"def __iter__(self):
"
2266,"def next(self):
"
2267,"def setUp(self):
"
2268,"def __repr__(self):
"
2269,"def _get_kwargs(self):
"
2270,"def _get_args(self):
"
2271,"def _indent(self):
"
2272,"def _dedent(self):
"
2273,"def __init__(self,formatter,parent,heading = None):
"
2274,"def format_help(self):
"
2275,"def _add_item(self,func,args):
"
2276,"def start_section(self,heading):
"
2277,"def end_section(self):
"
2278,"def add_text(self,text):
"
2279,"def add_usage(self,usage,actions,groups,prefix = None):
"
2280,"def add_argument(self,action):
"
2281,"def add_arguments(self,actions):
"
2282,"def format_help(self):
"
2283,"def _join_parts(self,part_strings):
"
2284,"def _format_text(self,text):
"
2285,"def _format_action(self,action):
"
2286,"def _format_action_invocation(self,action):
"
2287,"def _metavar_formatter(self,action,default_metavar):
"
2288,"def _format_args(self,action,default_metavar):
"
2289,"def _expand_help(self,action):
"
2290,"def _iter_indented_subactions(self,action):
"
2291,"def _split_lines(self,text,width):
"
2292,"def _fill_text(self,text,width,indent):
"
2293,"def _get_help_string(self,action):
"
2294,"def _fill_text(self,text,width,indent):
"
2295,"def _split_lines(self,text,width):
"
2296,"def _get_help_string(self,action):
"
2297,"def __init__(self,argument,message):
"
2298,"def __str__(self):
"
2299,"def __init__(self,option_strings,dest,nargs = None,const = None,default = None,type = None,choices = None,required = False,help = None,metavar = None):
"
2300,"def _get_kwargs(self):
"
2301,"def __call__(self,parser,namespace,values,option_string = None):
"
2302,"def __call__(self,parser,namespace,values,option_string = None):
"
2303,"def __init__(self,option_strings,dest,const,default = None,required = False,help = None,metavar = None):
"
2304,"def __call__(self,parser,namespace,values,option_string = None):
"
2305,"def __init__(self,option_strings,dest,default = False,required = False,help = None):
"
2306,"def __init__(self,option_strings,dest,default = True,required = False,help = None):
"
2307,"def __call__(self,parser,namespace,values,option_string = None):
"
2308,"def __init__(self,option_strings,dest,const,default = None,required = False,help = None,metavar = None):
"
2309,"def __call__(self,parser,namespace,values,option_string = None):
"
2310,"def __init__(self,option_strings,dest,default = None,required = False,help = None):
"
2311,"def __call__(self,parser,namespace,values,option_string = None):
"
2312,"def __init__(self,option_strings,dest = SUPPRESS,default = SUPPRESS,help = None):
"
2313,"def __call__(self,parser,namespace,values,option_string = None):
"
2314,"def __init__(self,option_strings,version = None,dest = SUPPRESS,default = SUPPRESS,help = ""show program's version number and exit""):
"
2315,"def __call__(self,parser,namespace,values,option_string = None):
"
2316,"def __init__(self,name,help):
"
2317,"def __init__(self,option_strings,prog,parser_class,dest = SUPPRESS,help = None,metavar = None):
"
2318,"def add_parser(self,name,** kwargs):
"
2319,"def _get_subactions(self):
"
2320,"def __call__(self,parser,namespace,values,option_string = None):
"
2321,"def __init__(self,mode = 'r',bufsize = None):
"
2322,"def __call__(self,string):
"
2323,"def __repr__(self):
"
2324,"def __init__(self,** kwargs):
"
2325,"def __eq__(self,other):
"
2326,"def __ne__(self,other):
"
2327,"def __contains__(self,key):
"
2328,"def register(self,registry_name,value,object):
"
2329,"def _registry_get(self,registry_name,value,default = None):
"
2330,"def set_defaults(self,** kwargs):
"
2331,"def get_default(self,dest):
"
2332,"def add_argument(self,* args,** kwargs):
"
2333,"def add_argument_group(self,* args,** kwargs):
"
2334,"def add_mutually_exclusive_group(self,** kwargs):
"
2335,"def _add_action(self,action):
"
2336,"def _remove_action(self,action):
"
2337,"def _add_container_actions(self,container):
"
2338,"def _get_positional_kwargs(self,dest,** kwargs):
"
2339,"def _get_optional_kwargs(self,* args,** kwargs):
"
2340,"def _pop_action_class(self,kwargs,default = None):
"
2341,"def _get_handler(self):
"
2342,"def _check_conflict(self,action):
"
2343,"def _handle_conflict_error(self,action,conflicting_actions):
"
2344,"def _handle_conflict_resolve(self,action,conflicting_actions):
"
2345,"def __init__(self,container,title = None,description = None,** kwargs):
"
2346,"def _add_action(self,action):
"
2347,"def _remove_action(self,action):
"
2348,"def __init__(self,container,required = False):
"
2349,"def _add_action(self,action):
"
2350,"def _remove_action(self,action):
"
2351,"def _get_kwargs(self):
"
2352,"def add_subparsers(self,** kwargs):
"
2353,"def _add_action(self,action):
"
2354,"def _get_optional_actions(self):
"
2355,"def _get_positional_actions(self):
"
2356,"def parse_args(self,args = None,namespace = None):
"
2357,"def parse_known_args(self,args = None,namespace = None):
"
2358,"def _parse_known_args(self,arg_strings,namespace):
"
2359,"def _read_args_from_files(self,arg_strings):
"
2360,"def convert_arg_line_to_args(self,arg_line):
"
2361,"def _match_argument(self,action,arg_strings_pattern):
"
2362,"def _match_arguments_partial(self,actions,arg_strings_pattern):
"
2363,"def _parse_optional(self,arg_string):
"
2364,"def _get_option_tuples(self,option_string):
"
2365,"def _get_nargs_pattern(self,action):
"
2366,"def _get_values(self,action,arg_strings):
"
2367,"def _get_value(self,action,arg_string):
"
2368,"def _check_value(self,action,value):
"
2369,"def format_usage(self):
"
2370,"def format_help(self):
"
2371,"def _get_formatter(self):
"
2372,"def print_usage(self,file = None):
"
2373,"def print_help(self,file = None):
"
2374,"def _print_message(self,message,file = None):
"
2375,"def exit(self,status = 0,message = None):
"
2376,"def error(self,message):
"
2377,"def __init__(self,topic,cluster,consumer_group,fetch_message_max_bytes = 1024 * 1024,num_consumer_fetchers = 1,auto_commit_enable = False,auto_commit_interval_ms = 60 * 1000,queued_max_messages = 2000,fetch_min_bytes = 1,fetch_wait_max_ms = 100,offsets_channel_backoff_ms = 1000,offsets_commit_max_retries = 5,auto_offset_reset = OffsetType.EARLIEST,consumer_timeout_ms = - 1,rebalance_max_retries = 5,rebalance_backoff_ms = 2 * 1000,zookeeper_connection_timeout_ms = 6 * 1000,zookeeper_connect = '127.0.0.1:2181',zookeeper = None,auto_start = True,reset_offset_on_start = False,post_rebalance_callback = None,use_rdkafka = False,compacted_topic = False):
"
2378,"def __del__(self):
"
2379,"def __repr__(self):
"
2380,"def _raise_worker_exceptions(self):
"
2381,"def topic(self):
"
2382,"def partitions(self):
"
2383,"def _partitions(self):
"
2384,"def held_offsets(self):
"
2385,"def start(self):
"
2386,"def stop(self):
"
2387,"def _setup_zookeeper(self,zookeeper_connect,timeout):
"
2388,"def _setup_internal_consumer(self,partitions = None,start = True):
"
2389,"def _get_internal_consumer(self,partitions = None,start = True):
"
2390,"def _decide_partitions(self,participants,consumer_id = None):
"
2391,"def _get_participants(self):
"
2392,"def _build_watch_callback(self,fn,proxy):
"
2393,"def _add_self(self):
"
2394,"def _path_self(self):
"
2395,"def _update_member_assignment(self):
"
2396,"def _rebalance(self):
"
2397,"def _path_from_partition(self,p):
"
2398,"def _remove_partitions(self,partitions):
"
2399,"def _add_partitions(self,partitions):
"
2400,"def _get_held_partitions(self):
"
2401,"def _brokers_changed(self,brokers):
"
2402,"def _consumers_changed(self,consumers):
"
2403,"def _topics_changed(self,topics):
"
2404,"def reset_offsets(self,partition_offsets = None):
"
2405,"def consume(self,block = True):
"
2406,"def __iter__(self):
"
2407,"def commit_offsets(self):
"
2408,"def initialize(self,stormconf,context):
"
2409,"def next_tuple(self):
"
2410,"def __str__(self):
"
2411,"def save(self,* args,** kwargs):
"
2412,"def __str__(self):
"
2413,"def save(self,* args,** kwargs):
"
2414,"def __str__(self):
"
2415,"def __str__(self):
"
2416,"def __str__(self):
"
2417,"def __str__(self):
"
2418,"def __str__(self):
"
2419,"def __str__(self):
"
2420,"def __str__(self):
"
2421,"def data_classification_level(self):
"
2422,"def data_sensitivity_value(self):
"
2423,"def is_new(self):
"
2424,"def total(self):
"
2425,"def __str__(self):
"
2426,"def __str__(self):
"
2427,"def __str__(self):
"
2428,"def save(self,* args,** kwargs):
"
2429,"def is_pending(self):
"
2430,"def is_open(self):
"
2431,"def is_closed(self):
"
2432,"def is_ready_for_work(self):
"
2433,"def is_past_due(self):
"
2434,"def __str__(self):
"
2435,"def __str__(self):
"
2436,"def save(self,* args,** kwargs):
"
2437,"def is_pending(self):
"
2438,"def is_open(self):
"
2439,"def is_closed(self):
"
2440,"def is_ready_for_work(self):
"
2441,"def is_past_due(self):
"
2442,"def __str__(self):
"
2443,"def __init__(self,language = ""it""):
"
2444,"def change_language(self,language = ""it""):
"
2445,"def search_links(self):
"
2446,"def create_file(self,row,newPath,fetched):
"
2447,"def file_length(self,fileName):
"
2448,"def __init__(self):
"
2449,"def read_reserved(self,s):
"
2450,"def write(self,s):
"
2451,"def forwards(self,orm):
"
2452,"def backwards(self,orm):
"
2453,"def __init__(self,repository,commits = None):
"
2454,"def __getitem__(self,item):
"
2455,"def __getattr__(self,attr):
"
2456,"def ahead(self,upstream,branch):
"
2457,"def diverge(self,upstream,branch):
"
2458,"def checkout(self,ref,* args,** kwargs):
"
2459,"def _sanitize(self,path):
"
2460,"def push(self,upstream,branch,credentials):
"
2461,"def fetch(self,upstream,branch_name,credentials):
"
2462,"def commit(self,message,author,commiter,parents = None,ref = ""HEAD""):
"
2463,"def _is_searched_entry(self,entry_name,searched_entry,path_components):
"
2464,"def _get_git_object(self,tree,obj_name,path_components,modifier):
"
2465,"def get_git_object_type(self,tree,path):
"
2466,"def get_git_object(self,tree,path):
"
2467,"def get_git_object_default_stats(self,ref,path):
"
2468,"def get_blob_size(self,tree,path):
"
2469,"def get_blob_data(self,tree,path):
"
2470,"def get_commit_dates(self):
"
2471,"def get_commits_by_date(self,date):
"
2472,"def walk_branches(self,sort,* branches):
"
2473,"def remote_head(self,upstream,branch):
"
2474,"def get_remote(self,name):
"
2475,"def _full_path(self,partial):
"
2476,"def find_diverge_commits(self,first_branch,second_branch):
"
2477,"def test_commit(self):
"
2478,"def test_cache(self):
"
2479,"def test_strptime(self):
"
2480,"def test_time_parser_match_with_value_error(self):
"
2481,"def getDelay(self):
"
2482,"def resetDelay(self):
"
2483,"def _getNextServer(self):
"
2484,"def _handleSocketError(self,e):
"
2485,"def _sendIfMsgs(self):
"
2486,"def run(self):
"
2487,"def connect(self,** kwargs):
"
2488,"def die(self):
"
2489,"def _reallyDie(self):
"
2490,"def name(self):
"
2491,"def __ne__(self,other):
"
2492,"def test_no_file(self):
"
2493,"def test_load_file(self):
"
2494,"def test_load_warnings(self):
"
2495,"def __init__(self,nrows,rng,userandom):
"
2496,"def get_db_size(self):
"
2497,"def print_mtime(self,t1,explain):
"
2498,"def print_qtime(self,colname,ltimes):
"
2499,"def norm_times(self,ltimes):
"
2500,"def print_qtime_idx(self,colname,ltimes,repeated,verbose):
"
2501,"def print_db_sizes(self,init,filled,indexed):
"
2502,"def fill_arrays(self,start,stop):
"
2503,"def create_db(self,dtype,kind,optlevel,verbose):
"
2504,"def index_db(self,dtype,kind,optlevel,verbose):
"
2505,"def query_db(self,niter,dtype,onlyidxquery,onlynonidxquery,avoidfscache,verbose,inkernel):
"
2506,"def close_db(self,con):
"
2507,"def _v_attrs(self):
"
2508,"def _g_gettitle(self):
"
2509,"def _g_settitle(self,title):
"
2510,"def __init__(self,parentnode,name,_log = True):
"
2511,"def _g_log_create(self):
"
2512,"def __del__(self):
"
2513,"def _g_pre_kill_hook(self):
"
2514,"def _g_create(self):
"
2515,"def _g_open(self):
"
2516,"def _g_check_open(self):
"
2517,"def _g_set_location(self,parentnode,name):
"
2518,"def _g_update_location(self,newparentpath):
"
2519,"def _g_del_location(self):
"
2520,"def _g_post_init_hook(self):
"
2521,"def _g_update_dependent(self):
"
2522,"def _f_close(self):
"
2523,"def _g_remove(self,recursive,force):
"
2524,"def _f_remove(self,recursive = False,force = False):
"
2525,"def _g_remove_and_log(self,recursive,force):
"
2526,"def _g_move(self,newparent,newname):
"
2527,"def _f_rename(self,newname,overwrite = False):
"
2528,"def _f_move(self,newparent = None,newname = None,overwrite = False,createparents = False):
"
2529,"def _g_log_move(self,oldpathname):
"
2530,"def _g_copy(self,newparent,newname,recursive,_log = True,** kwargs):
"
2531,"def _g_copy_as_child(self,newparent,** kwargs):
"
2532,"def _f_isvisible(self):
"
2533,"def _g_check_group(self,node):
"
2534,"def _g_check_not_contains(self,pathname):
"
2535,"def _g_maybe_remove(self,parent,name,overwrite):
"
2536,"def _g_check_name(self,name):
"
2537,"def _f_getattr(self,name):
"
2538,"def _f_setattr(self,name,value):
"
2539,"def _f_delattr(self,name):
"
2540,"def _g_log_create(self):
"
2541,"def _g_log_move(self,oldpathname):
"
2542,"def _g_remove_and_log(self,recursive,force):
"
2543,"def _do_reopen(self):
"
2544,"def setUp(self):
"
2545,"def test00_simple(self):
"
2546,"def test01_twice(self):
"
2547,"def test02_twice2(self):
"
2548,"def test03_6times3marks(self):
"
2549,"def test04_6times3marksro(self):
"
2550,"def test05_destructive(self):
"
2551,"def test05b_destructive(self):
"
2552,"def test05c_destructive(self):
"
2553,"def test05d_destructive(self):
"
2554,"def test05e_destructive(self):
"
2555,"def test05f_destructive(self):
"
2556,"def test06_totalunwind(self):
"
2557,"def test07_totalrewind(self):
"
2558,"def test08_marknames(self):
"
2559,"def test08_initialmark(self):
"
2560,"def test09_marknames(self):
"
2561,"def test10_goto(self):
"
2562,"def test10_gotoint(self):
"
2563,"def test11_contiguous(self):
"
2564,"def test12_keepMark(self):
"
2565,"def test13_severalEnableDisable(self):
"
2566,"def setUp(self):
"
2567,"def test00(self):
"
2568,"def test01(self):
"
2569,"def test02(self):
"
2570,"def test03(self):
"
2571,"def setUp(self):
"
2572,"def test00(self):
"
2573,"def test01(self):
"
2574,"def test02(self):
"
2575,"def test03(self):
"
2576,"def setUp(self):
"
2577,"def test00(self):
"
2578,"def test01(self):
"
2579,"def test01b(self):
"
2580,"def test02(self):
"
2581,"def test03(self):
"
2582,"def setUp(self):
"
2583,"def test00(self):
"
2584,"def test01(self):
"
2585,"def test01b(self):
"
2586,"def test02(self):
"
2587,"def test03(self):
"
2588,"def setUp(self):
"
2589,"def test00(self):
"
2590,"def test00b(self):
"
2591,"def test00c(self):
"
2592,"def test01(self):
"
2593,"def test01b(self):
"
2594,"def setUp(self):
"
2595,"def test00_copyLeaf(self):
"
2596,"def test00b_copyTable(self):
"
2597,"def test01_copyGroup(self):
"
2598,"def test02_copyLeafOverwrite(self):
"
2599,"def test03_copyChildren(self):
"
2600,"def setUp(self):
"
2601,"def test00(self):
"
2602,"def test01(self):
"
2603,"def test02(self):
"
2604,"def test03(self):
"
2605,"def test03b(self):
"
2606,"def setUp(self):
"
2607,"def test00_setAttr(self):
"
2608,"def test01_setAttrExisting(self):
"
2609,"def test02_delAttr(self):
"
2610,"def test03_copyNodeAttrs(self):
"
2611,"def test04_replaceNode(self):
"
2612,"def test00_hierarchy(self):
"
2613,"def test01_attributes(self):
"
2614,"def setUp(self):
"
2615,"def existing(self,paths):
"
2616,"def basetest(self,doit,pre,post):
"
2617,"def test00_create(self):
"
2618,"def test01_move(self):
"
2619,"def test02_copy(self):
"
2620,"def test03_copyChildren(self):
"
2621,"def setUp(self):
"
2622,"def tearDown(self):
"
2623,"def test_good_json(self):
"
2624,"def _get_password(self):
"
2625,"def _set_password(self,password):
"
2626,"def __init__(self,username,password,name,email):
"
2627,"def __init__(self,name):
"
2628,"def user_voted(self,username):
"
2629,"def vote(self,user,positive):
"
2630,"def __init__(self,request):
"
2631,"def setUp(self):
"
2632,"def tearDown(self):
"
2633,"def _callFUT(self,event):
"
2634,"def test_it(self,mock_get_auditlog):
"
2635,"def test_it_nolog(self,mock_get_auditlog):
"
2636,"def setUp(self):
"
2637,"def tearDown(self):
"
2638,"def _callFUT(self,event):
"
2639,"def test_it_added(self,mock_get_auditlog):
"
2640,"def test_it_added_noscribe(self,mock_get_auditlog):
"
2641,"def test_it_moved(self,mock_get_auditlog):
"
2642,"def test_it_duplicated(self,mock_get_auditlog):
"
2643,"def setUp(self):
"
2644,"def tearDown(self):
"
2645,"def _callFUT(self,event):
"
2646,"def test_it_moving(self):
"
2647,"def test_it(self,mock_get_auditlog):
"
2648,"def setUp(self):
"
2649,"def tearDown(self):
"
2650,"def _callFUT(self,event):
"
2651,"def test_it_noscribe(self,mock_get_auditlog):
"
2652,"def test_it(self,mock_get_auditlog):
"
2653,"def setUp(self):
"
2654,"def tearDown(self):
"
2655,"def _callFUT(self,event):
"
2656,"def test_it_noscribe(self,mock_get_auditlog):
"
2657,"def test_it_user_has_oid(self,mock_get_auditlog):
"
2658,"def test_it_user_has_no_oid(self,mock_get_auditlog):
"
2659,"def _callFUT(self,event):
"
2660,"def test_it(self,mock_set_auditlog):
"
2661,"def __init__(self,kw = None):
"
2662,"def typeof(self,content):
"
2663,"def setUp(self):
"
2664,"def tearDown(self):
"
2665,"def _callFUT(self,request,transaction,get_connection,evolve_packages):
"
2666,"def _makeRequest(self,app_root = None):
"
2667,"def test_without_app_root(self):
"
2668,"def test_with_app_root(self):
"
2669,"def test_it(self):
"
2670,"def test_it(self):
"
2671,"def _callFUT(self,event,statsd_incr):
"
2672,"def test_no_tx_counts(self):
"
2673,"def test_with_postitive_tx_counts(self):
"
2674,"def test_with_zero_tx_counts(self):
"
2675,"def commit(self):
"
2676,"def savepoint(self):
"
2677,"def __init__(self,root):
"
2678,"def root(self):
"
2679,"def __call__(self,request):
"
2680,"def __init__(self,result):
"
2681,"def __call__(self,* args,** kw):
"
2682,"def notify(self,event):
"
2683,"def __init__(self):
"
2684,"def add_subscriber(self,fn,event_type):
"
2685,"def __init__(self,loads,stores):
"
2686,"def getTransferCounts(self):
"
2687,"def __init__(self,loads = 0,stores = 0):
"
2688,"def _makeob(self,stream,title,mimetype):
"
2689,"def add_success(self,appstruct):
"
2690,"def _callFUT(self,event):
"
2691,"def test_event_wo_loading_attr(self):
"
2692,"def test_event_w_loading_True(self):
"
2693,"def test_wo_principals_service(self):
"
2694,"def test_user_not_in_groups(self):
"
2695,"def test_user_in_groups(self):
"
2696,"def test_group_not_in_users(self):
"
2697,"def test_group_in_users(self):
"
2698,"def _callFUT(self,event):
"
2699,"def test_loading(self):
"
2700,"def test_moving(self):
"
2701,"def test_it(self):
"
2702,"def test_it_moving(self):
"
2703,"def _callFUT(self,event):
"
2704,"def test_loading(self):
"
2705,"def test_it_user_has_no_oid(self):
"
2706,"def test_it(self):
"
2707,"def _callFUT(self,event):
"
2708,"def test_moving(self):
"
2709,"def test_loading(self):
"
2710,"def test_objectmap_is_None(self):
"
2711,"def test_no_acls(self):
"
2712,"def test_with_acls(self):
"
2713,"def _callFUT(self,event):
"
2714,"def test_objectmap_is_None(self):
"
2715,"def test_gardenpath(self):
"
2716,"def __init__(self,result =()):
"
2717,"def targets(self,object,reftype):
"
2718,"def connect(self,source,target,reftype):
"
2719,"def disconnect(self,source,target,reftype):
"
2720,"def __init__(self,** kw):
"
2721,"def subscribers(self,* arg):
"
2722,"def skeleton_run_test(self):
"
2723,"def __repr__(self):
"
2724,"def __str__(self):
"
2725,"def __getitem__(self,y):
"
2726,"def __getslice__(self,* args):
"
2727,"def __contains__(self,key):
"
2728,"def __add__(self,other):
"
2729,"def __radd__(self,left):
"
2730,"def __mul__(self,other):
"
2731,"def __rmul__(self,other):
"
2732,"def join(self,iterable_of_bytes):
"
2733,"def find(self,sub,* args):
"
2734,"def rfind(self,sub,* args):
"
2735,"def replace(self,old,new,* args):
"
2736,"def encode(self,* args):
"
2737,"def decode(self,encoding = 'utf-8',errors = 'strict'):
"
2738,"def startswith(self,prefix,* args):
"
2739,"def endswith(self,prefix,* args):
"
2740,"def split(self,sep = None,maxsplit = - 1):
"
2741,"def splitlines(self,keepends = False):
"
2742,"def rsplit(self,sep = None,maxsplit = - 1):
"
2743,"def partition(self,sep):
"
2744,"def rpartition(self,sep):
"
2745,"def rindex(self,sub,* args):
"
2746,"def index(self,sub,* args):
"
2747,"def __eq__(self,other):
"
2748,"def __ne__(self,other):
"
2749,"def __lt__(self,other):
"
2750,"def __le__(self,other):
"
2751,"def __gt__(self,other):
"
2752,"def __ge__(self,other):
"
2753,"def __native__(self):
"
2754,"def rstrip(self,bytes_to_strip = None):
"
2755,"def strip(self,bytes_to_strip = None):
"
2756,"def lower(self):
"
2757,"def upper(self):
"
2758,"def setUp(self):
"
2759,"def tearDown(self):
"
2760,"def test_range_slice(self):
"
2761,"def test_print(self):
"
2762,"def test_division(self):
"
2763,"def test_exception_indentation(self):
"
2764,"def test_urllib_refactor2(self):
"
2765,"def test_correct_exit_status(self):
"
2766,"def test_single_param_annotations(self):
"
2767,"def test_multiple_param_annotations(self):
"
2768,"def test_mixed_annotations(self):
"
2769,"def test_functions_unchanged(self):
"
2770,"def setup_inliner(self,writer):
"
2771,"def inline_helper_remap_names(self,remap):
"
2772,"def inline_helper_return_id(self,return_id):
"
2773,"def inline_function(self,node):
"
2774,"def __init__(self,node,class_names):
"
2775,"def visit_Call(self,node):
"
2776,"def __init__(self):
"
2777,"def visit_Name(self,node):
"
2778,"def __init__(self,requirejs = False,insert_runtime = False):
"
2779,"def visit_With(self,node):
"
2780,"def _visit_subscript_ellipsis(self,node):
"
2781,"def visit_List(self,node):
"
2782,"def visit_Dict(self,node):
"
2783,"def visit_ClassDef(self,node):
"
2784,"def get_args_kwargs_from_funcdef(self,node,skip_self = False):
"
2785,"def _visit_for_prep_iter_helper(self,node,out,iter_name):
"
2786,"def visit_Expr(self,node):
"
2787,"def visit_Print(self,node):
"
2788,"def visit_Assign(self,node):
"
2789,"def _visit_function(self,node):
"
2790,"def visit_Is(self,node):
"
2791,"def visit_IsNot(self,node):
"
2792,"def visit_NotEq(self,node):
"
2793,"def _visit_call_helper(self,node):
"
2794,"def _visit_call_helper_var(self,node):
"
2795,"def _visit_call_helper_list(self,node):
"
2796,"def _visit_call_helper_numpy_array(self,node):
"
2797,"def _visit_call_helper_instanceof(self,node):
"
2798,"def visit_ExceptHandler(self,node):
"
2799,"def visit_Compare(self,node):
"
2800,"def __init__(self):
"
2801,"def __init__(self):
"
2802,"def __init__(self):
"
2803,"def __del__(self):
"
2804,"def free_resources(self):
"
2805,"def read_obj(self,fname):
"
2806,"def read_mtllib(self,mtl_fname):
"
2807,"def draw(self):
"
2808,"def draw_quick(self):
"
2809,"def setUp(self):
"
2810,"def tearDown(self):
"
2811,"def test_robust_rule_vs_simple(self):
"
2812,"def test_f2k_and_k2f(self):
"
2813,"def test_evaluate_F(self):
"
2814,"def setUp(self):
"
2815,"def test_empty_single_list(self):
"
2816,"def test_contains_success(self):
"
2817,"def test_contains_failure(self):
"
2818,"def test_append_success(self):
"
2819,"def test_append_failure(self):
"
2820,"def test_getitem_success(self):
"
2821,"def test_getitem_failure(self):
"
2822,"def test_setitem_success(self):
"
2823,"def test_setitem_failure(self):
"
2824,"def test_empty_double_list(self):
"
2825,"def test_insert_success(self):
"
2826,"def test_insert_fauilure(self):
"
2827,"def test_end_pos_one_line(self):
"
2828,"def test_end_pos_multi_line(self):
"
2829,"def __init__(self,graph,graphVariable = None,dSCompliance = False):
"
2830,"def setupGraph(self,store,graphKind = None):
"
2831,"def __reduce__(self):
"
2832,"def __getstate__(self):
"
2833,"def __setstate__(self,arg):
"
2834,"def _clusterForward(self,seed,Cluster):
"
2835,"def clusterForward(self,seed,Cluster = None):
"
2836,"def _clusterBackward(self,seed,Cluster):
"
2837,"def clusterBackward(self,seed,Cluster = None):
"
2838,"def cluster(self,seed):
"
2839,"def __init__(self,patterns =[]):
"
2840,"def addPattern(self,tupl):
"
2841,"def insertPattern(self,tupl):
"
2842,"def addPatterns(self,lst):
"
2843,"def addConstraint(self,func):
"
2844,"def addConstraints(self,lst):
"
2845,"def __add__(self,other):
"
2846,"def __iadd__(self,other):
"
2847,"def __str__(self):
"
2848,"def isEmpty(self):
"
2849,"def __init__(self,patterns =[],prolog = None):
"
2850,"def __repr__(self):
"
2851,"def fetchTerminalExpression(self):
"
2852,"def setUp(self):
"
2853,"def testComma(self):
"
2854,"def testHeader(self):
"
2855,"def setUp(self):
"
2856,"def testNamedGraph(self):
"
2857,"def testScopedBNodes(self):
"
2858,"def testCollectionContentWithinAndWithout(self):
"
2859,"def testCollectionAsObject(self):
"
2860,"def test_dSet_parsed_as_URL_raises_Exception(self):
"
2861,"def test_dSet_parsed_as_context_returns_results(self):
"
2862,"def parseline(self):
"
2863,"def __init__(self):
"
2864,"def parse(self,source):
"
2865,"def parseRow(self,row,v):
"
2866,"def convertTerm(self,t):
"
2867,"def __init__(self,result):
"
2868,"def serialize(self,stream,encoding = 'utf-8'):
"
2869,"def serializeTerm(self,term,encoding):
"
2870,"def setup(self):
"
2871,"def test_serialize_and_reparse(self):
"
2872,"def test_multiple(self):
"
2873,"def test_result_fragments(self):
"
2874,"def test_result_fragments_with_base(self):
"
2875,"def test_subClassOf_objects(self):
"
2876,"def __init__(self):
"
2877,"def connect(self,host,port):
"
2878,"def disconnect(self):
"
2879,"def is_connected(self):
"
2880,"def run(self):
"
2881,"def read(self):
"
2882,"def write(self,data):
"
2883,"def setUp(self):
"
2884,"def test_decode_secret(self):
"
2885,"def test_totp(self):
"
2886,"def __init__(self,show_hidden = False,show_check_failure = False,width = 80):
"
2887,"def has_subcommands(self):
"
2888,"def is_bot(self):
"
2889,"def is_cog(self):
"
2890,"def shorten(self,text):
"
2891,"def max_name_size(self):
"
2892,"def clean_prefix(self):
"
2893,"def get_qualified_command_name(self):
"
2894,"def get_ending_note(self):
"
2895,"def filter_command_list(self):
"
2896,"def _check_new_page(self):
"
2897,"def _add_subcommands_to_page(self,max_width,commands):
"
2898,"def format_help_for(self,context,command_or_bot):
"
2899,"def format(self):
"
2900,"def __init__(self,scheduler,handler):
"
2901,"def local_now(self):
"
2902,"def schedule_now(self,state,action):
"
2903,"def schedule_relative(self,duetime,action,state = None):
"
2904,"def schedule_absolute(self,duetime,action,state = None):
"
2905,"def _clone(self,scheduler):
"
2906,"def _wrap(self,action):
"
2907,"def _get_recursive_wrapper(self,scheduler):
"
2908,"def schedule_periodic(self,period,action,state = None):
"
2909,"def __init__(self):
"
2910,"def to_iterable(self):
"
2911,"def __iter__(self):
"
2912,"def find(self,predicate):
"
2913,"def multicast(self,subject = None,subject_selector = None,selector = None):
"
2914,"def skip_until_with_time(self,start_time,scheduler):
"
2915,"def __init__(self,subject,observer):
"
2916,"def dispose(self):
"
2917,"def test_new_thread_now(self):
"
2918,"def test_new_thread_schedule_action(self):
"
2919,"def test_new_thread_schedule_action_due(self):
"
2920,"def test_new_thread_schedule_action_cancel(self):
"
2921,"def test_count_empty(self):
"
2922,"def test_count_empty_ii(self):
"
2923,"def test_count_some(self):
"
2924,"def test_count_throw(self):
"
2925,"def test_count_never(self):
"
2926,"def test_count_predicate_empty_true(self):
"
2927,"def test_count_predicate_empty_false(self):
"
2928,"def test_count_predicate_return_true(self):
"
2929,"def test_count_predicate_return_false(self):
"
2930,"def test_count_predicate_some_all(self):
"
2931,"def test_count_predicate_some_none(self):
"
2932,"def test_count_predicate_some_even(self):
"
2933,"def test_count_predicate_throw_true(self):
"
2934,"def test_count_predicate_throw_false(self):
"
2935,"def test_count_predicate_never(self):
"
2936,"def test_count_predicate_predicate_throws(self):
"
2937,"def test_interval_timespan_basic(self):
"
2938,"def test_interval_timespan_zero(self):
"
2939,"def test_interval_timespan_negative(self):
"
2940,"def test_interval_timespan_disposed(self):
"
2941,"def test_interval_timespan_observer_throws(self):
"
2942,"def test_replay_count_basic(self):
"
2943,"def test_replay_count_error(self):
"
2944,"def test_replay_count_complete(self):
"
2945,"def test_replay_count_dispose(self):
"
2946,"def test_replay_count_multiple_connections(self):
"
2947,"def test_replay_count_lambda_zip_complete(self):
"
2948,"def test_replay_count_lambda_zip_error(self):
"
2949,"def test_replay_count_lambda_zip_dispose(self):
"
2950,"def test_replay_time_basic(self):
"
2951,"def test_replay_time_error(self):
"
2952,"def test_replay_time_complete(self):
"
2953,"def test_replay_time_dispose(self):
"
2954,"def test_replay_time_multiple_connections(self):
"
2955,"def test_replay_time_lambda_zip_complete(self):
"
2956,"def test_replay_time_lambda_zip_error(self):
"
2957,"def test_replay_time_lambda_zip_dispose(self):
"
2958,"def test_take_until_preempt_somedata_next(self):
"
2959,"def test_take_until_preempt_somedata_error(self):
"
2960,"def test_take_until_nopreempt_somedata_empty(self):
"
2961,"def test_take_until_nopreempt_somedata_never(self):
"
2962,"def test_take_until_preempt_never_next(self):
"
2963,"def test_take_until_preempt_never_error(self):
"
2964,"def test_take_until_nopreempt_never_empty(self):
"
2965,"def test_take_until_nopreempt_never_never(self):
"
2966,"def test_take_until_preempt_beforefirstproduced(self):
"
2967,"def test_take_until_preempt_beforefirstproduced_remain_silent_and_proper_disposed(self):
"
2968,"def test_take_until_nopreempt_afterlastproduced_proper_disposed_signal(self):
"
2969,"def __init__(self,url,client,parent,api_path = None,branches_api_path = None):
"
2970,"def url(self,resource_url = """",is_branches = False):
"
2971,"def paginate(self,resource_url,params = None,values_key = 'values',is_branches = False):
"
2972,"def __iter__(self):
"
2973,"def all(self):
"
2974,"def list(self):
"
2975,"def all(self,filter = None):
"
2976,"def list(self,filter = None):
"
2977,"def __init__(self,cls,relative_path = ''):
"
2978,"def __get__(self,instance,kind):
"
2979,"def __init__(self,name,polyData,view):
"
2980,"def getPose(self):
"
2981,"def getDescription(self):
"
2982,"def _onPropertyChanged(self,propertySet,propertyName):
"
2983,"def setPolyData(self,polyData):
"
2984,"def repositionFromDescription(self,desc):
"
2985,"def loadDescription(self,desc,copyMode = COPY_MODE_ALL):
"
2986,"def onRemoveFromObjectModel(self):
"
2987,"def __init__(self,name,view):
"
2988,"def updateGeometryFromProperties(self):
"
2989,"def _onPropertyChanged(self,propertySet,propertyName):
"
2990,"def __init__(self,name,view):
"
2991,"def updateGeometryFromProperties(self):
"
2992,"def _onPropertyChanged(self,propertySet,propertyName):
"
2993,"def __init__(self,name,view):
"
2994,"def updateGeometryFromProperties(self):
"
2995,"def _onPropertyChanged(self,propertySet,propertyName):
"
2996,"def __init__(self,name,view):
"
2997,"def updateGeometryFromProperties(self):
"
2998,"def _onPropertyChanged(self,propertySet,propertyName):
"
2999,"def __init__(self,name,view):
"
3000,"def updateGeometryFromProperties(self):
"
3001,"def _onPropertyChanged(self,propertySet,propertyName):
"
3002,"def __init__(self,name,view):
"
3003,"def updateGeometryFromProperties(self):
"
3004,"def _onPropertyChanged(self,propertySet,propertyName):
"
3005,"def setAffordanceParams(self,params):
"
3006,"def updateParamsFromActorTransform(self):
"
3007,"def __init__(self,robotModel,footstepPlanner,manipPlanner,ikPlanner,lhandDriver,rhandDriver,atlasDriver,multisenseDriver,affordanceFitFunction,sensorJointController,planPlaybackFunction,showPoseFunction):
"
3008,"def setChopParametersToDefaults(self):
"
3009,"def addPlan(self,plan):
"
3010,"def computeGraspOrientation(self):
"
3011,"def computeGroundFrame(self,robotModel):
"
3012,"def computeDoorHandleGraspFrame(self):
"
3013,"def computeDoorHandleAxisFrame(self):
"
3014,"def computeDoorHingeFrame(self):
"
3015,"def computeDoorHandleStanceFrame(self):
"
3016,"def moveRobotToStanceFrame(self):
"
3017,"def planNominal(self):
"
3018,"def planPreReach(self):
"
3019,"def planUnReach(self):
"
3020,"def planTuckArms(self):
"
3021,"def planTuckArmsPrePush(self):
"
3022,"def planChop(self,deltaZ = None,deltaY = None,deltaX = None):
"
3023,"def stopPushing(self):
"
3024,"def planReach(self,reachTargetFrame = None,jointSpeedLimit = None):
"
3025,"def planPreChop(self):
"
3026,"def createHingeConstraint(self,referenceFrame,axis,linkName,startPose,tspan =[0,1]):
"
3027,"def planHandleTurn(self,turnAngle = None):
"
3028,"def planDoorPushOpen(self):
"
3029,"def planDoorPushOpenTwist(self):
"
3030,"def planHandlePush(self):
"
3031,"def planHandlePushLift(self):
"
3032,"def planDoorTouch(self):
"
3033,"def planHandlePushOpen(self):
"
3034,"def planFootstepsToDoor(self):
"
3035,"def planFootstepsThroughDoor(self):
"
3036,"def setFootstepThroughDoorParameters(self):
"
3037,"def setTestingFootstepThroughDoorParameters(self):
"
3038,"def planFootstepsThroughDoorManual(self):
"
3039,"def computeWalkingPlan(self):
"
3040,"def commitManipPlan(self):
"
3041,"def fitDoor(self,doorGroundFrame):
"
3042,"def showDoorHandlePoints(self,polyData):
"
3043,"def spawnDoorAffordance(self):
"
3044,"def findDoorHandleAffordance(self):
"
3045,"def getEstimatedRobotStatePose(self):
"
3046,"def getPlanningStartPose(self):
"
3047,"def __init__(self,doorDemo):
"
3048,"def fit(self,polyData,points):
"
3049,"def __init__(self,doorDemo):
"
3050,"def addButtons(self):
"
3051,"def getSide(self):
"
3052,"def openPinch(self):
"
3053,"def closePinch(self):
"
3054,"def addDefaultProperties(self):
"
3055,"def onPropertyChanged(self,propertySet,propertyName):
"
3056,"def _syncProperties(self):
"
3057,"def addTasks(self):
"
3058,"def __init__(self,widgets):
"
3059,"def __init__(self,spindleMonitor):
"
3060,"def update(self):
"
3061,"def start(self):
"
3062,"def stop(self):
"
3063,"def setupMenuAction(self):
"
3064,"def onActionChanged(self):
"
3065,"def clearStatusBarWarning(self):
"
3066,"def notifyUserStatusBar(self):
"
3067,"def __init__(self,multisenseDriver):
"
3068,"def getCameraFps(self):
"
3069,"def getCameraGain(self):
"
3070,"def getCameraExposure(self):
"
3071,"def getCameraLedOn(self):
"
3072,"def getCameraLedBrightness(self):
"
3073,"def getCameraAutoGain(self):
"
3074,"def getSpinRate(self):
"
3075,"def getScanDuration(self):
"
3076,"def ledBrightnessChange(self,event):
"
3077,"def ledOnCheckChange(self,event):
"
3078,"def headCamExposureChange(self,event):
"
3079,"def headCamAutoGainChange(self,event):
"
3080,"def headCamFpsChange(self,event):
"
3081,"def headCamGainChange(self,event):
"
3082,"def spinRateChange(self,event):
"
3083,"def scanDurationChange(self,event):
"
3084,"def sendButtonClicked(self,event):
"
3085,"def updatePanel(self):
"
3086,"def publishCommand(self):
"
3087,"def initialize(self,io_loop,max_clients = 10,defaults = None):
"
3088,"def close(self):
"
3089,"def fetch_impl(self,request,callback):
"
3090,"def _handle_socket(self,event,fd,multi,data):
"
3091,"def _set_timeout(self,msecs):
"
3092,"def _handle_events(self,fd,events):
"
3093,"def _handle_timeout(self):
"
3094,"def _handle_force_timeout(self):
"
3095,"def _finish_pending_requests(self):
"
3096,"def _finish(self,curl,curl_error = None,curl_message = None):
"
3097,"def handle_callback_exception(self,callback):
"
3098,"def __init__(self,errno,message):
"
3099,"def __init__(self,io_loop = None,ssl_options = None,max_buffer_size = None,read_chunk_size = None):
"
3100,"def listen(self,port,address = """"):
"
3101,"def add_sockets(self,sockets):
"
3102,"def add_socket(self,socket):
"
3103,"def bind(self,port,address = None,family = socket.AF_UNSPEC,backlog = 128):
"
3104,"def start(self,num_processes = 1):
"
3105,"def stop(self):
"
3106,"def handle_stream(self,stream,address):
"
3107,"def _handle_connection(self,connection,address):
"
3108,"def get_move(self,state):
"
3109,"def test_run_commands(self):
"
3110,"def __init__(self,user,* args,** kwargs):
"
3111,"def validate_email(self,field):
"
3112,"def validate_username(self,field):
"
3113,"def __init__(self,migration_context):
"
3114,"def _primary_key_constraint(self,name,table_name,cols,schema = None):
"
3115,"def _foreign_key_constraint(self,name,source,referent,local_cols,remote_cols,onupdate = None,ondelete = None,deferrable = None,source_schema = None,referent_schema = None):
"
3116,"def _unique_constraint(self,name,source,local_cols,schema = None,** kw):
"
3117,"def _check_constraint(self,name,source,condition,schema = None,** kw):
"
3118,"def _table(self,name,* columns,** kw):
"
3119,"def _column(self,name,type_,** kw):
"
3120,"def _index(self,name,tablename,columns,schema = None,** kw):
"
3121,"def _parse_table_key(self,table_key):
"
3122,"def _ensure_table_for_fk(self,metadata,fk):
"
3123,"def get_context(self):
"
3124,"def rename_table(self,old_table_name,new_table_name,schema = None):
"
3125,"def alter_column(self,table_name,column_name,nullable = None,server_default = False,new_column_name = None,type_ = None,autoincrement = None,existing_type = None,existing_server_default = False,existing_nullable = None,existing_autoincrement = None,schema = None):
"
3126,"def add_column(self,table_name,column,schema = None):
"
3127,"def drop_column(self,table_name,column_name,** kw):
"
3128,"def create_primary_key(self,name,table_name,cols,schema = None):
"
3129,"def create_foreign_key(self,name,source,referent,local_cols,remote_cols,onupdate = None,ondelete = None,deferrable = None,source_schema = None,referent_schema = None):
"
3130,"def create_unique_constraint(self,name,source,local_cols,schema = None,** kw):
"
3131,"def create_check_constraint(self,name,source,condition,schema = None,** kw):
"
3132,"def create_table(self,name,* columns,** kw):
"
3133,"def drop_table(self,name,** kw):
"
3134,"def create_index(self,name,table_name,columns,schema = None,** kw):
"
3135,"def drop_index(self,name,table_name = None,schema = None):
"
3136,"def drop_constraint(self,name,table_name,type_ = None,schema = None):
"
3137,"def bulk_insert(self,table,rows):
"
3138,"def inline_literal(self,value,type_ = None):
"
3139,"def execute(self,sql,execution_options = None):
"
3140,"def get_bind(self):
"
3141,"def __init__(self,address,conf,log,fd = None):
"
3142,"def __str__(self,name):
"
3143,"def __getattr__(self,name):
"
3144,"def set_options(self,sock,bound = False):
"
3145,"def bind(self,sock):
"
3146,"def close(self):
"
3147,"def __str__(self):
"
3148,"def set_options(self,sock,bound = False):
"
3149,"def __init__(self,addr,conf,log,fd = None):
"
3150,"def __str__(self):
"
3151,"def bind(self,sock):
"
3152,"def close(self):
"
3153,"def __init__(self,** options):
"
3154,"def __init__(self,** options):
"
3155,"def __init__(self,** options):
"
3156,"def __init__(self,** options):
"
3157,"def extendMarkdown(self,md,md_globals):
"
3158,"def __init__(self,tree):
"
3159,"def __iter__(self):
"
3160,"def error(self,msg):
"
3161,"def emptyTag(self,namespace,name,attrs,hasChildren = False):
"
3162,"def startTag(self,namespace,name,attrs):
"
3163,"def endTag(self,namespace,name):
"
3164,"def text(self,data):
"
3165,"def comment(self,data):
"
3166,"def doctype(self,name,publicId = None,systemId = None,correct = True):
"
3167,"def entity(self,name):
"
3168,"def unknown(self,nodeType):
"
3169,"def walkChildren(self,node):
"
3170,"def element(self,node,namespace,name,attrs,hasChildren):
"
3171,"def getNodeDetails(self,node):
"
3172,"def getFirstChild(self,node):
"
3173,"def getNextSibling(self,node):
"
3174,"def getParentNode(self,node):
"
3175,"def __iter__(self):
"
3176,"def __init__(self,host,port = None):
"
3177,"def __str__(self):
"
3178,"def _new_conn(self):
"
3179,"def _put_conn(self,conn):
"
3180,"def _get_timeout(self,timeout):
"
3181,"def close(self):
"
3182,"def is_same_host(self,url):
"
3183,"def urlopen(self,method,url,body = None,headers = None,retries = 3,redirect = True,assert_same_host = True,timeout = _Default,pool_timeout = None,release_conn = None,** response_kw):
"
3184,"def _new_conn(self):
"
3185,"def __init__(self,firefox_path = None,log_file = None):
"
3186,"def add_command_line_options(self,* args):
"
3187,"def launch_browser(self,profile):
"
3188,"def kill(self):
"
3189,"def _start_from_profile_path(self,path):
"
3190,"def _get_firefox_start_cmd(self):
"
3191,"def _modify_link_library_path(self):
"
3192,"def _extract_and_check(self,profile,no_focus_so_name,x86,amd64):
"
3193,"def which(self,fname):
"
3194,"def __init__(self,title):
"
3195,"def __call__(self,driver):
"
3196,"def __init__(self,title):
"
3197,"def __call__(self,driver):
"
3198,"def __init__(self,locator):
"
3199,"def __call__(self,driver):
"
3200,"def __init__(self,locator):
"
3201,"def __call__(self,driver):
"
3202,"def __init__(self,element):
"
3203,"def __call__(self,ignored):
"
3204,"def __init__(self,locator):
"
3205,"def __call__(self,driver):
"
3206,"def __init__(self,locator,text_):
"
3207,"def __call__(self,driver):
"
3208,"def __init__(self,locator,text_):
"
3209,"def __call__(self,driver):
"
3210,"def __init__(self,locator):
"
3211,"def __call__(self,driver):
"
3212,"def __init__(self,locator):
"
3213,"def __call__(self,driver):
"
3214,"def __init__(self,locator):
"
3215,"def __call__(self,driver):
"
3216,"def __init__(self,element):
"
3217,"def __call__(self,ignored):
"
3218,"def __init__(self,element):
"
3219,"def __call__(self,ignored):
"
3220,"def __init__(self,locator):
"
3221,"def __call__(self,driver):
"
3222,"def __init__(self,element,is_selected):
"
3223,"def __call__(self,ignored):
"
3224,"def __init__(self,locator,is_selected):
"
3225,"def __call__(self,driver):
"
3226,"def __init__(self):
"
3227,"def __call__(self,driver):
"
3228,"def process_bind_param(self,value,dialect):
"
3229,"def bind_expression(self,bindvalue):
"
3230,"def __init__(self,bindvalue):
"
3231,"def __ne__(self,other):
"
3232,"def contains(self,other,** kw):
"
3233,"def contained_by(self,other):
"
3234,"def overlaps(self,other):
"
3235,"def strictly_left_of(self,other):
"
3236,"def strictly_right_of(self,other):
"
3237,"def not_extend_right_of(self,other):
"
3238,"def not_extend_left_of(self,other):
"
3239,"def adjacent_to(self,other):
"
3240,"def __add__(self,other):
"
3241,"def __init__(self,target,identifier,fn,dispatch_target,_fn_wrap = None):
"
3242,"def _key(self):
"
3243,"def with_wrapper(self,fn_wrap):
"
3244,"def with_dispatch_target(self,dispatch_target):
"
3245,"def listen(self,* args,** kw):
"
3246,"def remove(self):
"
3247,"def contains(self):
"
3248,"def base_listen(self,propagate = False,insert = False,named = False):
"
3249,"def _listen_fn(self):
"
3250,"def append_to_list(self,owner,list_):
"
3251,"def remove_from_list(self,owner,list_):
"
3252,"def prepend_to_list(self,owner,list_):
"
3253,"def __init__(self,target_cls = None):
"
3254,"def process(self,clause):
"
3255,"def visit_grouping(self,clause):
"
3256,"def visit_null(self,clause):
"
3257,"def visit_false(self,clause):
"
3258,"def visit_true(self,clause):
"
3259,"def visit_clauselist(self,clause):
"
3260,"def visit_binary(self,clause):
"
3261,"def visit_unary(self,clause):
"
3262,"def visit_bindparam(self,clause):
"
3263,"def _compiler(self,dialect,** kw):
"
3264,"def _execute_on_connection(self,connection,multiparams,params):
"
3265,"def execute(self,bind = None,target = None):
"
3266,"def execute_at(self,event_name,target):
"
3267,"def against(self,target):
"
3268,"def execute_if(self,dialect = None,callable_ = None,state = None):
"
3269,"def _should_execute(self,target,bind,** kw):
"
3270,"def _should_execute_deprecated(self,event,target,bind,** kw):
"
3271,"def __call__(self,target,bind,** kw):
"
3272,"def bind(self):
"
3273,"def _set_bind(self,bind):
"
3274,"def _generate(self):
"
3275,"def __init__(self,statement,on = None,context = None,bind = None):
"
3276,"def __repr__(self):
"
3277,"def __init__(self,element,on = None,bind = None):
"
3278,"def _create_rule_disable(self,compiler):
"
3279,"def __init__(self,name,quote = None,** kw):
"
3280,"def __init__(self,name,quote = None,cascade = False,** kw):
"
3281,"def __init__(self,element,on = None,bind = None):
"
3282,"def __init__(self,element):
"
3283,"def __init__(self,element,* args,** kw):
"
3284,"def __init__(self,element,cascade = False,** kw):
"
3285,"def __init__(self,connection):
"
3286,"def __init__(self,dialect,connection,checkfirst = False,tables = None,** kwargs):
"
3287,"def _can_create_table(self,table):
"
3288,"def _can_create_sequence(self,sequence):
"
3289,"def visit_metadata(self,metadata):
"
3290,"def visit_table(self,table,create_ok = False):
"
3291,"def visit_sequence(self,sequence,create_ok = False):
"
3292,"def visit_index(self,index):
"
3293,"def __init__(self,dialect,connection,checkfirst = False,tables = None,** kwargs):
"
3294,"def visit_metadata(self,metadata):
"
3295,"def _can_drop_table(self,table):
"
3296,"def _can_drop_sequence(self,sequence):
"
3297,"def visit_index(self,index):
"
3298,"def visit_table(self,table,drop_ok = False):
"
3299,"def visit_sequence(self,sequence,drop_ok = False):
"
3300,"def __init__(self,obj,parent = None):
"
3301,"def __init__(self,moredata):
"
3302,"def __eq__(self,other):
"
3303,"def __init__(self,x,y):
"
3304,"def __eq__(self,other):
"
3305,"def __str__(self):
"
3306,"def __init__(self,x,y):
"
3307,"def __eq__(self,other):
"
3308,"def __init__(self,x,y):
"
3309,"def __init__(self,x,y):
"
3310,"def __str__(self):
"
3311,"def __init__(self,data):
"
3312,"def __hash__(self):
"
3313,"def __eq__(self,other):
"
3314,"def __ne__(self,other):
"
3315,"def __init__(self,data):
"
3316,"def __hash__(self):
"
3317,"def __eq__(self,other):
"
3318,"def __ne__(self,other):
"
3319,"def __init__(self,get_session,model,column,message = None):
"
3320,"def __call__(self,form,field):
"
3321,"def initialize_options(self):
"
3322,"def finalize_options(self):
"
3323,"def run(self):
"
3324,"def run(self):
"
3325,"def run(self):
"
3326,"def run(self):
"
3327,"def make_release_tree(self,base_dir,files):
"
3328,"def initialize_options(self):
"
3329,"def finalize_options(self):
"
3330,"def run(self):
"
3331,"def on_configure(self):
"
3332,"def test_split_model_fields(self):
"
3333,"def __init__(self,datafile,index):
"
3334,"def __init__(self,index_manager,path = None,name = None,version = None):
"
3335,"def __init__(self,json_repo_path,json_filtered_repo_path,filtered_resources_path,filtered_extensions_path,type,logger):
"
3336,"def get_filtered_files_to_dict(self):
"
3337,"def get_filtered_extensions_to_list(self):
"
3338,"def is_filtered(self,ext,ref,dir,file):
"
3339,"def get_dirs(self,dirs):
"
3340,"def select_files(self):
"
3341,"def reject_files(self):
"
3342,"def filter(self):
"
3343,"def __init__(self,Description = None,CVE_ID = None,OSVDB_ID = None,CVSS_Score = None,cvrfdoc = None):
"
3344,"def exportAttributes(self,lwrite,level,already_processed,namespace_ = '',name_ = 'CVRF1.1InstanceType'):
"
3345,"def build(self,node):
"
3346,"def buildAttributes(self,node,attrs,already_processed):
"
3347,"def buildChildren(self,child_,node,nodeName_,fromsubclass_ = False):
"
3348,"def _is_valid(self,value):
"
3349,"def _is_valid(self,value):
"
3350,"def _is_valid(self,value):
"
3351,"def _is_valid(self,value):
"
3352,"def _is_valid(self,value):
"
3353,"def _is_valid(self,value):
"
3354,"def _is_valid(self,value):
"
3355,"def idref_test(self):
"
3356,"def test_add_description(self):
"
3357,"def test_add_short_description(self):
"
3358,"def test_deprecated_related_packages(self):
"
3359,"def __init__(self,message):
"
3360,"def __str__(self):
"
3361,"def __init__(self,request_id):
"
3362,"def status(self,service):
"
3363,"def wait_for_request_completion(self,service):
"
3364,"def setup(self):
"
3365,"def __init_command_args(self):
"
3366,"def test_process_storage_container_delete(self):
"
3367,"def test_process_storage_container_create(self):
"
3368,"def test_process_storage_container_show(self,mock_out):
"
3369,"def test_start_date_validation(self):
"
3370,"def test_end_date_validation(self):
"
3371,"def test_permissions_validation(self):
"
3372,"def test_process_storage_container_sas(self,mock_out):
"
3373,"def test_process_storage_container_sas_now(self,mock_out):
"
3374,"def test_process_storage_container_sas_expire(self,mock_out):
"
3375,"def test_process_storage_container_list(self,mock_out):
"
3376,"def test_process_storage_container_from_cfg_list(self,mock_out):
"
3377,"def get(self):
"
3378,"def __init__(self,scopes,service_account_id = None,token_maker = None,retry_params = None):
"
3379,"def __getstate__(self):
"
3380,"def __setstate__(self,state):
"
3381,"def do_request_async(self,url,method = 'GET',headers = None,payload = None,deadline = None,callback = None):
"
3382,"def get_token_async(self,refresh = False):
"
3383,"def __init__(self,** kwargs):
"
3384,"def __init__(self,** kwargs):
"
3385,"def __init__(self,** kwargs):
"
3386,"def postURI(self):
"
3387,"def putURI(self):
"
3388,"def deleteURI(self):
"
3389,"def getACLURI(self):
"
3390,"def putACLURI(self):
"
3391,"def __init__(self,** kwargs):
"
3392,"def __init__(self,server,credentials):
"
3393,"def fetchCommitDetails(self,url):
"
3394,"def __init__(self,creds = None,host = 'api.github.com',owner = 'Pardot',repo = 'pardot'):
"
3395,"def processSinceIdentifier(self,identifier,commit_started_callback,patch_callback,commit_finished_callback,path = None):
"
3396,"def processCommits(self,commits,commit_started_callback,patch_callback,commit_finished_callback):
"
3397,"def __init__(self,name,host,port):
"
3398,"def __init__(self,sentinel_addresses):
"
3399,"def _connect(self):
"
3400,"def _execute_sentinel_command(self,* args,** kwargs):
"
3401,"def _get_nodes(self):
"
3402,"def get_master(self,node):
"
3403,"def get_node_for_key(self,key):
"
3404,"def set_response_callback(self,command,callback):
"
3405,"def pipeline(self,transaction = True,shard_hint = None):
"
3406,"def transaction(self,func,* watches,** kwargs):
"
3407,"def bgsave(self):
"
3408,"def client_kill(self,address):
"
3409,"def client_list(self):
"
3410,"def client_getname(self):
"
3411,"def client_setname(self,name):
"
3412,"def config_get(self,pattern = ""*""):
"
3413,"def config_set(self,name,value):
"
3414,"def dbsize(self):
"
3415,"def time(self):
"
3416,"def echo(self,value):
"
3417,"def flushall(self):
"
3418,"def flushdb(self):
"
3419,"def info(self,section = None):
"
3420,"def lastsave(self):
"
3421,"def object(self,infotype,key):
"
3422,"def ping(self):
"
3423,"def save(self):
"
3424,"def shutdown(self):
"
3425,"def slaveof(self,host = None,port = None):
"
3426,"def mget(self,keys,* args):
"
3427,"def mset(self,mapping):
"
3428,"def msetnx(self,mapping):
"
3429,"def rename(self,src,dst):
"
3430,"def renamenx(self,src,dst):
"
3431,"def brpop(self,keys,timeout = 0):
"
3432,"def brpoplpush(self,src,dst,timeout = 0):
"
3433,"def sdiffstore(self,dest,keys,* args):
"
3434,"def sinter(self,keys,* args):
"
3435,"def sinterstore(self,dest,keys,* args):
"
3436,"def sunionstore(self,dest,keys,* args):
"
3437,"def eval(self,script,numkeys,* keys_and_args):
"
3438,"def evalsha(self,sha,numkeys,* keys_and_args):
"
3439,"def script_exists(self,* args):
"
3440,"def script_flush(self):
"
3441,"def script_kill(self):
"
3442,"def script_load(self,script):
"
3443,"def register_script(self,script):
"
3444,"def __init__(self,alpha,beta):
"
3445,"def inference(self,kern,X,likelihood,Y,mean_function = None,Y_metadata = None,Z = None):
"
3446,"def __init__(self,input_dim,variance,lengthscale,period,n_freq,lower,upper,active_dims,name):
"
3447,"def _cos(self,alpha,omega,phase):
"
3448,"def _cos_factorization(self,alpha,omega,phase):
"
3449,"def _int_computation(self,r1,omega1,phi1,r2,omega2,phi2):
"
3450,"def K(self,X,X2 = None):
"
3451,"def Kdiag(self,X):
"
3452,"def __init__(self,input_dim = 1,variance = 1.,lengthscale = 1.,period = 2.* np.pi,n_freq = 10,lower = 0.,upper = 4 * np.pi,active_dims = None,name = 'periodic_exponential'):
"
3453,"def parameters_changed(self):
"
3454,"def Gram_matrix(self):
"
3455,"def update_gradients_full(self,dL_dK,X,X2 = None):
"
3456,"def __init__(self,input_dim = 1,variance = 1.,lengthscale = 1.,period = 2.* np.pi,n_freq = 10,lower = 0.,upper = 4 * np.pi,active_dims = None,name = 'periodic_Matern32'):
"
3457,"def parameters_changed(self):
"
3458,"def Gram_matrix(self):
"
3459,"def update_gradients_full(self,dL_dK,X,X2):
"
3460,"def __init__(self,input_dim = 1,variance = 1.,lengthscale = 1.,period = 2.* np.pi,n_freq = 10,lower = 0.,upper = 4 * np.pi,active_dims = None,name = 'periodic_Matern52'):
"
3461,"def parameters_changed(self):
"
3462,"def Gram_matrix(self):
"
3463,"def update_gradients_full(self,dL_dK,X,X2 = None):
"
3464,"def __init__(self,input_dim,output_dim,values,breaks,name = 'piecewise_linear'):
"
3465,"def parameters_changed(self):
"
3466,"def f(self,X):
"
3467,"def update_gradients(self,dL_dF,X):
"
3468,"def gradients_X(self,dL_dF,X):
"
3469,"def __init__(self,X,Y,kernel = None,warping_function = None,warping_terms = 3):
"
3470,"def _scale_data(self,Y):
"
3471,"def _unscale_data(self,Y):
"
3472,"def parameters_changed(self):
"
3473,"def transform_data(self):
"
3474,"def log_likelihood(self):
"
3475,"def plot_warping(self):
"
3476,"def _get_warped_term(self,mean,std,gh_samples,pred_init = None):
"
3477,"def _get_warped_mean(self,mean,std,pred_init = None,deg_gauss_hermite = 100):
"
3478,"def _get_warped_variance(self,mean,std,pred_init = None,deg_gauss_hermite = 100):
"
3479,"def predict(self,Xnew,which_parts = 'all',pred_init = None,full_cov = False,Y_metadata = None,median = False,deg_gauss_hermite = 100):
"
3480,"def predict_quantiles(self,X,quantiles =(2.5,97.5),Y_metadata = None):
"
3481,"def assertListDictEquals(self,d1,d2,msg = None):
"
3482,"def assertArrayListEquals(self,l1,l2):
"
3483,"def test_load_pickle(self):
"
3484,"def test_model(self):
"
3485,"def test_modelrecreation(self):
"
3486,"def test_posterior(self):
"
3487,"def test_model_concat(self):
"
3488,"def _callback(self,what,which):
"
3489,"def __init__(self,X):
"
3490,"def center(self,X):
"
3491,"def _primal_eig(self,X):
"
3492,"def _dual_eig(self,X):
"
3493,"def project(self,X,Q = None):
"
3494,"def test_should_be_loaded_correctly_from_order_xml(self):
"
3495,"def test_should_be_able_to_add_note_attributes_to_an_order(self):
"
3496,"def test_get_order(self):
"
3497,"def test_get_order_transaction(self):
"
3498,"def __init__(self,vim):
"
3499,"def get_complete_position(self,context):
"
3500,"def gather_candidates(self,context):
"
3501,"def __longest_path_that_exists(self,input_str):
"
3502,"def __init__(self,conn,drawable,visual,width,height):
"
3503,"def set_size(self,width,height):
"
3504,"def __init__(self,msg,definition):
"
3505,"def __init__(self,skype):
"
3506,"def attachment_changed(self,status):
"
3507,"def sending_command(self,command):
"
3508,"def reply_received(self,command):
"
3509,"def __init__(self,Events = None,** Options):
"
3510,"def __del__(self):
"
3511,"def _DoCommand(self,Cmd,ExpectedReply = ''):
"
3512,"def _Property(self,ObjectType,ObjectId,PropName,Set = None,Cache = True):
"
3513,"def _Alter(self,ObjectType,ObjectId,AlterName,Args = None,Reply = None):
"
3514,"def _Search(self,ObjectType,Args = None):
"
3515,"def ApiSecurityContextEnabled(self,Context):
"
3516,"def Application(self,Name):
"
3517,"def _AsyncSearchUsersReplyHandler(self,Command):
"
3518,"def AsyncSearchUsers(self,Target):
"
3519,"def Attach(self,Protocol = 5,Wait = True):
"
3520,"def Call(self,Id = 0):
"
3521,"def Calls(self,Target = ''):
"
3522,"def _ChangeUserStatus_UserStatus(self,Status):
"
3523,"def ChangeUserStatus(self,Status):
"
3524,"def Chat(self,Name = ''):
"
3525,"def ClearCallHistory(self,Username = 'ALL',Type = chsAllCalls):
"
3526,"def ClearChatHistory(self):
"
3527,"def ClearVoicemailHistory(self):
"
3528,"def Conference(self,Id = 0):
"
3529,"def CreateChatUsingBlob(self,Blob):
"
3530,"def CreateChatWith(self,* Usernames):
"
3531,"def CreateGroup(self,GroupName):
"
3532,"def CreateSms(self,MessageType,* TargetNumbers):
"
3533,"def DeleteGroup(self,GroupId):
"
3534,"def EnableApiSecurityContext(self,Context):
"
3535,"def FindChatUsingBlob(self,Blob):
"
3536,"def Greeting(self,Username = ''):
"
3537,"def Message(self,Id = 0):
"
3538,"def Messages(self,Target = ''):
"
3539,"def PlaceCall(self,* Targets):
"
3540,"def Privilege(self,Name):
"
3541,"def Profile(self,Property,Set = None):
"
3542,"def Property(self,ObjectType,ObjectId,PropName,Set = None):
"
3543,"def ResetCache(self):
"
3544,"def SearchForUsers(self,Target):
"
3545,"def SendCommand(self,Command):
"
3546,"def SendMessage(self,Username,Text):
"
3547,"def SendSms(self,* TargetNumbers,** Properties):
"
3548,"def SendVoicemail(self,Username):
"
3549,"def User(self,Username = ''):
"
3550,"def Variable(self,Name,Set = None):
"
3551,"def Voicemail(self,Id):
"
3552,"def _GetActiveCalls(self):
"
3553,"def _GetActiveChats(self):
"
3554,"def _GetActiveFileTransfers(self):
"
3555,"def _GetApiWrapperVersion(self):
"
3556,"def _GetAttachmentStatus(self):
"
3557,"def _GetBookmarkedChats(self):
"
3558,"def _GetCache(self):
"
3559,"def _SetCache(self,Value):
"
3560,"def _GetChats(self):
"
3561,"def _GetClient(self):
"
3562,"def _GetCommandId(self):
"
3563,"def _SetCommandId(self,Value):
"
3564,"def _GetConferences(self):
"
3565,"def _GetConnectionStatus(self):
"
3566,"def _GetConvert(self):
"
3567,"def _GetCurrentUser(self):
"
3568,"def _GetCurrentUserHandle(self):
"
3569,"def _GetCurrentUserProfile(self):
"
3570,"def _GetCurrentUserStatus(self):
"
3571,"def _SetCurrentUserStatus(self,Value):
"
3572,"def _GetCustomGroups(self):
"
3573,"def _GetFileTransfers(self):
"
3574,"def _GetFocusedContacts(self):
"
3575,"def _GetFriendlyName(self):
"
3576,"def _SetFriendlyName(self,Value):
"
3577,"def _GetFriends(self):
"
3578,"def _GetGroups(self):
"
3579,"def _GetHardwiredGroups(self):
"
3580,"def _GetMissedCalls(self):
"
3581,"def _GetMissedChats(self):
"
3582,"def _GetMissedMessages(self):
"
3583,"def _GetMissedSmss(self):
"
3584,"def _GetMissedVoicemails(self):
"
3585,"def _GetMute(self):
"
3586,"def _SetMute(self,Value):
"
3587,"def _GetPredictiveDialerCountry(self):
"
3588,"def _GetProtocol(self):
"
3589,"def _SetProtocol(self,Value):
"
3590,"def _GetRecentChats(self):
"
3591,"def _GetSettings(self):
"
3592,"def _GetSilentMode(self):
"
3593,"def _SetSilentMode(self,Value):
"
3594,"def _GetSmss(self):
"
3595,"def _GetTimeout(self):
"
3596,"def _SetTimeout(self,Value):
"
3597,"def _GetUsersWaitingAuthorization(self):
"
3598,"def _GetVersion(self):
"
3599,"def _GetVoicemails(self):
"
3600,"def setUpObject(self):
"
3601,"def testDelete(self):
"
3602,"def testMarkAsSeen(self):
"
3603,"def testSend(self):
"
3604,"def testBody(self):
"
3605,"def testChunks(self):
"
3606,"def testDatetime(self):
"
3607,"def testFailureReason(self):
"
3608,"def testId(self):
"
3609,"def testIsFailedUnseen(self):
"
3610,"def testPrice(self):
"
3611,"def testPriceCurrency(self):
"
3612,"def testPricePrecision(self):
"
3613,"def testPriceToText(self):
"
3614,"def testPriceValue(self):
"
3615,"def testReplyToNumber(self):
"
3616,"def testSeen(self):
"
3617,"def testStatus(self):
"
3618,"def testTargetNumbers(self):
"
3619,"def testTargets(self):
"
3620,"def testTimestamp(self):
"
3621,"def testType(self):
"
3622,"def setUpObject(self):
"
3623,"def testCharactersLeft(self):
"
3624,"def testId(self):
"
3625,"def testMessage(self):
"
3626,"def testText(self):
"
3627,"def setUpObject(self):
"
3628,"def testMessage(self):
"
3629,"def testNumber(self):
"
3630,"def testStatus(self):
"
3631,"def from_python(self,value):
"
3632,"def get_initial(self):
"
3633,"def to_python(self,value):
"
3634,"def test_set(self):
"
3635,"def test_set_rewrite(self):
"
3636,"def test_get(self):
"
3637,"def test_delete(self):
"
3638,"def setUp(self):
"
3639,"def tearDown(self):
"
3640,"def test_set(self):
"
3641,"def test_get(self):
"
3642,"def test_delete(self):
"
3643,"def _get_absolute_path(self,path):
"
3644,"def _get_relative_path(self,path):
"
3645,"def _check_if_exists(self,storage,path):
"
3646,"def _delete_sources_by_id(self,ids):
"
3647,"def clean_up(self,dry_run = False,verbosity = 1,last_n_days = 0,cleanup_path = None,storage = None):
"
3648,"def print_stats(self):
"
3649,"def handle(self,* args,** options):
"
3650,"def forwards(self,orm):
"
3651,"def backwards(self,orm):
"
3652,"def __init__(self):
"
3653,"def f_wildcard(self,card):
"
3654,"def test_pickling(self):
"
3655,"def create_superuser(self,username,password,** kwargs):
"
3656,"def is_taking_skill(self,skill):
"
3657,"def complete_skill(self,completed_skill):
"
3658,"def complete_skills(self,completed_skills):
"
3659,"def has_completed_skill(self,skill):
"
3660,"def is_taking_trainingbit(self,trainingbit):
"
3661,"def complete_trainingbit(self,completed_trainingbit):
"
3662,"def complete_trainingbits(self,completed_trainingbits):
"
3663,"def has_completed_trainingbit(self,trainingbit):
"
3664,"def get_full_name(self):
"
3665,"def get_short_name(self):
"
3666,"def account_verified(self):
"
3667,"def is_trainer(self):
"
3668,"def is_admin(self):
"
3669,"def is_staff(self):
"
3670,"def get_absolute_url(self):
"
3671,"def getImage(self):
"
3672,"def get_absolute_url(self):
"
3673,"def __unicode__(self):
"
3674,"def backwards(self,orm):
"
3675,"def get(self,transmission_id):
"
3676,"def __init__(self,window,slot_nr,id = constants.INV_ITEMID_EMPTY,damage = 0,amount = 0,enchants = None):
"
3677,"def move_to_window(self,window,slot_nr):
"
3678,"def is_empty(self):
"
3679,"def matches(self,other):
"
3680,"def stacks_with(self,other):
"
3681,"def get_dict(self):
"
3682,"def copy(self):
"
3683,"def __bool__(self):
"
3684,"def __repr__(self):
"
3685,"def __init__(self,id = constants.INV_ITEMID_EMPTY,damage = 0,amount = 0,enchants = None):
"
3686,"def get_packet(self,inv_plugin):
"
3687,"def apply(self,inv_plugin):
"
3688,"def on_success(self,inv_plugin,emit_set_slot):
"
3689,"def copy_slot_type(self,slot_from,slot_to):
"
3690,"def swap_slots(self,slot_a,slot_b):
"
3691,"def transfer(self,from_slot,to_slot,max_amount):
"
3692,"def cleanup_if_empty(self,slot):
"
3693,"def mark_dirty(self,slot):
"
3694,"def __init__(self,slot,button = constants.INV_BUTTON_LEFT):
"
3695,"def get_packet(self,inv_plugin):
"
3696,"def apply(self,inv_plugin):
"
3697,"def __init__(self,slot,drop_stack = False):
"
3698,"def get_packet(self,inv_plugin):
"
3699,"def apply(self,inv_plugin):
"
3700,"def __init__(self,window_id,title,slot_count,inv_type = None,persistent_slots = None,eid = None):
"
3701,"def __repr__(self):
"
3702,"def persistent_slots(self):
"
3703,"def inventory_slots(self):
"
3704,"def hotbar_slots(self):
"
3705,"def window_slots(self):
"
3706,"def _player_init(self,* args,** kwargs):
"
3707,"def __init__(self,pos,vec,abilities):
"
3708,"def jump(self):
"
3709,"def walk(self):
"
3710,"def sprint(self):
"
3711,"def move_target(self,vector):
"
3712,"def move_vector(self,vector):
"
3713,"def move_angle(self,angle,radians = False):
"
3714,"def __init__(self,ploader,settings):
"
3715,"def skip_physics(self,_ = None,__ = None):
"
3716,"def suspend_physics(self,_ = None,__ = None):
"
3717,"def resume_physics(self,_ = None,__ = None):
"
3718,"def client_tick(self,name,data):
"
3719,"def physics_tick(self,_,__):
"
3720,"def get_block_slip(self):
"
3721,"def apply_accel(self):
"
3722,"def apply_vector(self,mtv):
"
3723,"def apply_drag(self):
"
3724,"def get_mtv(self):
"
3725,"def __init__(self,code,msg = """",data = None):
"
3726,"def __str__(self):
"
3727,"def __init__(self,props,req):
"
3728,"def func_name(self):
"
3729,"def get_prop(self,key,default_val = None):
"
3730,"def set_error(self,code,msg,data = None):
"
3731,"def pre(self,context):
"
3732,"def post(self,context):
"
3733,"def __init__(self,contract,validate_request = True,validate_response = True):
"
3734,"def add_handler(self,iface_name,handler):
"
3735,"def set_filters(self,filters):
"
3736,"def call_json(self,req_json,props = None):
"
3737,"def call(self,req,props = None):
"
3738,"def _call_and_format(self,req,props = None):
"
3739,"def _call(self,context):
"
3740,"def __init__(self,url,handlers = None,headers = None):
"
3741,"def request(self,req):
"
3742,"def __init__(self,server):
"
3743,"def request(self,req):
"
3744,"def __init__(self,transport,validate_request = True,validate_response = True,id_gen = idgen_uuid):
"
3745,"def get_meta(self):
"
3746,"def call(self,iface_name,func_name,params):
"
3747,"def to_request(self,iface_name,func_name,params):
"
3748,"def to_result(self,iface_name,func_name,resp):
"
3749,"def start_batch(self):
"
3750,"def __init__(self,client,iface):
"
3751,"def _caller(self,iface_name,func_name):
"
3752,"def __init__(self,client):
"
3753,"def call(self,iface_name,func_name,params):
"
3754,"def send(self):
"
3755,"def __init__(self,request,result,error):
"
3756,"def __init__(self,idl_parsed):
"
3757,"def validate_request(self,iface_name,func_name,params):
"
3758,"def validate_response(self,iface_name,func_name,resp):
"
3759,"def get(self,name):
"
3760,"def struct(self,struct_name):
"
3761,"def has_interface(self,iface_name):
"
3762,"def interface(self,iface_name):
"
3763,"def validate(self,expected_type,is_array,val):
"
3764,"def _type_err(self,val,expected):
"
3765,"def __init__(self,iface,contract):
"
3766,"def function(self,func_name):
"
3767,"def __init__(self,enum):
"
3768,"def validate(self,val):
"
3769,"def __init__(self,s,contract):
"
3770,"def field(self,name):
"
3771,"def validate(self,val):
"
3772,"def get_all_fields(self,arr):
"
3773,"def __init__(self,iface_name,f,contract):
"
3774,"def validate_response(self,resp):
"
3775,"def _validate_param(self,expected,param):
"
3776,"def __init__(self,type_dict):
"
3777,"def __init__(self):
"
3778,"def setup(self,debug = False,pidlist = False):
"
3779,"def process(self,criteria):
"
3780,"def byState(self,state):
"
3781,"def byPid(self,pid):
"
3782,"def byName(self,name):
"
3783,"def run(self,foo,criteria):
"
3784,"def show(self):
"
3785,"def _verify_winexe_exists(self):
"
3786,"def _verify_smbclient_exists(self):
"
3787,"def _get_winexe_command_args(self,host,username,password,command,domain = None):
"
3788,"def _get_smbclient_command_args(self,host,username,password,command,share = 'C$',domain = None):
"
3789,"def _parse_winexe_error(self,stdout,stderr):
"
3790,"def setUp(self):
"
3791,"def test_resume_option(self):
"
3792,"def test_resume_option_reset_tasks(self):
"
3793,"def test_resume_workflow_not_in_rerunable_state(self):
"
3794,"def test_resume_tasks_not_in_rerunable_state(self):
"
3795,"def test_resume_unidentified_tasks(self):
"
3796,"def test_resume_subworkflow_task(self):
"
3797,"def test_resume_unidentified_subworkflow_task(self):
"
3798,"def test_resume_and_reset_subworkflow_task(self):
"
3799,"def __init__(self,* args,** kwargs):
"
3800,"def get_all(self,** kwargs):
"
3801,"def get_one(self,ref_or_id):
"
3802,"def post(self,action):
"
3803,"def put(self,action_ref_or_id,action):
"
3804,"def delete(self,action_ref_or_id):
"
3805,"def _handle_data_files(self,pack_name,data_files):
"
3806,"def _write_data_files_to_disk(self,pack_name,data_files):
"
3807,"def _update_pack_model(self,pack_name,data_files,written_file_paths):
"
3808,"def _write_data_file(self,pack_name,file_path,content):
"
3809,"def _dispatch_trigger_for_written_data_files(self,action_db,written_data_files):
"
3810,"def setUp(self):
"
3811,"def test_create_action_no_action_create_permission(self):
"
3812,"def test_create_action_success(self):
"
3813,"def __do_post(self,rule):
"
3814,"def __do_delete(self,action_id,expect_errors = False):
"
3815,"def test_alias_registration(self):
"
3816,"def test_non_hierarchical_lookup(self):
"
3817,"def test_hierarchical_lookup_dotted(self):
"
3818,"def test_hierarchical_lookup_dict(self):
"
3819,"def test_missing_key_lookup(self):
"
3820,"def setUp(self):
"
3821,"def test_user_has_permission(self):
"
3822,"def test_user_has_resource_db_permission(self):
"
3823,"def run(self,encrypt = False,upload = False,existing_file = None):
"
3824,"def upload_archive(self,archive_file_path):
"
3825,"def collect_logs(self,output_path):
"
3826,"def collect_config_files(self,output_path):
"
3827,"def add_system_information(self,output_path):
"
3828,"def add_user_info(self,output_path):
"
3829,"def add_shell_command_output(self,output_path):
"
3830,"def create_tarball(self,temp_dir_path):
"
3831,"def __init__(self,sensors_partitioner):
"
3832,"def run_sensors(self):
"
3833,"def _spin_container_and_wait(self,sensors):
"
3834,"def _setup_sigterm_handler(self):
"
3835,"def _to_sensor_object(self,sensor_db):
"
3836,"def _handle_create_sensor(self,sensor):
"
3837,"def _handle_update_sensor(self,sensor):
"
3838,"def _handle_delete_sensor(self,sensor):
"
3839,"def _get_sensor_ref(self,sensor):
"
3840,"def test_full_range_hash_partitioner(self):
"
3841,"def test_multi_range_hash_partitioner(self):
"
3842,"def test_split_range_hash_partitioner(self):
"
3843,"def test_hash_effectiveness(self):
"
3844,"def _generate_refs(self,count = 10):
"
3845,"def setUp(self):
"
3846,"def get_action_instance(self,config = None):
"
3847,"def __init__(self,source_action_ref,rule_ref,dest_action_ref):
"
3848,"def __str__(self):
"
3849,"def __init__(self):
"
3850,"def _get_source_action_ref(self,rule):
"
3851,"def _do_analyze(self,action_ref,rule_links = None,processed = None,depth = 0):
"
3852,"def __init__(self):
"
3853,"def selector(self,output):
"
3854,"def formatter(self,output):
"
3855,"def parseReservation(self,output):
"
3856,"def parseAddress(self,output):
"
3857,"def parseInstance(self,output):
"
3858,"def parseVolume(self,output):
"
3859,"def parseBlockDeviceType(self,output):
"
3860,"def parseEC2Zone(self,output):
"
3861,"def parseRecord(self,output):
"
3862,"def parseR53Zone(self,output):
"
3863,"def parseR53Status(self,output):
"
3864,"def parseBucket(self,output):
"
3865,"def parseTag(self,output):
"
3866,"def parseStackObject(self,output):
"
3867,"def parseDBInstanceObject(self,output):
"
3868,"def parseEC2Object(self,output):
"
3869,"def __init__(self,config):
"
3870,"def _get_client(self,repo = None):
"
3871,"def setup(self):
"
3872,"def run(self):
"
3873,"def cleanup(self):
"
3874,"def _get_headers_as_dict(self,headers):
"
3875,"def add_trigger(self,trigger):
"
3876,"def update_trigger(self,trigger):
"
3877,"def remove_trigger(self,trigger):
"
3878,"def run(self,region,network_domain_id,name,port,protocol,algorithm = Algorithm.ROUND_ROBIN):
"
3879,"def run(self,repo,tag = None,insecure_registry = False,auth_username_override = None,auth_password_override = None):
"
3880,"def run(self):
"
3881,"def run(self,light_id,temperature,transition_time):
"
3882,"def __init__(self,config):
"
3883,"def selector(self,output):
"
3884,"def formatter(self,output):
"
3885,"def _getval(self,obj,field):
"
3886,"def parse(self,output,field_list):
"
3887,"def run(self,host_id,action,service):
"
3888,"def run(self,structure = None,device = None):
"
3889,"def run(self,item,command):
"
3890,"def run(self,node_ip,node_conf,cluster_id = None):
"
3891,"def run(self,environment,host):
"
3892,"def run(self,name,port,protocol):
"
3893,"def run(self,slug,message,visibility = 'internal',suppress_notification = False):
"
3894,"def __init__(self,config):
"
3895,"def _get_client(self):
"
3896,"def run(self,key):
"
3897,"def run(self):
"
3898,"def run(self):
"
3899,"def run(self,vm_id,vm_name,power_onoff):
"
3900,"def __init__(self,message,full_response = { }):
"
3901,"def raw_response(self):
"
3902,"def __init__(self,document_type,database = None,host = None,port = None,expand = False,** elasticsearch_args):
"
3903,"def initialize(self):
"
3904,"def read_fields(self,limit = 0):
"
3905,"def rows(self):
"
3906,"def records(self):
"
3907,"def __init__(self,resultset,field_names):
"
3908,"def __getitem__(self,index):
"
3909,"def __init__(self,resultset,expand = False):
"
3910,"def __getitem__(self,index):
"
3911,"def __init__(self,document_type,database = ""test"",host = ""127.0.0.1"",port = ""9200"",truncate = False,expand = False,** elasticsearch_args):
"
3912,"def initialize(self):
"
3913,"def append(self,obj):
"
3914,"def finalize(self):
"
3915,"def setUp(self):
"
3916,"def test_table_fields(self):
"
3917,"def test_target_no_existing_table(self):
"
3918,"def test_target_create_table(self):
"
3919,"def test_target_replace_table(self):
"
3920,"def test_target_concrete_type_map(self):
"
3921,"def test_ports(self):
"
3922,"def tearDown(self):
"
3923,"def test_initialization(self):
"
3924,"def test_check_connectivity(self):
"
3925,"def test_upload_form_encoded(self,post):
"
3926,"def test_upload_sharded_encoded(self,post):
"
3927,"def test_filestream(self,post):
"
3928,"def test_upload_patched_404(self):
"
3929,"def test_upload_patched_402(self):
"
3930,"def test_upload_patched_500(self):
"
3931,"def test_upload_check_path(self):
"
3932,"def test_download(self):
"
3933,"def test_download_exception(self):
"
3934,"def test_download_empty_shard(self):
"
3935,"def run(self,repo = None,path = None,cached = False):
"
3936,"def get_view_title(self,path = None,cached = False):
"
3937,"def run(self,path = None):
"
3938,"def run(self,edit,cached = False):
"
3939,"def run(self,edit):
"
3940,"def move_to_point(self,point):
"
3941,"def parse_diff(self):
"
3942,"def build_lookup(self,parsed_diff):
"
3943,"def get_hunks_from_selection(self,selection):
"
3944,"def create_patch(self,selected_hunks):
"
3945,"def is_visible(self):
"
3946,"def run(self,edit,path = None,cached = False,run_move = False):
"
3947,"def on_activated(self,view):
"
3948,"def is_visible(self):
"
3949,"def run(self,edit,action = 'increase'):
"
3950,"def is_visible(self):
"
3951,"def run(self,edit,item = 'hunk',which = 0,start = None):
"
3952,"def is_visible(self):
"
3953,"def run(self,edit,reverse = False):
"
3954,"def __init__(self,agent):
"
3955,"def __enter__(self):
"
3956,"def __exit__(self,type,value,traceback):
"
3957,"def __init__(self,id,command,on_response = None,on_notify = None,on_error = None):
"
3958,"def time(self):
"
3959,"def log_time(self):
"
3960,"def call_response(self,r):
"
3961,"def call_notify(self,n):
"
3962,"def call_error(self,e,ds):
"
3963,"def __init__(self,port = 4567):
"
3964,"def __del__(self):
"
3965,"def set_reconnect_function(self,f):
"
3966,"def reconnect(self):
"
3967,"def connect(self,tries = 10,delay = 1.0):
"
3968,"def connect_async(self,tries = 10,delay = 1.0):
"
3969,"def wait(self,timeout = None):
"
3970,"def close(self):
"
3971,"def is_connecting(self):
"
3972,"def is_connected(self):
"
3973,"def is_unconnected(self):
"
3974,"def set_unconnected(self):
"
3975,"def set_connecting(self):
"
3976,"def set_connected(self):
"
3977,"def on_receive(self,id,command,on_response = None,on_notify = None,on_error = None):
"
3978,"def verify_connected(self):
"
3979,"def connection_lost(self,fn,e):
"
3980,"def call(self,command,opts = { },on_response = None,on_notify = None,on_error = None,wait = False,timeout = None,id = None):
"
3981,"def listen(self):
"
3982,"def link(self,hold = False,** kwargs):
"
3983,"def ping(self):
"
3984,"def scan(self,cabal = False,sandboxes =[],projects =[],files =[],paths =[],ghc =[],contents = { },docs = False,infer = False):
"
3985,"def docs(self,projects =[],files =[],modules =[]):
"
3986,"def infer(self,projects =[],files =[],modules =[]):
"
3987,"def remove(self,cabal = False,sandboxes =[],projects =[],files =[],packages =[]):
"
3988,"def remove_all(self):
"
3989,"def list_modules(self,project = None,file = None,module = None,deps = None,sandbox = None,cabal = False,db = None,package = None,source = False,standalone = False):
"
3990,"def list_packages(self):
"
3991,"def list_projects(self):
"
3992,"def symbol(self,input = """",search_type = 'prefix',project = None,file = None,module = None,deps = None,sandbox = None,cabal = False,db = None,package = None,source = False,standalone = False,locals = False):
"
3993,"def module(self,input = """",search_type = 'prefix',project = None,file = None,module = None,deps = None,sandbox = None,cabal = False,db = None,package = None,source = False,standalone = False):
"
3994,"def resolve(self,file,exports = False):
"
3995,"def project(self,project = None,path = None):
"
3996,"def sandbox(self,path):
"
3997,"def lookup(self,name,file):
"
3998,"def whois(self,name,file):
"
3999,"def scope_modules(self,file,input = '',search_type = 'prefix'):
"
4000,"def scope(self,file,input = '',search_type = 'prefix',global_scope = False):
"
4001,"def complete(self,input,file,wide = False):
"
4002,"def hayoo(self,query,page = None,pages = None):
"
4003,"def cabal_list(self,packages):
"
4004,"def lint(self,files =[],contents = { },hlint =[]):
"
4005,"def check(self,files =[],contents = { },ghc =[]):
"
4006,"def check_lint(self,files =[],contents = { },ghc =[],hlint =[]):
"
4007,"def types(self,files =[],contents = { },ghc =[]):
"
4008,"def ghcmod_lang(self):
"
4009,"def ghcmod_flags(self):
"
4010,"def ghcmod_type(self,file,line,column = 1,ghc =[]):
"
4011,"def ghcmod_check(self,files,ghc =[]):
"
4012,"def ghcmod_lint(self,files,hlint =[]):
"
4013,"def ghcmod_check_lint(self,files,ghc =[],hlint =[]):
"
4014,"def autofix_show(self,messages):
"
4015,"def autofix_fix(self,messages,rest =[],pure = False):
"
4016,"def ghc_eval(self,exprs):
"
4017,"def exit(self):
"
4018,"def __init__(self,port = 4567,cache = None,log_file = None,log_config = None):
"
4019,"def run(self):
"
4020,"def active(self):
"
4021,"def inactive(self):
"
4022,"def create(self):
"
4023,"def stop(self):
"
4024,"def cmd(self):
"
4025,"def on_query_completions(self,view,prefix,locations):
"
4026,"def setUp(self):
"
4027,"def __init__(self):
"
4028,"def __init__(self):
"
4029,"def execute(self,input_data):
"
4030,"def __del__(self):
"
4031,"def _calculate(self,startingPercentage,endPercentage,startDate,endDate):
"
4032,"def local_error(self,originalValue,calculatedValue):
"
4033,"def calculate_parameters_two_empty_list_test(self):
"
4034,"def calculate_parameters_one_empty_list_test(self):
"
4035,"def calculate_parameters_test(self):
"
4036,"def calculate_parameters_without_match_test(self):
"
4037,"def calculate_parameter_duplicate_dates_test(self):
"
4038,"def calculate_parameter_with_short_timeseries_test(self):
"
4039,"def match_time_series_test(self):
"
4040,"def predict_test(self):
"
4041,"def test_confidence_interval(self):
"
4042,"def lstsq_test(self):
"
4043,"def lstsq_wrong_input_size_test(self):
"
4044,"def lstsq_value_error_test(self):
"
4045,"def test_bare_init(self):
"
4046,"def test_init_xmlroot(self):
"
4047,"def test_init_XML(self):
"
4048,"def test_textlen(self):
"
4049,"def test_textlen_with_spaces(self):
"
4050,"def test_textlen_with_line_break(self):
"
4051,"def test_textlen_with_tab(self):
"
4052,"def test_textlen_with_all(self):
"
4053,"def test_plaintext(self):
"
4054,"def test_plaintext_with_spaces(self):
"
4055,"def test_plaintext_with_line_break(self):
"
4056,"def test_plaintext_with_tab(self):
"
4057,"def test_plaintext_with_all(self):
"
4058,"def test_get_style_name(self):
"
4059,"def test_set_style_name(self):
"
4060,"def test_append_text(self):
"
4061,"def test_append_text_2(self):
"
4062,"def test_append_text_3(self):
"
4063,"def test_append_text_4(self):
"
4064,"def test_bare_init(self):
"
4065,"def test_init_xmlroot(self):
"
4066,"def test_cond_style_name(self):
"
4067,"def test_ID(self):
"
4068,"def test_init_1(self):
"
4069,"def test_init_type_error(self):
"
4070,"def test_paragraph_content(self):
"
4071,"def test_heading_content(self):
"
4072,"def test_no_content(self):
"
4073,"def test_level_0(self):
"
4074,"def test_level_1(self):
"
4075,"def test_level_2(self):
"
4076,"def test_unset_start_value(self):
"
4077,"def test_start_value_0(self):
"
4078,"def test_start_value_1(self):
"
4079,"def test_start_value_2(self):
"
4080,"def test_unset_formatted_number(self):
"
4081,"def test_formatted_value(self):
"
4082,"def test_bare_init(self):
"
4083,"def test_init_xmlroot(self):
"
4084,"def test_outline_level_0(self):
"
4085,"def test_outline_level_1(self):
"
4086,"def test_outline_level_2(self):
"
4087,"def test_unset_restart_numbering(self):
"
4088,"def test_restart_numbering_true(self):
"
4089,"def test_restart_numbering_true(self):
"
4090,"def test_unset_suppress_numbering(self):
"
4091,"def test_suppress_numbering_true(self):
"
4092,"def test_suppress_numbering_false(self):
"
4093,"def test_init(self):
"
4094,"def test_unset_name(self):
"
4095,"def test_name(self):
"
4096,"def test_unset_href(self):
"
4097,"def test_href(self):
"
4098,"def test_target_frame(self):
"
4099,"def test_target_frame_blank(self):
"
4100,"def __init__(self):
"
4101,"def version(self):
"
4102,"def version(self,v):
"
4103,"def type(self):
"
4104,"def type(self,value):
"
4105,"def mid(self):
"
4106,"def mid(self,value):
"
4107,"def mid(self):
"
4108,"def token(self):
"
4109,"def token(self,value):
"
4110,"def token(self):
"
4111,"def options(self):
"
4112,"def options(self,value):
"
4113,"def payload(self):
"
4114,"def payload(self,value):
"
4115,"def destination(self):
"
4116,"def destination(self,value):
"
4117,"def source(self):
"
4118,"def source(self,value):
"
4119,"def code(self):
"
4120,"def code(self,value):
"
4121,"def acknowledged(self):
"
4122,"def acknowledged(self,value):
"
4123,"def rejected(self):
"
4124,"def rejected(self,value):
"
4125,"def timeouted(self):
"
4126,"def timeouted(self,value):
"
4127,"def duplicated(self):
"
4128,"def duplicated(self,value):
"
4129,"def timestamp(self):
"
4130,"def timestamp(self,value):
"
4131,"def _already_in(self,option):
"
4132,"def add_option(self,option):
"
4133,"def del_option(self,option):
"
4134,"def del_option_by_name(self,name):
"
4135,"def del_option_by_number(self,number):
"
4136,"def etag(self):
"
4137,"def etag(self,etag):
"
4138,"def etag(self):
"
4139,"def content_type(self):
"
4140,"def content_type(self,content_type):
"
4141,"def content_type(self):
"
4142,"def observe(self):
"
4143,"def observe(self,ob):
"
4144,"def observe(self):
"
4145,"def block1(self):
"
4146,"def block1(self,value):
"
4147,"def block1(self):
"
4148,"def block2(self):
"
4149,"def block2(self,value):
"
4150,"def block2(self):
"
4151,"def rdd(self,keyspace = None,table = None,key = None,column = None,** kwargs):
"
4152,"def read_test(self,type_name,value = None):
"
4153,"def read_write_test(self,type_name,value):
"
4154,"def setUp(self):
"
4155,"def test_ascii(self):
"
4156,"def test_bigint(self):
"
4157,"def test_blob(self):
"
4158,"def test_boolean(self):
"
4159,"def test_decimal(self):
"
4160,"def test_double(self):
"
4161,"def test_float(self):
"
4162,"def test_int(self):
"
4163,"def test_timeuuid(self):
"
4164,"def test_varint(self):
"
4165,"def test_uuid(self):
"
4166,"def setUp(self):
"
4167,"def collections_common_tests(self,collection,column):
"
4168,"def test_list(self):
"
4169,"def test_map(self):
"
4170,"def test_set(self):
"
4171,"def setUp(self):
"
4172,"def read_write_test(self,type_name,value):
"
4173,"def test_simple_udt(self):
"
4174,"def test_simple_udt_null(self):
"
4175,"def test_simple_udt_null_field(self):
"
4176,"def test_udt_wset(self):
"
4177,"def test_collection_of_udts(self):
"
4178,"def _save_and_get(self,* row):
"
4179,"def test_row(self):
"
4180,"def test_dict(self):
"
4181,"def setUp(self):
"
4182,"def test_limit(self):
"
4183,"def setUp(self):
"
4184,"def read_as(self,row_format,keyed):
"
4185,"def assert_rowtype(self,row_format,row_type,keyed = False):
"
4186,"def assert_kvtype(self,row_format,kv_type):
"
4187,"def test_tuple(self):
"
4188,"def test_kvtuple(self):
"
4189,"def test_dict(self):
"
4190,"def test_kvdict(self):
"
4191,"def test_row(self):
"
4192,"def test_kvrow(self):
"
4193,"def test_read_conf(self):
"
4194,"def test_write_conf(self):
"
4195,"def setUp(self):
"
4196,"def test(self):
"
4197,"def setUp(self):
"
4198,"def test_simple_pk(self):
"
4199,"def test_composite_pk(self):
"
4200,"def setUp(self):
"
4201,"def checkRDD(self,time,rdd):
"
4202,"def test(self):
"
4203,"def test_64(self):
"
4204,"def test_89(self):
"
4205,"def test_93(self):
"
4206,"def __init__(self,stream,size = 2 ** 16):
"
4207,"def expectObject(self):
"
4208,"def expectArray(self):
"
4209,"def expectField(self,expectedName,expectedType = None,allowNull = False,readAll = False):
"
4210,"def expectArrayValue(self,expectedType = None,allowNull = False,readAll = False):
"
4211,"def _expectValue(self,eventType,expectedType,allowNull,readAll):
"
4212,"def readObject(self,event = None):
"
4213,"def readArray(self,event = None):
"
4214,"def nextEvent(self):
"
4215,"def next(self):
"
4216,"def _load(self,event):
"
4217,"def _push(self,nodeType,value = None):
"
4218,"def _pop(self):
"
4219,"def _arrayValue(self):
"
4220,"def __iter__(self):
"
4221,"def __init__(self,code,msg):
"
4222,"def __init__(self,parent,nodeType,name = None,value = None,valueType = None):
"
4223,"def startEvent(self):
"
4224,"def endEvent(self):
"
4225,"def __init__(self,node,eventType,value = None,valueType = None,arrayIndex = None,arrayLength = None):
"
4226,"def __repr__(self):
"
4227,"def __init__(self,parser):
"
4228,"def __iter__(self):
"
4229,"def __next__(self):
"
4230,"def next(self):
"
4231,"def __init__(self,url_base,url_archive,paste_tag,target_patterns,paste):
"
4232,"def get(self):
"
4233,"def get_paste(self,paste):
"
4234,"def __init__(self,url):
"
4235,"def __init__(self,url):
"
4236,"def __init__(self,url):
"
4237,"def __init__(self,url):
"
4238,"def __init__(self,target_patterns):
"
4239,"def __init__(self,target_patterns):
"
4240,"def __init__(self,target_patterns):
"
4241,"def to_dict(self):
"
4242,"def save(self,* args,** kwargs):
"
4243,"def to_dict(self):
"
4244,"def __init__(self,test_case):
"
4245,"def connectionMade(self):
"
4246,"def outReceived(self,data):
"
4247,"def errReceived(self,data):
"
4248,"def processEnded(self,status):
"
4249,"def test_run_script(self):
"
4250,"def __init__(self,request):
"
4251,"def stream_succeeded(self,stream):
"
4252,"def _setUp(self):
"
4253,"def randomize_useragent(self,request):
"
4254,"def processInputs(self):
"
4255,"def addToReport(self,request,response = None,response_body = None,failure_string = None):
"
4256,"def _processResponseBody(self,response_body,request,response,body_processor):
"
4257,"def _processResponseBodyFail(self,failure,request,response):
"
4258,"def processResponseBody(self,body):
"
4259,"def processResponseHeaders(self,headers):
"
4260,"def processRedirect(self,location):
"
4261,"def _cbResponse(self,response,request,headers_processor,body_processor):
"
4262,"def doRequest(self,url,method = ""GET"",headers = { },body = None,headers_processor = None,body_processor = None,use_tor = False):
"
4263,"def __init__(self,body):
"
4264,"def startProducing(self,consumer):
"
4265,"def pauseProducing(self):
"
4266,"def stopProducing(self):
"
4267,"def __init__(self,finished,content_length = None,body_processor = None):
"
4268,"def dataReceived(self,b):
"
4269,"def connectionLost(self,reason):
"
4270,"def __init__(self,download_path,finished,content_length = None):
"
4271,"def dataReceived(self,b):
"
4272,"def connectionLost(self,reason):
"
4273,"def connectionMade(self):
"
4274,"def __init__(self,py_offset):
"
4275,"def make_node(self,a,b):
"
4276,"def perform(self,node,inp,out_):
"
4277,"def c_code_cache_version(self):
"
4278,"def c_code(self,node,name,inp,out,sub):
"
4279,"def __init__(self,behaviour):
"
4280,"def make_node(self,a):
"
4281,"def dontuse_perform(self,node,inp,out_):
"
4282,"def c_code_cache_version(self):
"
4283,"def c_code(self,node,name,inp,out,sub):
"
4284,"def make_node(self,a,b):
"
4285,"def perform(self,node,inp,out):
"
4286,"def make_node(self,a,b):
"
4287,"def perform(self,node,inp,out):
"
4288,"def test_badviewmap_ref(self):
"
4289,"def test_badviewmap_slice(self):
"
4290,"def test_goodviewmap(self):
"
4291,"def test_badviewmap_c(self):
"
4292,"def test_aliased_outputs_ok(self):
"
4293,"def test_aliased_outputs_ok_output(self):
"
4294,"def test_aliased_outputs_ok_shadow(self):
"
4295,"def test_aliased_outputs_bad(self):
"
4296,"def setUp(self):
"
4297,"def tearDown(self):
"
4298,"def test_check_isfinite(self):
"
4299,"def test_check_isfinite_disabled(self):
"
4300,"def make_node(self,a,b):
"
4301,"def perform(self,node,inp,out_):
"
4302,"def c_code_cache_version(self):
"
4303,"def c_code(self,node,name,inp,out,sub):
"
4304,"def make_node(self,v):
"
4305,"def perform(self,node,inp,out):
"
4306,"def setUp(self):
"
4307,"def test_f_contiguous(self):
"
4308,"def test_f_contiguous_out(self):
"
4309,"def test_output_broadcast_tensor(self):
"
4310,"def test_output_broadcast_cuda(self):
"
4311,"def make_node(self,i):
"
4312,"def c_support_code(self):
"
4313,"def c_code(self,node,name,inps,outs,sub):
"
4314,"def c_code_cache_version(self):
"
4315,"def make_node(self,c):
"
4316,"def c_support_code(self):
"
4317,"def c_code(self,node,name,inps,outs,sub):
"
4318,"def c_code_cache_version(self):
"
4319,"def __init__(self,scalar_op,inplace_pattern = None,name = None):
"
4320,"def __str__(self):
"
4321,"def __eq__(self,other):
"
4322,"def __hash__(self):
"
4323,"def perform(self,node,inputs,out):
"
4324,"def __init__(self,scalar_op,inplace_pattern = None,name = None):
"
4325,"def __hash__(self):
"
4326,"def __str__(self):
"
4327,"def make_thunk(self,node,storage_map,_,_2):
"
4328,"def __eq__(self,other):
"
4329,"def __hash__(self):
"
4330,"def __str__(self):
"
4331,"def output_type(self,inp):
"
4332,"def make_node(self,inp):
"
4333,"def output_type(self,inp):
"
4334,"def make_thunk(self,node,storage_map,_,_2):
"
4335,"def output_type(self,inp):
"
4336,"def make_thunk(self,node,storage_map,_,_2):
"
4337,"def make_node(self,inp1,inp2):
"
4338,"def output_type(self,inp):
"
4339,"def make_thunk(self,node,storage_map,_,_2):
"
4340,"def _test_softmax(self,x,x_gpu,f_z,f_gpu_z,cmp,check_types):
"
4341,"def _cmp(self,n,m,f,f_gpu):
"
4342,"def _check_types(self,graph,graph_gpu,f_type,f_gpu_type):
"
4343,"def test_softmax(self):
"
4344,"def add_requirements(self,fgraph):
"
4345,"def apply(self,fgraph):
"
4346,"def make_node(self,A,s,m,A2,s2,m2):
"
4347,"def c_code_cache_version(self):
"
4348,"def __init__(self,output_type,inplace = False):
"
4349,"def __str__(self):
"
4350,"def make_node(self,rstate,size):
"
4351,"def R_op(self,inputs,eval_points):
"
4352,"def c_code_cache_version(self):
"
4353,"def c_support_code_apply(self,node,nodename):
"
4354,"def c_code(self,node,nodename,inp,out,sub):
"
4355,"def c_code_cache_version(self):
"
4356,"def get_params(self,node):
"
4357,"def c_headers(self):
"
4358,"def gpu_kernels(self,node,name):
"
4359,"def c_code(self,node,nodename,inp,out,sub):
"
4360,"def c_code_cache_version(self):
"
4361,"def updates(self):
"
4362,"def __init__(self,seed = 12345,use_cuda = None):
"
4363,"def set_rstate(self,seed):
"
4364,"def seed(self,seed = None):
"
4365,"def inc_rstate(self):
"
4366,"def n_streams(self,size):
"
4367,"def pretty_return(self,node_rstate,new_rstate,sample,size,nstreams):
"
4368,"def binomial(self,size = None,n = 1,p = 0.5,ndim = None,dtype = 'int64',nstreams = None):
"
4369,"def normal(self,size,avg = 0.0,std = 1.0,ndim = None,dtype = None,nstreams = None):
"
4370,"def make_node(self,x):
"
4371,"def grad(self,inputs,outputs_gradients):
"
4372,"def infer_shape(self,node,ins_shapes):
"
4373,"def __init__(self,format,dtype):
"
4374,"def make_node(self,n,p,shape):
"
4375,"def connection_pattern(self,node):
"
4376,"def infer_shape(self,node,ins_shapes):
"
4377,"def make_node(self,n,p):
"
4378,"def grad(self,inputs,outputs_gradients):
"
4379,"def infer_shape(self,node,ins_shapes):
"
4380,"def c_code_cache_version(self):
"
4381,"def make_node(self,V,W,b,d):
"
4382,"def perform(self,node,inputs,output_storage):
"
4383,"def infer_shape(self,node,input_shapes):
"
4384,"def c_support_code(self):
"
4385,"def c_libraries(self):
"
4386,"def c_compile_args(self):
"
4387,"def c_lib_dirs(self):
"
4388,"def c_header_dirs(self):
"
4389,"def c_code(self,node,nodename,inputs,outputs,sub):
"
4390,"def test_neibs(self):
"
4391,"def test_neibs_manual(self):
"
4392,"def test_neibs_manual_step(self):
"
4393,"def test_neibs_bad_shape(self):
"
4394,"def test_neibs_wrap_centered_step_manual(self):
"
4395,"def test_neibs_bad_shape_wrap_centered(self):
"
4396,"def test_grad_wrap_centered(self):
"
4397,"def test_grad_valid(self):
"
4398,"def test_grad_ignore_border(self):
"
4399,"def test_neibs2images_grad(self):
"
4400,"def test_neibs_valid_with_inconsistent_borders(self):
"
4401,"def speed_neibs(self):
"
4402,"def speed_neibs_wrap_centered(self):
"
4403,"def test_infer_shape(self):
"
4404,"def test_on_real_input(self):
"
4405,"def test_cast(self):
"
4406,"def test_complex(self):
"
4407,"def test_complex_grads(self):
"
4408,"def test_mul_mixed0(self):
"
4409,"def test_mul_mixed1(self):
"
4410,"def test_mul_mixed(self):
"
4411,"def test_polar_grads(self):
"
4412,"def test_abs_grad(self):
"
4413,"def __init__(self,data = None,errors = None,success = True):
"
4414,"def __init__(self,request,data = None,errors = None,success = True):
"
4415,"def __init__(self,data):
"
4416,"def __unicode__(self):
"
4417,"def setUp(self):
"
4418,"def _generate_uid_and_token(self,user):
"
4419,"def test_login(self):
"
4420,"def test_login_jwt(self):
"
4421,"def test_login_by_email(self):
"
4422,"def test_password_change(self):
"
4423,"def test_password_change_with_old_password(self):
"
4424,"def test_password_reset(self):
"
4425,"def test_password_reset_with_email_in_different_case(self):
"
4426,"def test_password_reset_with_invalid_email(self):
"
4427,"def test_user_details(self):
"
4428,"def test_user_details_using_jwt(self):
"
4429,"def test_registration(self):
"
4430,"def test_registration_with_jwt(self):
"
4431,"def test_registration_with_invalid_password(self):
"
4432,"def test_registration_with_email_verification(self):
"
4433,"def test_logout_on_get(self):
"
4434,"def test_logout_on_post_only(self):
"
4435,"def subgeom_access_test(self,cls,geoms):
"
4436,"def __init__(self):
"
4437,"def __call__(self):
"
4438,"def __init__(self):
"
4439,"def __call__(self):
"
4440,"def get_description(self):
"
4441,"def get_parser(self,prog_name):
"
4442,"def _lookup(self,template,where):
"
4443,"def _find_toplevel_packages(self):
"
4444,"def take_action(self,opts):
"
4445,"def setUp(self):
"
4446,"def tearDown(self):
"
4447,"def __init__(self,poller,monitor,should_continue):
"
4448,"def run(self):
"
4449,"def handle_fronted_request(self,message):
"
4450,"def handle_worker_request(self,message):
"
4451,"def __init__(self,monitor):
"
4452,"def get_worker(self,model,time):
"
4453,"def find_available_worker(self,model,time):
"
4454,"def is_worker_available(self,worker,time):
"
4455,"def add_worker(self,model,address,status,time):
"
4456,"def update_worker_status(self,model,worker,status,time):
"
4457,"def __init__(self,** kwargs):
"
4458,"def decode(self,* args):
"
4459,"def __callback(self,addr,pkt,ts,raw = None,** kw):
"
4460,"def connectionInitHandler(self,conn):
"
4461,"def __countryTest(self,conn):
"
4462,"def connectionHandler(self,conn):
"
4463,"def connectionCloseHandler(self,conn):
"
4464,"def __init__(self,** kwargs):
"
4465,"def packetHandler(self,udp,data):
"
4466,"def connectionInitHandler(self,conn):
"
4467,"def blobHandler(self,conn,blob):
"
4468,"def connectionHandler(self,conn):
"
4469,"def __init__(self,name,** kwargs):
"
4470,"def nodeIsSubscribed(self,node):
"
4471,"def errIfNodeNotSubscribed(self,node):
"
4472,"def verifyNodeMeetsServiceRequirements(self,node):
"
4473,"def setupNodeForService(self,node):
"
4474,"def setupNodeMounts(self,node):
"
4475,"def autoStart(self,node):
"
4476,"def autoStop(self,node):
"
4477,"def start(self,node):
"
4478,"def stop(self,node):
"
4479,"def getDefaultGlobalParams(self):
"
4480,"def getDefaultGlobalMounts(self):
"
4481,"def __repr__(self):
"
4482,"def __str__(self):
"
4483,"def __hash__(self):
"
4484,"def setUp(self):
"
4485,"def test_filepath(self):
"
4486,"def test_attribute_2(self):
"
4487,"def test_attribute_3(self):
"
4488,"def test_attribute_4(self):
"
4489,"def test_value_1(self):
"
4490,"def test_value_2(self):
"
4491,"def test_value_3(self):
"
4492,"def test_value_4(self):
"
4493,"def test_axis_ref(self):
"
4494,"def test_coord_trans_ref(self):
"
4495,"def test_parameter(self):
"
4496,"def __init__(self,user,password,http_auth):
"
4497,"def response_hook(self,r,** kwargs):
"
4498,"def __call__(self,r):
"
4499,"def _get_sid(self,url):
"
4500,"def __init__(self):
"
4501,"def save(self,obj,id_code):
"
4502,"def load(self,id_code):
"
4503,"def _chooseAction(self):
"
4504,"def compute(self):
"
4505,"def compute(self):
"
4506,"def compute(self):
"
4507,"def compute(self):
"
4508,"def get_signal(self,sigs,window,offset,size):
"
4509,"def run_path(self,* cmds):
"
4510,"def run_teem(self,* cmds):
"
4511,"def run_limn_test(self,* cmds):
"
4512,"def run_ten_test(self,* cmds):
"
4513,"def opt_command_line_val(self,option_name,port_name):
"
4514,"def opt_command_line_vec(self,option_name,port_name):
"
4515,"def opt_command_line_file(self,option_name,port_name):
"
4516,"def opt_command_line_noopt(self,option_name,port_name):
"
4517,"def process_command_line_input(self):
"
4518,"def compute(self):
"
4519,"def compute(self):
"
4520,"def compute(self):
"
4521,"def compute(self):
"
4522,"def compute(self):
"
4523,"def do_output(self):
"
4524,"def do_input(self):
"
4525,"def do_input(self):
"
4526,"def compute(self):
"
4527,"def do_input(self):
"
4528,"def do_input(self):
"
4529,"def do_input(self):
"
4530,"def is_cacheable(self):
"
4531,"def do_input(self):
"
4532,"def do_input(self):
"
4533,"def do_input(self):
"
4534,"def compute(self):
"
4535,"def compute(self):
"
4536,"def compute(self):
"
4537,"def make_logger(self,filename):
"
4538,"def send_email(self,msg):
"
4539,"def test1(self):
"
4540,"def test_python_source(self):
"
4541,"def test_python_source_2(self):
"
4542,"def test_dynamic_module_error(self):
"
4543,"def test_change_parameter(self):
"
4544,"def __init__(self,* args,** kwargs):
"
4545,"def __copy__(self):
"
4546,"def do_copy(self):
"
4547,"def __init__(self,* elems):
"
4548,"def __eq__(self,other):
"
4549,"def __str__(self):
"
4550,"def __repr__(self):
"
4551,"def test_modulesdict(self):
"
4552,"def __init__(self,* args,** kwargs):
"
4553,"def __copy__(self):
"
4554,"def do_copy(self,new_ids = False,id_scope = None,id_remap = None):
"
4555,"def __eq__(self,other):
"
4556,"def create_data(self,id = 1,data = """"):
"
4557,"def test_create(self):
"
4558,"def test_serialization(self):
"
4559,"def test_parameter_heuristic(self):
"
4560,"def test_function_heuristic(self):
"
4561,"def test_module_heuristic(self):
"
4562,"def __init__(self):
"
4563,"def hasAttribute(self,node,attr):
"
4564,"def getAttribute(self,node,attr):
"
4565,"def convertFromStr(self,value,type):
"
4566,"def convertToStr(self,value,type):
"
4567,"def __init__(self):
"
4568,"def parse_xml_file(self,filename):
"
4569,"def write_xml_file(self,filename,tree):
"
4570,"def read_xml_object(self,vtType,node):
"
4571,"def write_xml_object(self,obj,node = None):
"
4572,"def open_from_xml(self,filename,vtType,tree = None):
"
4573,"def open_from_db(self,db_connection,vtType,id,lock = False):
"
4574,"def save_to_db(self,db_connection,obj,doCopy = False):
"
4575,"def serialize(self,object):
"
4576,"def __init__(self,* args,** kwargs):
"
4577,"def __copy__(self):
"
4578,"def do_copy(self,new_ids = False,id_scope = None,id_remap = None):
"
4579,"def update_id_scope(self):
"
4580,"def build_index(self):
"
4581,"def add_to_index(self,object):
"
4582,"def delete_from_index(self,object):
"
4583,"def capitalizeOne(self,str):
"
4584,"def db_has_object(self,type,id):
"
4585,"def db_get_object(self,type,id):
"
4586,"def db_add_object(self,object,parent_obj_type = None,parent_obj_id = None,parent_obj = None):
"
4587,"def db_change_object(self,old_id,object,parent_obj_type = None,parent_obj_id = None,parent_obj = None):
"
4588,"def db_delete_object(self,obj_id,obj_type,parent_obj_type = None,parent_obj_id = None,parent_obj = None):
"
4589,"def hacked_init(self):
"
4590,"def test_create_user_without_token_fail(self):
"
4591,"def test_create_user_without_info_fail(self):
"
4592,"def test_remove_user_success(self):
"
4593,"def test_get_user_token_success(self):
"
4594,"def test_get_user_info_success(self):
"
4595,"def test_get_user_props_exists_success(self):
"
4596,"def test_get_user_prop_not_exists(self):
"
4597,"def test_set_new_user_prop(self):
"
4598,"def test_set_exists_user_prop(self):
"
4599,"def test_get_empty_settings(self):
"
4600,"def test_set_setting_error_type_fail(self):
"
4601,"def test_set_setting_none_value_fail(self):
"
4602,"def test_get_setting_exist_success(self):
"
4603,"def test_set_setting_true(self):
"
4604,"def test_get_setting_not_exist_fail(self):
"
4605,"def test_set_tags_success(self):
"
4606,"def test_set_tags_error_type_fail(self):
"
4607,"def test_set_tags_none_value_fail(self):
"
4608,"def test_set_notebooks_success(self):
"
4609,"def test_get_empty_search_success(self):
"
4610,"def test_get_search_exists_success(self):
"
4611,"def test_set_notebooks_error_type_fail(self):
"
4612,"def test_set_notebooks_none_value_fail(self):
"
4613,"def test_set_search_true(self):
"
4614,"def test_rept_userprop(self):
"
4615,"def test_repr_setting(self):
"
4616,"def test_repr_notebook(self):
"
4617,"def test_repr_tag(self):
"
4618,"def test_repr_search(self):
"
4619,"def tearDown(self):
"
4620,"def assertTrue(self,value,msg = None):
"
4621,"def assertFalse(self,value,msg = None):
"
4622,"def assertNone(self,value,msg = None):
"
4623,"def assertNotNone(self,value,msg = None):
"
4624,"def testSimple(self):
"
4625,"def testWithMixedCase(self):
"
4626,"def testWithDigits(self):
"
4627,"def testWithUnderscores(self):
"
4628,"def testWithUnderscorePrefix(self):
"
4629,"def testWithUnderscoreOnly(self):
"
4630,"def testWithNestedDictionary(self):
"
4631,"def testNone(self):
"
4632,"def testNumber(self):
"
4633,"def testList(self):
"
4634,"def testTuple(self):
"
4635,"def testCallable(self):
"
4636,"def testCallableReturningNone(self):
"
4637,"def testWithExtraSpaces(self):
"
4638,"def testUpper(self):
"
4639,"def testListProcessing(self):
"
4640,"def testWithExtraSpaces(self):
"
4641,"def testFailOnInvalidType(self):
"
4642,"def testFailOnInvalidKey(self):
"
4643,"def testFailOnInvalidAttribute(self):
"
4644,"def testCommentsValid(self):
"
4645,"def testCommentIndented(self):
"
4646,"def testNoChanges(self):
"
4647,"def test_non_unique_template(self):
"
4648,"def test_web_server(self):
"
4649,"def test_non_existent_template(self):
"
4650,"def prepopulate(self,streamer):
"
4651,"def setUp(self):
"
4652,"def _run_test(self,ba_name,expect_data = True,** kwargs):
"
4653,"def _run_notimplemented_test(self,ba_name,** kwargs):
"
4654,"def test_latest(self):
"
4655,"def test_date_range(self):
"
4656,"def test_date_range_farpast(self):
"
4657,"def test_latest(self):
"
4658,"def test_date_range(self):
"
4659,"def test_forecast(self):
"
4660,"def test_latest(self):
"
4661,"def test_forecast(self):
"
4662,"def test_latest(self):
"
4663,"def test_date_range(self):
"
4664,"def test_forecast(self):
"
4665,"def test_forecast(self):
"
4666,"def test_latest(self):
"
4667,"def test_date_range(self):
"
4668,"def test_date_range_farpast(self):
"
4669,"def test_latest(self):
"
4670,"def test_date_range(self):
"
4671,"def test_forecast(self):
"
4672,"def test_latest(self):
"
4673,"def test_forecast(self):
"
4674,"def test_failing(self):
"
4675,"def test_latest(self):
"
4676,"def test_date_range(self):
"
4677,"def test_date_range_farpast(self):
"
4678,"def setUp(self):
"
4679,"def test_latest_all(self):
"
4680,"def test_date_range_all(self):
"
4681,"def _test_latest(self,ba):
"
4682,"def _test_date_range(self,ba):
"
4683,"def setUp(self):
"
4684,"def test_latest(self):
"
4685,"def test_date_range(self):
"
4686,"def test_forecast(self):
"
4687,"def __init__(self):
"
4688,"def __init__(self,name,connection = None):
"
4689,"def get_client(self,name = None,class_ = None):
"
4690,"def get_average(self,name = None):
"
4691,"def get_counter(self,name = None):
"
4692,"def get_gauge(self,name = None):
"
4693,"def get_raw(self,name = None):
"
4694,"def get_timer(self,name = None):
"
4695,"def __repr__(self):
"
4696,"def _send(self,data):
"
4697,"def setUp(self):
"
4698,"def tearDown(self):
"
4699,"def _reset_config(self):
"
4700,"def test_completion_config(self):
"
4701,"def test_load_yaml_config(self):
"
4702,"def test_not_find_yaml(self,mock_exists):
"
4703,"def test_get_configured_module_by_path(self):
"
4704,"def test_get_config_empty_yaml(self):
"
4705,"def clean(self):
"
4706,"def _getTargetClass(self):
"
4707,"def _makeOne(self,* opts):
"
4708,"def setUp(self):
"
4709,"def tearDown(self):
"
4710,"def _makeOnePopulated(self,programs,any,response = None):
"
4711,"def test_runforever_not_process_state_exited(self):
"
4712,"def test_runforever_expected_exit(self):
"
4713,"def test_runforever_unexpected_exit(self):
"
4714,"def __init__(self,program,ctl):
"
4715,"def start(self):
"
4716,"def run(self):
"
4717,"def __run(self):
"
4718,"def globaltrace(self,frame,why,arg):
"
4719,"def localtrace(self,frame,why,arg):
"
4720,"def kill(self):
"
4721,"def __init__(self,options,completekey = 'tab',stdin = None,stdout = None):
"
4722,"def emptyline(self):
"
4723,"def _get_do_func(self,cmd):
"
4724,"def output(self,stuff):
"
4725,"def get_supervisor(self):
"
4726,"def get_server_proxy(self,namespace = None):
"
4727,"def completionmatches(self,text,line,flag = 0):
"
4728,"def complete(self,text,state):
"
4729,"def do_help(self,arg):
"
4730,"def help_help(self):
"
4731,"def do_EOF(self,arg):
"
4732,"def help_EOF(self):
"
4733,"def __init__(self,controller):
"
4734,"def _doc_header(self):
"
4735,"def do_help(self,arg):
"
4736,"def _tailf(self,path):
"
4737,"def do_quit(self,arg):
"
4738,"def help_quit(self):
"
4739,"def help_exit(self):
"
4740,"def _procrepr(self,info):
"
4741,"def help_status(self):
"
4742,"def help_pid(self):
"
4743,"def _startresult(self,result):
"
4744,"def help_start(self):
"
4745,"def _stopresult(self,result):
"
4746,"def help_stop(self):
"
4747,"def do_restart(self,arg):
"
4748,"def help_restart(self):
"
4749,"def help_shutdown(self):
"
4750,"def help_reload(self):
"
4751,"def _formatConfigInfo(self,configinfo):
"
4752,"def help_avail(self):
"
4753,"def help_reread(self):
"
4754,"def help_add(self):
"
4755,"def help_remove(self):
"
4756,"def help_update(self):
"
4757,"def _clearresult(self,result):
"
4758,"def help_clear(self):
"
4759,"def do_open(self,arg):
"
4760,"def help_open(self):
"
4761,"def do_version(self,arg):
"
4762,"def help_fg(self,args = None):
"
4763,"def __init__(self,name):
"
4764,"def open(self,filename):
"
4765,"def __init__(self,* args):
"
4766,"def _invoke(self,cmdline):
"
4767,"def open(self,filename):
"
4768,"def open(self,filename):
"
4769,"def __init__(self,kfmclient = 'kfmclient'):
"
4770,"def detect_kde_version(self):
"
4771,"def fixreturncode(self,returncode):
"
4772,"def __init__(self,dataMatIn,classLabels,C,toler,kTup):
"
4773,"def __init__(self,dataMatIn,classLabels,C,toler):
"
4774,"def build_turtle(self):
"
4775,"def test_call(self):
"
4776,"def test_attribute(self):
"
4777,"def test_call_record(self):
"
4778,"def test_attribute_setting(self):
"
4779,"def test_attribute_persistence(self):
"
4780,"def test_one(self):
"
4781,"def test_two(self):
"
4782,"def test_one(self):
"
4783,"def get_default_config_help(self):
"
4784,"def get_default_config(self):
"
4785,"def collect(self):
"
4786,"def setUp(self):
"
4787,"def test_import(self):
"
4788,"def test_should_create_type(self,publish_mock):
"
4789,"def test_blacklisting(self,publish_mock):
"
4790,"def test_total_topic(self,publish_mock):
"
4791,"def __init__(self,* args,** kwargs):
"
4792,"def get_default_config_help(self):
"
4793,"def get_default_config(self):
"
4794,"def __repr__(self):
"
4795,"def getPathPrefix(self):
"
4796,"def getCollectorPath(self):
"
4797,"def getMetricPath(self):
"
4798,"def __init__(self,git_repo):
"
4799,"def repo_checked_out(self):
"
4800,"def get_commit(self,sha):
"
4801,"def get_commits(self,since_sha = None):
"
4802,"def get_original_commit(self,sha):
"
4803,"def get_commit_diff(self,previous_sha,sha):
"
4804,"def db_path(self):
"
4805,"def db(self):
"
4806,"def steps(self):
"
4807,"def m_find_words(self,_,line):
"
4808,"def c_combine_counts(self,key,counts):
"
4809,"def r_sum_counts(self,key,counts):
"
4810,"def r_compute_stats(self,prev_word,value):
"
4811,"def mock_popen(self,module,main_func,env):
"
4812,"def mapper_init(self):
"
4813,"def test_empty(self):
"
4814,"def test_success(self):
"
4815,"def test_one_failure(self):
"
4816,"def test_all_fail(self):
"
4817,"def test_unrecoverable_error(self):
"
4818,"def test_can_wrap_around(self):
"
4819,"def test_wrapping(self):
"
4820,"def test_success(self):
"
4821,"def test_failure(self):
"
4822,"def test_failure_raises_if_all_tries_fail(self):
"
4823,"def test_try_till_success(self):
"
4824,"def test_multiple_stanzas_per_file(self):
"
4825,"def test_suggest_smartstack_proxy_port(self):
"
4826,"def test_suggest_smartstack_proxy_port_too_many_services(self):
"
4827,"def measure(self,* args):
"
4828,"def log(self,measure):
"
4829,"def test__open_jar_jarfile_not_found(self,mock_exists):
"
4830,"def test__open_jar_not_jarfile(self,mock_is_zipfile,mock_exists):
"
4831,"def test__zip_dir(self,mock_walk):
"
4832,"def test__pack_jar(self,mock_zip_dir,mock_zipfile):
"
4833,"def test__validate_venv_dir_contains_venv(self,mock_exists):
"
4834,"def test__set_up_virtualenv_with_requirements(self,mock_venv,mock_remove_base_jar):
"
4835,"def test__set_up_virtualenv_without_requirements(self,mock_venv,mock_remove_base_jar):
"
4836,"def test__content_to_copy(self,mock_glob):
"
4837,"def test__copy_dir_content(self,mock_copy2,mock_copytree,mock_isdir,mock_cont_to_copy):
"
4838,"def test__build_otuput_path(self,mock_ex_path):
"
4839,"def test__path_contained_by(self):
"
4840,"def test__remove_pyleus_base_jar(self):
"
4841,"def test__remove_pyleus_base_jar_no_remove(self):
"
4842,"def _arg(self,key):
"
4843,"def post(self):
"
4844,"def test_authorized_to_manage_request_random_user(self):
"
4845,"def test_authorized_to_manage_request_request_user(self):
"
4846,"def test_authorized_to_manage_request_pushmaster(self):
"
4847,"def test_authorized_to_manage_request_watcher(self):
"
4848,"def test_sort_pickmes_regular_case(self):
"
4849,"def test_sort_pickmes_all_tags_in_ordering(self):
"
4850,"def test_sort_pickmes_no_tags_order(self):
"
4851,"def setUp(self):
"
4852,"def tearDown(self):
"
4853,"def generate_job_request(self,submitted = True,accepted = True):
"
4854,"def test_establish_request_connection_complex(self):
"
4855,"def test_establish_request_connection_dead(self):
"
4856,"def test_auto_retry_behavior(self):
"
4857,"def test_single_bg_job_submission(self):
"
4858,"def test_single_fg_job_submission_timeout(self):
"
4859,"def test_wait_for_multiple_jobs_to_complete_or_timeout(self):
"
4860,"def test_get_job_status(self):
"
4861,"def test_get_job_status_unknown(self):
"
4862,"def test_get_job_status_timeout(self):
"
4863,"def test_send_job_request(self):
"
4864,"def test_get_status_of_job(self):
"
4865,"def generate_job_request(self,submitted = True,accepted = True):
"
4866,"def test_received_job_created(self):
"
4867,"def test_received_job_created_out_of_order(self):
"
4868,"def test_required_state_pending(self):
"
4869,"def test_required_state_queued(self):
"
4870,"def test_in_flight_work_updates(self):
"
4871,"def test_work_complete(self):
"
4872,"def test_work_fail(self):
"
4873,"def test_status_request(self):
"
4874,"def __init__(self,type_name):
"
4875,"def _build_dict(self):
"
4876,"def __init__(self,stick,command,payload = ''):
"
4877,"def execute(self,read_response = True):
"
4878,"def _read_response(self):
"
4879,"def _handle_invalid_read_response(self,res,expected_len):
"
4880,"def parse_result(self,data):
"
4881,"def setUp(self):
"
4882,"def test_aes_CCM_encrypt_decrypt(self):
"
4883,"def test_aes_CCM_wrong_key(self):
"
4884,"def test_aes_CCM_wrong_key_handle(self):
"
4885,"def test_soft_simple_aead_generation(self):
"
4886,"def test_soft_generate_long_aead(self):
"
4887,"def test_soft_generate_yubikey_secrets_aead(self):
"
4888,"def __init__(self):
"
4889,"def addTab(self,tab,title):
"
4890,"def setNeo(self,neo):
"
4891,"def _set_applet(self,applet):
"
4892,"def __init__(self):
"
4893,"def __init__(self):
"
4894,"def set_neo(self,neo):
"
4895,"def change_name(self):
"
4896,"def change_mode(self):
"
4897,"def __init__(self,neo,parent = None):
"
4898,"def _state_changed(self):
"
4899,"def flags(self):
"
4900,"def mode(self):
"
4901,"def mode(self,value):
"
4902,"def __init__(self,parent,index):
"
4903,"def open_app(self,index):
"
4904,"def set_neo(self,neo):
"
4905,"def test_manual_schema(self):
"
4906,"def test_violate_manual_schema_int(self):
"
4907,"def test_violate_manual_schema_long(self):
"
4908,"def test_violate_manual_schema_short(self):
"
4909,"def test_integer_io(self):
"
4910,"def test_long_io(self):
"
4911,"def test_short_io(self):
"
4912,"def test_positive_integer_io(self):
"
4913,"def test_positive_long_io(self):
"
4914,"def decode(self,s):
"
4915,"def decode(self,s):
"
4916,"def decode(self,s):
"
4917,"def decode(self,s):
"
4918,"def clean(self):
"
4919,"def set_response(self,response_text):
"
4920,"def get_body(self):
"
4921,"def get_header(self):
"
4922,"def is_batch(self):
"
4923,"def get_batch(self):
"
4924,"def get_response(self,request_id = 0):
"
4925,"def get_fault_code(self):
"
4926,"def get_fault_message(self):
"
4927,"def __init__(self,x,y,colour):
"
4928,"def draw(self):
"
4929,"def draw_white(self):
"
4930,"def draw_black(self):
"
4931,"def draw_board(self):
"
4932,"def draw_move(self):
"
4933,"def set_black(self):
"
4934,"def set_white(self):
"
4935,"def set_move(self):
"
4936,"def set_board(self):
"
4937,"def get_state(self):
"
4938,"def flip(self):
"
4939,"def set_flipped(self):
"
4940,"def reset_flipped(self):
"
4941,"def is_flipped(self):
"
4942,"def get_position(self):
"
4943,"def __repr__(self):
"
4944,"def __init__(self,server_address,client_addresses,max_migrants = 1):
"
4945,"def finish_request(self,request,client_address):
"
4946,"def __call__(self,random,population,args):
"
4947,"def __str__(self):
"
4948,"def __init__(self,data_ = None,prior_ = None,networks = None):
"
4949,"def run(self):
"
4950,"def __getstate__(self):
"
4951,"def setUp(self):
"
4952,"def test_add(self):
"
4953,"def test_add_many(self):
"
4954,"def test_remove(self):
"
4955,"def test_remove_many(self):
"
4956,"def test_edgeiter(self):
"
4957,"def test_len(self):
"
4958,"def test_addedges1(self):
"
4959,"def test_incoming(self):
"
4960,"def test_outgoing(self):
"
4961,"def test_parents(self):
"
4962,"def test_children(self):
"
4963,"def test_contains1(self):
"
4964,"def test_contains2(self):
"
4965,"def test_remove(self):
"
4966,"def test_clear(self):
"
4967,"def test_adjacency_matrix(self):
"
4968,"def test_loopchecking(self):
"
4969,"def test_loopchecking2(self):
"
4970,"def test_as_pydot(self):
"
4971,"def test_as_image(self):
"
4972,"def test_as_dotstring(self):
"
4973,"def test_as_dotfile(self):
"
4974,"def test_as_string(self):
"
4975,"def test_layout(self):
"
4976,"def test_number_of_edges(self):
"
4977,"def test_edges_exist(self):
"
4978,"def test_acyclic(self):
"
4979,"def test_required_edges(self):
"
4980,"def test_prohibited_edges(self):
"
4981,"def test_required_and_prohibited_edges(self):
"
4982,"def process_request(self,request):
"
4983,"def parse_title(self,title):
"
4984,"def parse_description(self,description):
"
4985,"def feed(self):
"
4986,"def test_results_should_get_cached(self):
"
4987,"def test_cached_results_should_get_used(self):
"
4988,"def test_can_not_be_initialized_with_zero_arguments(self):
"
4989,"def test_commutativity(self):
"
4990,"def test_redundant_arguments_get_deduplicated(self):
"
4991,"def test_pickling_and_unpickling(self):
"
4992,"def test_repr(self):
"
4993,"def test_can_not_be_initialized_with_zero_arguments(self):
"
4994,"def test_commutativity(self):
"
4995,"def test_redundant_arguments_get_deduplicated(self):
"
4996,"def test_pickling_and_unpickling(self):
"
4997,"def test_repr(self):
"
4998,"def test_pickling_and_unpickling(self):
"
4999,"def test_repr(self):
"
5000,"def test_init_conversions(self):
"
5001,"def test_domainname(self):
"
5002,"def test_pickling_and_unpickling(self):
"
5003,"def test_repr(self):
"
5004,"def test_init_conversions(self):
"
5005,"def test_domainname(self):
"
5006,"def test_pickling_and_unpickling(self):
"
5007,"def test_repr(self):
"
5008,"def test_base(self):
"
5009,"def test_pickling_and_unpickling(self):
"
5010,"def test_repr(self):
"
5011,"def __init__(self,params =[]):
"
5012,"def _kernel_matrix(self,training_patterns,kernel_type,kernel_param,test_patterns = None):
"
5013,"def _local_train(self,training_patterns,training_expected_targets,params):
"
5014,"def _local_test(self,testing_patterns,testing_expected_targets,predicting):
"
5015,"def get_available_kernel_functions(self):
"
5016,"def print_parameters(self):
"
5017,"def search_param(self,database,dataprocess = None,path_filename =("""",""""),save = False,cv = ""ts"",of = ""rmse"",kf = None,eval = 50):
"
5018,"def train(self,training_matrix,params =[]):
"
5019,"def test(self,testing_matrix,predicting = False):
"
5020,"def predict(self,horizon = 1):
"
5021,"def train_iterative(self,database_matrix,params =[],sliding_window = 168,k = 1):
"
5022,"def getItem(self,structureId):
"
5023,"def getIntCodeItem(self,structureId):
"
5024,"def getRegionIdItem(self,structureId):
"
5025,"def getTypeIdItem(self,structureId):
"
5026,"def getDescriptionItem(self,structureId):
"
5027,"def getRedItem(self,structureId):
"
5028,"def getGreenItem(self,structureId):
"
5029,"def getBlueItem(self,structureId):
"
5030,"def getWindowRange(self,structureId):
"
5031,"def getPlaneItem(self,structureId):
"
5032,"def __init__(self,parent):
"
5033,"def moduleName(self):
"
5034,"def __init__(self,parent):
"
5035,"def setup(self):
"
5036,"def enter(self):
"
5037,"def exit(self):
"
5038,"def cleanup(self):
"
5039,"def jumpToTemptativeSlice(self,volumeId):
"
5040,"def placeDefaultRulers(self,volumeId):
"
5041,"def placeRuler(self):
"
5042,"def getCurrentSelectedStructure(self):
"
5043,"def stepSlice(self,offset):
"
5044,"def removeRulers(self):
"
5045,"def getCurrentRedWindowSlice(self):
"
5046,"def moveRedWindowToSlice(self,newSlice):
"
5047,"def refreshTextboxes(self,reset = False):
"
5048,"def showUnselectedVolumeWarningMessage(self):
"
5049,"def showUnselectedStructureWarningMessage(self):
"
5050,"def switchToRedView(self):
"
5051,"def __addSceneObservables__(self):
"
5052,"def __removeSceneObservables(self):
"
5053,"def onVolumeSelectorChanged(self,node):
"
5054,"def onStructureClicked(self,button):
"
5055,"def oPlaceDefaultRulersClicked(self):
"
5056,"def onRulerUpdated(self,node,event):
"
5057,"def onPlaceRulersClicked(self):
"
5058,"def onMoveUpRulerClicked(self):
"
5059,"def onMoveDownRulerClicked(self):
"
5060,"def onRemoveRulerClicked(self):
"
5061,"def onSaveReport(self):
"
5062,"def __onSceneClosed__(self,arg1,arg2):
"
5063,"def __init__(self):
"
5064,"def getRootAnnotationsNode(self):
"
5065,"def getRulersListNode(self,volumeId,createIfNotExist = True):
"
5066,"def getRulerNodeForVolumeAndStructure(self,volumeId,structureId,createIfNotExist = True,callbackWhenRulerModified = None):
"
5067,"def hideAllRulers(self):
"
5068,"def __changeColor__(self,node,color):
"
5069,"def changeColor(self,volumeId,color):
"
5070,"def createDefaultRulers(self,volumeId,callbackWhenRulerModified):
"
5071,"def stepSlice(self,volumeId,structureId,sliceStep):
"
5072,"def placeRulerInSlice(self,volumeId,structureId,newSlice,callbackWhenUpdated = None):
"
5073,"def _placeRulerInSlice_(self,rulerNode,structureId,volumeId,newSlice):
"
5074,"def getDefaultCoords(self,volumeId):
"
5075,"def removeRulers(self,volumeId):
"
5076,"def RAStoIJK(self,volumeNode,rasCoords):
"
5077,"def IJKtoRAS(self,volumeNode,ijkCoords):
"
5078,"def setUp(self):
"
5079,"def runTest(self):
"
5080,"def test_CIP_PAARatio_PrintMessage(self):
"
5081,"def get_blogs(self,user_id = 'default',auth_token = None,desired_class = gdata.blogger.data.BlogFeed,** kwargs):
"
5082,"def get_posts(self,blog_id,auth_token = None,desired_class = gdata.blogger.data.BlogPostFeed,query = None,** kwargs):
"
5083,"def get_pages(self,blog_id,auth_token = None,desired_class = gdata.blogger.data.BlogPageFeed,query = None,** kwargs):
"
5084,"def get_post_comments(self,blog_id,post_id,auth_token = None,desired_class = gdata.blogger.data.CommentFeed,query = None,** kwargs):
"
5085,"def get_blog_comments(self,blog_id,auth_token = None,desired_class = gdata.blogger.data.CommentFeed,query = None,** kwargs):
"
5086,"def get_blog_archive(self,blog_id,auth_token = None,** kwargs):
"
5087,"def add_post(self,blog_id,title,body,labels = None,draft = False,auth_token = None,title_type = 'text',body_type = 'html',** kwargs):
"
5088,"def add_page(self,blog_id,title,body,draft = False,auth_token = None,title_type = 'text',body_type = 'html',** kwargs):
"
5089,"def add_comment(self,blog_id,post_id,body,auth_token = None,title_type = 'text',body_type = 'html',** kwargs):
"
5090,"def update(self,entry,auth_token = None,** kwargs):
"
5091,"def delete(self,entry_or_uri,auth_token = None,** kwargs):
"
5092,"def __init__(self,order_by = None,** kwargs):
"
5093,"def modify_request(self,http_request):
"
5094,"def __init__(self,n = 0,e = 0):
"
5095,"def __len__(self):
"
5096,"def hasPrivateKey(self):
"
5097,"def hash(self):
"
5098,"def getSigningAlgorithm(self):
"
5099,"def hashAndSign(self,bytes):
"
5100,"def hashAndVerify(self,sigBytes,bytes):
"
5101,"def sign(self,bytes):
"
5102,"def verify(self,sigBytes,bytes):
"
5103,"def encrypt(self,bytes):
"
5104,"def decrypt(self,encBytes):
"
5105,"def _rawPrivateKeyOp(self,m):
"
5106,"def _rawPublicKeyOp(self,c):
"
5107,"def acceptsPassword(self):
"
5108,"def write(self,password = None):
"
5109,"def writeXMLPublicKey(self,indent = ''):
"
5110,"def _addPKCS1SHA1Prefix(self,bytes):
"
5111,"def _addPKCS1Padding(self,bytes,blockType):
"
5112,"def __init__(self,dbus_obj):
"
5113,"def uuid(self):
"
5114,"def list_characteristics(self):
"
5115,"def __init__(self,dbus_obj):
"
5116,"def uuid(self):
"
5117,"def read_value(self):
"
5118,"def write_value(self,value):
"
5119,"def start_notify(self,on_change):
"
5120,"def stop_notify(self):
"
5121,"def list_descriptors(self):
"
5122,"def __init__(self,dbus_obj):
"
5123,"def uuid(self):
"
5124,"def read_value(self):
"
5125,"def decorators(self,attributes):
"
5126,"def extends(self,attributes):
"
5127,"def arguments(self,attributes):
"
5128,"def keyword_arguments(self,attributes):
"
5129,"def returns(self,attribute):
"
5130,"def yields(self,attribute):
"
5131,"def raises(self,attributes):
"
5132,"def variables(self,attributes):
"
5133,"def test_connections(self):
"
5134,"def setUp(self):
"
5135,"def test_authenticate_do_it(self):
"
5136,"def test_authenticate_dont_do_it(self):
"
5137,"def test_authenticate_id_none(self):
"
5138,"def test_authenticate_id_non_existent(self):
"
5139,"def test_authenticate_id_invalid(self):
"
5140,"def test_get_user_exists(self):
"
5141,"def test_get_user_does_not_exist(self):
"
5142,"def __init__(self,name):
"
5143,"def description(self):
"
5144,"def name(self):
"
5145,"def main(self,global_args,command_args):
"
5146,"def run_remote(self,cmd,input = None):
"
5147,"def restart_container(self):
"
5148,"def __call__(self,line):
"
5149,"def fieldnames(self):
"
5150,"def fieldnames(self,fieldnames):
"
5151,"def by_index(self,i,raw = False):
"
5152,"def by_key(self,key,raw = False):
"
5153,"def __init__(self):
"
5154,"def __init__(self,format = None):
"
5155,"def set_format(self,format):
"
5156,"def __init__(self):
"
5157,"def parse(self,logline):
"
5158,"def __init__(self):
"
5159,"def draw(self,projection,model_view):
"
5160,"def draw(self):
"
5161,"def __init__(self,data = None,target = None,internal_format = None,min_filter = GL.GL_NEAREST,mag_filter = GL.GL_NEAREST,wrap_s = GL.GL_REPEAT,wrap_t = GL.GL_REPEAT,shape = None,format = None,data_type = None,border = False,** kwargs):
"
5162,"def handle(self):
"
5163,"def target(self):
"
5164,"def internal_format(self):
"
5165,"def border(self):
"
5166,"def shape(self):
"
5167,"def min_filter(self):
"
5168,"def min_filter(self,mode):
"
5169,"def mag_filter(self):
"
5170,"def mag_filter(self,mode):
"
5171,"def wrap_s(self):
"
5172,"def wrap_s(self,mode):
"
5173,"def wrap_t(self):
"
5174,"def wrap_t(self,mode):
"
5175,"def bind(self):
"
5176,"def unbind(self):
"
5177,"def allocate(self,shape,data_type,internal_format = None,** kwargs):
"
5178,"def set_data(self,data,format = None,shape = None,offset = None,data_type = None,level = 0,swizzle = None,** kwargs):
"
5179,"def set_pil_image(self,image,level = 0,flip = True,** kwargs):
"
5180,"def __init__(self,* args,** kwargs):
"
5181,"def width(self):
"
5182,"def __init__(self,* args,** kwargs):
"
5183,"def width(self):
"
5184,"def height(self):
"
5185,"def __init__(self,* args,** kwargs):
"
5186,"def width(self):
"
5187,"def height(self):
"
5188,"def depth(self):
"
5189,"def __add__(self,other):
"
5190,"def __sub__(self,other):
"
5191,"def __mul__(self,other):
"
5192,"def __truediv__(self,other):
"
5193,"def __div__(self,other):
"
5194,"def __sub__(self,other):
"
5195,"def __mul__(self,other):
"
5196,"def __or__(self,other):
"
5197,"def __invert__(self):
"
5198,"def __mul__(self,other):
"
5199,"def __mul__(self,other):
"
5200,"def length(self):
"
5201,"def normalise(self):
"
5202,"def normalised(self):
"
5203,"def angle(self):
"
5204,"def axis(self):
"
5205,"def cross(self,other):
"
5206,"def dot(self,other):
"
5207,"def conjugate(self):
"
5208,"def inverse(self):
"
5209,"def power(self,exponent):
"
5210,"def negative(self):
"
5211,"def is_identity(self):
"
5212,"def matrix44(self):
"
5213,"def matrix33(self):
"
5214,"def test_import(self):
"
5215,"def test_create(self):
"
5216,"def test_create_parameters(self):
"
5217,"def test_create_from_x_rotation(self):
"
5218,"def test_create_from_y_rotation(self):
"
5219,"def test_create_from_z_rotation(self):
"
5220,"def test_create_from_axis_rotation(self):
"
5221,"def test_create_from_axis_rotation_non_normalised(self):
"
5222,"def test_create_from_matrix_unit(self):
"
5223,"def test_create_from_matrix_x(self):
"
5224,"def test_create_from_matrix_y(self):
"
5225,"def test_create_from_matrix_z(self):
"
5226,"def test_create_from_eulers(self):
"
5227,"def test_create_from_inverse_of_eulers(self):
"
5228,"def test_cross(self):
"
5229,"def test_is_zero_length(self):
"
5230,"def test_is_zero_length_zero(self):
"
5231,"def test_is_non_zero_length(self):
"
5232,"def test_is_non_zero_length_zero(self):
"
5233,"def test_squared_length_identity(self):
"
5234,"def test_squared_length(self):
"
5235,"def test_squared_length_batch(self):
"
5236,"def test_length_identity(self):
"
5237,"def test_length(self):
"
5238,"def test_length_batch(self):
"
5239,"def test_normalise_identity(self):
"
5240,"def test_normalise_non_identity(self):
"
5241,"def test_normalise_batch(self):
"
5242,"def test_rotation_angle(self):
"
5243,"def test_rotation_axis(self):
"
5244,"def test_dot_adjacent(self):
"
5245,"def test_dot_parallel(self):
"
5246,"def test_dot_angle(self):
"
5247,"def test_dot_batch(self):
"
5248,"def test_conjugate(self):
"
5249,"def test_conjugate_rotation(self):
"
5250,"def test_power(self):
"
5251,"def test_inverse(self):
"
5252,"def test_inverse_rotation(self):
"
5253,"def test_inverse_non_unit(self):
"
5254,"def test_negate_unit(self):
"
5255,"def test_negate(self):
"
5256,"def test_apply_to_vector_unit_x(self):
"
5257,"def test_apply_to_vector_x(self):
"
5258,"def test_apply_to_vector_y(self):
"
5259,"def test_apply_to_vector_z(self):
"
5260,"def test_identity(self):
"
5261,"def getBaseCommand(self,command,osName):
"
5262,"def getOsName(self):
"
5263,"def getPlatform(self):
"
5264,"def getWindowsUserShellFolders(self):
"
5265,"def loadPluginSettings(self,defaultBrowser):
"
5266,"def loadProjectSettings(self,view):
"
5267,"def normalizePath(self,fileToOpen):
"
5268,"def openBrowser(self,command,osName):
"
5269,"def run(self,edit,browser = None):
"
5270,"def saveCurrentViewInTempFile(self,view):
"
5271,"def has_add_permission(self,request):
"
5272,"def __init__(self,* args,** kwargs):
"
5273,"def save(self,commit = True):
"
5274,"def __init__(self,form = None,mixin = None,prefix = None,attribute_set = None,formfield_callback = None):
"
5275,"def get_attributes(self):
"
5276,"def get_attribute_formfield_names(self):
"
5277,"def get_attribute_formfield_name(self,attribute):
"
5278,"def get_attribute_formfield(self,attribute):
"
5279,"def factory(self):
"
5280,"def __unicode__(self):
"
5281,"def input_formats(self):
"
5282,"def output_formats(self):
"
5283,"def get_data(self,writer,frmt):
"
5284,"def get_extension(self,frmt):
"
5285,"def get_mimetype(self,frmt):
"
5286,"def get_values_queryset(self):
"
5287,"def get_new_value(self):
"
5288,"def get_values(self):
"
5289,"def get_value(self,key):
"
5290,"def set_value_value(self,key,value_value):
"
5291,"def __init__(self,variation):
"
5292,"def _product(self):
"
5293,"def get_values(self):
"
5294,"def get_value(self,key):
"
5295,"def sync_index(self,index,documents,full = False):
"
5296,"def build_index(self,index,added_fields = None,deleted_fields = None,changed_fields = None,exists = False):
"
5297,"def __init__(self,module_name,name):
"
5298,"def inject(self,handler):
"
5299,"def is_accesed(self):
"
5300,"def is_assigned(self):
"
5301,"def __init__(self,fullname):
"
5302,"def _import(self):
"
5303,"def __getattribute__(self,name):
"
5304,"def __all__(self):
"
5305,"def __setattr__(self,name,value):
"
5306,"def __getitem__(self,name):
"
5307,"def Finalize2(self,xcode_targets,xcode_target_to_target_dict):
"
5308,"def __init__(self,top):
"
5309,"def __call__(self,arg,dirname,names):
"
5310,"def fail_test(self = None,condition = 1,function = None,skip = 0):
"
5311,"def no_result(self = None,condition = 1,function = None,skip = 0):
"
5312,"def pass_test(self = None,condition = 1,function = None):
"
5313,"def close_output(self):
"
5314,"def wait(self):
"
5315,"def __init__(self,cmd,bufsize = - 1):
"
5316,"def __init__(self,command,** kw):
"
5317,"def wait(self,* args,** kw):
"
5318,"def recv(self,maxsize = None):
"
5319,"def recv_err(self,maxsize = None):
"
5320,"def send_recv(self,input = '',maxsize = None):
"
5321,"def get_conn_maxsize(self,which,maxsize):
"
5322,"def _close(self,which):
"
5323,"def _recv(self,which,maxsize):
"
5324,"def __init__(self,description = None,program = None,interpreter = None,workdir = None,subdir = None,verbose = None,match = None,diff = None,combine = 0,universal_newlines = 1):
"
5325,"def __del__(self):
"
5326,"def __repr__(self):
"
5327,"def banner(self,s,width = None):
"
5328,"def escape(self,arg):
"
5329,"def escape(self,arg):
"
5330,"def canonicalize(self,path):
"
5331,"def chmod(self,path,mode):
"
5332,"def command_args(self,program = None,interpreter = None,arguments = None):
"
5333,"def description_set(self,description):
"
5334,"def fail_test(self,condition = 1,function = None,skip = 0):
"
5335,"def interpreter_set(self,interpreter):
"
5336,"def match(self,lines,matches):
"
5337,"def match_exact(self,lines,matches):
"
5338,"def match_re(self,lines,res):
"
5339,"def match_re_dotall(self,lines,res):
"
5340,"def no_result(self,condition = 1,function = None,skip = 0):
"
5341,"def pass_test(self,condition = 1,function = None):
"
5342,"def preserve(self,* conditions):
"
5343,"def program_set(self,program):
"
5344,"def rmdir(self,dir):
"
5345,"def start(self,program = None,interpreter = None,arguments = None,universal_newlines = None,** kw):
"
5346,"def finish(self,popen,** kw):
"
5347,"def run(self,program = None,interpreter = None,arguments = None,chdir = None,stdin = None,universal_newlines = None):
"
5348,"def sleep(self,seconds = default_sleep_seconds):
"
5349,"def stderr(self,run = None):
"
5350,"def stdout(self,run = None):
"
5351,"def subdir(self,* subdirs):
"
5352,"def symlink(self,target,link):
"
5353,"def tempdir(self,path = None):
"
5354,"def touch(self,path,mtime = None):
"
5355,"def unlink(self,file):
"
5356,"def verbose_set(self,verbose):
"
5357,"def where_is(self,file,path = None,pathext = None):
"
5358,"def workdir_set(self,path):
"
5359,"def workpath(self,* args):
"
5360,"def readable(self,top,read = 1):
"
5361,"def executable(self,top,execute = 1):
"
5362,"def show(self,request,blog):
"
5363,"def get_urls(self,blog):
"
5364,"def get_urls(self,post):
"
5365,"def __init__(self,state_classes,initial_state,debug = 0):
"
5366,"def unlink(self):
"
5367,"def next_line(self,n = 1):
"
5368,"def is_next_line_blank(self):
"
5369,"def at_eof(self):
"
5370,"def at_bof(self):
"
5371,"def previous_line(self,n = 1):
"
5372,"def goto_line(self,line_offset):
"
5373,"def get_source(self,line_offset):
"
5374,"def abs_line_offset(self):
"
5375,"def abs_line_number(self):
"
5376,"def get_source_and_line(self,lineno = None):
"
5377,"def insert_input(self,input_lines,source):
"
5378,"def add_state(self,state_class):
"
5379,"def add_states(self,state_classes):
"
5380,"def runtime_init(self):
"
5381,"def attach_observer(self,observer):
"
5382,"def detach_observer(self,observer):
"
5383,"def notify_observers(self):
"
5384,"def __init__(self,state_machine,debug = 0):
"
5385,"def runtime_init(self):
"
5386,"def unlink(self):
"
5387,"def add_initial_transitions(self):
"
5388,"def add_transitions(self,names,transitions):
"
5389,"def add_transition(self,name,transition):
"
5390,"def remove_transition(self,name):
"
5391,"def make_transition(self,name,next_state = None):
"
5392,"def make_transitions(self,name_list):
"
5393,"def no_match(self,context,transitions):
"
5394,"def bof(self,context):
"
5395,"def eof(self,context):
"
5396,"def nop(self,match,context,next_state):
"
5397,"def get_indented(self,until_blank = 0,strip_indent = 1):
"
5398,"def get_known_indented(self,indent,until_blank = 0,strip_indent = 1):
"
5399,"def get_first_known_indented(self,indent,until_blank = 0,strip_indent = 1,strip_top = 1):
"
5400,"def __init__(self,state_machine,debug = 0):
"
5401,"def add_initial_transitions(self):
"
5402,"def blank(self,match,context,next_state):
"
5403,"def indent(self,match,context,next_state):
"
5404,"def known_indent(self,match,context,next_state):
"
5405,"def first_known_indent(self,match,context,next_state):
"
5406,"def match(self,pattern):
"
5407,"def __init__(self,initlist = None,source = None,items = None,parent = None,parent_offset = None):
"
5408,"def __str__(self):
"
5409,"def __repr__(self):
"
5410,"def __setitem__(self,i,item):
"
5411,"def __delitem__(self,i):
"
5412,"def __add__(self,other):
"
5413,"def __radd__(self,other):
"
5414,"def __iadd__(self,other):
"
5415,"def __mul__(self,n):
"
5416,"def __imul__(self,n):
"
5417,"def extend(self,other):
"
5418,"def append(self,item,source = None,offset = 0):
"
5419,"def insert(self,i,item,source = None,offset = 0):
"
5420,"def pop(self,i = - 1):
"
5421,"def trim_start(self,n = 1):
"
5422,"def trim_end(self,n = 1):
"
5423,"def remove(self,item):
"
5424,"def sort(self,* args):
"
5425,"def info(self,i):
"
5426,"def source(self,i):
"
5427,"def offset(self,i):
"
5428,"def disconnect(self):
"
5429,"def xitems(self):
"
5430,"def trim_left(self,length,start = 0,end = sys.maxint):
"
5431,"def get_text_block(self,start,flush_left = 0):
"
5432,"def get_indented(self,start = 0,until_blank = 0,strip_indent = 1,block_indent = None,first_indent = None):
"
5433,"def get_2D_block(self,top,left,bottom,right,strip_indent = 1):
"
5434,"def pad_double_width(self,pad_char):
"
5435,"def replace(self,old,new):
"
5436,"def __init__(self,environment):
"
5437,"def parse(self,parser):
"
5438,"def _render(self,bundle,** variation):
"
5439,"def __init__(self,val,places = 7):
"
5440,"def __repr__(self):
"
5441,"def __eq__(self,other):
"
5442,"def __getitem__(self,key):
"
5443,"def __contains__(self,key):
"
5444,"def instrumented_test_render(self,context):
"
5445,"def setUp(self):
"
5446,"def test_update(self):
"
5447,"def test_f_object_updates(self):
"
5448,"def setUp(self):
"
5449,"def tearDown(self):
"
5450,"def test_get_agent_not_found(self):
"
5451,"def test_put(self):
"
5452,"def test_put_etag_missing_on_change(self):
"
5453,"def test_put_etag_right_on_change(self):
"
5454,"def test_put_etag_wrong_on_change(self):
"
5455,"def test_put_etag_if_none_match_good(self):
"
5456,"def test_put_etag_if_none_match_bad(self):
"
5457,"def test_get_invalid_agent_structure(self):
"
5458,"def test_get_invalid_agent(self):
"
5459,"def test_get(self):
"
5460,"def test_get_no_params(self):
"
5461,"def test_get_no_agent(self):
"
5462,"def test_get_no_profileId(self):
"
5463,"def test_delete(self):
"
5464,"def test_get_agent_since(self):
"
5465,"def test_get_agent_since_tz(self):
"
5466,"def test_post_put_delete(self):
"
5467,"def test_group_as_agent(self):
"
5468,"def test_post_new_profile(self):
"
5469,"def test_post_blank_profile(self):
"
5470,"def test_post_and_put_profile(self):
"
5471,"def create_token(self,consumer,token_type,timestamp,scope,is_approved = False,user = None,callback = None,callback_confirmed = False):
"
5472,"def __init__(self):
"
5473,"def add_option(self,* args,** kw):
"
5474,"def parse_args(self,* args):
"
5475,"def setup(self,request,as_connection):
"
5476,"def test_pos_list_get_range_with_correct_paramters(self):
"
5477,"def test_pos_list_get_range_with_correct_policy(self):
"
5478,"def test_pos_list_get_range_with_nonexistent_bin(self):
"
5479,"def test_neg_list_get_range_with_no_parameters(self):
"
5480,"def test_neg_list_get_range_with_incorrect_policy(self):
"
5481,"def test_neg_list_get_range_with_nonexistent_key(self):
"
5482,"def test_neg_list_get_range_with_extra_parameter(self):
"
5483,"def test_neg_list_get_range_policy_is_string(self):
"
5484,"def test_neg_list_get_range_key_is_none(self):
"
5485,"def test_neg_list_get_range_bin_is_none(self):
"
5486,"def test_neg_list_get_range_with_negative_index(self):
"
5487,"def test_neg_list_get_range_with_negative_length(self):
"
5488,"def test_neg_list_get_range_meta_type_integer(self):
"
5489,"def test_neg_list_get_range_index_type_string(self):
"
5490,"def setup_method(self,method):
"
5491,"def teardown_method(self,method):
"
5492,"def test_list_insert_with_no_parameters(self):
"
5493,"def test_list_insert_with_incorrect_policy(self):
"
5494,"def test_list_insert_with_extra_parameter(self):
"
5495,"def test_list_insert_policy_is_string(self):
"
5496,"def test_list_insert_key_is_none(self):
"
5497,"def test_list_insert_bin_is_none(self):
"
5498,"def test_list_insert_meta_type_integer(self):
"
5499,"def test_list_insert_index_negative(self):
"
5500,"def test_list_insert_index_type_string(self):
"
5501,"def setup_method(self,method):
"
5502,"def teardown_method(self,method):
"
5503,"def test_set_password_without_any_parameters(self):
"
5504,"def test_set_password_with_proper_parameters(self):
"
5505,"def test_set_password_with_invalid_timeout_policy_value(self):
"
5506,"def test_set_password_with_proper_timeout_policy_value(self):
"
5507,"def test_set_password_with_none_username(self):
"
5508,"def test_set_password_with_none_password(self):
"
5509,"def test_set_password_with_non_existent_user(self):
"
5510,"def test_set_password_with_too_long_password(self):
"
5511,"def test_udf_put_without_parameters(self):
"
5512,"def test_udf_put_with_proper_parameters(self):
"
5513,"def test_udf_put_with_invalid_timeout_policy_value(self):
"
5514,"def test_udf_put_with_proper_timeout_policy_value(self):
"
5515,"def test_udf_put_with_non_existent_filename(self):
"
5516,"def test_udf_put_with_non_lua_udf_type_and_lua_script_file(self):
"
5517,"def test_udf_put_with_all_none_parameters(self):
"
5518,"def test_udf_put_with_proper_parameters_without_connection(self):
"
5519,"def __init__(self,username,password,** kwargs):
"
5520,"def log(self,message,level = logging.DEBUG):
"
5521,"def mark_viewed(self,snap):
"
5522,"def listen(self,timeout = DEFAULT_TIMEOUT):
"
5523,"def get_friends(self):
"
5524,"def get_added_me(self):
"
5525,"def send_snap(self,recipients,snap):
"
5526,"def post_story(self,snap):
"
5527,"def add_friend(self,username):
"
5528,"def delete_friend(self,username):
"
5529,"def block(self,username):
"
5530,"def process_snaps(self,snaps,mark_viewed = True):
"
5531,"def process_stories(self,stories):
"
5532,"def get_snaps(self,mark_viewed = True):
"
5533,"def get_my_stories(self):
"
5534,"def get_friend_stories(self):
"
5535,"def clear_stories(self):
"
5536,"def _upload_snap(self,snap):
"
5537,"def _make_request(self,path,data = None,method = 'POST',files = None):
"
5538,"def forwards(self,orm):
"
5539,"def backwards(self,orm):
"
5540,"def __init__(self,* args,** kwargs):
"
5541,"def get_credit_card(self):
"
5542,"def clean(self):
"
5543,"def __init__(self,options = None):
"
5544,"def service_url(self):
"
5545,"def braintree_notify_handler(self,request):
"
5546,"def braintree_success_handler(self,request,response):
"
5547,"def braintree_failure_handler(self,request,response):
"
5548,"def get_urls(self):
"
5549,"def add_fields(self,params):
"
5550,"def generate_tr_data(self):
"
5551,"def form_class(self):
"
5552,"def generate_form(self):
"
5553,"def setUp(self):
"
5554,"def testCardSupported(self):
"
5555,"def testCardValidated(self):
"
5556,"def testCardType(self):
"
5557,"def testPurchase(self):
"
5558,"def testFailure(self):
"
5559,"def testDirectPayment(self):
"
5560,"def testPaymentSuccessfulSignal(self):
"
5561,"def testPaymentUnSuccessfulSignal(self):
"
5562,"def testCreditCardExpired(self):
"
5563,"def test_build_comparators_builds_equals(self):
"
5564,"def test_build_comparators_is_a(self):
"
5565,"def test_build_comparators_passes_comparators(self):
"
5566,"def test_equals(self):
"
5567,"def test_equals_repr(self):
"
5568,"def test_eq(self):
"
5569,"def test_is_a(self):
"
5570,"def test_is_a_repr(self):
"
5571,"def test_is_a_format_name(self):
"
5572,"def test_is(self):
"
5573,"def test_is_repr(self):
"
5574,"def test_almost_equal(self):
"
5575,"def test_almost_equal_repr(self):
"
5576,"def test_regex(self):
"
5577,"def test_regex_repr(self):
"
5578,"def test_any(self):
"
5579,"def test_any_repr(self):
"
5580,"def test_in(self):
"
5581,"def test_in_repr(self):
"
5582,"def test_contains(self):
"
5583,"def test_contains_repr(self):
"
5584,"def test_all(self):
"
5585,"def test_all_repr(self):
"
5586,"def test_not(self):
"
5587,"def test_no_repr(self):
"
5588,"def test_function(self):
"
5589,"def test_function_repr(self):
"
5590,"def test_ignore(self):
"
5591,"def test_ignore_repr(self):
"
5592,"def test_variable(self):
"
5593,"def test_variable_repr(self):
"
5594,"def test_like_init(self):
"
5595,"def test_like_test(self):
"
5596,"def test_like_repr(self):
"
5597,"def __init__(self,body = '',delivery_info = None,return_info = None,** properties):
"
5598,"def body(self):
"
5599,"def __len__(self):
"
5600,"def __nonzero__(self):
"
5601,"def __eq__(self,other):
"
5602,"def delivery_info(self):
"
5603,"def return_info(self):
"
5604,"def properties(self):
"
5605,"def __str__(self):
"
5606,"def setUp(self):
"
5607,"def test_init(self):
"
5608,"def test_connect(self):
"
5609,"def test_read(self):
"
5610,"def test_read_when_already_locked(self):
"
5611,"def test_read_when_raises_exception(self):
"
5612,"def test_buffer(self):
"
5613,"def test_buffer_when_raises_exception(self):
"
5614,"def test_write(self):
"
5615,"def test_write_when_raises_an_exception(self):
"
5616,"def setUp(self):
"
5617,"def test_init(self):
"
5618,"def test_process_channels(self):
"
5619,"def setUp(self):
"
5620,"def _request(self,request):
"
5621,"def test_series(self):
"
5622,"def test_series_with_stat_lists(self):
"
5623,"def test_series_with_macros(self):
"
5624,"def __init__(self,url = None,engine = None,tablename = 'apscheduler_jobs',metadata = None,pickle_protocol = pickle.HIGHEST_PROTOCOL):
"
5625,"def start(self,scheduler,alias):
"
5626,"def lookup_job(self,job_id):
"
5627,"def get_due_jobs(self,now):
"
5628,"def get_next_run_time(self):
"
5629,"def get_all_jobs(self):
"
5630,"def add_job(self,job):
"
5631,"def update_job(self,job):
"
5632,"def remove_job(self,job_id):
"
5633,"def remove_all_jobs(self):
"
5634,"def shutdown(self):
"
5635,"def _reconstitute_job(self,job_state):
"
5636,"def _get_jobs(self,* conditions):
"
5637,"def __repr__(self):
"
5638,"def run(self,test):
"
5639,"def __init__(self,nickname):
"
5640,"def post(self):
"
5641,"def post(self):
"
5642,"def get(self):
"
5643,"def get(self):
"
5644,"def _run(self,nn,a_in = None,fit = True):
"
5645,"def test_MissingLastDim(self):
"
5646,"def test_SquareKernel(self):
"
5647,"def test_KernelPooling(self):
"
5648,"def test_VerticalKernel(self):
"
5649,"def test_VerticalVerbose(self):
"
5650,"def test_HorizontalKernel(self):
"
5651,"def test_ValidationSize(self):
"
5652,"def test_ValidationSet(self):
"
5653,"def test_MultipleLayers(self):
"
5654,"def test_PoolingMaxType(self):
"
5655,"def test_PoolingMeanType(self):
"
5656,"def _run(self,nn,scale):
"
5657,"def test_UpscalingFactorFour(self):
"
5658,"def test_DownscaleUpscale(self):
"
5659,"def test_SmallSquareKernel(self):
"
5660,"def test_SquareKernelFull(self):
"
5661,"def test_HorizontalKernel(self):
"
5662,"def test_VerticalKernel(self):
"
5663,"def test_SquareKernelPool(self):
"
5664,"def test_SquarePoolFull(self):
"
5665,"def test_InvalidBorderMode(self):
"
5666,"def test_MultiLayerPooling(self):
"
5667,"def test_Upscaling(self):
"
5668,"def _run(self,activation):
"
5669,"def test_RectifierConv(self):
"
5670,"def test_ExponentialLinear(self):
"
5671,"def test_SigmoidConv(self):
"
5672,"def test_TanhConv(self):
"
5673,"def test_LinearConv(self):
"
5674,"def test_UnknownConv(self):
"
5675,"def _run(self,nn,a_in = None):
"
5676,"def setUp(self):
"
5677,"def test_SerializeEmpty(self):
"
5678,"def _run(self,original,a_in = None):
"
5679,"def __init__(self,* args,** kwargs):
"
5680,"def __init__(self,token,base_url = 'https://api.hipchat.com/v2',* args,** kwargs):
"
5681,"def prepare_request(self):
"
5682,"def execute(self,context):
"
5683,"def start(self):
"
5684,"def execute_async(self,key,command,queue = DEFAULT_QUEUE):
"
5685,"def __init__(self,endpoint,method = 'POST',data = None,headers = None,response_check = None,extra_options = None,http_conn_id = 'http_default',* args,** kwargs):
"
5686,"def execute(self,context):
"
5687,"def initialize(self):
"
5688,"def prepare(self):
"
5689,"def dbname(self):
"
5690,"def db(self):
"
5691,"def mongodbconnection(self):
"
5692,"def masterdb(self):
"
5693,"def apnsconnections(self):
"
5694,"def gcmconnections(self):
"
5695,"def wnsconnections(self):
"
5696,"def mpnsconnections(self):
"
5697,"def currentuser(self):
"
5698,"def get_current_user(self):
"
5699,"def render_string(self,template_name,** kwargs):
"
5700,"def get(self,appname):
"
5701,"def get(self,appname):
"
5702,"def get(self,appname):
"
5703,"def get(self):
"
5704,"def get(self):
"
5705,"def get(self):
"
5706,"def get(self,action):
"
5707,"def post(self,action):
"
5708,"def log_request(self):
"
5709,"def start(self):
"
5710,"def init(self):
"
5711,"def worker(self):
"
5712,"def update_check_callback(self,updates):
"
5713,"def install_updates(self,updates):
"
5714,"def install_update(self):
"
5715,"def on_page_load(self):
"
5716,"def on_refresh(self):
"
5717,"def on_auto_refresh(self):
"
5718,"def on_dialog_open(self):
"
5719,"def on_dialog_close(self,button):
"
5720,"def on_add_widget_click(self,cls,config = None):
"
5721,"def add_widget(self,cls,config = None):
"
5722,"def add_widget_intent(self,cls = None,config = None):
"
5723,"def refresh(self):
"
5724,"def on_widget_config(self,config,instance):
"
5725,"def on_widget_reconfigure(self,widget,instance):
"
5726,"def on_widget_delete(self,widget,instance):
"
5727,"def on_drag_start(self):
"
5728,"def on_drag_stop(self):
"
5729,"def init(self):
"
5730,"def set(self,e):
"
5731,"def get_name(self):
"
5732,"def get_permissions(self):
"
5733,"def init(self):
"
5734,"def query_sql(self,db,sql):
"
5735,"def query_databases(self):
"
5736,"def query_drop(self,db):
"
5737,"def query_create(self,name):
"
5738,"def template(self):
"
5739,"def __init__(self,** kwargs):
"
5740,"def get_tz_debian(self):
"
5741,"def get_tz_nondebian(self):
"
5742,"def set_tz_debian(self,timezone):
"
5743,"def set_tz_nondebian(self,timezone):
"
5744,"def init(self):
"
5745,"def on_page_load(self):
"
5746,"def refresh(self):
"
5747,"def on_set(self):
"
5748,"def on_sync(self):
"
5749,"def save(self):
"
5750,"def on_prepare(self):
"
5751,"def on_start(self):
"
5752,"def create_config(self):
"
5753,"def on_config_start(self):
"
5754,"def on_config_save(self):
"
5755,"def on_s_start(self):
"
5756,"def on_s_restart(self):
"
5757,"def on_s_stop(self):
"
5758,"def __init__(self):
"
5759,"def is_enabled(self):
"
5760,"def optimize(self,filepath):
"
5761,"def get_params_for(self,filepath):
"
5762,"def __init__(self,url,path,size):
"
5763,"def _embed(self):
"
5764,"def __init__(self,base_params,text,overrides,varname):
"
5765,"def render(self,context):
"
5766,"def __init__(self):
"
5767,"def register(self,treebuilder_class):
"
5768,"def lookup(self,* features):
"
5769,"def __init__(self):
"
5770,"def reset(self):
"
5771,"def can_be_empty_element(self,tag_name):
"
5772,"def feed(self,markup):
"
5773,"def prepare_markup(self,markup,user_specified_encoding = None,document_declared_encoding = None):
"
5774,"def test_fragment_to_document(self,fragment):
"
5775,"def set_up_substitutions(self,tag):
"
5776,"def _replace_cdata_list_attribute_values(self,tag_name,attrs):
"
5777,"def feed(self,markup):
"
5778,"def close(self):
"
5779,"def startElement(self,name,attrs):
"
5780,"def endElement(self,name):
"
5781,"def startElementNS(self,nsTuple,nodeName,attrs):
"
5782,"def endElementNS(self,nsTuple,nodeName):
"
5783,"def startPrefixMapping(self,prefix,nodeValue):
"
5784,"def endPrefixMapping(self,prefix):
"
5785,"def characters(self,content):
"
5786,"def startDocument(self):
"
5787,"def endDocument(self):
"
5788,"def set_up_substitutions(self,tag):
"
5789,"def on_connecting(self):
"
5790,"def action(self):
"
5791,"def add_context(self):
"
5792,"def process_form(self,form):
"
5793,"def get_success_url(self):
"
5794,"def process_form(self,form):
"
5795,"def get_success_url(self):
"
5796,"def form_valid(self,form):
"
5797,"def edit(self):
"
5798,"def train(self,fX,fT,* args,** kwargs):
"
5799,"def solve_corr(self,fHH,fHT):
"
5800,"def error(self,fT,fY,istart = 0,icount = np.inf):
"
5801,"def train_async(self,fX,fT,* args,** kwargs):
"
5802,"def _checkcorr(self,fHH,fHT):
"
5803,"def handle(self,* args,** options):
"
5804,"def prepare_tags(self,object):
"
5805,"def prepare_tags_exact(self,object):
"
5806,"def prepare_byline(self,obj):
"
5807,"def prepare_byline_exact(self,obj):
"
5808,"def prepare_publication(self,object):
"
5809,"def prepare_publication_exact(self,object):
"
5810,"def get_updated_field(self):
"
5811,"def get_queryset(self):
"
5812,"def prepare_publication(self,object):
"
5813,"def prepare_publication_exact(self,object):
"
5814,"def get_updated_field(self):
"
5815,"def __unicode__(self):
"
5816,"def get_absolute_url(self):
"
5817,"def __unicode__(self):
"
5818,"def get_absolute_url(self):
"
5819,"def __init__(self,file):
"
5820,"def get(self):
"
5821,"def save(self,settings):
"
5822,"def __get_setting(self,line):
"
5823,"def __save_setting(self,fileHandle,feed_setting):
"
5824,"def _format_setting(self,feed_setting):
"
5825,"def _setting_from_format(self,formatted):
"
5826,"def __init__(self,name,path,domain = None,linguas = None):
"
5827,"def po_path(self):
"
5828,"def potfiles_in(self):
"
5829,"def get_sources(self):
"
5830,"def update(self):
"
5831,"def release(self,raises = True):
"
5832,"def __init__(self,mpml_path,worktree = None):
"
5833,"def configure(self):
"
5834,"def build(self):
"
5835,"def install(self,dest):
"
5836,"def deploy(self,url):
"
5837,"def package(self,with_breakpad = False,output = None,force = False):
"
5838,"def __init__(self,cmd,cwd = None,env = None,capture = True):
"
5839,"def _kill_subprocess(self):
"
5840,"def _interrupt(self):
"
5841,"def _destroy_zombie(self):
"
5842,"def __init__(self,cmd,returncode,cwd = None,stdout = None,stderr = None):
"
5843,"def __str__(self):
"
5844,"def __init__(self,cmd):
"
5845,"def __str__(self):
"
5846,"def __init__(self,executable,env = None):
"
5847,"def __str__(self):
"
5848,"def __init__(self,* args,** kwargs):
"
5849,"def add_view(self,request,* args,** kwargs):
"
5850,"def get_config_fields(self):
"
5851,"def prefix_template_names(self,template_names):
"
5852,"def get_template_names(self):
"
5853,"def dispatch(self,request,* args,** kwargs):
"
5854,"def get_queryset(self):
"
5855,"def dispatch(self,request,* args,** kwargs):
"
5856,"def get_queryset(self):
"
5857,"def get(self,request,* args,** kwargs):
"
5858,"def get_object(self,queryset = None):
"
5859,"def get_context_data(self,** kwargs):
"
5860,"def get_paginate_by(self,queryset):
"
5861,"def get_pagination_options(self):
"
5862,"def get_context_data(self,** kwargs):
"
5863,"def get_queryset(self):
"
5864,"def get(self,request,* args,** kwargs):
"
5865,"def get_paginate_by(self,queryset):
"
5866,"def get_queryset(self):
"
5867,"def get_context_data(self,** kwargs):
"
5868,"def get_template_names(self):
"
5869,"def get_queryset(self):
"
5870,"def get(self,request,author):
"
5871,"def get_context_data(self,** kwargs):
"
5872,"def get_queryset(self):
"
5873,"def get(self,request,category):
"
5874,"def get_context_data(self,** kwargs):
"
5875,"def get_queryset(self):
"
5876,"def get(self,request,tag):
"
5877,"def get_context_data(self,** kwargs):
"
5878,"def get_queryset(self):
"
5879,"def _daterange_from_kwargs(self,kwargs):
"
5880,"def get(self,request,** kwargs):
"
5881,"def get_context_data(self,** kwargs):
"
5882,"def _daterange_from_kwargs(self,kwargs):
"
5883,"def _daterange_from_kwargs(self,kwargs):
"
5884,"def _daterange_from_kwargs(self,kwargs):
"
5885,"def __init__(self,a,b):
"
5886,"def setup(self):
"
5887,"def gather_results(self,count):
"
5888,"def test_injection_is_thread_safe(self):
"
5889,"def test_singleton_scope_is_thread_safe(self):
"
5890,"def setup(self):
"
5891,"def test_inject_decorator_works_when_metaclass_used(self):
"
5892,"def test_instantiation_still_requires_parameters(self):
"
5893,"def test_injection_works(self):
"
5894,"def test_assisted_injection_works(self):
"
5895,"def test_members_are_injected_only_once(self):
"
5896,"def test_each_instance_gets_new_injection(self):
"
5897,"def test_members_can_be_overwritten(self):
"
5898,"def test_injected_members_starting_with_underscore_generate_sane_constructor(self):
"
5899,"def test_correct_exception_is_raised_when_argument_is_missing(self):
"
5900,"def test_mutating_dict_while_iterating_it_bug(self):
"
5901,"def get_query_set(self):
"
5902,"def __str__(self):
"
5903,"def test_ssl_v2(self):
"
5904,"def test_ssl_v2_disabled(self):
"
5905,"def test_ssl_v2_client(self):
"
5906,"def test_ssl_v2_client_disabled(self):
"
5907,"def test_ssl_v2_server(self):
"
5908,"def test_ssl_v2_server_disabled(self):
"
5909,"def test_ssl_v3(self):
"
5910,"def test_ssl_v3_client(self):
"
5911,"def test_ssl_v3_server(self):
"
5912,"def test_tls_v1(self):
"
5913,"def test_tls_v1_client(self):
"
5914,"def test_tls_v1_server(self):
"
5915,"def test_ssl_v23(self):
"
5916,"def test_ssl_v23_client(self):
"
5917,"def test_ssl_v23_server(self):
"
5918,"def __init__(self,reason):
"
5919,"def __init__(self,reason,pycode,lineno):
"
5920,"def visit(self,visitor):
"
5921,"def __init__(self,ensemble,architecture,training_params,partsTrain = 1,partsTest = 1,delay = 4000,skip = 100,jump = None,subsample = 1,smallEpochs = 2,majorEpochs = 20,checkEveryEpochs = 2,verbose = True):
"
5922,"def fit(self,X,y,Xtest = None,ytest = None):
"
5923,"def predict_proba(self,X):
"
5924,"def _predict_proba_train(self,X):
"
5925,"def __init__(self,context = None):
"
5926,"def run(self):
"
5927,"def sock(self,name,_type = None):
"
5928,"def multisock(self,name,_type = None):
"
5929,"def __enter__(self):
"
5930,"def __exit__(self,type,value,traceback):
"
5931,"def help(self):
"
5932,"def notice(self,msg):
"
5933,"def alert(self,msg):
"
5934,"def error(self,msg):
"
5935,"def __init__(self):
"
5936,"def emit(self,record):
"
5937,"def __init__(self,app_id,api_key,hosts_array = None):
"
5938,"def app_id(self):
"
5939,"def api_key(self):
"
5940,"def api_key(self,value):
"
5941,"def enableRateLimitForward(self,admin_api_key,end_user_ip,rate_limit_api_key):
"
5942,"def enable_rate_limit_forward(self,end_user_ip,rate_limit_api_key):
"
5943,"def set_end_user_ip(self,end_user_ip):
"
5944,"def disableRateLimitForward(self):
"
5945,"def disable_rate_limit_forward(self):
"
5946,"def set_extra_header(self,key,value):
"
5947,"def set_extra_headers(self,** kwargs):
"
5948,"def headers(self):
"
5949,"def set_timeout(self,connect_timeout,read_timeout,search_timeout = 5):
"
5950,"def multipleQueries(self,queries,index_name_key = 'indexName'):
"
5951,"def multiple_queries(self,queries,index_name_key = 'indexName',strategy = 'none'):
"
5952,"def batch(self,requests):
"
5953,"def listIndexes(self):
"
5954,"def list_indexes(self):
"
5955,"def deleteIndex(self,index_name):
"
5956,"def delete_index(self,index_name):
"
5957,"def moveIndex(self,src_index_name,dst_index_name):
"
5958,"def move_index(self,src_index_name,dst_index_name):
"
5959,"def copyIndex(self,src_index_name,dst_index_name):
"
5960,"def copy_index(self,src_index_name,dst_index_name):
"
5961,"def getLogs(self,offset = 0,length = 10,type = 'all'):
"
5962,"def get_logs(self,offset = 0,length = 10,type = 'all'):
"
5963,"def initIndex(self,index_name):
"
5964,"def init_index(self,index_name):
"
5965,"def listUserKeys(self):
"
5966,"def list_user_keys(self):
"
5967,"def getUserKeyACL(self,key):
"
5968,"def get_user_key_acl(self,key):
"
5969,"def deleteUserKey(self,key):
"
5970,"def delete_user_key(self,key):
"
5971,"def addUserKey(self,obj,validity = 0,max_queries_per_ip_per_hour = 0,max_hits_per_query = 0,indexes = None):
"
5972,"def add_user_key(self,obj,validity = 0,max_queries_per_ip_per_hour = 0,max_hits_per_query = 0,indexes = None):
"
5973,"def update_user_key(self,key,obj,validity = None,max_queries_per_ip_per_hour = None,max_hits_per_query = None,indexes = None):
"
5974,"def generateSecuredApiKey(self,private_api_key,tag_filters,user_token = ''):
"
5975,"def generate_secured_api_key(self,private_api_key,queryParameters,user_token = ''):
"
5976,"def _perform_appengine_request(self,host,path,method,timeout,params = None,data = None):
"
5977,"def _perform_session_request(self,host,path,method,timeout,params = None,data = None):
"
5978,"def _perform_request(self,hosts,path,method,params = None,body = None,is_search = False):
"
5979,"def solve(self,cipher):
"
5980,"def Turan(self,n,r):
"
5981,"def solve(self,cipher):
"
5982,"def find_kth(self,A,i,j,k):
"
5983,"def solve(self,cipher):
"
5984,"def intToRoman(self,num):
"
5985,"def combinationSum(self,candidates,target):
"
5986,"def get_combination(self,target,candidates,current,result):
"
5987,"def isNumber_builtin(self,s):
"
5988,"def isNumber(self,s):
"
5989,"def restoreIpAddresses(self,s):
"
5990,"def is_valid(self,s):
"
5991,"def __init__(self,x):
"
5992,"def insertionSortList_TLE(self,head):
"
5993,"def insertionSortList(self,head):
"
5994,"def trailingZeroes(self,n):
"
5995,"def isAnagram(self,s,t):
"
5996,"def __init__(self,x):
"
5997,"def closestValue(self,root,target):
"
5998,"def find(self,root,target,ret,lower = True):
"
5999,"def __init__(self,x):
"
6000,"def deserialize(self,data):
"
6001,"def decode(self,s):
"
6002,"def encode(self,node):
"
6003,"def findPeak(self,A):
"
6004,"def __init__(self,val):
"
6005,"def __repr__(self):
"
6006,"def lowestCommonAncestor(self,root,A,B):
"
6007,"def path(self,root,target):
"
6008,"def get_path(self,cur,target,path,ans):
"
6009,"def __init__(self,val):
"
6010,"def __repr__(self):
"
6011,"def __init__(self):
"
6012,"def insert(self,root,val):
"
6013,"def rank(self,root,val):
"
6014,"def countOfSmallerNumberII(self,A):
"
6015,"def setUp(self):
"
6016,"def test_parseParameter(self):
"
6017,"def test_train(self):
"
6018,"def test_train_al(self):
"
6019,"def test_train_param(self):
"
6020,"def __init__(self,env_prefix = None,config_file = None,config_section = None):
"
6021,"def metavar(self,name):
"
6022,"def from_param(self,param,default = NODEFAULT):
"
6023,"def from_name(self,name,default = NODEFAULT,section = None):
"
6024,"def set_config_section(self,section):
"
6025,"def test_has_version(self):
"
6026,"def test_readme(self):
"
6027,"def __init__(self,source):
"
6028,"def __iter__(self):
"
6029,"def __init__(self,table,source = None,protocol = - 1,write_header = True):
"
6030,"def __iter__(self):
"
6031,"def __init__(self,table,field,missing = None):
"
6032,"def __iter__(self):
"
6033,"def __init__(self,table,field,parsers =(('int',int),('float',float))):
"
6034,"def __iter__(self):
"
6035,"def __init__(self,table,field):
"
6036,"def __iter__(self):
"
6037,"def __init__(self):
"
6038,"def get_ResourceName(self):
"
6039,"def set_ResourceName(self,ResourceName):
"
6040,"def __init__(self):
"
6041,"def get_DrdsInstanceId(self):
"
6042,"def set_DrdsInstanceId(self,DrdsInstanceId):
"
6043,"def get_DbName(self):
"
6044,"def set_DbName(self,DbName):
"
6045,"def get_DdlSql(self):
"
6046,"def set_DdlSql(self,DdlSql):
"
6047,"def __init__(self):
"
6048,"def get_OwnerId(self):
"
6049,"def set_OwnerId(self,OwnerId):
"
6050,"def get_ResourceOwnerAccount(self):
"
6051,"def set_ResourceOwnerAccount(self,ResourceOwnerAccount):
"
6052,"def get_ResourceOwnerId(self):
"
6053,"def set_ResourceOwnerId(self,ResourceOwnerId):
"
6054,"def get_InstanceId(self):
"
6055,"def set_InstanceId(self,InstanceId):
"
6056,"def get_IpAddress(self):
"
6057,"def set_IpAddress(self,IpAddress):
"
6058,"def get_OwnerAccount(self):
"
6059,"def set_OwnerAccount(self,OwnerAccount):
"
6060,"def __init__(self):
"
6061,"def get_OwnerId(self):
"
6062,"def set_OwnerId(self,OwnerId):
"
6063,"def get_ResourceOwnerAccount(self):
"
6064,"def set_ResourceOwnerAccount(self,ResourceOwnerAccount):
"
6065,"def get_ResourceOwnerId(self):
"
6066,"def set_ResourceOwnerId(self,ResourceOwnerId):
"
6067,"def get_ImageId(self):
"
6068,"def set_ImageId(self,ImageId):
"
6069,"def get_PageNumber(self):
"
6070,"def set_PageNumber(self,PageNumber):
"
6071,"def get_PageSize(self):
"
6072,"def set_PageSize(self,PageSize):
"
6073,"def get_OwnerAccount(self):
"
6074,"def set_OwnerAccount(self,OwnerAccount):
"
6075,"def __init__(self):
"
6076,"def get_OwnerId(self):
"
6077,"def set_OwnerId(self,OwnerId):
"
6078,"def get_ResourceOwnerAccount(self):
"
6079,"def set_ResourceOwnerAccount(self,ResourceOwnerAccount):
"
6080,"def get_ResourceOwnerId(self):
"
6081,"def set_ResourceOwnerId(self,ResourceOwnerId):
"
6082,"def get_SecurityGroupId(self):
"
6083,"def set_SecurityGroupId(self,SecurityGroupId):
"
6084,"def get_InstanceId(self):
"
6085,"def set_InstanceId(self,InstanceId):
"
6086,"def get_OwnerAccount(self):
"
6087,"def set_OwnerAccount(self,OwnerAccount):
"
6088,"def __init__(self):
"
6089,"def get_OwnerId(self):
"
6090,"def set_OwnerId(self,OwnerId):
"
6091,"def get_ResourceOwnerAccount(self):
"
6092,"def set_ResourceOwnerAccount(self,ResourceOwnerAccount):
"
6093,"def get_ResourceOwnerId(self):
"
6094,"def set_ResourceOwnerId(self,ResourceOwnerId):
"
6095,"def get_SecurityGroupId(self):
"
6096,"def set_SecurityGroupId(self,SecurityGroupId):
"
6097,"def get_IpProtocol(self):
"
6098,"def set_IpProtocol(self,IpProtocol):
"
6099,"def get_PortRange(self):
"
6100,"def set_PortRange(self,PortRange):
"
6101,"def get_DestGroupId(self):
"
6102,"def set_DestGroupId(self,DestGroupId):
"
6103,"def get_DestGroupOwnerAccount(self):
"
6104,"def set_DestGroupOwnerAccount(self,DestGroupOwnerAccount):
"
6105,"def get_DestCidrIp(self):
"
6106,"def set_DestCidrIp(self,DestCidrIp):
"
6107,"def get_Policy(self):
"
6108,"def set_Policy(self,Policy):
"
6109,"def get_NicType(self):
"
6110,"def set_NicType(self,NicType):
"
6111,"def get_OwnerAccount(self):
"
6112,"def set_OwnerAccount(self,OwnerAccount):
"
6113,"def __init__(self):
"
6114,"def get_OwnerId(self):
"
6115,"def set_OwnerId(self,OwnerId):
"
6116,"def get_ResourceOwnerAccount(self):
"
6117,"def set_ResourceOwnerAccount(self,ResourceOwnerAccount):
"
6118,"def get_ResourceOwnerId(self):
"
6119,"def set_ResourceOwnerId(self,ResourceOwnerId):
"
6120,"def get_ScalingRuleId(self):
"
6121,"def set_ScalingRuleId(self,ScalingRuleId):
"
6122,"def get_ScalingRuleName(self):
"
6123,"def set_ScalingRuleName(self,ScalingRuleName):
"
6124,"def get_Cooldown(self):
"
6125,"def set_Cooldown(self,Cooldown):
"
6126,"def get_AdjustmentType(self):
"
6127,"def set_AdjustmentType(self,AdjustmentType):
"
6128,"def get_AdjustmentValue(self):
"
6129,"def set_AdjustmentValue(self,AdjustmentValue):
"
6130,"def get_OwnerAccount(self):
"
6131,"def set_OwnerAccount(self,OwnerAccount):
"
6132,"def __init__(self):
"
6133,"def get_OwnerId(self):
"
6134,"def set_OwnerId(self,OwnerId):
"
6135,"def get_ResourceOwnerAccount(self):
"
6136,"def set_ResourceOwnerAccount(self,ResourceOwnerAccount):
"
6137,"def get_ResourceOwnerId(self):
"
6138,"def set_ResourceOwnerId(self,ResourceOwnerId):
"
6139,"def get_Input(self):
"
6140,"def set_Input(self,Input):
"
6141,"def get_AnalysisConfig(self):
"
6142,"def set_AnalysisConfig(self,AnalysisConfig):
"
6143,"def get_UserData(self):
"
6144,"def set_UserData(self,UserData):
"
6145,"def get_PipelineId(self):
"
6146,"def set_PipelineId(self,PipelineId):
"
6147,"def get_Priority(self):
"
6148,"def set_Priority(self,Priority):
"
6149,"def get_OwnerAccount(self):
"
6150,"def set_OwnerAccount(self,OwnerAccount):
"
6151,"def __init__(self):
"
6152,"def get_OwnerId(self):
"
6153,"def set_OwnerId(self,OwnerId):
"
6154,"def get_ResourceOwnerAccount(self):
"
6155,"def set_ResourceOwnerAccount(self,ResourceOwnerAccount):
"
6156,"def get_ResourceOwnerId(self):
"
6157,"def set_ResourceOwnerId(self,ResourceOwnerId):
"
6158,"def get_region(self):
"
6159,"def set_region(self,region):
"
6160,"def get_OwnerAccount(self):
"
6161,"def set_OwnerAccount(self,OwnerAccount):
"
6162,"def __init__(self):
"
6163,"def get_UserName(self):
"
6164,"def set_UserName(self,UserName):
"
6165,"def __init__(self):
"
6166,"def get_GroupName(self):
"
6167,"def set_GroupName(self,GroupName):
"
6168,"def get_NewGroupName(self):
"
6169,"def set_NewGroupName(self,NewGroupName):
"
6170,"def get_NewComments(self):
"
6171,"def set_NewComments(self,NewComments):
"
6172,"def __init__(self):
"
6173,"def get_OwnerId(self):
"
6174,"def set_OwnerId(self,OwnerId):
"
6175,"def get_ResourceOwnerAccount(self):
"
6176,"def set_ResourceOwnerAccount(self,ResourceOwnerAccount):
"
6177,"def get_ResourceOwnerId(self):
"
6178,"def set_ResourceOwnerId(self,ResourceOwnerId):
"
6179,"def get_ClientToken(self):
"
6180,"def set_ClientToken(self,ClientToken):
"
6181,"def get_DBInstanceId(self):
"
6182,"def set_DBInstanceId(self,DBInstanceId):
"
6183,"def get_OwnerAccount(self):
"
6184,"def set_OwnerAccount(self,OwnerAccount):
"
6185,"def __init__(self):
"
6186,"def get_OwnerId(self):
"
6187,"def set_OwnerId(self,OwnerId):
"
6188,"def get_ResourceOwnerAccount(self):
"
6189,"def set_ResourceOwnerAccount(self,ResourceOwnerAccount):
"
6190,"def get_ResourceOwnerId(self):
"
6191,"def set_ResourceOwnerId(self,ResourceOwnerId):
"
6192,"def get_DBInstanceId(self):
"
6193,"def set_DBInstanceId(self,DBInstanceId):
"
6194,"def get_PageSize(self):
"
6195,"def set_PageSize(self,PageSize):
"
6196,"def get_PageNumber(self):
"
6197,"def set_PageNumber(self,PageNumber):
"
6198,"def get_OwnerAccount(self):
"
6199,"def set_OwnerAccount(self,OwnerAccount):
"
6200,"def __init__(self):
"
6201,"def get_OwnerId(self):
"
6202,"def set_OwnerId(self,OwnerId):
"
6203,"def get_ResourceOwnerAccount(self):
"
6204,"def set_ResourceOwnerAccount(self,ResourceOwnerAccount):
"
6205,"def get_ResourceOwnerId(self):
"
6206,"def set_ResourceOwnerId(self,ResourceOwnerId):
"
6207,"def get_DBInstanceId(self):
"
6208,"def set_DBInstanceId(self,DBInstanceId):
"
6209,"def get_InstanceNetworkType(self):
"
6210,"def set_InstanceNetworkType(self,InstanceNetworkType):
"
6211,"def get_VPCId(self):
"
6212,"def set_VPCId(self,VPCId):
"
6213,"def get_VSwitchId(self):
"
6214,"def set_VSwitchId(self,VSwitchId):
"
6215,"def get_PrivateIpAddress(self):
"
6216,"def set_PrivateIpAddress(self,PrivateIpAddress):
"
6217,"def get_OwnerAccount(self):
"
6218,"def set_OwnerAccount(self,OwnerAccount):
"
6219,"def __init__(self):
"
6220,"def get_TypeName(self):
"
6221,"def set_TypeName(self,TypeName):
"
6222,"def __init__(self):
"
6223,"def get_OwnerId(self):
"
6224,"def set_OwnerId(self,OwnerId):
"
6225,"def get_ResourceOwnerAccount(self):
"
6226,"def set_ResourceOwnerAccount(self,ResourceOwnerAccount):
"
6227,"def get_ResourceOwnerId(self):
"
6228,"def set_ResourceOwnerId(self,ResourceOwnerId):
"
6229,"def get_ServerCertificateId(self):
"
6230,"def set_ServerCertificateId(self,ServerCertificateId):
"
6231,"def get_OwnerAccount(self):
"
6232,"def set_OwnerAccount(self,OwnerAccount):
"
6233,"def __init__(self):
"
6234,"def __init__(self):
"
6235,"def get_InstanceId(self):
"
6236,"def set_InstanceId(self,InstanceId):
"
6237,"def get_InstanceType(self):
"
6238,"def set_InstanceType(self,InstanceType):
"
6239,"def get_QpsPosition(self):
"
6240,"def set_QpsPosition(self,QpsPosition):
"
6241,"def get_Level(self):
"
6242,"def set_Level(self,Level):
"
6243,"def _request(self,url,data,action,content_type):
"
6244,"def get(self,url,data = None,content_type = 'application/json'):
"
6245,"def post(self,url,data = { },content_type = 'application/json'):
"
6246,"def put(self,url,data = { },content_type = 'application/json'):
"
6247,"def delete(self,url,data = None,content_type = 'application/json'):
"
6248,"def setUp(self):
"
6249,"def test_str_field_representation(self):
"
6250,"def test_str_field_with_type(self):
"
6251,"def setUp(self):
"
6252,"def test_reversed_choices(self):
"
6253,"def test_to_internal_value_should_map_choice_text_to_id(self):
"
6254,"def test_to_internal_value_with_choice_not_found_should_raise_validation_error(self):
"
6255,"def __init__(self,* args,** kwargs):
"
6256,"def clean_model(self):
"
6257,"def clean_params(self):
"
6258,"def get_link(self,obj):
"
6259,"def clean(self):
"
6260,"def ready(self):
"
6261,"def ready(self):
"
6262,"def __init__(self,group_object = None,extra_fields = None,* args,** kwargs):
"
6263,"def get(self):
"
6264,"def post(self):
"
6265,"def put(self):
"
6266,"def delete(self):
"
6267,"def options(self):
"
6268,"def head(self):
"
6269,"def get(self):
"
6270,"def get(self):
"
6271,"def get(self):
"
6272,"def get_app(self):
"
6273,"def test_get(self):
"
6274,"def test_head(self):
"
6275,"def test_options(self):
"
6276,"def test_load_and_store_cookies(self):
"
6277,"def test_template_and_context_in_response(self):
"
6278,"def test_smoke(self,reportdir,allure_impl,schema):
"
6279,"def test_empty_initial_environment(self,allure_impl):
"
6280,"def test_not_store_environment_file_if_environment_empty(self,reportdir,allure_impl):
"
6281,"def test_store_environment_file_if_environment_present(self,reportdir,allure_impl,properties_file_name):
"
6282,"def __init__(self,credentials,query):
"
6283,"def _request_params(self):
"
6284,"def _timestamp(self):
"
6285,"def parse(self,data):
"
6286,"def test_all_core_request_params_are_present_and_correct(self,mock_get):
"
6287,"def test_minutes_option_sets_last_minutes_request_param(self,mock_get):
"
6288,"def test_parses_piwik_visitors_metric(self):
"
6289,"def test_sets_timestamp_to_now(self):
"
6290,"def test_main_disallows_start_at_and_end_at_date_arguments(self):
"
6291,"def test_main_fetches_and_pushes_parsed_data(self,mock_get,mock_pusher):
"
6292,"def __init__(self):
"
6293,"def create(self):
"
6294,"def get(self,* args,** kwargs):
"
6295,"def set(self,* args,** kwargs):
"
6296,"def __init__(self,inputDim,outputDim,layerSizes,train = True,activation = 'relu',temporalLayer = - 1):
"
6297,"def initParams(self):
"
6298,"def updateParams(self,scale,update):
"
6299,"def vecToStack(self,vec):
"
6300,"def vectorize(self,x):
"
6301,"def paramVec(self):
"
6302,"def costAndGradVec(self,params,data,labels):
"
6303,"def costAndGrad(self,data,labels,key = None):
"
6304,"def toFile(self,fid):
"
6305,"def fromFile(self,fid):
"
6306,"def request(self,** request):
"
6307,"def __init__(self,item,date,user,template):
"
6308,"def get_cvc_field(self):
"
6309,"def get_address_line1_field(self):
"
6310,"def get_address_zip_field(self):
"
6311,"def __init__(self,validate_cvc = True,validate_address = False,prefix = FORM_PREIX,* args,** kwargs):
"
6312,"def __init__(self,* args,** kwargs):
"
6313,"def __init__(self,prefix = FORM_PREIX,* args,** kwargs):
"
6314,"def clean(self):
"
6315,"def get_customer_description(self,user):
"
6316,"def save(self,user):
"
6317,"def test_serialization(self):
"
6318,"def test_exceptions(self):
"
6319,"def test_varint(self):
"
6320,"def test_javascript_execution(self):
"
6321,"def test_right_click_default(self):
"
6322,"def test_right_click_enabled(self):
"
6323,"def test_right_click_disabled(self):
"
6324,"def test_right_click_input_only_non_input(self):
"
6325,"def test_right_click_input_only_input(self):
"
6326,"def test_right_click_enabled_persistent(self):
"
6327,"def test_right_click_disabled_persistent(self):
"
6328,"def test_right_click_input_only_non_input_persistent(self):
"
6329,"def test_right_click_input_only_input_persistent(self):
"
6330,"def setUp(self):
"
6331,"def test_check(self):
"
6332,"def __init__(self):
"
6333,"def create_user(self,userdata):
"
6334,"def check_user(self,userdata):
"
6335,"def count_users(self):
"
6336,"def username_exists(self,username):
"
6337,"def get_all(self):
"
6338,"def get(self,id):
"
6339,"def update(self,data,id):
"
6340,"def delete(self,id):
"
6341,"def __init__(self,stream):
"
6342,"def fail(self,message):
"
6343,"def is_isolated(self,stack):
"
6344,"def is_breaking(self,tag,other_tag):
"
6345,"def enter_tag(self,tag,ctx):
"
6346,"def filter_stream(self,stream):
"
6347,"def filter_stream(self,stream):
"
6348,"def __init__(self):
"
6349,"def _get_temper_devices(self):
"
6350,"def get_temperature(self,units = 'celsius'):
"
6351,"def __init__(self,crowd_name):
"
6352,"def get_frontend_submit_url(self,crowd_config):
"
6353,"def get_assignment_url(self):
"
6354,"def get_backend_submit_url(self):
"
6355,"def validate_create_request(self,request_json):
"
6356,"def __init__(self,iterable =(),maxlen = None):
"
6357,"def maxlen(self):
"
6358,"def clear(self):
"
6359,"def append(self,x):
"
6360,"def appendleft(self,x):
"
6361,"def extend(self,iterable):
"
6362,"def extendleft(self,iterable):
"
6363,"def pop(self):
"
6364,"def popleft(self):
"
6365,"def count(self,value):
"
6366,"def remove(self,value):
"
6367,"def rotate(self,n = 1):
"
6368,"def __repr__(self):
"
6369,"def __iter__(self):
"
6370,"def _iter_impl(self,original_state,giveup):
"
6371,"def __reversed__(self):
"
6372,"def _reversed_impl(self,original_state,giveup):
"
6373,"def __len__(self):
"
6374,"def __getref(self,index):
"
6375,"def __getitem__(self,index):
"
6376,"def __setitem__(self,index,value):
"
6377,"def __delitem__(self,index):
"
6378,"def __reduce_ex__(self,proto):
"
6379,"def __hash__(self):
"
6380,"def __copy__(self):
"
6381,"def __eq__(self,other):
"
6382,"def __ne__(self,other):
"
6383,"def __lt__(self,other):
"
6384,"def __le__(self,other):
"
6385,"def __gt__(self,other):
"
6386,"def __ge__(self,other):
"
6387,"def __iadd__(self,other):
"
6388,"def __init__(self,deq,itergen):
"
6389,"def next(self):
"
6390,"def __iter__(self):
"
6391,"def __init__(self,* args,** kwds):
"
6392,"def __missing__(self,key):
"
6393,"def __repr__(self,recurse = set()):
"
6394,"def copy(self):
"
6395,"def __copy__(self):
"
6396,"def __reduce__(self):
"
6397,"def __init__(self,events =[]):
"
6398,"def append(self,event):
"
6399,"def fire(self,e):
"
6400,"def __init__(self):
"
6401,"def _onsuccess(self,event):
"
6402,"def open(self,name,onsuccess,version = 1.0,onerror = None,onupgradeneeded = None):
"
6403,"def transaction(self,entities,mode = 'read'):
"
6404,"def __init__(self,transaction):
"
6405,"def objectStore(self,name):
"
6406,"def __init__(self,objectStore):
"
6407,"def clear(self,onsuccess = None,onerror = None):
"
6408,"def _helper(self,func,object,onsuccess = None,onerror = None):
"
6409,"def put(self,obj,key = None,onsuccess = None,onerror = None):
"
6410,"def add(self,obj,key,onsuccess = None,onerror = None):
"
6411,"def delete(self,index,onsuccess = None,onerror = None):
"
6412,"def query(self,* args):
"
6413,"def fetchall(self):
"
6414,"def get(self,key,onsuccess = None,onerror = None):
"
6415,"def __init__(self,obj):
"
6416,"def __lt__(self,other):
"
6417,"def __init__(self,indent = 1,width = 80,depth = None,stream = None):
"
6418,"def pprint(self,object):
"
6419,"def pformat(self,object):
"
6420,"def isrecursive(self,object):
"
6421,"def isreadable(self,object):
"
6422,"def _format(self,object,stream,indent,allowance,context,level):
"
6423,"def _repr(self,object,context,level):
"
6424,"def format(self,object,context,maxlevels,level):
"
6425,"def tearDown(self):
"
6426,"def test_issue1395_1(self):
"
6427,"def test_issue1395_2(self):
"
6428,"def test_issue1395_3(self):
"
6429,"def test_issue1395_4(self):
"
6430,"def test_issue1395_5(self):
"
6431,"def test_names(self):
"
6432,"def normalize_calendar(self,s):
"
6433,"def test_output(self):
"
6434,"def test_output_textcalendar(self):
"
6435,"def test_output_htmlcalendar_encoding_ascii(self):
"
6436,"def test_output_htmlcalendar_encoding_utf8(self):
"
6437,"def test_output_htmlcalendar_encoding_default(self):
"
6438,"def test_yeardatescalendar(self):
"
6439,"def test_yeardayscalendar(self):
"
6440,"def test_formatmonth(self):
"
6441,"def test_prweek(self):
"
6442,"def test_prmonth(self):
"
6443,"def test_pryear(self):
"
6444,"def test_format(self):
"
6445,"def test_isleap(self):
"
6446,"def test_setfirstweekday(self):
"
6447,"def test_illegal_weekday_reported(self):
"
6448,"def test_enumerate_weekdays(self):
"
6449,"def test_days(self):
"
6450,"def test_months(self):
"
6451,"def test_locale_calendars(self):
"
6452,"def test_itermonthdates(self):
"
6453,"def setUp(self):
"
6454,"def tearDown(self):
"
6455,"def check_weeks(self,year,month,weeks):
"
6456,"def test_february(self):
"
6457,"def test_april(self):
"
6458,"def test_december(self):
"
6459,"def test_february(self):
"
6460,"def test_april(self):
"
6461,"def test_december(self):
"
6462,"def test_timegm(self):
"
6463,"def test_january(self):
"
6464,"def test_february_leap(self):
"
6465,"def test_february_nonleap(self):
"
6466,"def test_december(self):
"
6467,"def test_zeroth_month(self):
"
6468,"def test_thirteenth_month(self):
"
6469,"def test_illegal_month_reported(self):
"
6470,"def test_no_range(self):
"
6471,"def test_no_leapdays(self):
"
6472,"def test_no_leapdays_upper_boundary(self):
"
6473,"def test_one_leapday_lower_boundary(self):
"
6474,"def test_several_leapyears_in_range(self):
"
6475,"def assertValid(self,str,symbol = 'single'):
"
6476,"def assertIncomplete(self,str,symbol = 'single'):
"
6477,"def assertInvalid(self,str,symbol = 'single',is_syntax = 1):
"
6478,"def test_valid(self):
"
6479,"def test_incomplete(self):
"
6480,"def test_invalid(self):
"
6481,"def test_filename(self):
"
6482,"def msg_as_input(self,msg):
"
6483,"def __init__(self,conn,baseclass):
"
6484,"def handle_read(self):
"
6485,"def handle_close(self):
"
6486,"def push(self,what):
"
6487,"def handle_error(self):
"
6488,"def collect_incoming_data(self,data):
"
6489,"def handle_error(self):
"
6490,"def cmd_port(self,arg):
"
6491,"def cmd_pasv(self,arg):
"
6492,"def cmd_eprt(self,arg):
"
6493,"def cmd_epsv(self,arg):
"
6494,"def cmd_echo(self,arg):
"
6495,"def cmd_noop(self,arg):
"
6496,"def cmd_user(self,arg):
"
6497,"def cmd_pass(self,arg):
"
6498,"def cmd_acct(self,arg):
"
6499,"def cmd_rnfr(self,arg):
"
6500,"def cmd_rnto(self,arg):
"
6501,"def cmd_dele(self,arg):
"
6502,"def cmd_cwd(self,arg):
"
6503,"def cmd_size(self,arg):
"
6504,"def cmd_mkd(self,arg):
"
6505,"def cmd_rmd(self,arg):
"
6506,"def cmd_pwd(self,arg):
"
6507,"def cmd_type(self,arg):
"
6508,"def cmd_quit(self,arg):
"
6509,"def cmd_abor(self,arg):
"
6510,"def cmd_stor(self,arg):
"
6511,"def cmd_rest(self,arg):
"
6512,"def cmd_retr(self,arg):
"
6513,"def cmd_list(self,arg):
"
6514,"def cmd_nlst(self,arg):
"
6515,"def cmd_opts(self,arg):
"
6516,"def cmd_mlsd(self,arg):
"
6517,"def cmd_setlongretr(self,arg):
"
6518,"def __init__(self,address,af = socket.AF_INET):
"
6519,"def start(self):
"
6520,"def run(self):
"
6521,"def stop(self):
"
6522,"def handle_accepted(self,conn,addr):
"
6523,"def handle_connect(self):
"
6524,"def writable(self):
"
6525,"def handle_error(self):
"
6526,"def secure_connection(self):
"
6527,"def _do_ssl_handshake(self):
"
6528,"def _do_ssl_shutdown(self):
"
6529,"def handle_read_event(self):
"
6530,"def handle_write_event(self):
"
6531,"def send(self,data):
"
6532,"def handle_error(self):
"
6533,"def close(self):
"
6534,"def __init__(self,conn,baseclass):
"
6535,"def __init__(self,conn):
"
6536,"def cmd_auth(self,line):
"
6537,"def cmd_ccc(self,line):
"
6538,"def cmd_pbsz(self,line):
"
6539,"def cmd_prot(self,line):
"
6540,"def setUp(self):
"
6541,"def tearDown(self):
"
6542,"def check_data(self,received,expected):
"
6543,"def test_getwelcome(self):
"
6544,"def test_sanitize(self):
"
6545,"def test_exceptions(self):
"
6546,"def test_all_errors(self):
"
6547,"def test_set_pasv(self):
"
6548,"def test_voidcmd(self):
"
6549,"def test_login(self):
"
6550,"def test_acct(self):
"
6551,"def test_rename(self):
"
6552,"def test_delete(self):
"
6553,"def test_size(self):
"
6554,"def test_mkd(self):
"
6555,"def test_rmd(self):
"
6556,"def test_cwd(self):
"
6557,"def test_pwd(self):
"
6558,"def test_quit(self):
"
6559,"def test_abort(self):
"
6560,"def test_retrbinary(self):
"
6561,"def test_retrbinary_rest(self):
"
6562,"def test_retrlines(self):
"
6563,"def test_storbinary(self):
"
6564,"def test_storbinary_rest(self):
"
6565,"def test_storlines(self):
"
6566,"def test_nlst(self):
"
6567,"def test_dir(self):
"
6568,"def test_mlsd(self):
"
6569,"def test_makeport(self):
"
6570,"def test_makepasv(self):
"
6571,"def test_with_statement(self):
"
6572,"def test_source_address(self):
"
6573,"def test_source_address_passive_connection(self):
"
6574,"def test_parse257(self):
"
6575,"def test_line_too_long(self):
"
6576,"def test_retrlines_too_long(self):
"
6577,"def setUp(self):
"
6578,"def tearDown(self):
"
6579,"def test_af(self):
"
6580,"def test_makeport(self):
"
6581,"def test_makepasv(self):
"
6582,"def test_transfer(self):
"
6583,"def setUp(self):
"
6584,"def setUp(self):
"
6585,"def tearDown(self):
"
6586,"def test_control_connection(self):
"
6587,"def test_data_connection(self):
"
6588,"def test_login(self):
"
6589,"def test_auth_issued_twice(self):
"
6590,"def test_auth_ssl(self):
"
6591,"def test_context(self):
"
6592,"def test_ccc(self):
"
6593,"def setUp(self):
"
6594,"def tearDown(self):
"
6595,"def testTimeoutDefault(self):
"
6596,"def testTimeoutNone(self):
"
6597,"def testTimeoutValue(self):
"
6598,"def testTimeoutConnect(self):
"
6599,"def testTimeoutDifferentOrder(self):
"
6600,"def testTimeoutDirectAccess(self):
"
6601,"def test_import_parent(self):
"
6602,"def test_bad_parent(self):
"
6603,"def test_raising_parent_after_importing_child(self):
"
6604,"def test_raising_parent_after_relative_importing_child(self):
"
6605,"def test_raising_parent_after_double_relative_importing_child(self):
"
6606,"def test_module_not_package(self):
"
6607,"def test_module_not_package_but_side_effects(self):
"
6608,"def __iter__(self):
"
6609,"def __next__(self):
"
6610,"def pickletest(self,it,stop = 4,take = 1,compare = None):
"
6611,"def test_accumulate(self):
"
6612,"def test_chain(self):
"
6613,"def test_chain_from_iterable(self):
"
6614,"def test_chain_reducible(self):
"
6615,"def test_combinations(self):
"
6616,"def test_combinations_tuple_reuse(self):
"
6617,"def test_combinations_with_replacement(self):
"
6618,"def test_combinations_with_replacement_tuple_reuse(self):
"
6619,"def test_permutations(self):
"
6620,"def test_permutations_tuple_reuse(self):
"
6621,"def test_combinatorics(self):
"
6622,"def test_compress(self):
"
6623,"def test_count(self):
"
6624,"def test_count_with_stride(self):
"
6625,"def test_cycle(self):
"
6626,"def test_groupby(self):
"
6627,"def test_filter(self):
"
6628,"def test_filterfalse(self):
"
6629,"def test_zip(self):
"
6630,"def test_zip_tuple_reuse(self):
"
6631,"def test_ziplongest(self):
"
6632,"def test_zip_longest_tuple_reuse(self):
"
6633,"def test_zip_longest_pickling(self):
"
6634,"def test_bug_7244(self):
"
6635,"def test_product(self):
"
6636,"def test_product_tuple_reuse(self):
"
6637,"def test_product_pickling(self):
"
6638,"def test_repeat(self):
"
6639,"def test_map(self):
"
6640,"def test_starmap(self):
"
6641,"def test_islice(self):
"
6642,"def test_takewhile(self):
"
6643,"def test_dropwhile(self):
"
6644,"def test_tee(self):
"
6645,"def test_tee_del_backward(self):
"
6646,"def test_StopIteration(self):
"
6647,"def test_accumulate(self):
"
6648,"def test_accumulate_reducible(self):
"
6649,"def test_chain(self):
"
6650,"def test_chain_from_iterable(self):
"
6651,"def test_combinations(self):
"
6652,"def test_combinations_with_replacement(self):
"
6653,"def test_compress(self):
"
6654,"def test_count(self):
"
6655,"def test_cycle(self):
"
6656,"def test_dropwhile(self):
"
6657,"def test_groupby(self):
"
6658,"def test_filter(self):
"
6659,"def test_filterfalse(self):
"
6660,"def test_map(self):
"
6661,"def test_islice(self):
"
6662,"def test_zip(self):
"
6663,"def test_zip_longest(self):
"
6664,"def test_permutations(self):
"
6665,"def test_product(self):
"
6666,"def test_repeat(self):
"
6667,"def test_stapmap(self):
"
6668,"def test_takewhile(self):
"
6669,"def makecycle(self,iterator,container):
"
6670,"def test_accumulate(self):
"
6671,"def test_chain(self):
"
6672,"def test_chain_from_iterable(self):
"
6673,"def test_combinations(self):
"
6674,"def test_combinations_with_replacement(self):
"
6675,"def test_compress(self):
"
6676,"def test_count(self):
"
6677,"def test_cycle(self):
"
6678,"def test_dropwhile(self):
"
6679,"def test_groupby(self):
"
6680,"def test_issue2246(self):
"
6681,"def test_filter(self):
"
6682,"def test_filterfalse(self):
"
6683,"def test_zip(self):
"
6684,"def test_zip_longest(self):
"
6685,"def test_map(self):
"
6686,"def test_islice(self):
"
6687,"def test_permutations(self):
"
6688,"def test_product(self):
"
6689,"def test_repeat(self):
"
6690,"def test_starmap(self):
"
6691,"def test_takewhile(self):
"
6692,"def __init__(self,seqn):
"
6693,"def __getitem__(self,i):
"
6694,"def __init__(self,seqn):
"
6695,"def __iter__(self):
"
6696,"def __next__(self):
"
6697,"def __init__(self,seqn):
"
6698,"def __iter__(self):
"
6699,"def __init__(self,seqn):
"
6700,"def __next__(self):
"
6701,"def __init__(self,seqn):
"
6702,"def __iter__(self):
"
6703,"def __init__(self,seqn):
"
6704,"def __iter__(self):
"
6705,"def __next__(self):
"
6706,"def __init__(self,seqn):
"
6707,"def __iter__(self):
"
6708,"def __next__(self):
"
6709,"def test_accumulate(self):
"
6710,"def test_chain(self):
"
6711,"def test_compress(self):
"
6712,"def test_product(self):
"
6713,"def test_cycle(self):
"
6714,"def test_groupby(self):
"
6715,"def test_filter(self):
"
6716,"def test_filterfalse(self):
"
6717,"def test_zip(self):
"
6718,"def test_ziplongest(self):
"
6719,"def test_map(self):
"
6720,"def test_islice(self):
"
6721,"def test_starmap(self):
"
6722,"def test_takewhile(self):
"
6723,"def test_dropwhile(self):
"
6724,"def test_tee(self):
"
6725,"def test_repeat(self):
"
6726,"def test_sf_793826(self):
"
6727,"def test_sf_950057(self):
"
6728,"def test_keywords_in_subclass(self):
"
6729,"def dumps(self,arg,proto = None):
"
6730,"def loads(self,buf,** kwds):
"
6731,"def dumps(self,arg,protocol = None):
"
6732,"def loads(self,buf,** kwds):
"
6733,"def dumps(self,arg,proto = None):
"
6734,"def loads(self,buf,** kwds):
"
6735,"def get_dispatch_table(self):
"
6736,"def get_dispatch_table(self):
"
6737,"def test_issue18339(self):
"
6738,"def get_dispatch_table(self):
"
6739,"def get_dispatch_table(self):
"
6740,"def handle_expt(self):
"
6741,"def setUp(self):
"
6742,"def tearDown(self):
"
6743,"def testQuoteData(self):
"
6744,"def setUp(self):
"
6745,"def tearDown(self):
"
6746,"def testBasic(self):
"
6747,"def testSourceAddress(self):
"
6748,"def testSend(self):
"
6749,"def testSendNeedingDotQuote(self):
"
6750,"def testSendNullSender(self):
"
6751,"def testSendMessage(self):
"
6752,"def testSendMessageMultipleResentRaises(self):
"
6753,"def setUp(self):
"
6754,"def tearDown(self):
"
6755,"def testNotConnected(self):
"
6756,"def testNonnumericPort(self):
"
6757,"def tearDown(self):
"
6758,"def testFailingHELO(self):
"
6759,"def __init__(self,extra_features,* args,** kw):
"
6760,"def smtp_VRFY(self,arg):
"
6761,"def smtp_EXPN(self,arg):
"
6762,"def smtp_AUTH(self,arg):
"
6763,"def smtp_QUIT(self,arg):
"
6764,"def smtp_MAIL(self,arg):
"
6765,"def smtp_RCPT(self,arg):
"
6766,"def smtp_RSET(self,arg):
"
6767,"def smtp_DATA(self,arg):
"
6768,"def handle_error(self):
"
6769,"def __init__(self,* args,** kw):
"
6770,"def handle_accepted(self,conn,addr):
"
6771,"def process_message(self,peer,mailfrom,rcpttos,data):
"
6772,"def add_feature(self,feature):
"
6773,"def handle_error(self):
"
6774,"def setUp(self):
"
6775,"def tearDown(self):
"
6776,"def testBasic(self):
"
6777,"def testEHLO(self):
"
6778,"def testVRFY(self):
"
6779,"def testAUTH_LOGIN(self):
"
6780,"def testAUTH_CRAM_MD5(self):
"
6781,"def test_421_from_mail_cmd(self):
"
6782,"def test_421_from_data_cmd(self):
"
6783,"def setUp(self):
"
6784,"def tearDown(self):
"
6785,"def test_empty(self):
"
6786,"def test_setget(self):
"
6787,"def __init__(self):
"
6788,"def callback(self,frame,event,arg):
"
6789,"def add_event(self,event,frame = None):
"
6790,"def get_events(self):
"
6791,"def __init__(self,testcase):
"
6792,"def callback(self,frame,event,arg):
"
6793,"def trace_call(self,frame):
"
6794,"def trace_return(self,frame):
"
6795,"def trace_exception(self,frame):
"
6796,"def trace_pass(self,frame):
"
6797,"def new_watcher(self):
"
6798,"def test_simple(self):
"
6799,"def test_exception(self):
"
6800,"def test_caught_exception(self):
"
6801,"def test_caught_nested_exception(self):
"
6802,"def test_nested_exception(self):
"
6803,"def test_exception_in_except_clause(self):
"
6804,"def test_exception_propogation(self):
"
6805,"def test_raise_twice(self):
"
6806,"def test_raise_reraise(self):
"
6807,"def test_raise(self):
"
6808,"def test_distant_exception(self):
"
6809,"def test_generator(self):
"
6810,"def test_stop_iteration(self):
"
6811,"def new_watcher(self):
"
6812,"def test_simple(self):
"
6813,"def test_basic_exception(self):
"
6814,"def test_caught_exception(self):
"
6815,"def test_distant_exception(self):
"
6816,"def test_ascii_letters(self):
"
6817,"def test_hangul_syllables(self):
"
6818,"def test_cjk_unified_ideographs(self):
"
6819,"def test_bmp_characters(self):
"
6820,"def test_misc_symbols(self):
"
6821,"def test_aliases(self):
"
6822,"def test_aliases_names_in_pua_range(self):
"
6823,"def test_named_sequences_names_in_pua_range(self):
"
6824,"def test_named_sequences_sample(self):
"
6825,"def test_named_sequences_full(self):
"
6826,"def test_errors(self):
"
6827,"def __init__(self,args):
"
6828,"def tm_year(self):
"
6829,"def tm_mon(self):
"
6830,"def tm_mday(self):
"
6831,"def tm_hour(self):
"
6832,"def tm_min(self):
"
6833,"def tm_sec(self):
"
6834,"def tm_wday(self):
"
6835,"def tm_yday(self):
"
6836,"def tm_isdst(self):
"
6837,"def __getitem__(self,i):
"
6838,"def __iter__(self):
"
6839,"def __repr__(self):
"
6840,"def __str__(self):
"
6841,"def testCleanUp(self):
"
6842,"def testCleanupInRun(self):
"
6843,"def testTestCaseDebugExecutesCleanups(self):
"
6844,"def test_init(self):
"
6845,"def testBufferAndFailfast(self):
"
6846,"def testRunnerRegistersResult(self):
"
6847,"def test_works_with_result_without_startTestRun_stopTestRun(self):
"
6848,"def test_startTestRun_stopTestRun_called(self):
"
6849,"def test_pickle_unpickle(self):
"
6850,"def test_resultclass(self):
"
6851,"def testStdErrLookedUpAtInstantiationTime(self):
"
6852,"def testSpecifiedStreamUsed(self):
"
6853,"def __init__(self):
"
6854,"def _get_entityResolver(self):
"
6855,"def _set_entityResolver(self,entityResolver):
"
6856,"def _get_errorHandler(self):
"
6857,"def _set_errorHandler(self,errorHandler):
"
6858,"def _get_filter(self):
"
6859,"def _set_filter(self,filter):
"
6860,"def setFeature(self,name,state):
"
6861,"def supportsFeature(self,name):
"
6862,"def canSetFeature(self,name,state):
"
6863,"def getFeature(self,name):
"
6864,"def parseURI(self,uri):
"
6865,"def parse(self,input):
"
6866,"def parseWithContext(self,input,cnode,action):
"
6867,"def _parse_bytestream(self,stream,options):
"
6868,"def resolveEntity(self,publicId,systemId):
"
6869,"def _get_opener(self):
"
6870,"def _create_opener(self):
"
6871,"def _guess_media_encoding(self,source):
"
6872,"def __init__(self):
"
6873,"def _get_byteStream(self):
"
6874,"def _set_byteStream(self,byteStream):
"
6875,"def _get_characterStream(self):
"
6876,"def _set_characterStream(self,characterStream):
"
6877,"def _get_stringData(self):
"
6878,"def _set_stringData(self,data):
"
6879,"def _get_encoding(self):
"
6880,"def _set_encoding(self,encoding):
"
6881,"def _get_publicId(self):
"
6882,"def _set_publicId(self,publicId):
"
6883,"def _get_systemId(self):
"
6884,"def _set_systemId(self,systemId):
"
6885,"def _get_baseURI(self):
"
6886,"def _set_baseURI(self,uri):
"
6887,"def _get_whatToShow(self):
"
6888,"def acceptNode(self,element):
"
6889,"def startContainer(self,element):
"
6890,"def _get_async(self):
"
6891,"def abort(self):
"
6892,"def load(self,uri):
"
6893,"def loadXML(self,source):
"
6894,"def saveXML(self,snode):
"
6895,"def createDOMBuilder(self,mode,schemaType):
"
6896,"def createDOMWriter(self):
"
6897,"def createDOMInputSource(self):
"
6898,"def fit(self,X,y,sample_weight):
"
6899,"def negative_gradient(self,y_pred):
"
6900,"def __call__(self,y_pred):
"
6901,"def update_tree(self,tree,X,y,y_pred,sample_weight,update_mask,residual):
"
6902,"def update_fast_tree(self,fast_tree,X,y,y_pred,sample_weight,update_mask,residual):
"
6903,"def update_tree_leaf(self,leaf,indices_in_leaf,X,y,y_pred,sample_weight,update_mask,residual):
"
6904,"def __init__(self,regularization = 1e-2):
"
6905,"def fit(self,X,y,sample_weight):
"
6906,"def __call__(self,y_pred):
"
6907,"def negative_gradient(self,y_pred):
"
6908,"def hessian(self,y_pred):
"
6909,"def update_tree_leaf(self,leaf,indices_in_leaf,X,y,y_pred,sample_weight,update_mask,residual):
"
6910,"def __init__(self,regularization = 1.):
"
6911,"def fit(self,X,y,sample_weight):
"
6912,"def __call__(self,y_pred):
"
6913,"def negative_gradient(self,y_pred):
"
6914,"def hessian(self,y_pred):
"
6915,"def update_tree_leaf(self,leaf,indices_in_leaf,X,y,y_pred,sample_weight,update_mask,residual):
"
6916,"def fit(self,X,y,sample_weight):
"
6917,"def __call__(self,y_pred):
"
6918,"def negative_gradient(self,y_pred):
"
6919,"def hessian(self,y_pred):
"
6920,"def __init__(self,uniform_variables):
"
6921,"def fit(self,X,y,sample_weight):
"
6922,"def __call__(self,y_pred):
"
6923,"def negative_gradient(self,y_pred):
"
6924,"def hessian(self,y_pred):
"
6925,"def compute_parameters(self,trainX,trainY):
"
6926,"def update_tree(self,tree,X,y,y_pred,sample_weight,update_mask,residual):
"
6927,"def update_tree_leaf(self,leaf,indices_in_leaf,X,y,y_pred,sample_weight,update_mask,residual):
"
6928,"def __init__(self,uniform_variables,knn = 10,uniform_label = 1,distinguish_classes = True,row_norm = 1.):
"
6929,"def compute_parameters(self,trainX,trainY):
"
6930,"def __init__(self,uniform_variables,uniform_label = 1,power = 2.,ada_coefficient = 1.,allow_wrong_signs = True,use_median = False,keep_debug_info = False):
"
6931,"def fit(self,X,y,sample_weight = None):
"
6932,"def compute_groups_indices(self,X,y,label):
"
6933,"def __call__(self,pred):
"
6934,"def negative_gradient(self,y_pred):
"
6935,"def update_tree_leaf(self,leaf,indices_in_leaf,X,y,y_pred,sample_weight,update_mask,residual):
"
6936,"def __init__(self,uniform_variables,n_bins = 10,uniform_label = 1,power = 2.,ada_coefficient = 1.,allow_wrong_signs = True,use_median = False,keep_debug_info = False):
"
6937,"def compute_groups_indices(self,X,y,label):
"
6938,"def __init__(self,uniform_variables,n_neighbours = 100,uniform_label = 1,power = 2.,ada_coefficient = 1.,max_groups_on_iteration = 3000,allow_wrong_signs = True,use_median = False,keep_debug_info = False,random_state = None):
"
6939,"def compute_groups_indices(self,X,y,label):
"
6940,"def addInstance(self,movieName,instance):
"
6941,"def __init__(self):
"
6942,"def addInstance(self,movieName,instance):
"
6943,"def __init__(self):
"
6944,"def getSettings(self):
"
6945,"def setSettings(self,settings):
"
6946,"def __createFlashVars(self):
"
6947,"def __buildParamString(self):
"
6948,"def callFlash(self,functionName,arguments =[]):
"
6949,"def startUpload(self,file_id = None):
"
6950,"def cancelUpload(self,file_id,triggerErrorEvent = True):
"
6951,"def stopUpload(self):
"
6952,"def getFileByIndex(self,index):
"
6953,"def getFile(self,file_id):
"
6954,"def addFileParam(self,file_id,name,value):
"
6955,"def removeFileParam(self,file_id,name):
"
6956,"def setUploadURL(self,url):
"
6957,"def setPostParams(self,paramsDict):
"
6958,"def addPostParam(self,name,value):
"
6959,"def removePostParam(self,name):
"
6960,"def setFileSizeLimit(self,fileSizeLimit):
"
6961,"def setFileUploadLimit(self,fileUploadLimit):
"
6962,"def setFileQueueLimit(self,fileQueueLimit):
"
6963,"def setFilePostName(self,filePostName):
"
6964,"def setButtonDisabled(self,isDisabled):
"
6965,"def setButtonAction(self,buttonAction):
"
6966,"def setButtonCursor(self,cursor):
"
6967,"def setButtonText(self,html):
"
6968,"def setButtonTextPadding(self,left,top):
"
6969,"def setButtonTextStyle(self,css):
"
6970,"def setButtonDimensions(self,width,height):
"
6971,"def setButtonImageURL(self,buttonImageURL):
"
6972,"def testExternalInterface(self):
"
6973,"def flashReady(self):
"
6974,"def swfUploadLoaded(self):
"
6975,"def uploadProgress(self,file,bytesLoaded,totalBytes):
"
6976,"def uploadError(self,file,errorCode,message):
"
6977,"def uploadSuccess(self,file,receivedResponse,serverData):
"
6978,"def uploadComplete(self,file):
"
6979,"def fileDialogStart(self):
"
6980,"def fileQueued(self,file):
"
6981,"def fileQueueError(self,file,errorCode,message):
"
6982,"def fileDialogComplete(self,sel,qu,tqu):
"
6983,"def uploadStart(self,file):
"
6984,"def __init__(self):
"
6985,"def setURL(self,url):
"
6986,"def getURL(self):
"
6987,"def setSuccessTimeout(self,assume_success_timeout):
"
6988,"def getSuccessTimeout(self):
"
6989,"def setFilePostName(self,file_post_name):
"
6990,"def getFilePostName(self):
"
6991,"def setPostParams(self,post_params):
"
6992,"def addPostParam(self,name,value):
"
6993,"def removePostParam(self,name):
"
6994,"def getPostParams(self):
"
6995,"def setPreventSWFCaching(self,prevent_swf_caching):
"
6996,"def getPreventSWFCaching(self):
"
6997,"def useQueryString(self,use_query_string):
"
6998,"def isUseQueryString(self):
"
6999,"def setRequeueOnError(self,requeue_on_error):
"
7000,"def getRequeueOnError(self):
"
7001,"def setHTTPSuccess(self,http_success):
"
7002,"def getHTTPSuccess(self):
"
7003,"def setFileSizeLimit(self,file_size_limit):
"
7004,"def getFileSizeLimit(self):
"
7005,"def setFileType(self,file_types):
"
7006,"def getFileType(self):
"
7007,"def setFileTypeDescription(self,file_types_description):
"
7008,"def getFileTypeDescription(self):
"
7009,"def setFileUploadLimit(self,file_upload_limit):
"
7010,"def getFileUploadLimit(self):
"
7011,"def setFileQueueLimit(self,file_queue_limit):
"
7012,"def getFileQueueLimit(self):
"
7013,"def setButtonImageURL(self,button_image_url):
"
7014,"def getButtonImageURL(self):
"
7015,"def setButtonWidth(self,button_width):
"
7016,"def getButtonWidth(self):
"
7017,"def setButtonHeight(self,button_height):
"
7018,"def getButtonHeight(self):
"
7019,"def setButtonAction(self,button_action):
"
7020,"def getButtonAction(self):
"
7021,"def setButtonHTML(self,button_text):
"
7022,"def getButtonHTML(self):
"
7023,"def setButtonCSS(self,button_text_style):
"
7024,"def getButtonCSS(self):
"
7025,"def setButtonTopPadding(self,button_text_top_padding):
"
7026,"def getButtonTopPadding(self):
"
7027,"def setButtonLeftPadding(self,button_text_left_padding):
"
7028,"def getButtonLeftPadding(self):
"
7029,"def setFlashURL(self,flash_url):
"
7030,"def getFlashURL(self):
"
7031,"def setEventListener(self,listener):
"
7032,"def __init__(self,file):
"
7033,"def getId(self):
"
7034,"def getName(self):
"
7035,"def getCreationdate(self):
"
7036,"def getModificationdate(self):
"
7037,"def getType(self):
"
7038,"def getIndex(self):
"
7039,"def getFilestatus(self):
"
7040,"def getSize(self):
"
7041,"def swfUploadLoaded(self):
"
7042,"def uploadProgress(self,file,bytesLoaded,totalBytes):
"
7043,"def uploadError(self,file,errorCode,message):
"
7044,"def uploadSuccess(self,file,receivedResponse,serverData):
"
7045,"def uploadComplete(self,file):
"
7046,"def fileDialogStart(self):
"
7047,"def fileQueued(self,file):
"
7048,"def fileQueueError(self,file,errorCode,message):
"
7049,"def fileDialogComplete(self,sel,qu,tqu):
"
7050,"def uploadStart(self,file):
"
7051,"def __init__(self):
"
7052,"def onShow(self):
"
7053,"def onHide(self):
"
7054,"def __init__(self):
"
7055,"def onMouseDown(self,sender,x,y):
"
7056,"def onMouseEnter(self,sender):
"
7057,"def onMouseLeave(self,sender):
"
7058,"def onMouseMove(self,sender,x,y):
"
7059,"def onMouseUp(self,sender,x,y):
"
7060,"def onKeyUp(self,sender,keyCode,modifiers):
"
7061,"def onKeyDown(self,sender,keyCode,modifiers):
"
7062,"def onClick(self,sender):
"
7063,"def onKeyPress(self,sender,keyCode,modifiers):
"
7064,"def __init__(self):
"
7065,"def draw(self):
"
7066,"def __init__(self):
"
7067,"def draw(self):
"
7068,"def __init__(self):
"
7069,"def onLoad(self,sender = None):
"
7070,"def onError(self):
"
7071,"def draw(self):
"
7072,"def __init__(self):
"
7073,"def draw(self):
"
7074,"def drawSpirograph(self,R,r,O):
"
7075,"def __init__(self):
"
7076,"def onTimer(self,t = None):
"
7077,"def getTimeSeconds(self):
"
7078,"def getTimeMilliseconds(self):
"
7079,"def draw(self):
"
7080,"def __init__(self):
"
7081,"def __init__(self,dayOfWeek,startMinutes,endMinutes):
"
7082,"def compareTo(self,other):
"
7083,"def getDayOfWeek(self):
"
7084,"def getDescription(self):
"
7085,"def getHrsMins(self,mins):
"
7086,"def __init__(self,labelObjectPairs):
"
7087,"def getObject(self,index):
"
7088,"def getSelectedObject(self):
"
7089,"def setSelectedObject(self,selectedObject):
"
7090,"def getNObjects(self):
"
7091,"def __init__(self,backgroundColor,borderColor):
"
7092,"def __init__(self,chart):
"
7093,"def onChange(self,sender):
"
7094,"def copyChartPropertiesIntoForm(self,p):
"
7095,"def copyFormPropertiesIntoChart(self,p):
"
7096,"def getColorSpec(self,backgroundColor,borderColor):
"
7097,"def onClickClose(self,event):
"
7098,"def onClickDefault(self,sender):
"
7099,"def __init__(self):
"
7100,"def onClickPrevSlice(self,event):
"
7101,"def onClickNextSlice(self,event):
"
7102,"def __init__(self,name,conn):
"
7103,"def notify(self,* args):
"
7104,"def __call__(self,* args):
"
7105,"def __getattr__(self,name):
"
7106,"def __init__(self,connectionHandler):
"
7107,"def __getattr__(self,name):
"
7108,"def __init__(self):
"
7109,"def onContextMenu(self,sender):
"
7110,"def execute(self):
"
7111,"def onShow(self):
"
7112,"def example(self):
"
7113,"def another_example(self):
"
7114,"def __init__(self):
"
7115,"def getMailItemCount(self):
"
7116,"def getMailItem(self,index):
"
7117,"def createFakeMail(self):
"
7118,"def __str__(self):
"
7119,"def __init__(self):
"
7120,"def onTimer(self,timer):
"
7121,"def __init__(self):
"
7122,"def __init__(self,unittest,test_name,output):
"
7123,"def onError(self,responseText,status):
"
7124,"def __init__(self,test_gen_folder):
"
7125,"def do_test(self,output,name):
"
7126,"def write_test_output(self,name = None,div_id = None):
"
7127,"def _run_test(self,test_method_name):
"
7128,"def run(self):
"
7129,"def check_start_next_test(self):
"
7130,"def setUp(self):
"
7131,"def tearDown(self):
"
7132,"def getName(self):
"
7133,"def getNameFmt(self,msg = """"):
"
7134,"def getTestMethods(self):
"
7135,"def isTestMethod(self,method):
"
7136,"def fail(self,msg = None):
"
7137,"def startTest(self):
"
7138,"def failIf(self,expr,msg = None):
"
7139,"def failUnless(self,expr,msg = None):
"
7140,"def failUnlessRaises(self,excClass,callableObj,* args,** kwargs):
"
7141,"def failUnlessEqual(self,first,second,msg = None):
"
7142,"def failIfEqual(self,first,second,msg = None):
"
7143,"def failUnlessAlmostEqual(self,first,second,places = 7,msg = None):
"
7144,"def failIfAlmostEqual(self,first,second,places = 7,msg = None):
"
7145,"def displayStats(self):
"
7146,"def __init__(self,Width = 0,Height = 0,** kwargs):
"
7147,"def setWidth(self,width):
"
7148,"def setHeight(self,height):
"
7149,"def getContext(self):
"
7150,"def isEmulation(self):
"
7151,"def init(self):
"
7152,"def __init__(self,url = """",load_listener = None):
"
7153,"def isLoaded(self):
"
7154,"def __init__(self,listener = None):
"
7155,"def add(self,sender):
"
7156,"def addLoadListener(self,listener):
"
7157,"def isLoaded(self):
"
7158,"def onError(self,sender):
"
7159,"def onLoad(self,sender):
"
7160,"def __init__(self,fmt):
"
7161,"def format(self,num):
"
7162,"def __init__(self,widget = None,** kwargs):
"
7163,"def initWidget(self,widget):
"
7164,"def isAttached(self):
"
7165,"def onAttach(self):
"
7166,"def onDetach(self):
"
7167,"def setWidget(self,widget):
"
7168,"def onBrowserEvent(self,event):
"
7169,"def __init__(self,** kwargs):
"
7170,"def addGlassListener(self,listener):
"
7171,"def hide(self,autoClosed = False):
"
7172,"def _event_targets_popup(self,event):
"
7173,"def onEventPreview(self,event):
"
7174,"def onHideImpl(self,popup):
"
7175,"def onShowImpl(self,popup):
"
7176,"def removeGlassListener(self,listener):
"
7177,"def setGlassPosition(self):
"
7178,"def showGlass(self):
"
7179,"def hideGlass(self):
"
7180,"def onWindowResized(self,width,height):
"
7181,"def show(self):
"
7182,"def adjustMousePos(self,x,y):
"
7183,"def onMouseDown(self,sender,x,y):
"
7184,"def onMouseEnter(self,sender):
"
7185,"def onMouseLeave(self,sender):
"
7186,"def onMouseMove(self,sender,x,y):
"
7187,"def onMouseUp(self,sender,x,y):
"
7188,"def clear(self):
"
7189,"def doAttachChildren(self):
"
7190,"def doDetachChildren(self):
"
7191,"def getWidgetCount(self):
"
7192,"def getWidget(self,index):
"
7193,"def getIndexedChild(self,index):
"
7194,"def addIndexedItem(self,index,child):
"
7195,"def getWidgetIndex(self,child):
"
7196,"def getChildren(self):
"
7197,"def setWidget(self,index,widget):
"
7198,"def append(self,widget):
"
7199,"def __setitem__(self,index):
"
7200,"def __getitem__(self,index):
"
7201,"def __len__(self):
"
7202,"def __nonzero__(self):
"
7203,"def __iter__(self):
"
7204,"def __init__(self,** kwargs):
"
7205,"def disown(self,widget):
"
7206,"def adopt(self,widget,container):
"
7207,"def __init__(self,** kwargs):
"
7208,"def getLayoutData(self):
"
7209,"def getParent(self):
"
7210,"def isAttached(self):
"
7211,"def setContextMenu(self,menu):
"
7212,"def onBrowserEvent(self,event):
"
7213,"def onLoad(self):
"
7214,"def doDetachChildren(self):
"
7215,"def doAttachChildren(self):
"
7216,"def onAttach(self):
"
7217,"def onDetach(self):
"
7218,"def setLayoutData(self,layoutData):
"
7219,"def setParent(self,parent):
"
7220,"def removeFromParent(self):
"
7221,"def getID(self):
"
7222,"def setID(self,id):
"
7223,"def __init__(self,obj,** kwargs):
"
7224,"def ignore(self,* args,** kwargs):
"
7225,"def __init__(self,type,value,context,children):
"
7226,"def __repr__(self):
"
7227,"def ___repr__(self):
"
7228,"def __init__(self,msg,type,value,context):
"
7229,"def __init__(self,grammar,convert = None):
"
7230,"def setup(self,start = None):
"
7231,"def addtoken(self,type,value,context):
"
7232,"def classify(self,type,value,context):
"
7233,"def shift(self,type,value,newstate,context):
"
7234,"def push(self,type,newdfa,newstate,context):
"
7235,"def pop(self):
"
7236,"def toggle_show_text(self,widget,data = None):
"
7237,"def toggle_activity_mode(self,widget,data = None):
"
7238,"def toggle_orientation(self,widget,data = None):
"
7239,"def destroy_progress(self,widget,data = None):
"
7240,"def __init__(self):
"
7241,"def delete_event(self,widget,event,data = None):
"
7242,"def __init__(self):
"
7243,"def __init__(self):
"
7244,"def setup(self,web_navigation):
"
7245,"def OnHistoryGoBack(self,back_uri):
"
7246,"def OnHistoryGoForward(self,forward_uri):
"
7247,"def OnHistoryGotoIndex(self,index,goto_uri):
"
7248,"def OnHistoryNewEntry(self,new_uri):
"
7249,"def OnHistoryPurge(self,num_entries):
"
7250,"def OnHistoryReload(self,reload_uri,reload_flags):
"
7251,"def onCompletion(self,response):
"
7252,"def onError(self,repsonse,status):
"
7253,"def mapLogRecord(self,record):
"
7254,"def emit(self,record):
"
7255,"def __init__(self,capacity):
"
7256,"def shouldFlush(self,record):
"
7257,"def emit(self,record):
"
7258,"def flush(self):
"
7259,"def close(self):
"
7260,"def __init__(self,capacity,flushLevel = logging.ERROR,target = None):
"
7261,"def shouldFlush(self,record):
"
7262,"def setTarget(self,target):
"
7263,"def flush(self):
"
7264,"def close(self):
"
7265,"def __getattribute__(self,name):
"
7266,"def __init__(self,name,reflineno,glob = False,to_js = None):
"
7267,"def __str__(self):
"
7268,"def __repr__(self):
"
7269,"def __init__(self,name,value = None):
"
7270,"def __init__(self,name):
"
7271,"def __init__(self,code,lineno):
"
7272,"def __str__(self):
"
7273,"def __repr__(self):
"
7274,"def __init__(self,name,lineno):
"
7275,"def __init__(self,modname,assname = None,fromlist = None):
"
7276,"def __init__(self,args,star_args,dstar_args,defaults):
"
7277,"def __init__(self,items):
"
7278,"def __str__(self):
"
7279,"def __repr__(self):
"
7280,"def __init__(self,msg,lineno = None,filename = None):
"
7281,"def __str__(self):
"
7282,"def __repr__(self):
"
7283,"def __init__(self,srcfile,module_name,options):
"
7284,"def ast_tree_creator(self,srcfile = None):
"
7285,"def tree_merge(self,dst,src,flags = None):
"
7286,"def tree_merge_class(self,dst,src):
"
7287,"def tree_replace_function(self,dst,func_node):
"
7288,"def tree_replace_stmt(self,dst,stmt_node):
"
7289,"def dispatch_file(self,tree):
"
7290,"def get_javascript(self):
"
7291,"def add_import(self,modname,fromlist = None):
"
7292,"def indent(self,n = 1):
"
7293,"def dedent(self,n = 1):
"
7294,"def get_lineno(self,node):
"
7295,"def track_lineno(self,node):
"
7296,"def add_lines(self,lines,lineno = None,split = True):
"
7297,"def get_names_depth(self,skip_class_names = True):
"
7298,"def get_jsname(self,name):
"
7299,"def get_tmp_jsname(self,prefix):
"
7300,"def add_const_int(self,value):
"
7301,"def add_const_long(self,value):
"
7302,"def add_const_float(self,value):
"
7303,"def add_const_str(self,value):
"
7304,"def assert_value(self,node,value,expected_value):
"
7305,"def assert_type(self,node,type_,expected_type):
"
7306,"def assert_instance(self,node,inst,expected_class):
"
7307,"def assert_dedent(self,level,expected_level):
"
7308,"def get_test(self,node,name = None):
"
7309,"def get_bit_expr(self,node):
"
7310,"def get_op_item(self,node,op_item,op_slice):
"
7311,"def collect_locals(self,node):
"
7312,"def create_assign_stmt(self,lhs = 'lhs',rhs = 'rhs',subst_lhs = None,subst_rhs = None):
"
7313,"def create_call_stmt(self,fname = 'fn',args = None,subst_base = None,subst_args = None):
"
7314,"def create_getindex_stmt(self,base = 'base',idx = 'idx',subst_base = None,subst_idx = None):
"
7315,"def node_and_expr(self,node):
"
7316,"def node_and_test(self,node,jsbool = False,name = None):
"
7317,"def node_arglist(self,node):
"
7318,"def node_argument(self,node):
"
7319,"def node_arith_expr(self,node):
"
7320,"def node_assert_stmt(self,node):
"
7321,"def node_augassign(self,node):
"
7322,"def node_break_stmt(self,node):
"
7323,"def node_classdef(self,node):
"
7324,"def node_comp_for(self,node):
"
7325,"def node_comp_if(self,node):
"
7326,"def node_comp_iter(self,node):
"
7327,"def node_comp_op(self,node):
"
7328,"def node_comparison(self,node):
"
7329,"def node_compound_stmt(self,node):
"
7330,"def node_continue_stmt(self,node):
"
7331,"def node_decorated(self,node):
"
7332,"def node_decorator(self,node):
"
7333,"def node_decorators(self,node):
"
7334,"def node_del_stmt(self,node):
"
7335,"def node_dictsetmaker(self,node):
"
7336,"def node_dotted_as_name(self,node):
"
7337,"def node_dotted_as_names(self,node):
"
7338,"def node_dotted_name(self,node):
"
7339,"def node_encoding_decl(self,node):
"
7340,"def node_eval_input(self,node):
"
7341,"def node_except_clause(self,node):
"
7342,"def node_exec_stmt(self,node):
"
7343,"def node_expr(self,node):
"
7344,"def _assign(self,node,left,rest):
"
7345,"def node_expr_stmt(self,node):
"
7346,"def node_exprlist(self,node):
"
7347,"def node_factor(self,node):
"
7348,"def node_flow_stmt(self,node):
"
7349,"def node_for_stmt(self,node):
"
7350,"def node_global_stmt(self,node):
"
7351,"def node_if_stmt(self,node):
"
7352,"def node_import_as_name(self,node):
"
7353,"def node_import_as_names(self,node):
"
7354,"def node_import_from(self,node):
"
7355,"def node_import_name(self,node):
"
7356,"def node_import_stmt(self,node):
"
7357,"def node_lambdef(self,node):
"
7358,"def node_listmaker(self,node,cls = 'list'):
"
7359,"def node_not_test(self,node,jsbool = False,name = None):
"
7360,"def node_old_lambdef(self,node):
"
7361,"def node_old_test(self,node):
"
7362,"def node_or_test(self,node,jsbool = False,name = None):
"
7363,"def node_parameters(self,node):
"
7364,"def node_pass_stmt(self,node):
"
7365,"def node_raise_stmt(self,node):
"
7366,"def node_return_stmt(self,node):
"
7367,"def node_shift_expr(self,node):
"
7368,"def node_simple_stmt(self,node):
"
7369,"def node_single_input(self,node):
"
7370,"def node_sliceop(self,node):
"
7371,"def node_small_stmt(self,node):
"
7372,"def node_star_expr(self,node):
"
7373,"def node_stmt(self,node):
"
7374,"def node_subscript(self,node):
"
7375,"def node_subscriptlist(self,node):
"
7376,"def node_suite(self,node):
"
7377,"def node_term(self,node):
"
7378,"def node_test(self,node):
"
7379,"def node_testlist(self,node):
"
7380,"def node_testlist1(self,node):
"
7381,"def node_testlist_gexp(self,node):
"
7382,"def node_testlist_safe(self,node):
"
7383,"def node_testlist_star_expr(self,node):
"
7384,"def node_tfpdef(self,node):
"
7385,"def node_tfplist(self,node):
"
7386,"def node_tname(self,node):
"
7387,"def node_trailer(self,node):
"
7388,"def node_try_stmt(self,node):
"
7389,"def node_typedargslist(self,node):
"
7390,"def node_varargslist(self,node):
"
7391,"def node_vfpdef(self,node):
"
7392,"def node_vfplist(self,node):
"
7393,"def node_vname(self,node):
"
7394,"def node_while_stmt(self,node):
"
7395,"def node_with_item(self,node):
"
7396,"def node_with_stmt(self,node):
"
7397,"def node_with_var(self,node):
"
7398,"def node_xor_expr(self,node):
"
7399,"def node_yield_expr(self,node):
"
7400,"def node_yield_stmt(self,node):
"
7401,"def leaftype_name(self,leaf):
"
7402,"def leaftype_number(self,leaf):
"
7403,"def substitute_js_chars(self,m):
"
7404,"def leaftype_str(self,leaf):
"
7405,"def leaf_False(self,leaf):
"
7406,"def leaf_None(self,leaf):
"
7407,"def leaf_True(self,leaf):
"
7408,"def leaf_pass(self,leaf):
"
7409,"def leaf_return(self,leaf):
"
7410,"def __init__(self,module_name):
"
7411,"def add_imported_module(self,importName):
"
7412,"def visitModule(self,node):
"
7413,"def visitImport(self,node):
"
7414,"def _doImport(self,names):
"
7415,"def visitFrom(self,node):
"
7416,"def __init__(self,auth):
"
7417,"def set_callback(self,callback):
"
7418,"def sms(self,to,text):
"
7419,"def mark_read(self,msg):
"
7420,"def mark_unread(self,msg):
"
7421,"def delete(self,msg):
"
7422,"def fetch_all_sms(self):
"
7423,"def __init__(self):
"
7424,"def testTask(self):
"
7425,"def setUp(self):
"
7426,"def test_get_graph(self):
"
7427,"def test_iterate_item_dependencies(self):
"
7428,"def test_item_factory(self):
"
7429,"def setUp(self):
"
7430,"def test_iterate_item_dependencies(self):
"
7431,"def test_item_factory(self):
"
7432,"def test_find_goal_nodes(self):
"
7433,"def setUp(self):
"
7434,"def test_iterate_item_dependencies(self):
"
7435,"def test_vr_topsort(self):
"
7436,"def _dont_test_memorystore(self):
"
7437,"def __init__(self,n_out,weights):
"
7438,"def __call__(self,x):
"
7439,"def setup(self):
"
7440,"def fprop(self):
"
7441,"def bprop(self):
"
7442,"def params(self):
"
7443,"def params(self,params):
"
7444,"def __init__(self,n_out,weights,bias = 0.0):
"
7445,"def setup(self):
"
7446,"def fprop(self):
"
7447,"def bprop(self):
"
7448,"def params(self):
"
7449,"def params(self,params):
"
7450,"def __init__(self,siamese_layers,loss):
"
7451,"def setup(self,x1_shape,x2_shape,y_shape = None):
"
7452,"def update(self,x1,x2,y):
"
7453,"def embed(self,feed):
"
7454,"def distances(self,feed):
"
7455,"def process_request(self,request):
"
7456,"def __init__(self,handle = None,source = 'handle',validate = True):
"
7457,"def append(self,urlsetelement):
"
7458,"def get_urls(self):
"
7459,"def get_urls_from_elements(self):
"
7460,"def get_urls_from_handle(self):
"
7461,"def _remove_ns(self,str):
"
7462,"def get_schema_path(self):
"
7463,"def __iter__(self):
"
7464,"def __init__(self,sourceNode,sourceOutputName):
"
7465,"def setFilename(self,descriptorName,filename):
"
7466,"def setSequenceRange(self,rangeTuple):
"
7467,"def fileDescriptorNamed(self,descriptorName):
"
7468,"def dataPresent(self,specificFileDescriptorName = None):
"
7469,"def _filesExist(self,framespecObject):
"
7470,"def forwards(self,orm):
"
7471,"def backwards(self,orm):
"
7472,"def __init__(self):
"
7473,"def merge(self,new,new_seq_callback = None):
"
7474,"def inner_merge(self,newseq,newdata,callback):
"
7475,"def test_basic(self):
"
7476,"def __unicode__(self):
"
7477,"def get_absolute_url(self):
"
7478,"def external_allowed(self):
"
7479,"def queue_position(self):
"
7480,"def status_string(self):
"
7481,"def expired(self):
"
7482,"def detail_string(self):
"
7483,"def colorscheme_string(self):
"
7484,"def set_error(self,error):
"
7485,"def __unicode__(self):
"
7486,"def set_password(self,password):
"
7487,"def password_matches(self,password):
"
7488,"def __call__(self,r):
"
7489,"def __init__(self,username,password):
"
7490,"def __call__(self,r):
"
7491,"def __call__(self,r):
"
7492,"def __init__(self,username,password):
"
7493,"def build_digest_header(self,method,url):
"
7494,"def handle_401(self,r,** kwargs):
"
7495,"def __call__(self,r):
"
7496,"def __init__(self,content,source_path):
"
7497,"def convert_url(self,matchobj):
"
7498,"def convert(self):
"
7499,"def get_absolute_url(self):
"
7500,"def get_log_set(self):
"
7501,"def get_comment_set(self):
"
7502,"def add_log(self,text):
"
7503,"def add_group(self,group):
"
7504,"def __str__(self):
"
7505,"def save(self,* args,** kw):
"
7506,"def save(self,* args,** kw):
"
7507,"def get_status_image(self):
"
7508,"def get_status_display(self):
"
7509,"def __str__(self):
"
7510,"def testBasic(self):
"
7511,"def test(self,parent,block):
"
7512,"def run(self,parent,blocks):
"
7513,"def _get_meta(self):
"
7514,"def _str2bool(self,s,default = False):
"
7515,"def _unique_id(self,id):
"
7516,"def _create_id(self,header):
"
7517,"def __init__(self,configs):
"
7518,"def extendMarkdown(self,md,md_globals):
"
7519,"def reset(self):
"
7520,"def __init__(self,binary = None,start = None,end = None,pickle_intermediate_results = False,perform_full_code_scan = False):
"
7521,"def call_map(self):
"
7522,"def _get_next_addr_to_search(self,alignment = None):
"
7523,"def _get_next_code_addr(self,initial_state):
"
7524,"def _symbolic_reconnoiter(self,addr,target_addr,max_depth = 10):
"
7525,"def _static_memory_slice(self,run):
"
7526,"def _scan_code(self,traced_addresses,function_exits,initial_state,starting_address):
"
7527,"def _scan_block(self,addr,state,current_function_addr,function_exits,remaining_exits,traced_addresses):
"
7528,"def _scan_function_prologues(self,traced_address,function_exits,initial_state):
"
7529,"def _reconnoiter(self):
"
7530,"def _determinebase_address(self):
"
7531,"def _full_code_scan(self):
"
7532,"def _dbg_output(self):
"
7533,"def genenare_callmap_sif(self,filepath):
"
7534,"def generate_code_cover(self):
"
7535,"def __init__(self,arch):
"
7536,"def assign(self,reg_offset,expr):
"
7537,"def contains(self,reg_offset):
"
7538,"def get(self,reg_offset):
"
7539,"def remove(self,reg_offset):
"
7540,"def buildAttributeTemplate(self,object):
"
7541,"def getCommandName(self):
"
7542,"def run(self):
"
7543,"def postRun(self,success):
"
7544,"def __init__(self,level = Level.LOWINFO):
"
7545,"def set_level(self,level):
"
7546,"def log(self,level,message):
"
7547,"def debug(self,message):
"
7548,"def lowinfo(self,message):
"
7549,"def info(self,message):
"
7550,"def warning(self,message):
"
7551,"def error(self,message):
"
7552,"def _color(self,level):
"
7553,"def _reset(self):
"
7554,"def handle(self,* args,** options):
"
7555,"def __init__(self,brq):
"
7556,"def __getattr__(self,k):
"
7557,"def associate(self,host,group):
"
7558,"def disassociate(self,host,group):
"
7559,"def setUp(self):
"
7560,"def test_basic_launch(self):
"
7561,"def test_launch_with_become(self):
"
7562,"def test_basic_launch_with_echo(self):
"
7563,"def test_launch_with_param(self):
"
7564,"def test_version_failure(self):
"
7565,"def test_basic_launch_monitor_option(self):
"
7566,"def setUp(self):
"
7567,"def test_normal(self):
"
7568,"def test_detailed(self):
"
7569,"def setUp(self):
"
7570,"def test_standard_cancelation(self):
"
7571,"def test_cancelation_completed_with_error(self):
"
7572,"def __init__(self,cache = None,cache_etags = True,serializer = None):
"
7573,"def parse_cache_control(self,headers):
"
7574,"def cached_request(self,request):
"
7575,"def conditional_headers(self,request):
"
7576,"def cache_response(self,request,response,body = None):
"
7577,"def update_cached_response(self,request,response):
"
7578,"def __init__(self,tree):
"
7579,"def __iter__(self):
"
7580,"def error(self,msg):
"
7581,"def emptyTag(self,namespace,name,attrs,hasChildren = False):
"
7582,"def startTag(self,namespace,name,attrs):
"
7583,"def endTag(self,namespace,name):
"
7584,"def text(self,data):
"
7585,"def comment(self,data):
"
7586,"def doctype(self,name,publicId = None,systemId = None,correct = True):
"
7587,"def entity(self,name):
"
7588,"def unknown(self,nodeType):
"
7589,"def getNodeDetails(self,node):
"
7590,"def getFirstChild(self,node):
"
7591,"def getNextSibling(self,node):
"
7592,"def getParentNode(self,node):
"
7593,"def __iter__(self):
"
7594,"def run(self,options,args):
"
7595,"def __init__(self,rcFile):
"
7596,"def __getitem__(self,key):
"
7597,"def __setitem__(self,key,value):
"
7598,"def __delete__(self,key):
"
7599,"def __init__(self,id,name,address,type,driver,extra = None):
"
7600,"def update(self,name = None,address = None,extra = None):
"
7601,"def delete(self):
"
7602,"def _get_numeric_id(self):
"
7603,"def __repr__(self):
"
7604,"def __init__(self,id,status,progress,target,driver,extra = None):
"
7605,"def cancel(self):
"
7606,"def suspend(self):
"
7607,"def resume(self):
"
7608,"def __repr__(self):
"
7609,"def __init__(self,id,date,target,driver,extra = None):
"
7610,"def recover(self,path = None):
"
7611,"def recover_to(self,recovery_target,path = None):
"
7612,"def __repr__(self):
"
7613,"def __init__(self,key,secret = None,secure = True,host = None,port = None,** kwargs):
"
7614,"def get_supported_target_types(self):
"
7615,"def list_targets(self):
"
7616,"def create_target(self,name,address,type = BackupTargetType.VIRTUAL,extra = None):
"
7617,"def create_target_from_node(self,node,type = BackupTargetType.VIRTUAL,extra = None):
"
7618,"def create_target_from_storage_container(self,container,type = BackupTargetType.OBJECT,extra = None):
"
7619,"def update_target(self,target,name,address,extra):
"
7620,"def delete_target(self,target):
"
7621,"def list_recovery_points(self,target,start_date = None,end_date = None):
"
7622,"def recover_target(self,target,recovery_point,path = None):
"
7623,"def recover_target_out_of_place(self,target,recovery_point,recovery_target,path = None):
"
7624,"def get_target_job(self,target,id):
"
7625,"def list_target_jobs(self,target):
"
7626,"def create_target_job(self,target,extra = None):
"
7627,"def resume_target_job(self,job):
"
7628,"def suspend_target_job(self,job):
"
7629,"def cancel_target_job(self,job):
"
7630,"def __init__(self,value,http_code,code,driver = None):
"
7631,"def parse_error(self):
"
7632,"def _header(self,action,data):
"
7633,"def request(self,action,params = None,data = '',headers = None,method = 'GET'):
"
7634,"def encode_data(self,data):
"
7635,"def _salt(self):
"
7636,"def _timestamp(self):
"
7637,"def ex_allocate_public_ip(self):
"
7638,"def ex_release_public_ip(self,address):
"
7639,"def ex_create_ip_forwarding_rule(self,address,protocol,start_port,end_port = None):
"
7640,"def ex_create_port_forwarding_rule(self,address,private_port,public_port,protocol,public_end_port = None,private_end_port = None,openfirewall = True):
"
7641,"def ex_delete_ip_forwarding_rule(self,rule):
"
7642,"def ex_delete_port_forwarding_rule(self,rule):
"
7643,"def ex_start(self):
"
7644,"def ex_stop(self):
"
7645,"def __init__(self,id,address,driver,associated_network_id = None,vpc_id = None,virtualmachine_id = None):
"
7646,"def release(self):
"
7647,"def __str__(self):
"
7648,"def __eq__(self,other):
"
7649,"def __init__(self,id,address,cidr_list,protocol,icmp_code = None,icmp_type = None,start_port = None,end_port = None):
"
7650,"def __eq__(self,other):
"
7651,"def __init__(self,id,network_id,cidr_list,protocol,icmp_code = None,icmp_type = None,start_port = None,end_port = None):
"
7652,"def __eq__(self,other):
"
7653,"def __init__(self,node,id,address,protocol,start_port,end_port = None):
"
7654,"def delete(self):
"
7655,"def __eq__(self,other):
"
7656,"def __init__(self,node,rule_id,address,protocol,public_port,private_port,public_end_port = None,private_end_port = None,network_id = None):
"
7657,"def delete(self):
"
7658,"def __eq__(self,other):
"
7659,"def __init__(self,acl_id,name,vpc_id,driver,description = None):
"
7660,"def __repr__(self):
"
7661,"def __init__(self,id,protocol,acl_id,action,cidr_list,start_port,end_port,traffic_type = None):
"
7662,"def __eq__(self,other):
"
7663,"def __init__(self,id,name,size,customizable):
"
7664,"def __eq__(self,other):
"
7665,"def __init__(self,displaytext,name,networkofferingid,id,zoneid,driver,extra = None):
"
7666,"def __init__(self,name,display_text,guest_ip_type,id,service_offering_id,for_vpc,driver,extra = None):
"
7667,"def __init__(self,id,network_id,net_mask,gateway,ip_address,is_default,mac_address,driver,extra = None):
"
7668,"def __eq__(self,other):
"
7669,"def __init__(self,name,vpc_offering_id,id,cidr,driver,zone_id = None,display_text = None,extra = None):
"
7670,"def __repr__(self):
"
7671,"def __init__(self,name,display_text,id,driver,extra = None):
"
7672,"def __init__(self,id,account,domain,domain_id,public_ip,vpc_id,driver,extra = None):
"
7673,"def vpc(self):
"
7674,"def delete(self):
"
7675,"def __init__(self,id,cidr_list,esp_policy,gateway,ike_policy,ipsec_psk,driver,extra = None):
"
7676,"def delete(self):
"
7677,"def __init__(self,id,passive,vpn_customer_gateway_id,vpn_gateway_id,state,driver,extra = None):
"
7678,"def vpn_customer_gateway(self):
"
7679,"def vpn_gateway(self):
"
7680,"def delete(self):
"
7681,"def __init__(self,id,name,state,public_ip,vpc_id,driver):
"
7682,"def __repr__(self):
"
7683,"def __init__(self,id,name,display_text,driver,extra = None):
"
7684,"def __repr__(self):
"
7685,"def __init__(self,id,account,description,domain,domainid,name,group_type,virtualmachine_ids):
"
7686,"def __repr__(self):
"
7687,"def __init__(self,type_name):
"
7688,"def __repr__(self):
"
7689,"def list_images(self,location = None):
"
7690,"def list_locations(self):
"
7691,"def list_nodes(self,project = None,location = None):
"
7692,"def ex_get_node(self,node_id,project = None):
"
7693,"def list_sizes(self,location = None):
"
7694,"def create_node(self,** kwargs):
"
7695,"def _create_args_to_params(self,node,** kwargs):
"
7696,"def destroy_node(self,node,ex_expunge = False):
"
7697,"def reboot_node(self,node):
"
7698,"def ex_start(self,node):
"
7699,"def ex_stop(self,node):
"
7700,"def ex_list_disk_offerings(self):
"
7701,"def ex_list_networks(self,project = None):
"
7702,"def ex_list_network_offerings(self):
"
7703,"def ex_create_network(self,display_text,name,network_offering,location,gateway = None,netmask = None,network_domain = None,vpc_id = None,project_id = None):
"
7704,"def ex_delete_network(self,network,force = None):
"
7705,"def ex_list_vpc_offerings(self):
"
7706,"def ex_list_vpcs(self,project = None):
"
7707,"def ex_list_routers(self,vpc_id = None):
"
7708,"def ex_create_vpc(self,cidr,display_text,name,vpc_offering,zone_id,network_domain = None):
"
7709,"def ex_delete_vpc(self,vpc):
"
7710,"def ex_list_projects(self):
"
7711,"def create_volume(self,size,name,location = None,snapshot = None):
"
7712,"def destroy_volume(self,volume):
"
7713,"def attach_volume(self,node,volume,device = None):
"
7714,"def detach_volume(self,volume):
"
7715,"def list_volumes(self,node = None):
"
7716,"def ex_get_volume(self,volume_id,project = None):
"
7717,"def list_key_pairs(self,** kwargs):
"
7718,"def get_key_pair(self,name):
"
7719,"def create_key_pair(self,name,** kwargs):
"
7720,"def import_key_pair_from_string(self,name,key_material):
"
7721,"def delete_key_pair(self,key_pair,** kwargs):
"
7722,"def ex_list_public_ips(self):
"
7723,"def ex_allocate_public_ip(self,vpc_id = None,network_id = None,location = None):
"
7724,"def ex_release_public_ip(self,address):
"
7725,"def ex_list_firewall_rules(self):
"
7726,"def ex_create_firewall_rule(self,address,cidr_list,protocol,icmp_code = None,icmp_type = None,start_port = None,end_port = None):
"
7727,"def ex_delete_firewall_rule(self,firewall_rule):
"
7728,"def ex_list_egress_firewall_rules(self):
"
7729,"def ex_create_egress_firewall_rule(self,network_id,cidr_list,protocol,icmp_code = None,icmp_type = None,start_port = None,end_port = None):
"
7730,"def ex_delete_egress_firewall_rule(self,firewall_rule):
"
7731,"def ex_list_port_forwarding_rules(self,account = None,domain_id = None,id = None,ipaddress_id = None,is_recursive = None,keyword = None,list_all = None,network_id = None,page = None,page_size = None,project_id = None):
"
7732,"def ex_create_port_forwarding_rule(self,node,address,private_port,public_port,protocol,public_end_port = None,private_end_port = None,openfirewall = True,network_id = None):
"
7733,"def ex_delete_port_forwarding_rule(self,node,rule):
"
7734,"def ex_list_ip_forwarding_rules(self,account = None,domain_id = None,id = None,ipaddress_id = None,is_recursive = None,keyword = None,list_all = None,page = None,page_size = None,project_id = None,virtualmachine_id = None):
"
7735,"def ex_create_ip_forwarding_rule(self,node,address,protocol,start_port,end_port = None):
"
7736,"def ex_delete_ip_forwarding_rule(self,node,rule):
"
7737,"def ex_create_network_acllist(self,name,vpc_id,description = None):
"
7738,"def ex_create_network_acl(self,protocol,acl_id,cidr_list,start_port,end_port,action = None,traffic_type = None):
"
7739,"def ex_list_network_acllists(self):
"
7740,"def ex_replace_network_acllist(self,acl_id,network_id):
"
7741,"def ex_list_network_acl(self):
"
7742,"def ex_list_security_groups(self,** kwargs):
"
7743,"def ex_create_security_group(self,name,** kwargs):
"
7744,"def ex_delete_security_group(self,name):
"
7745,"def ex_authorize_security_group_ingress(self,securitygroupname,protocol,cidrlist,startport = None,endport = None,icmptype = None,icmpcode = None,** kwargs):
"
7746,"def ex_revoke_security_group_ingress(self,rule_id):
"
7747,"def ex_create_affinity_group(self,name,group_type):
"
7748,"def ex_delete_affinity_group(self,affinity_group):
"
7749,"def ex_update_node_affinity_group(self,node,affinity_group_list):
"
7750,"def ex_list_affinity_groups(self):
"
7751,"def ex_list_affinity_group_types(self):
"
7752,"def ex_register_iso(self,name,url,location = None,** kwargs):
"
7753,"def ex_limits(self):
"
7754,"def ex_create_tags(self,resource_ids,resource_type,tags):
"
7755,"def ex_delete_tags(self,resource_ids,resource_type,tag_keys):
"
7756,"def list_snapshots(self):
"
7757,"def create_volume_snapshot(self,volume,name = None):
"
7758,"def destroy_volume_snapshot(self,snapshot):
"
7759,"def ex_create_snapshot_template(self,snapshot,name,ostypeid,displaytext = None):
"
7760,"def ex_list_os_types(self):
"
7761,"def ex_list_nics(self,node):
"
7762,"def ex_attach_nic_to_node(self,node,network,ip_address = None):
"
7763,"def ex_detach_nic_from_node(self,nic,node):
"
7764,"def ex_list_vpn_gateways(self,account = None,domain_id = None,for_display = None,id = None,is_recursive = None,keyword = None,list_all = None,page = None,page_size = None,project_id = None,vpc_id = None):
"
7765,"def ex_create_vpn_gateway(self,vpc,for_display = None):
"
7766,"def ex_delete_vpn_gateway(self,vpn_gateway):
"
7767,"def ex_list_vpn_customer_gateways(self,account = None,domain_id = None,id = None,is_recursive = None,keyword = None,list_all = None,page = None,page_size = None,project_id = None):
"
7768,"def ex_create_vpn_customer_gateway(self,cidr_list,esp_policy,gateway,ike_policy,ipsec_psk,account = None,domain_id = None,dpd = None,esp_lifetime = None,ike_lifetime = None,name = None):
"
7769,"def ex_delete_vpn_customer_gateway(self,vpn_customer_gateway):
"
7770,"def ex_list_vpn_connections(self,account = None,domain_id = None,for_display = None,id = None,is_recursive = None,keyword = None,list_all = None,page = None,page_size = None,project_id = None,vpc_id = None):
"
7771,"def ex_create_vpn_connection(self,vpn_customer_gateway,vpn_gateway,for_display = None,passive = None):
"
7772,"def ex_delete_vpn_connection(self,vpn_connection):
"
7773,"def _to_snapshot(self,data):
"
7774,"def _to_node(self,data,public_ips = None):
"
7775,"def _to_key_pairs(self,data):
"
7776,"def _to_affinity_group(self,data):
"
7777,"def _get_extra_dict(self,response,mapping):
"
7778,"def _to_volume_state(self,vol):
"
7779,"def __init__(self,access_id,secret,region):
"
7780,"def _ex_connection_class_kwargs(self):
"
7781,"def list_images(self,ex_repository_name):
"
7782,"def list_clusters(self):
"
7783,"def create_cluster(self,name,location = None):
"
7784,"def destroy_cluster(self,cluster):
"
7785,"def list_containers(self,image = None,cluster = None):
"
7786,"def deploy_container(self,name,image,cluster = None,parameters = None,start = True,ex_cpu = 10,ex_memory = 500,ex_container_port = None,ex_host_port = None):
"
7787,"def get_container(self,id):
"
7788,"def start_container(self,container,count = 1):
"
7789,"def stop_container(self,container):
"
7790,"def restart_container(self,container):
"
7791,"def destroy_container(self,container):
"
7792,"def ex_start_task(self,task_arn,count = 1):
"
7793,"def ex_list_containers_for_task(self,task_arns):
"
7794,"def ex_create_service(self,name,cluster,task_definition,desired_count = 1):
"
7795,"def ex_list_service_arns(self,cluster = None):
"
7796,"def ex_describe_service(self,service_arn):
"
7797,"def ex_destroy_service(self,service_arn):
"
7798,"def ex_get_registry_client(self,repository_name):
"
7799,"def ex_get_repository_token(self,repository_id):
"
7800,"def ex_get_repository_id(self,repository_name):
"
7801,"def _get_ecr_host(self,repository_id):
"
7802,"def _get_headers(self,action):
"
7803,"def _get_ecr_headers(self,action):
"
7804,"def _to_clusters(self,data):
"
7805,"def _to_cluster(self,data):
"
7806,"def _to_containers(self,data,task_definition_arn):
"
7807,"def _to_container(self,data,task_definition_arn):
"
7808,"def _to_images(self,data,host,repository_name):
"
7809,"def _to_image(self,data,host,repository_name):
"
7810,"def parse_error(self):
"
7811,"def __init__(self,* args,** kwargs):
"
7812,"def get_poll_request_kwargs(self,response,context,request_kwargs):
"
7813,"def has_completed(self,response):
"
7814,"def get_endpoint(self):
"
7815,"def __init__(self,id,ip,domain,driver,extra = None):
"
7816,"def update(self,domain,extra = None):
"
7817,"def delete(self):
"
7818,"def __repr__(self):
"
7819,"def __init__(self,key,secret = None,secure = True,host = None,port = None,region = 'us',** kwargs):
"
7820,"def iterate_zones(self):
"
7821,"def iterate_records(self,zone):
"
7822,"def get_zone(self,zone_id):
"
7823,"def get_record(self,zone_id,record_id):
"
7824,"def create_zone(self,domain,type = 'master',ttl = None,extra = None):
"
7825,"def update_zone(self,zone,domain = None,type = None,ttl = None,extra = None):
"
7826,"def create_record(self,name,zone,type,data,extra = None):
"
7827,"def update_record(self,record,name = None,type = None,data = None,extra = None):
"
7828,"def delete_zone(self,zone):
"
7829,"def delete_record(self,record):
"
7830,"def ex_iterate_ptr_records(self,device):
"
7831,"def ex_get_ptr_record(self,service_name,record_id):
"
7832,"def ex_create_ptr_record(self,device,ip,domain,extra = None):
"
7833,"def ex_update_ptr_record(self,record,domain = None,extra = None):
"
7834,"def ex_delete_ptr_record(self,record):
"
7835,"def _to_zone(self,data):
"
7836,"def _to_record(self,data,zone):
"
7837,"def _to_ptr_record(self,data,link):
"
7838,"def _to_full_record_name(self,domain,name):
"
7839,"def _to_partial_record_name(self,domain,name):
"
7840,"def _ex_connection_class_kwargs(self):
"
7841,"def __init__(self,name,size,hash,extra,meta_data,container,driver):
"
7842,"def get_cdn_url(self):
"
7843,"def enable_cdn(self,** kwargs):
"
7844,"def download(self,destination_path,overwrite_existing = False,delete_on_failure = True):
"
7845,"def as_stream(self,chunk_size = None):
"
7846,"def delete(self):
"
7847,"def __repr__(self):
"
7848,"def __init__(self,name,extra,driver):
"
7849,"def iterate_objects(self):
"
7850,"def list_objects(self):
"
7851,"def get_cdn_url(self):
"
7852,"def enable_cdn(self,** kwargs):
"
7853,"def get_object(self,object_name):
"
7854,"def upload_object(self,file_path,object_name,extra = None,** kwargs):
"
7855,"def upload_object_via_stream(self,iterator,object_name,extra = None,** kwargs):
"
7856,"def download_object(self,obj,destination_path,overwrite_existing = False,delete_on_failure = True):
"
7857,"def download_object_as_stream(self,obj,chunk_size = None):
"
7858,"def delete_object(self,obj):
"
7859,"def delete(self):
"
7860,"def __repr__(self):
"
7861,"def iterate_containers(self):
"
7862,"def list_containers(self):
"
7863,"def iterate_container_objects(self,container):
"
7864,"def list_container_objects(self,container):
"
7865,"def get_container(self,container_name):
"
7866,"def get_container_cdn_url(self,container):
"
7867,"def get_object(self,container_name,object_name):
"
7868,"def get_object_cdn_url(self,obj):
"
7869,"def enable_container_cdn(self,container):
"
7870,"def enable_object_cdn(self,obj):
"
7871,"def download_object(self,obj,destination_path,overwrite_existing = False,delete_on_failure = True):
"
7872,"def download_object_as_stream(self,obj,chunk_size = None):
"
7873,"def upload_object(self,file_path,container,object_name,extra = None,verify_hash = True,headers = None):
"
7874,"def upload_object_via_stream(self,iterator,container,object_name,extra = None,headers = None):
"
7875,"def delete_object(self,obj):
"
7876,"def create_container(self,container_name):
"
7877,"def delete_container(self,container):
"
7878,"def _get_object(self,obj,callback,callback_kwargs,response,success_status_code = None):
"
7879,"def _save_object(self,response,obj,destination_path,overwrite_existing = False,delete_on_failure = True,chunk_size = None):
"
7880,"def _upload_data(self,response,data,calculate_hash = True):
"
7881,"def _stream_data(self,response,iterator,chunked = False,calculate_hash = True,chunk_size = None,data = None):
"
7882,"def _upload_file(self,response,file_path,chunked = False,calculate_hash = True):
"
7883,"def _get_hash_function(self):
"
7884,"def setUp(self):
"
7885,"def test_authentication(self):
"
7886,"def test_ex_account_info(self):
"
7887,"def test_ex_list_events(self):
"
7888,"def test_ex_get_event(self):
"
7889,"def test__paginated_request(self):
"
7890,"def _v2_account(self,method,url,body,headers):
"
7891,"def _v2_account_UNAUTHORIZED(self,method,url,body,headers):
"
7892,"def _v2_actions(self,method,url,body,headers):
"
7893,"def _v2_actions_12345670(self,method,url,body,headers):
"
7894,"def _v2_actions_page_1(self,method,url,body,headers):
"
7895,"def setUp(self):
"
7896,"def test_default_scopes(self):
"
7897,"def test_timestamp_to_datetime(self):
"
7898,"def test_get_region_from_zone(self):
"
7899,"def test_find_zone_or_region(self):
"
7900,"def test_match_images(self):
"
7901,"def test_ex_get_serial_output(self):
"
7902,"def test_ex_list(self):
"
7903,"def test_ex_list_addresses(self):
"
7904,"def test_ex_list_backendservices(self):
"
7905,"def test_ex_list_healthchecks(self):
"
7906,"def test_ex_list_firewalls(self):
"
7907,"def test_ex_list_forwarding_rules(self):
"
7908,"def test_ex_list_forwarding_rules_global(self):
"
7909,"def test_list_images(self):
"
7910,"def test_list_locations(self):
"
7911,"def test_ex_list_routes(self):
"
7912,"def test_ex_list_networks(self):
"
7913,"def test_list_nodes(self):
"
7914,"def test_ex_list_regions(self):
"
7915,"def test_ex_list_snapshots(self):
"
7916,"def test_ex_list_targethttpproxies(self):
"
7917,"def test_ex_list_targetinstances(self):
"
7918,"def test_ex_list_targetpools(self):
"
7919,"def test_list_sizes(self):
"
7920,"def test_ex_get_license(self):
"
7921,"def test_list_disktypes(self):
"
7922,"def test_ex_list_urlmaps(self):
"
7923,"def test_list_volumes(self):
"
7924,"def test_ex_list_zones(self):
"
7925,"def test_ex_create_address_global(self):
"
7926,"def test_ex_create_address(self):
"
7927,"def test_ex_create_backendservice(self):
"
7928,"def test_ex_create_healthcheck(self):
"
7929,"def test_ex_create_image(self):
"
7930,"def test_ex_create_firewall(self):
"
7931,"def test_ex_create_forwarding_rule(self):
"
7932,"def test_ex_create_forwarding_rule_global(self):
"
7933,"def test_ex_create_forwarding_rule_targetpool_keyword(self):
"
7934,"def test_ex_create_route(self):
"
7935,"def test_ex_create_network(self):
"
7936,"def test_ex_set_machine_type_notstopped(self):
"
7937,"def test_ex_set_machine_type_invalid(self):
"
7938,"def test_ex_set_machine_type(self):
"
7939,"def test_ex_node_start(self):
"
7940,"def test_ex_node_stop(self):
"
7941,"def test_create_node_req(self):
"
7942,"def test_create_node_network_opts(self):
"
7943,"def test_create_node_disk_opts(self):
"
7944,"def test_create_node(self):
"
7945,"def test_create_node_image_family(self):
"
7946,"def test_create_node_req_with_serviceaccounts(self):
"
7947,"def test_create_node_with_metadata(self):
"
7948,"def test_create_node_existing(self):
"
7949,"def test_ex_create_multiple_nodes(self):
"
7950,"def test_ex_create_multiple_nodes_image_family(self):
"
7951,"def test_ex_create_targethttpproxy(self):
"
7952,"def test_ex_create_targetinstance(self):
"
7953,"def test_ex_create_targetpool(self):
"
7954,"def test_ex_create_targetpool_session_affinity(self):
"
7955,"def test_ex_create_urlmap(self):
"
7956,"def test_create_volume_image_family(self):
"
7957,"def test_ex_create_volume_snapshot(self):
"
7958,"def test_create_volume_ssd(self):
"
7959,"def test_create_volume(self):
"
7960,"def test_ex_update_healthcheck(self):
"
7961,"def test_ex_update_firewall(self):
"
7962,"def test_ex_targetpool_gethealth(self):
"
7963,"def test_ex_targetpool_with_backup_pool(self):
"
7964,"def test_ex_targetpool_setbackup(self):
"
7965,"def test_ex_targetpool_remove_add_node(self):
"
7966,"def test_ex_targetpool_remove_add_healthcheck(self):
"
7967,"def test_reboot_node(self):
"
7968,"def test_ex_set_node_tags(self):
"
7969,"def test_attach_volume_invalid_usecase(self):
"
7970,"def test_attach_volume(self):
"
7971,"def test_detach_volume(self):
"
7972,"def test_ex_destroy_address_global(self):
"
7973,"def test_ex_destroy_address(self):
"
7974,"def test_ex_destroy_backendservice(self):
"
7975,"def test_ex_destroy_healthcheck(self):
"
7976,"def test_ex_delete_image(self):
"
7977,"def test_ex_deprecate_image(self):
"
7978,"def test_ex_destroy_firewall(self):
"
7979,"def test_ex_destroy_forwarding_rule(self):
"
7980,"def test_ex_destroy_forwarding_rule_global(self):
"
7981,"def test_ex_destroy_route(self):
"
7982,"def test_ex_destroy_network(self):
"
7983,"def test_destroy_node(self):
"
7984,"def test_ex_destroy_multiple_nodes(self):
"
7985,"def test_destroy_targethttpproxy(self):
"
7986,"def test_destroy_targetinstance(self):
"
7987,"def test_destroy_targetpool(self):
"
7988,"def test_destroy_urlmap(self):
"
7989,"def test_destroy_volume(self):
"
7990,"def test_ex_set_volume_auto_delete(self):
"
7991,"def test_destroy_volume_snapshot(self):
"
7992,"def test_ex_get_address_global(self):
"
7993,"def test_ex_get_address(self):
"
7994,"def test_ex_get_backendservice(self):
"
7995,"def test_ex_get_healthcheck(self):
"
7996,"def test_ex_get_firewall(self):
"
7997,"def test_ex_get_forwarding_rule(self):
"
7998,"def test_ex_get_forwarding_rule_global(self):
"
7999,"def test_ex_get_image_license(self):
"
8000,"def test_ex_get_image(self):
"
8001,"def test_ex_get_image_from_family(self):
"
8002,"def test_ex_copy_image(self):
"
8003,"def test_ex_get_route(self):
"
8004,"def test_ex_get_network(self):
"
8005,"def test_ex_get_node(self):
"
8006,"def test_ex_add_access_config(self):
"
8007,"def test_ex_delete_access_config(self):
"
8008,"def test_ex_set_usage_export_bucket(self):
"
8009,"def test__set_project_metadata(self):
"
8010,"def test_ex_set_common_instance_metadata(self):
"
8011,"def test_ex_set_node_metadata(self):
"
8012,"def test_ex_get_region(self):
"
8013,"def test_ex_get_size(self):
"
8014,"def test_ex_get_targethttpproxy(self):
"
8015,"def test_ex_get_targetinstance(self):
"
8016,"def test_ex_get_targetpool(self):
"
8017,"def test_ex_get_snapshot(self):
"
8018,"def test_ex_get_urlmap(self):
"
8019,"def test_ex_get_volume(self):
"
8020,"def test_ex_get_disktype(self):
"
8021,"def test_ex_get_zone(self):
"
8022,"def _get_method_name(self,type,use_param,qs,path):
"
8023,"def _setUsageExportBucket(self,method,url,body,headers):
"
8024,"def _zones_us_central1_a_instances_custom_node(self,method,url,body,header):
"
8025,"def _zones_us_central1_a_instances_node_name_setMachineType(self,method,url,body,header):
"
8026,"def _zones_us_central1_a_operations_operation_setMachineType_notstopped(self,method,url,body,header):
"
8027,"def _zones_us_central1_a_instances_stopped_node_setMachineType(self,method,url,body,header):
"
8028,"def _zones_us_central1_a_operations_operation_setMachineType(self,method,url,body,header):
"
8029,"def _zones_us_central1_a_operations_operation_startnode(self,method,url,body,header):
"
8030,"def _zones_us_central1_a_instances_stopped_node_start(self,method,url,body,header):
"
8031,"def _zones_us_central1_a_instances_stopped_node_stop(self,method,url,body,header):
"
8032,"def _zones_us_central1_a_instances_stopped_node(self,method,url,body,headers):
"
8033,"def _zones_us_central1_a_operations_operation_stopnode(self,method,url,body,headers):
"
8034,"def _zones_us_central1_a_instances_node_name_stop(self,method,url,body,headers):
"
8035,"def _zones_us_central1_a_instances_node_name_setMetadata(self,method,url,body,headers):
"
8036,"def _setCommonInstanceMetadata(self,method,url,body,headers):
"
8037,"def _aggregated_addresses(self,method,url,body,headers):
"
8038,"def _aggregated_diskTypes(self,method,url,body,headers):
"
8039,"def _aggregated_disks(self,method,url,body,headers):
"
8040,"def _aggregated_forwardingRules(self,method,url,body,headers):
"
8041,"def _aggregated_instances(self,method,url,body,headers):
"
8042,"def _aggregated_machineTypes(self,method,url,body,headers):
"
8043,"def _aggregated_targetInstances(self,method,url,body,headers):
"
8044,"def _aggregated_targetPools(self,method,url,body,headers):
"
8045,"def _global_backendServices(self,method,url,body,headers):
"
8046,"def _global_backendServices_no_backends(self,method,url,body,headers):
"
8047,"def _global_backendServices_web_service(self,method,url,body,headers):
"
8048,"def _global_forwardingRules(self,method,url,body,headers):
"
8049,"def _global_forwardingRules_http_rule(self,method,url,body,headers):
"
8050,"def _global_httpHealthChecks(self,method,url,body,headers):
"
8051,"def _global_httpHealthChecks_default_health_check(self,method,url,body,headers):
"
8052,"def _global_httpHealthChecks_basic_check(self,method,url,body,headers):
"
8053,"def _global_httpHealthChecks_libcloud_lb_demo_healthcheck(self,method,url,body,headers):
"
8054,"def _global_httpHealthChecks_lchealthcheck(self,method,url,body,headers):
"
8055,"def _global_firewalls(self,method,url,body,headers):
"
8056,"def _global_firewalls_lcfirewall(self,method,url,body,headers):
"
8057,"def _global_images(self,method,url,body,headers):
"
8058,"def _global_images_debian_7_wheezy_v20131120(self,method,url,body,headers):
"
8059,"def _global_images_debian_7_wheezy_v20131014_deprecate(self,method,url,body,headers):
"
8060,"def _global_images_family_coreos(self,method,url,body,headers):
"
8061,"def _global_images_family_nofamily(self,method,url,body,headers):
"
8062,"def _global_routes(self,method,url,body,headers):
"
8063,"def _global_networks(self,method,url,body,headers):
"
8064,"def _global_networks_default(self,method,url,body,headers):
"
8065,"def _global_networks_libcloud_demo_network(self,method,url,body,headers):
"
8066,"def _global_networks_libcloud_demo_europe_network(self,method,url,body,headers):
"
8067,"def _global_routes_lcdemoroute(self,method,url,body,headers):
"
8068,"def _global_networks_lcnetwork(self,method,url,body,headers):
"
8069,"def _global_snapshots(self,method,url,body,headers):
"
8070,"def _global_snapshots_lcsnapshot(self,method,url,body,headers):
"
8071,"def _global_operations_operation_setUsageExportBucket(self,method,url,body,headers):
"
8072,"def _global_operations_operation_setCommonInstanceMetadata(self,method,url,body,headers):
"
8073,"def _global_operations_operation_global_backendServices_post(self,method,url,body,headers):
"
8074,"def _global_operations_operation_global_forwardingRules_http_rule_delete(self,method,url,body,headers):
"
8075,"def _global_operations_operation_global_forwardingRules_post(self,method,url,body,headers):
"
8076,"def _global_operations_operation_global_httpHealthChecks_lchealthcheck_delete(self,method,url,body,headers):
"
8077,"def _global_operations_operation_global_images_debian7_delete(self,method,url,body,headers):
"
8078,"def _global_operations_operation_global_httpHealthChecks_lchealthcheck_put(self,method,url,body,headers):
"
8079,"def _global_operations_operation_global_httpHealthChecks_post(self,method,url,body,headers):
"
8080,"def _global_operations_operation_global_firewalls_lcfirewall_delete(self,method,url,body,headers):
"
8081,"def _global_operations_operation_global_firewalls_lcfirewall_put(self,method,url,body,headers):
"
8082,"def _global_operations_operation_global_firewalls_post(self,method,url,body,headers):
"
8083,"def _global_operations_operation_global_routes_lcdemoroute_delete(self,method,url,body,headers):
"
8084,"def _global_operations_operation_global_networks_lcnetwork_delete(self,method,url,body,headers):
"
8085,"def _global_operations_operation_global_routes_post(self,method,url,body,headers):
"
8086,"def _global_operations_operation_global_networks_post(self,method,url,body,headers):
"
8087,"def _global_operations_operation_global_snapshots_lcsnapshot_delete(self,method,url,body,headers):
"
8088,"def _global_operations_operation_global_image_post(self,method,url,body,headers):
"
8089,"def _global_operations_operation_global_addresses_lcaddressglobal_delete(self,method,url,body,headers):
"
8090,"def _global_operations_operation_global_targetHttpProxies_post(self,method,url,body,headers):
"
8091,"def _global_operations_operation_global_urlMaps_post(self,method,url,body,headers):
"
8092,"def _global_operations_operation_global_urlMaps_web_map_delete(self,method,url,body,headers):
"
8093,"def _global_targetHttpProxies(self,method,url,body,headers):
"
8094,"def _global_targetHttpProxies_web_proxy(self,method,url,body,headers):
"
8095,"def _global_urlMaps(self,method,url,body,headers):
"
8096,"def _global_urlMaps_web_map(self,method,url,body,headers):
"
8097,"def _regions_us_central1_operations_operation_regions_us_central1_addresses_lcaddress_delete(self,method,url,body,headers):
"
8098,"def _global_operations_operation_global_addresses_post(self,method,url,body,headers):
"
8099,"def _regions_us_central1_operations_operation_regions_us_central1_addresses_post(self,method,url,body,headers):
"
8100,"def _regions_us_central1_operations_operation_regions_us_central1_forwardingRules_post(self,method,url,body,headers):
"
8101,"def _regions_us_central1_operations_operation_regions_us_central1_forwardingRules_lcforwardingrule_delete(self,method,url,body,headers):
"
8102,"def _zones_us_central1_a_instances_node_name_deleteAccessConfig(self,method,url,body,headers):
"
8103,"def _zones_us_central1_a_instances_node_name_serialPort(self,method,url,body,headers):
"
8104,"def _zones_us_central1_a_instances_node_name_addAccessConfig(self,method,url,body,headers):
"
8105,"def _zones_us_central1_a_operations_operation_setMetadata_post(self,method,url,body,headers):
"
8106,"def _zones_us_central1_a_operations_operation_zones_us_central1_a_targetInstances_post(self,method,url,body,headers):
"
8107,"def _regions_us_central1_operations_operation_regions_us_central1_targetPools_post(self,method,url,body,headers):
"
8108,"def _zones_us_central1_a_operations_operation_zones_us_central1_a_instances_node_name_addAccessConfig_post(self,method,url,body,headers):
"
8109,"def _zones_us_central1_a_operations_operation_zones_us_central1_a_instances_node_name_deleteAccessConfig_post(self,method,url,body,headers):
"
8110,"def _zones_us_central1_a_operations_operation_zones_us_central1_a_targetInstances_lctargetinstance_delete(self,method,url,body,headers):
"
8111,"def _regions_us_central1_operations_operation_regions_us_central1_targetPools_lctargetpool_delete(self,method,url,body,headers):
"
8112,"def _regions_us_central1_operations_operation_regions_us_central1_targetPools_lctargetpool_removeHealthCheck_post(self,method,url,body,headers):
"
8113,"def _regions_us_central1_operations_operation_regions_us_central1_targetPools_lctargetpool_addHealthCheck_post(self,method,url,body,headers):
"
8114,"def _regions_us_central1_operations_operation_regions_us_central1_targetPools_lctargetpool_removeInstance_post(self,method,url,body,headers):
"
8115,"def _regions_us_central1_operations_operation_regions_us_central1_targetPools_lb_pool_setBackup_post(self,method,url,body,headers):
"
8116,"def _regions_us_central1_operations_operation_regions_us_central1_targetPools_lctargetpool_addInstance_post(self,method,url,body,headers):
"
8117,"def _zones_us_central1_a_operations_operation_zones_us_central1_a_disks_lcdisk_delete(self,method,url,body,headers):
"
8118,"def _zones_us_central1_a_instances_node_name_setDiskAutoDelete(self,method,url,body,headers):
"
8119,"def _zones_us_central1_a_operations_operation_volume_auto_delete(self,method,url,body,headers):
"
8120,"def _zones_us_central1_a_operations_operation_zones_us_central1_a_disks_lcdisk_createSnapshot_post(self,method,url,body,headers):
"
8121,"def _zones_us_central1_a_operations_operation_zones_us_central1_a_disks_post(self,method,url,body,headers):
"
8122,"def _zones_us_central1_a_operations_operation_zones_us_central1_a_instances_lcnode_000_delete(self,method,url,body,headers):
"
8123,"def _zones_us_central1_a_operations_operation_zones_us_central1_a_instances_lcnode_001_delete(self,method,url,body,headers):
"
8124,"def _zones_us_central1_a_operations_operation_zones_us_central1_a_instances_node_name_delete(self,method,url,body,headers):
"
8125,"def _zones_us_central1_a_operations_operation_zones_us_central1_a_instances_node_name_attachDisk_post(self,method,url,body,headers):
"
8126,"def _zones_us_central1_a_operations_operation_zones_us_central1_a_instances_node_name_detachDisk_post(self,method,url,body,headers):
"
8127,"def _zones_us_central1_a_operations_operation_zones_us_central1_a_instances_node_name_setTags_post(self,method,url,body,headers):
"
8128,"def _zones_us_central1_a_operations_operation_zones_us_central1_a_instances_node_name_reset_post(self,method,url,body,headers):
"
8129,"def _zones_europe_west1_a_operations_operation_zones_europe_west1_a_instances_post(self,method,url,body,headers):
"
8130,"def _zones_us_central1_a_operations_operation_zones_us_central1_a_instances_post(self,method,url,body,headers):
"
8131,"def _project(self,method,url,body,headers):
"
8132,"def _projects_windows_cloud_global_licenses_windows_server_2008_r2_dc(self,method,url,body,headers):
"
8133,"def _projects_suse_cloud_global_licenses_sles_11(self,method,url,body,headers):
"
8134,"def _projects_rhel_cloud_global_licenses_rhel_7_server(self,method,url,body,headers):
"
8135,"def _projects_suse_cloud_global_licenses_sles_12(self,method,url,body,headers):
"
8136,"def _projects_windows_cloud_global_images(self,method,url,body,header):
"
8137,"def _projects_rhel_cloud_global_images(self,method,url,body,header):
"
8138,"def _projects_gce_nvme_global_images(self,method,url,body,header):
"
8139,"def _projects_coreos_cloud_global_images(self,method,url,body,header):
"
8140,"def _projects_coreos_cloud_global_images_family_coreos(self,method,url,body,header):
"
8141,"def _projects_opensuse_cloud_global_images(self,method,url,body,header):
"
8142,"def _projects_google_containers_global_images(self,method,url,body,header):
"
8143,"def _projects_ubuntu_os_cloud_global_images(self,method,url,body,header):
"
8144,"def _projects_centos_cloud_global_images(self,method,url,body,header):
"
8145,"def _projects_suse_cloud_global_images(self,method,url,body,headers):
"
8146,"def _projects_debian_cloud_global_images(self,method,url,body,headers):
"
8147,"def _regions(self,method,url,body,headers):
"
8148,"def _global_addresses(self,method,url,body,headers):
"
8149,"def _regions_us_central1_addresses(self,method,url,body,headers):
"
8150,"def _global_addresses_lcaddressglobal(self,method,url,body,headers):
"
8151,"def _regions_us_central1_addresses_lcaddress(self,method,url,body,headers):
"
8152,"def _regions_us_central1_forwardingRules(self,method,url,body,headers):
"
8153,"def _regions_us_central1_forwardingRules_libcloud_lb_demo_lb(self,method,url,body,headers):
"
8154,"def _regions_us_central1_forwardingRules_lcforwardingrule(self,method,url,body,headers):
"
8155,"def _zones_us_central1_a_targetInstances(self,method,url,body,headers):
"
8156,"def _regions_us_central1_targetPools(self,method,url,body,headers):
"
8157,"def _zones_us_central1_a_targetInstances_lctargetinstance(self,method,url,body,headers):
"
8158,"def _regions_us_central1_targetPools_lb_pool_getHealth(self,method,url,body,headers):
"
8159,"def _regions_us_central1_targetPools_lb_pool(self,method,url,body,headers):
"
8160,"def _regions_us_central1_targetPools_lctargetpool(self,method,url,body,headers):
"
8161,"def _regions_us_central1_targetPools_lctargetpool_sticky(self,method,url,body,headers):
"
8162,"def _regions_us_central1_targetPools_backup_pool(self,method,url,body,headers):
"
8163,"def _regions_us_central1_targetPools_libcloud_lb_demo_lb_tp(self,method,url,body,headers):
"
8164,"def _regions_us_central1_targetPools_lctargetpool_removeHealthCheck(self,method,url,body,headers):
"
8165,"def _regions_us_central1_targetPools_lctargetpool_addHealthCheck(self,method,url,body,headers):
"
8166,"def _regions_us_central1_targetPools_lctargetpool_removeInstance(self,method,url,body,headers):
"
8167,"def _regions_us_central1_targetPools_lb_pool_setBackup(self,method,url,body,headers):
"
8168,"def _regions_us_central1_targetPools_lctargetpool_addInstance(self,method,url,body,headers):
"
8169,"def _zones(self,method,url,body,headers):
"
8170,"def _zones_asia_east_1a(self,method,url,body,headers):
"
8171,"def _zones_us_central1_a_diskTypes(self,method,url,body,headers):
"
8172,"def _zones_us_central1_a_diskTypes_pd_standard(self,method,url,body,headers):
"
8173,"def _zones_us_central1_a_diskTypes_pd_ssd(self,method,url,body,headers):
"
8174,"def _zones_us_central1_a_disks(self,method,url,body,headers):
"
8175,"def _zones_us_central1_a_disks_lcdisk(self,method,url,body,headers):
"
8176,"def _zones_us_central1_a_disks_lcdisk_createSnapshot(self,method,url,body,headers):
"
8177,"def _zones_us_central1_a_disks_node_name(self,method,url,body,headers):
"
8178,"def _zones_us_central1_a_disks_lcnode_000(self,method,url,body,headers):
"
8179,"def _zones_us_central1_a_disks_lcnode_001(self,method,url,body,headers):
"
8180,"def _zones_us_central1_b_disks_libcloud_lb_demo_www_000(self,method,url,body,headers):
"
8181,"def _zones_us_central1_b_disks_libcloud_lb_demo_www_001(self,method,url,body,headers):
"
8182,"def _zones_us_central1_b_disks_libcloud_lb_demo_www_002(self,method,url,body,headers):
"
8183,"def _zones_us_central2_a_disks_libcloud_demo_boot_disk(self,method,url,body,headers):
"
8184,"def _zones_us_central2_a_disks_libcloud_demo_np_node(self,method,url,body,headers):
"
8185,"def _zones_us_central2_a_disks_libcloud_demo_multiple_nodes_000(self,method,url,body,headers):
"
8186,"def _zones_us_central2_a_disks_libcloud_demo_multiple_nodes_001(self,method,url,body,headers):
"
8187,"def _zones_europe_west1_a_disks(self,method,url,body,headers):
"
8188,"def _zones_europe_west1_a_disks_libcloud_demo_europe_np_node(self,method,url,body,headers):
"
8189,"def _zones_europe_west1_a_disks_libcloud_demo_europe_boot_disk(self,method,url,body,headers):
"
8190,"def _zones_europe_west1_a_disks_libcloud_demo_europe_multiple_nodes_000(self,method,url,body,headers):
"
8191,"def _zones_europe_west1_a_instances(self,method,url,body,headers):
"
8192,"def _zones_europe_west1_a_diskTypes_pd_standard(self,method,url,body,headers):
"
8193,"def _zones_us_central1_a_instances(self,method,url,body,headers):
"
8194,"def _zones_us_central1_a_instances_node_name(self,method,url,body,headers):
"
8195,"def _zones_us_central1_a_instances_node_name_attachDisk(self,method,url,body,headers):
"
8196,"def _zones_us_central1_a_instances_node_name_detachDisk(self,method,url,body,headers):
"
8197,"def _zones_us_central1_a_instances_node_name_setTags(self,method,url,body,headers):
"
8198,"def _zones_us_central1_a_instances_node_name_reset(self,method,url,body,headers):
"
8199,"def _zones_us_central1_a_instances_lcnode_000(self,method,url,body,headers):
"
8200,"def _zones_us_central1_a_instances_lcnode_001(self,method,url,body,headers):
"
8201,"def _zones_us_central1_b_instances_libcloud_lb_demo_www_000(self,method,url,body,headers):
"
8202,"def _zones_us_central1_b_instances_libcloud_lb_demo_www_001(self,method,url,body,headers):
"
8203,"def _zones_us_central1_b_instances_libcloud_lb_demo_www_002(self,method,url,body,headers):
"
8204,"def _zones_us_central1_a(self,method,url,body,headers):
"
8205,"def _zones_us_central1_a_machineTypes(self,method,url,body,headers):
"
8206,"def _zones_europe_west1_a_machineTypes_n1_standard_1(self,method,url,body,headers):
"
8207,"def _zones_us_central1_a_machineTypes_n1_standard_1(self,method,url,body,headers):
"
8208,"def setUp(self):
"
8209,"def test_list_record_types(self):
"
8210,"def test_list_zones(self):
"
8211,"def test_list_records(self):
"
8212,"def test_get_zone(self):
"
8213,"def test_get_record(self):
"
8214,"def test_list_records_zone_does_not_exist(self):
"
8215,"def test_get_zone_does_not_exist(self):
"
8216,"def test_get_record_zone_does_not_exist(self):
"
8217,"def test_get_record_record_does_not_exist(self):
"
8218,"def test_create_zone(self):
"
8219,"def test_create_record(self):
"
8220,"def test_create_record_zone_name(self):
"
8221,"def test_create_multi_value_record(self):
"
8222,"def test_update_record(self):
"
8223,"def test_delete_zone(self):
"
8224,"def test_delete_zone_does_not_exist(self):
"
8225,"def test_delete_record(self):
"
8226,"def test_delete_record_does_not_exist(self):
"
8227,"def _2012_02_29_hostedzone_47234(self,method,url,body,headers):
"
8228,"def _2012_02_29_hostedzone(self,method,url,body,headers):
"
8229,"def _2012_02_29_hostedzone_47234_rrset(self,method,url,body,headers):
"
8230,"def _2012_02_29_hostedzone_47234_rrset_ZONE_DOES_NOT_EXIST(self,method,url,body,headers):
"
8231,"def _2012_02_29_hostedzone_4444_ZONE_DOES_NOT_EXIST(self,method,url,body,headers):
"
8232,"def _2012_02_29_hostedzone_47234_ZONE_DOES_NOT_EXIST(self,method,url,body,headers):
"
8233,"def _2012_02_29_hostedzone_47234_rrset_RECORD_DOES_NOT_EXIST(self,method,url,body,headers):
"
8234,"def _2012_02_29_hostedzone_47234_RECORD_DOES_NOT_EXIST(self,method,url,body,headers):
"
8235,"def setUp(self):
"
8236,"def tearDown(self):
"
8237,"def test_init(self):
"
8238,"def test_iterator(self):
"
8239,"def test_empty_list(self):
"
8240,"def test_iterator_not_exhausted(self):
"
8241,"def test_len(self):
"
8242,"def test_contains(self):
"
8243,"def test_indexing(self):
"
8244,"def test_repr(self):
"
8245,"def _get_more_empty(self,last_key,value_dict):
"
8246,"def _get_more_exhausted(self,last_key,value_dict):
"
8247,"def _get_more_not_exhausted(self,last_key,value_dict):
"
8248,"def write(self,data):
"
8249,"def setUp(self):
"
8250,"def testCreateCouchDBRiver(self):
"
8251,"def testDeleteCouchDBRiver(self):
"
8252,"def testCreateRabbitMQRiver(self):
"
8253,"def testDeleteRabbitMQRiver(self):
"
8254,"def testCreateTwitterRiver(self):
"
8255,"def testDeleteTwitterRiver(self):
"
8256,"def testCreateTwitterRiverOAuth(self):
"
8257,"def init_cxx(self):
"
8258,"def apply_obj_vars_cxx(self):
"
8259,"def apply_defines_cxx(self):
"
8260,"def cxx_hook(self,node):
"
8261,"def __init__(self,returncode,cmd):
"
8262,"def __str__(self):
"
8263,"def _translate_newlines(self,data):
"
8264,"def __del__(self,sys = sys):
"
8265,"def communicate(self,input = None):
"
8266,"def _get_handles(self,stdin,stdout,stderr):
"
8267,"def _make_inheritable(self,handle):
"
8268,"def _find_w9xpopen(self):
"
8269,"def poll(self,_deadstate = None):
"
8270,"def wait(self):
"
8271,"def _readerthread(self,fh,buffer):
"
8272,"def _communicate(self,input):
"
8273,"def _get_handles(self,stdin,stdout,stderr):
"
8274,"def _set_cloexec_flag(self,fd):
"
8275,"def _execute_child(self,args,executable,preexec_fn,close_fds,cwd,env,universal_newlines,startupinfo,creationflags,shell,p2cread,p2cwrite,c2pread,c2pwrite,errread,errwrite):
"
8276,"def _handle_exitstatus(self,sts):
"
8277,"def poll(self,_deadstate = None):
"
8278,"def wait(self):
"
8279,"def _communicate(self,input):
"
8280,"def __init__(self,driver = None):
"
8281,"def tap(self,element = None,x = None,y = None,count = 1):
"
8282,"def press(self,el = None,x = None,y = None):
"
8283,"def long_press(self,el = None,x = None,y = None,duration = 1000):
"
8284,"def wait(self,ms = 0):
"
8285,"def move_to(self,el = None,x = None,y = None):
"
8286,"def release(self):
"
8287,"def perform(self):
"
8288,"def json_wire_gestures(self):
"
8289,"def _add_action(self,action,options):
"
8290,"def _get_opts(self,element,x,y,duration = None):
"
8291,"def __init__(self,app,* args,** kwargs):
"
8292,"def path(self,name):
"
8293,"def __init__(self,app,* args,** kwargs):
"
8294,"def __init__(self,app,* args,** kwargs):
"
8295,"def test_new_message_is_not_initialized(self):
"
8296,"def test_message_with_all_required_fields_set_is_initialized(self):
"
8297,"def test_new_message_with_required_submessage_is_not_initialized(self):
"
8298,"def test_message_with_initialized_required_submessage_is_initialized(self):
"
8299,"def test_message_with_uninitialized_submessage_is_not_initialized(self):
"
8300,"def test_message_with_initialized_submessage_is_initialized(self):
"
8301,"def test_message_with_uninitialized_repeated_submessage_is_not_initialized(self):
"
8302,"def test_message_with_initialized_repeated_submessage_is_initialized(self):
"
8303,"def setUp(self):
"
8304,"def tearDown(self):
"
8305,"def test_order(self):
"
8306,"def test_order_reverse(self):
"
8307,"def forwards(self,orm):
"
8308,"def backwards(self,orm):
"
8309,"def check_ops(self,obj_type,expected_ops,see_output):
"
8310,"def test_int(self):
"
8311,"def test_float(self):
"
8312,"def __init__(self,lexicon,stream,name = ''):
"
8313,"def read(self):
"
8314,"def run_machine(self):
"
8315,"def position(self):
"
8316,"def begin(self,state_name):
"
8317,"def produce(self,value,text = None):
"
8318,"def set_state(self):
"
8319,"def unset_state(self):
"
8320,"def __hash__(self):
"
8321,"def __eq__(self,other):
"
8322,"def __init__(self,parent,items,** kw):
"
8323,"def expose(self,mouse):
"
8324,"def hide(self):
"
8325,"def __init__(self):
"
8326,"def run(self):
"
8327,"def add(self,player):
"
8328,"def remove(self,player):
"
8329,"def __init__(self,source_group,player):
"
8330,"def __del__(self):
"
8331,"def delete(self):
"
8332,"def play(self):
"
8333,"def _al_play(self):
"
8334,"def stop(self):
"
8335,"def clear(self):
"
8336,"def get_write_size(self):
"
8337,"def get_time(self):
"
8338,"def set_volume(self,volume):
"
8339,"def set_position(self,position):
"
8340,"def set_min_distance(self,min_distance):
"
8341,"def set_max_distance(self,max_distance):
"
8342,"def set_pitch(self,pitch):
"
8343,"def set_cone_orientation(self,cone_orientation):
"
8344,"def set_cone_inner_angle(self,cone_inner_angle):
"
8345,"def set_cone_outer_angle(self,cone_outer_angle):
"
8346,"def set_cone_outer_gain(self,cone_outer_gain):
"
8347,"def __init__(self,device_name = None):
"
8348,"def create_audio_player(self,source_group,player):
"
8349,"def delete(self):
"
8350,"def lock(self):
"
8351,"def unlock(self):
"
8352,"def have_version(self,major,minor):
"
8353,"def get_version(self):
"
8354,"def _set_volume(self,volume):
"
8355,"def _set_position(self,position):
"
8356,"def _set_forward_orientation(self,orientation):
"
8357,"def _set_up_orientation(self,orientation):
"
8358,"def __init__(self,ffi_file,lib):
"
8359,"def __getattr__(self,name):
"
8360,"def get_type(self,parts):
"
8361,"def get_base_type(self,name):
"
8362,"def get_enum_type(self,name,items):
"
8363,"def get_class_type(self,name,fields,base):
"
8364,"def get_function_type(self,restype,params):
"
8365,"def get_array_type(self,element_type,dimensions):
"
8366,"def __init__(self,font):
"
8367,"def render(self,text):
"
8368,"def _lookup_font_with_family_and_traits(self,family,traits):
"
8369,"def _create_font_descriptor(self,family_name,traits):
"
8370,"def __init__(self,name,size,bold = False,italic = False,dpi = None):
"
8371,"def match(self,canvas):
"
8372,"def _get_pixel_format_descriptor_matching_configs(self,canvas):
"
8373,"def _get_arb_pixel_format_matching_configs(self,canvas):
"
8374,"def __init__(self,canvas,pf,config):
"
8375,"def compatible(self,canvas):
"
8376,"def create_context(self,share):
"
8377,"def _set_pixel_format(self,canvas):
"
8378,"def __init__(self,canvas,pf,config):
"
8379,"def compatible(self,canvas):
"
8380,"def create_context(self,share):
"
8381,"def _set_pixel_format(self,canvas):
"
8382,"def __init__(self,config,share):
"
8383,"def attach(self,canvas):
"
8384,"def set_current(self):
"
8385,"def detach(self):
"
8386,"def flip(self):
"
8387,"def get_vsync(self):
"
8388,"def set_vsync(self,vsync):
"
8389,"def __init__(self,config,share):
"
8390,"def attach(self,canvas):
"
8391,"def open(self,window):
"
8392,"def __init__(self,window):
"
8393,"def close(self):
"
8394,"def _get_cursor(self,proximity_rec):
"
8395,"def _tablet_event(self,next_handler,ev,data):
"
8396,"def __init__(self,cursor_type):
"
8397,"def __init__(self,packet):
"
8398,"def __init__(self,filename,file = None):
"
8399,"def delete(self):
"
8400,"def _get_packet(self):
"
8401,"def _decode_audio_packet(self):
"
8402,"def _decode_video_packet(self,packet):
"
8403,"def on_close(self):
"
8404,"def on_key_press(self,symbol,modifiers):
"
8405,"def __init__(self,logfile = None):
"
8406,"def render(self):
"
8407,"def draw(self):
"
8408,"def test_method(self):
"
8409,"def test_motion(self):
"
8410,"def test_set_icon(self):
"
8411,"def __user_id(self):
"
8412,"def __language(self):
"
8413,"def create_entity(self,entity_definition_keyname,parent_entity_id = None,ignore_user = False):
"
8414,"def delete_entity(self,entity_id):
"
8415,"def __get_mongodb_parent(self,entity_id,recursive = False):
"
8416,"def set_counter(self,entity_id):
"
8417,"def set_relations(self,entity_id,related_entity_id,relationship_definition_keyname,delete = False,update = False):
"
8418,"def get_rights(self,entity_id):
"
8419,"def set_rights(self,entity_id,related_entity_id,right = None,ignore_user = False):
"
8420,"def set_sharing(self,entity_id,sharing):
"
8421,"def set_sharing_key(self,entity_id,generate = False):
"
8422,"def get_entities(self,ids_only = False,entity_id = None,search = None,entity_definition_keyname = None,dataproperty = None,limit = None,full_definition = False,only_public = False,sharing_key = None):
"
8423,"def __get_displayfields(self,entity_dict):
"
8424,"def __get_picture_url(self,entity_id,entity_definition_keyname):
"
8425,"def get_allowed_parents(self,entity_id):
"
8426,"def get_public_paths(self):
"
8427,"def get_public_path(self,entity_id):
"
8428,"def get_menu(self):
"
8429,"def default(self,obj):
"
8430,"def __init__(self,** kwargs):
"
8431,"def connect(self):
"
8432,"def __init__(self,stateful = True,autorefresh = False,* args,** kwargs):
"
8433,"def instance(self):
"
8434,"def attributes(self):
"
8435,"def node(self):
"
8436,"def check_pyeapi(self):
"
8437,"def map_argument_spec(self):
"
8438,"def create(self):
"
8439,"def remove(self):
"
8440,"def flush(self,exit_after_flush = False):
"
8441,"def update(self,changeset):
"
8442,"def connect(self):
"
8443,"def config(self,commands):
"
8444,"def api(self,module):
"
8445,"def func(self,name):
"
8446,"def invoke(self,func,* args,** kwargs):
"
8447,"def invoke_function(self,name,* args,** kwargs):
"
8448,"def fail(self,msg):
"
8449,"def exit(self):
"
8450,"def refresh(self):
"
8451,"def debug(self,key,value):
"
8452,"def log(self,message,log_args = None,priority = None):
"
8453,"def get(self):
"
8454,"def _parse_iprouting(self):
"
8455,"def _parse_banners(self):
"
8456,"def set_hostname(self,value = None,default = False,disable = False):
"
8457,"def set_iprouting(self,value = None,default = False,disable = False):
"
8458,"def set_banner(self,banner_type,value = None,default = False,disable = False):
"
8459,"def __init__(self,* args,** kwargs):
"
8460,"def test_get(self):
"
8461,"def test_create(self):
"
8462,"def test_create_invalid_as(self):
"
8463,"def test_delete(self):
"
8464,"def test_default(self):
"
8465,"def test_add_network(self):
"
8466,"def test_remove_network(self):
"
8467,"def test_set_router_id(self):
"
8468,"def test_maximum_paths_just_max_path(self):
"
8469,"def test_maximum_paths_max_path_and_ecmp(self):
"
8470,"def test_set_shutdown(self):
"
8471,"def __init__(self,* args,** kwargs):
"
8472,"def test_getall(self):
"
8473,"def test_get(self):
"
8474,"def test_delete(self):
"
8475,"def test_set_peer_group(self):
"
8476,"def test_set_remote_as(self):
"
8477,"def test_set_shutdown(self):
"
8478,"def test_set_send_community(self):
"
8479,"def test_set_next_hop_self(self):
"
8480,"def test_set_route_map_in(self):
"
8481,"def test_set_route_map_out(self):
"
8482,"def test_set_description(self):
"
8483,"def get_model(self):
"
8484,"def index_queryset(self,using = None):
"
8485,"def prepare_restriction(self,obj):
"
8486,"def prepare_facet_model_ct(self,obj):
"
8487,"def get_model(self):
"
8488,"def get_model(self):
"
8489,"def __init__(self,reactor = reactor):
"
8490,"def callLater(self,delay,f,* args,** kw):
"
8491,"def _call_wrapper(self,call_key,f,args,kw):
"
8492,"def __init__(self):
"
8493,"def next_trans(self,key):
"
8494,"def push_deferred(self,key,trans_id,d):
"
8495,"def pop_deferred(self,key,trans_id):
"
8496,"def clear(self):
"
8497,"def reset(self):
"
8498,"def __init__(self):
"
8499,"def add(self,key,code,d):
"
8500,"def pop(self,key):
"
8501,"def wait(self,key,code):
"
8502,"def cancel_all(self,reason = None):
"
8503,"def __init__(self):
"
8504,"def doCommand(self,ts,ms_id,args):
"
8505,"def _handler_wrapper(self,handler,ts,ms_id,args):
"
8506,"def command__result(self,ts,ms_id,trans_id,* args):
"
8507,"def command__error(self,ts,ms_id,trans_id,* args):
"
8508,"def unknownCommandType(self,cmd,ts,msid,args):
"
8509,"def unexpectedCallResult(self,ts,ms_id,trans_id,args):
"
8510,"def unexpectedCallError(self,ts,ms_id,trans_id,args):
"
8511,"def connectionLost(self,reason = protocol.connectionDone):
"
8512,"def encode_amf(self,* args):
"
8513,"def _send_command(self,ts,ms_id,body,track_id):
"
8514,"def _sendRemote(self,ms_id,cmd,args,kwargs,track):
"
8515,"def callRemote(self,ms_id,cmd,* args,** kw):
"
8516,"def signalRemote(self,ms_id,cmd,* args,** kw):
"
8517,"def __init__(self):
"
8518,"def _onStatus_ev_key(self,ms_id):
"
8519,"def waitStatus(self,ms_id,code):
"
8520,"def command_onStatus(self,ts,ms_id,_trans_id,_none,info):
"
8521,"def unhandledOnStatus(self,ts,ms_id,info):
"
8522,"def connectionLost(self,reason = protocol.connectionDone):
"
8523,"def __init__(self):
"
8524,"def session_time(self):
"
8525,"def unknownCommandType(self,cmd,ts,ms_id,args):
"
8526,"def _remote_abort_handler_eb(self,failure):
"
8527,"def _remote_handler_cb(self,result,ms_id,trans_id):
"
8528,"def _remote_handler_eb(self,failure,ms_id,trans_id):
"
8529,"def unknownRemoteCall(self,cmd,ts,ms_id,args):
"
8530,"def __init__(self,handle):
"
8531,"def __getitem__(self,name):
"
8532,"def __iter__(self):
"
8533,"def __len__(self):
"
8534,"def __contains__(self,name):
"
8535,"def _read(self):
"
8536,"def protocol(self):
"
8537,"def mount_point(self):
"
8538,"def query(self):
"
8539,"def uri(self):
"
8540,"def __init__(self,response,handle):
"
8541,"def __getitem__(self,name):
"
8542,"def __setitem__(self,name,value):
"
8543,"def __contains__(self,name):
"
8544,"def __delitem__(self,name):
"
8545,"def __iter__(self):
"
8546,"def __len__(self):
"
8547,"def __init__(self,* args,** kwargs):
"
8548,"def __iter__(self):
"
8549,"def status(self):
"
8550,"def status(self,value):
"
8551,"def body(self,value):
"
8552,"def close(self):
"
8553,"def gh_ssh_clone_url(self):
"
8554,"def gh_https_clone_url(self):
"
8555,"def gh_ssh_clone_url(self):
"
8556,"def gh_https_clone_url(self):
"
8557,"def number(self):
"
8558,"def created_at(self):
"
8559,"def gh_commit_sha(self):
"
8560,"def gh_payload(self):
"
8561,"def handle(self,** options):
"
8562,"def __init__(self,period = 5,metrics = None,zero = True):
"
8563,"def _process_value(self,event,output,v,value):
"
8564,"def start(self):
"
8565,"def stop(self):
"
8566,"def __init__(self):
"
8567,"def add(self,v):
"
8568,"def stats(self,period,zero):
"
8569,"def reset(self):
"
8570,"def create(self,conf):
"
8571,"def test_event(self):
"
8572,"def test_event(self):
"
8573,"def test_missing(self):
"
8574,"def _create_storage(self):
"
8575,"def tearDown(self):
"
8576,"def test_table_name(self):
"
8577,"def _create_storage(self):
"
8578,"def _create_storage(self):
"
8579,"def initialize_options(self):
"
8580,"def finalize_options(self):
"
8581,"def run(self):
"
8582,"def test_properties(self):
"
8583,"def test_repr(self):
"
8584,"def test_list(self):
"
8585,"def test_list_with_page(self):
"
8586,"def __init__(self,lcid,random_state = None):
"
8587,"def period(self):
"
8588,"def observed(self,band,corrected = True):
"
8589,"def generated(self,band,t,err = None,corrected = True):
"
8590,"def setUp(self):
"
8591,"def test_verify_invalid_token(self):
"
8592,"def test_verify_valid_token(self):
"
8593,"def test_force_verify_token(self):
"
8594,"def __init__(self,objective_function,X_lower,X_upper,n_func_evals = 400,n_iters = 200):
"
8595,"def _direct_acquisition_fkt_wrapper(self,acq_f):
"
8596,"def maximize(self):
"
8597,"def __init__(self,message,info = None):
"
8598,"def __init__(self,handlers = None):
"
8599,"def add_handler(self,url_regex,handlers):
"
8600,"def get_handler(self,url):
"
8601,"def __init__(self):
"
8602,"def run(self):
"
8603,"def prepare_catalog_media(self,product):
"
8604,"def prepare_search_media(self,product):
"
8605,"def get_model(self):
"
8606,"def get_model(self):
"
8607,"def select_lookup(self,search_term):
"
8608,"def indexable(self):
"
8609,"def __str__(self):
"
8610,"def product_type(self):
"
8611,"def product_model(self):
"
8612,"def get_absolute_url(self):
"
8613,"def get_price(self,request):
"
8614,"def get_availability(self,request):
"
8615,"def is_in_cart(self,cart,watched = False,** kwargs):
"
8616,"def unfulfilled_items(self):
"
8617,"def ready_for_delivery(self):
"
8618,"def pick_goods(self,by = None):
"
8619,"def pack_goods(self,by = None):
"
8620,"def __enter__(self):
"
8621,"def __exit__(self,type,value,traceback):
"
8622,"def _run_main_command(self,parsed_args,parsed_globals):
"
8623,"def _run_main(self,parsed_args,parsed_globals):
"
8624,"def __init__(self,stream,indent_level,left_indent_char = '|',right_indent_char = '|'):
"
8625,"def write(self,text):
"
8626,"def __getattr__(self,attr):
"
8627,"def style_title(self,text):
"
8628,"def style_header_column(self,text):
"
8629,"def style_row_element(self,text):
"
8630,"def style_indentation_char(self,text):
"
8631,"def __init__(self):
"
8632,"def style_title(self,text):
"
8633,"def style_header_column(self,text):
"
8634,"def style_row_element(self,text):
"
8635,"def style_indentation_char(self,text):
"
8636,"def __init__(self,terminal_width = None,initial_section = True,column_separator = '|',terminal = None,styler = None,auto_reformat = True):
"
8637,"def add_title(self,title):
"
8638,"def add_row_header(self,headers):
"
8639,"def add_row(self,row_elements):
"
8640,"def new_section(self,title,indent_level = 0):
"
8641,"def render(self,stream):
"
8642,"def _determine_conversion_needed(self,max_width):
"
8643,"def _calculate_max_width(self):
"
8644,"def _render_section(self,section,max_width,stream):
"
8645,"def _render_title(self,section,max_width,stream):
"
8646,"def _render_column_titles(self,section,max_width,stream):
"
8647,"def _write_line_break(self,stream,widths):
"
8648,"def _render_rows(self,section,max_width,stream):
"
8649,"def __init__(self):
"
8650,"def __repr__(self):
"
8651,"def calculate_column_widths(self,padding = 0,max_width = None):
"
8652,"def total_width(self,padding = 0,with_border = False,outer_padding = 0):
"
8653,"def add_title(self,title):
"
8654,"def add_header(self,headers):
"
8655,"def _format_headers(self,headers):
"
8656,"def add_row(self,row):
"
8657,"def _format_row(self,row):
"
8658,"def _update_max_widths(self,row):
"
8659,"def setUp(self):
"
8660,"def tearDown(self):
"
8661,"def test_add_model(self):
"
8662,"def test_add_model_with_service_name(self):
"
8663,"def setUp(self):
"
8664,"def tearDown(self):
"
8665,"def test_upload_build(self):
"
8666,"def test_all_param(self):
"
8667,"def test_multiple_accounts(self):
"
8668,"def test_multiple_actions(self):
"
8669,"def tearDown(self):
"
8670,"def test_install_throws_on_invalid_region(self):
"
8671,"def test_install_throws_on_unsupported_system(self):
"
8672,"def test_install_throws_on_ec2_instance(self):
"
8673,"def test_install_throws_on_non_administrator(self):
"
8674,"def test_install_with_agent_installer(self,install):
"
8675,"def test_assume_role_policy(self):
"
8676,"def setUp(self):
"
8677,"def test_compare_exact_timestamps_dest_older(self):
"
8678,"def test_compare_exact_timestamps_src_older(self):
"
8679,"def test_compare_exact_timestamps_same_age_same_size(self):
"
8680,"def test_compare_exact_timestamps_same_age_diff_size(self):
"
8681,"def test_compare_exact_timestamps_diff_age_not_download(self):
"
8682,"def test_register_argument_action(self):
"
8683,"def test_generate_json_skeleton(self):
"
8684,"def test_no_generate_json_skeleton(self):
"
8685,"def test_generate_json_skeleton_no_input_shape(self):
"
8686,"def setUp(self):
"
8687,"def tearDown(self):
"
8688,"def test_valid_tags(self):
"
8689,"def test_topic_dir(self):
"
8690,"def test_index_file(self):
"
8691,"def test_get_all_topic_names(self):
"
8692,"def test_get_all_topic_source_files(self):
"
8693,"def test_get_all_topic_source_files_ignore_index(self):
"
8694,"def test_get_all_topic_source_files_ignore_hidden(self):
"
8695,"def test_get_tag_value_all_tags(self):
"
8696,"def test_get_tag_multi_value(self):
"
8697,"def test_get_tag_topic_no_exists(self):
"
8698,"def test_get_tag_no_exist_tag(self):
"
8699,"def test_get_tag_no_exist_use_default(self):
"
8700,"def test_get_tag_single_value(self):
"
8701,"def test_get_tag_single_value_exception(self):
"
8702,"def test_get_tag_single_value_no_exists(self):
"
8703,"def test_load_and_save_json_index(self):
"
8704,"def test_query_all_tags_single_topic(self):
"
8705,"def test_query_tag_multi_values(self):
"
8706,"def test_query_tag_multi_values(self):
"
8707,"def test_query_multiple_topics(self):
"
8708,"def test_query_multiple_topics_with_multi_values(self):
"
8709,"def test_query_multiple_topics_with_overlap_values(self):
"
8710,"def test_query_with_limit_single_value(self):
"
8711,"def test_query_with_limit_multi_value(self):
"
8712,"def topic_query_with_non_existant_tag(self):
"
8713,"def create_topic_src_file(self,topic_name,tags):
"
8714,"def assert_json_index(self,file_paths,reference_tag_dict):
"
8715,"def test_scan_invalid_tag(self):
"
8716,"def test_scan_no_tags(self):
"
8717,"def test_scan_tags_with_multi_values(self):
"
8718,"def test_scan_tags_with_single_and_multi_values(self):
"
8719,"def test_scan_tags_with_multi_values_extra_space(self):
"
8720,"def test_scan_tags_with_multi_values_no_space(self):
"
8721,"def test_scan_tags_with_multi_preserve_space(self):
"
8722,"def test_config_off(self):
"
8723,"def test_config_on(self):
"
8724,"def testGMT(self):
"
8725,"def testReferenceUTC(self):
"
8726,"def testUnknownOffsets(self):
"
8727,"def clearCache(self):
"
8728,"def testUnicodeTimezone(self):
"
8729,"def _roundtrip_tzinfo(self,tz):
"
8730,"def _roundtrip_datetime(self,dt):
"
8731,"def testDst(self):
"
8732,"def testRoundtrip(self):
"
8733,"def testDatabaseFixes(self):
"
8734,"def _test_tzname(self,utc_dt,wanted):
"
8735,"def _test_utcoffset(self,utc_dt,wanted):
"
8736,"def _test_dst(self,utc_dt,wanted):
"
8737,"def test_arithmetic(self):
"
8738,"def _test_all(self,utc_dt,wanted):
"
8739,"def testDayBefore(self):
"
8740,"def testTwoHoursBefore(self):
"
8741,"def testHourBefore(self):
"
8742,"def testInstantBefore(self):
"
8743,"def testTransition(self):
"
8744,"def testInstantAfter(self):
"
8745,"def testHourAfter(self):
"
8746,"def testTwoHoursAfter(self):
"
8747,"def testDayAfter(self):
"
8748,"def test_arithmetic(self):
"
8749,"def testHourBefore(self):
"
8750,"def testInstantBefore(self):
"
8751,"def test_arithmetic(self):
"
8752,"def testLocalize(self):
"
8753,"def test_bratislava(self):
"
8754,"def test_us_eastern(self):
"
8755,"def test_belfast(self):
"
8756,"def test_expectedclass(self):
"
8757,"def test_fromutc(self):
"
8758,"def test_normalize(self):
"
8759,"def test_astimezone(self):
"
8760,"def delete(self):
"
8761,"def __call__(self,message_sid):
"
8762,"def __init__(self,* args,** kwargs):
"
8763,"def list(self,before = None,after = None,date_created = None,** kw):
"
8764,"def delete(self,sid):
"
8765,"def delete(self):
"
8766,"def list(self,** kwargs):
"
8767,"def delete(self,sid):
"
8768,"def __init__(self,pin,name):
"
8769,"def blink(self):
"
8770,"def on(self):
"
8771,"def off(self):
"
8772,"def get_days_left(self):
"
8773,"def get_days_till_start(self):
"
8774,"def has_ended(self):
"
8775,"def has_started(self):
"
8776,"def get_next_vote_date(self,user):
"
8777,"def user_can_vote(self,user):
"
8778,"def __str__(self):
"
8779,"def __str__(self):
"
8780,"def get_place(self):
"
8781,"def __init__(self,* args,** kwargs):
"
8782,"def __getitem__(self,name):
"
8783,"def handle(self,context,* args):
"
8784,"def handle(self,context,* args):
"
8785,"def handle(self,context,* args):
"
8786,"def handle(self,context,sign,* args):
"
8787,"def handle(self,context,* args):
"
8788,"def handle(self,context,* args):
"
8789,"def handle(self,context,* args):
"
8790,"def handle(self,context,sign,* args):
"
8791,"def local(self,sys = sys):
"
8792,"def _isnan(self):
"
8793,"def _isinfinity(self):
"
8794,"def _check_nans(self,other = None,context = None):
"
8795,"def _compare_check_nans(self,other,context):
"
8796,"def __nonzero__(self):
"
8797,"def _cmp(self,other):
"
8798,"def __eq__(self,other,context = None):
"
8799,"def __ne__(self,other,context = None):
"
8800,"def __lt__(self,other,context = None):
"
8801,"def __le__(self,other,context = None):
"
8802,"def __gt__(self,other,context = None):
"
8803,"def __ge__(self,other,context = None):
"
8804,"def compare(self,other,context = None):
"
8805,"def __hash__(self):
"
8806,"def as_tuple(self):
"
8807,"def __repr__(self):
"
8808,"def __str__(self,eng = False,context = None):
"
8809,"def to_eng_string(self,context = None):
"
8810,"def __neg__(self,context = None):
"
8811,"def __pos__(self,context = None):
"
8812,"def __abs__(self,round = True,context = None):
"
8813,"def __add__(self,other,context = None):
"
8814,"def __sub__(self,other,context = None):
"
8815,"def __rsub__(self,other,context = None):
"
8816,"def __mul__(self,other,context = None):
"
8817,"def __truediv__(self,other,context = None):
"
8818,"def _divide(self,other,context):
"
8819,"def __rtruediv__(self,other,context = None):
"
8820,"def __divmod__(self,other,context = None):
"
8821,"def __rdivmod__(self,other,context = None):
"
8822,"def __mod__(self,other,context = None):
"
8823,"def __rmod__(self,other,context = None):
"
8824,"def remainder_near(self,other,context = None):
"
8825,"def __floordiv__(self,other,context = None):
"
8826,"def __rfloordiv__(self,other,context = None):
"
8827,"def __float__(self):
"
8828,"def __int__(self):
"
8829,"def real(self):
"
8830,"def imag(self):
"
8831,"def conjugate(self):
"
8832,"def __complex__(self):
"
8833,"def __long__(self):
"
8834,"def _fix_nan(self,context):
"
8835,"def _fix(self,context):
"
8836,"def _round_down(self,prec):
"
8837,"def _round_up(self,prec):
"
8838,"def _round_half_up(self,prec):
"
8839,"def _round_half_down(self,prec):
"
8840,"def _round_half_even(self,prec):
"
8841,"def _round_ceiling(self,prec):
"
8842,"def _round_floor(self,prec):
"
8843,"def _round_05up(self,prec):
"
8844,"def fma(self,other,third,context = None):
"
8845,"def __pow__(self,other,modulo = None,context = None):
"
8846,"def __rpow__(self,other,context = None):
"
8847,"def normalize(self,context = None):
"
8848,"def quantize(self,exp,rounding = None,context = None,watchexp = True):
"
8849,"def same_quantum(self,other):
"
8850,"def _rescale(self,exp,rounding):
"
8851,"def _round(self,places,rounding):
"
8852,"def to_integral_exact(self,rounding = None,context = None):
"
8853,"def to_integral_value(self,rounding = None,context = None):
"
8854,"def sqrt(self,context = None):
"
8855,"def max(self,other,context = None):
"
8856,"def min(self,other,context = None):
"
8857,"def _isinteger(self):
"
8858,"def _iseven(self):
"
8859,"def adjusted(self):
"
8860,"def canonical(self,context = None):
"
8861,"def compare_signal(self,other,context = None):
"
8862,"def compare_total(self,other):
"
8863,"def compare_total_mag(self,other):
"
8864,"def copy_abs(self):
"
8865,"def copy_negate(self):
"
8866,"def copy_sign(self,other):
"
8867,"def exp(self,context = None):
"
8868,"def is_canonical(self):
"
8869,"def is_finite(self):
"
8870,"def is_infinite(self):
"
8871,"def is_nan(self):
"
8872,"def is_normal(self,context = None):
"
8873,"def is_qnan(self):
"
8874,"def is_signed(self):
"
8875,"def is_snan(self):
"
8876,"def is_subnormal(self,context = None):
"
8877,"def is_zero(self):
"
8878,"def _ln_exp_bound(self):
"
8879,"def ln(self,context = None):
"
8880,"def _log10_exp_bound(self):
"
8881,"def log10(self,context = None):
"
8882,"def logb(self,context = None):
"
8883,"def _islogical(self):
"
8884,"def _fill_logical(self,context,opa,opb):
"
8885,"def logical_invert(self,context = None):
"
8886,"def max_mag(self,other,context = None):
"
8887,"def min_mag(self,other,context = None):
"
8888,"def next_minus(self,context = None):
"
8889,"def next_plus(self,context = None):
"
8890,"def next_toward(self,other,context = None):
"
8891,"def number_class(self,context = None):
"
8892,"def radix(self):
"
8893,"def rotate(self,other,context = None):
"
8894,"def scaleb(self,other,context = None):
"
8895,"def shift(self,other,context = None):
"
8896,"def __reduce__(self):
"
8897,"def __copy__(self):
"
8898,"def __deepcopy__(self,memo):
"
8899,"def __format__(self,specifier,context = None,_localeconv = None):
"
8900,"def __tojava__(self,java_class):
"
8901,"def __init__(self,new_context):
"
8902,"def __enter__(self):
"
8903,"def __exit__(self,t,v,tb):
"
8904,"def __init__(self,prec = None,rounding = None,traps = None,flags = None,Emin = None,Emax = None,capitals = None,_clamp = 0,_ignored_flags = None):
"
8905,"def clear_flags(self):
"
8906,"def _shallow_copy(self):
"
8907,"def copy(self):
"
8908,"def _raise_error(self,condition,explanation = None,* args):
"
8909,"def _ignore_all_flags(self):
"
8910,"def _ignore_flags(self,* flags):
"
8911,"def _regard_flags(self,* flags):
"
8912,"def Etiny(self):
"
8913,"def Etop(self):
"
8914,"def _set_rounding(self,type):
"
8915,"def create_decimal_from_float(self,f):
"
8916,"def abs(self,a):
"
8917,"def add(self,a,b):
"
8918,"def _apply(self,a):
"
8919,"def canonical(self,a):
"
8920,"def compare(self,a,b):
"
8921,"def compare_signal(self,a,b):
"
8922,"def compare_total(self,a,b):
"
8923,"def compare_total_mag(self,a,b):
"
8924,"def copy_abs(self,a):
"
8925,"def copy_decimal(self,a):
"
8926,"def copy_negate(self,a):
"
8927,"def copy_sign(self,a,b):
"
8928,"def divide(self,a,b):
"
8929,"def divide_int(self,a,b):
"
8930,"def divmod(self,a,b):
"
8931,"def exp(self,a):
"
8932,"def fma(self,a,b,c):
"
8933,"def is_canonical(self,a):
"
8934,"def is_finite(self,a):
"
8935,"def is_infinite(self,a):
"
8936,"def is_nan(self,a):
"
8937,"def is_normal(self,a):
"
8938,"def is_qnan(self,a):
"
8939,"def is_signed(self,a):
"
8940,"def is_snan(self,a):
"
8941,"def is_subnormal(self,a):
"
8942,"def is_zero(self,a):
"
8943,"def ln(self,a):
"
8944,"def log10(self,a):
"
8945,"def logb(self,a):
"
8946,"def logical_and(self,a,b):
"
8947,"def logical_invert(self,a):
"
8948,"def logical_or(self,a,b):
"
8949,"def logical_xor(self,a,b):
"
8950,"def max(self,a,b):
"
8951,"def max_mag(self,a,b):
"
8952,"def min(self,a,b):
"
8953,"def min_mag(self,a,b):
"
8954,"def minus(self,a):
"
8955,"def multiply(self,a,b):
"
8956,"def next_minus(self,a):
"
8957,"def next_plus(self,a):
"
8958,"def next_toward(self,a,b):
"
8959,"def normalize(self,a):
"
8960,"def number_class(self,a):
"
8961,"def plus(self,a):
"
8962,"def power(self,a,b,modulo = None):
"
8963,"def quantize(self,a,b):
"
8964,"def radix(self):
"
8965,"def remainder(self,a,b):
"
8966,"def remainder_near(self,a,b):
"
8967,"def rotate(self,a,b):
"
8968,"def same_quantum(self,a,b):
"
8969,"def scaleb(self,a,b):
"
8970,"def shift(self,a,b):
"
8971,"def sqrt(self,a):
"
8972,"def subtract(self,a,b):
"
8973,"def to_eng_string(self,a):
"
8974,"def to_sci_string(self,a):
"
8975,"def to_integral_exact(self,a):
"
8976,"def to_integral_value(self,a):
"
8977,"def __init__(self,value = None):
"
8978,"def __repr__(self):
"
8979,"def __init__(self):
"
8980,"def getdigits(self,p):
"
8981,"def test_simple_run(self):
"
8982,"def __init__(self,errors = 'strict'):
"
8983,"def encode(self,input,final = False):
"
8984,"def reset(self):
"
8985,"def getstate(self):
"
8986,"def setstate(self,state):
"
8987,"def __init__(self,errors = 'strict'):
"
8988,"def reset(self):
"
8989,"def __init__(self,stream,errors = 'strict'):
"
8990,"def reset(self):
"
8991,"def encode(self,input,errors = 'strict'):
"
8992,"def reset(self):
"
8993,"def __init__(self,verbose = VERBOSE):
"
8994,"def get_verbose(self):
"
8995,"def set_verbose(self,verbose):
"
8996,"def note(self,* args):
"
8997,"def find_module(self,name,path = None):
"
8998,"def default_path(self):
"
8999,"def find_module_in_dir(self,name,dir):
"
9000,"def find_builtin_module(self,name):
"
9001,"def load_module(self,name,stuff):
"
9002,"def load_compiled(self,name,filename,file = None):
"
9003,"def load_dynamic(self,name,filename,file = None):
"
9004,"def load_package(self,name,filename,file = None):
"
9005,"def add_module(self,name):
"
9006,"def default_path(self):
"
9007,"def modules_dict(self):
"
9008,"def get_hooks(self):
"
9009,"def set_hooks(self,hooks):
"
9010,"def find_builtin_module(self,name):
"
9011,"def find_module_in_dir(self,name,dir,allow_packages = 1):
"
9012,"def __init__(self,loader = None,verbose = VERBOSE):
"
9013,"def get_loader(self):
"
9014,"def set_loader(self,loader):
"
9015,"def get_hooks(self):
"
9016,"def set_hooks(self,hooks):
"
9017,"def unload(self,module):
"
9018,"def install(self):
"
9019,"def uninstall(self):
"
9020,"def import_module(self,name,globals = None,locals = None,fromlist = None,level = - 1):
"
9021,"def import_it(self,partname,fqname,parent,force_load = 0):
"
9022,"def reload(self,module):
"
9023,"def __init__(self,ostream):
"
9024,"def __init__(self,indent = 1,width = 80,depth = None,stream = None):
"
9025,"def pprint(self,object):
"
9026,"def pformat(self,object):
"
9027,"def isrecursive(self,object):
"
9028,"def isreadable(self,object):
"
9029,"def _format(self,object,stream,indent,allowance,context,level):
"
9030,"def _repr(self,object,context,level):
"
9031,"def format(self,object,context,maxlevels,level):
"
9032,"def run_tests(self,test_labels,extra_tests = None,** kwargs):
"
9033,"def init(self,config):
"
9034,"def doFilter(self,req,resp,chain):
"
9035,"def test_extended_getslice(self):
"
9036,"def assertAlmostEqual(self,a,b):
"
9037,"def assertCloseAbs(self,x,y,eps = 1e-9):
"
9038,"def assertFloatsAreIdentical(self,x,y):
"
9039,"def assertClose(self,x,y,eps = 1e-9):
"
9040,"def check_div(self,x,y):
"
9041,"def test_truediv(self):
"
9042,"def test_floordiv(self):
"
9043,"def test_no_implicit_coerce(self):
"
9044,"def test_richcompare_boundaries(self):
"
9045,"def test_mod(self):
"
9046,"def test_divmod(self):
"
9047,"def test_pow(self):
"
9048,"def test_conjugate(self):
"
9049,"def test_subclass(self):
"
9050,"def test_repr(self):
"
9051,"def test_neg(self):
"
9052,"def test_getnewargs(self):
"
9053,"def test_plus_minus_0j(self):
"
9054,"def test_overflow(self):
"
9055,"def test_repr_roundtrip(self):
"
9056,"def test_format(self):
"
9057,"def test_class_dict_is_copy(self):
"
9058,"def test_descr___get__(self):
"
9059,"def test_ints(self):
"
9060,"def test_set_without_get(self):
"
9061,"def test_subclass_cmp_right_op(self):
"
9062,"def test_overriding_base_binop(self):
"
9063,"def test_oldstyle_binop_notimplemented(self):
"
9064,"def test_int_mul(self):
"
9065,"def test_iadd(self):
"
9066,"def test_imul(self):
"
9067,"def test_list(self):
"
9068,"def test_iand(self):
"
9069,"def test_hex(self):
"
9070,"def test_oct(self):
"
9071,"def test_other(self):
"
9072,"def _test(self,func):
"
9073,"def test_eq(self):
"
9074,"def __init__(self,name):
"
9075,"def test_binop_combinations_mul(self):
"
9076,"def test_binop_combinations_sub(self):
"
9077,"def test_binop_combinations_pow(self):
"
9078,"def test_binop_combinations_more_exhaustive(self):
"
9079,"def test_for_improper_attributes(self):
"
9080,"def setUp(self):
"
9081,"def cannot_set_attr(self,obj,name,value,exceptions):
"
9082,"def test_module(self):
"
9083,"def test_duplicate_function_equality(self):
"
9084,"def test_copying_func_code(self):
"
9085,"def test_func_globals(self):
"
9086,"def test_func_code(self):
"
9087,"def test_blank_func_defaults(self):
"
9088,"def test_func_default_args(self):
"
9089,"def test_im_class(self):
"
9090,"def test_im_func(self):
"
9091,"def test_im_self(self):
"
9092,"def test_im_func_non_method(self):
"
9093,"def test_implicit_method_properties(self):
"
9094,"def test_set_attr(self):
"
9095,"def test_delete_unknown_attr(self):
"
9096,"def test_setting_attrs_duplicates(self):
"
9097,"def test_unset_attr(self):
"
9098,"def test_setting_dict_to_invalid(self):
"
9099,"def test_setting_dict_to_valid(self):
"
9100,"def test_delete_func_dict(self):
"
9101,"def test_unassigned_dict(self):
"
9102,"def test_func_as_dict_key(self):
"
9103,"def test_set_docstring_attr(self):
"
9104,"def test_delete_docstring(self):
"
9105,"def test_func_attribute(self):
"
9106,"def same_hash(self,* objlist):
"
9107,"def test_coerced_integers(self):
"
9108,"def test_coerced_floats(self):
"
9109,"def __hash__(self):
"
9110,"def __eq__(self,other):
"
9111,"def __ne__(self,other):
"
9112,"def __cmp__(self,other):
"
9113,"def test_default_hash(self):
"
9114,"def test_fixed_hash(self):
"
9115,"def test_error_hash(self):
"
9116,"def test_hashable(self):
"
9117,"def test_not_hashable(self):
"
9118,"def __len__(self):
"
9119,"def __getitem__(self,index):
"
9120,"def test_hashes(self):
"
9121,"def get_hash_command(self,repr_):
"
9122,"def get_hash(self,repr_,seed = None):
"
9123,"def test_randomized_hash(self):
"
9124,"def test_null_hash(self):
"
9125,"def test_fixed_hash(self):
"
9126,"def test_empty_string(self):
"
9127,"def test_empty_string(self):
"
9128,"def get_hash_command(self,repr_):
"
9129,"def test_class_has_no_bases(self):
"
9130,"def test_bases_raises_other_than_attribute_error(self):
"
9131,"def test_dont_mask_non_attribute_error(self):
"
9132,"def test_mask_attribute_error(self):
"
9133,"def test_dont_mask_non_attribute_error(self):
"
9134,"def test_mask_attribute_error(self):
"
9135,"def test_dont_mask_non_attribute_error_in_cls_arg(self):
"
9136,"def test_mask_attribute_error_in_cls_arg(self):
"
9137,"def __init__(self,bases):
"
9138,"def getbases(self):
"
9139,"def __call__(self):
"
9140,"def __init__(self,klass):
"
9141,"def getclass(self):
"
9142,"def test_isinstance_normal(self):
"
9143,"def test_isinstance_abstract(self):
"
9144,"def test_subclass_normal(self):
"
9145,"def test_subclass_abstract(self):
"
9146,"def test_subclass_tuple(self):
"
9147,"def test_subclass_recursion_limit(self):
"
9148,"def test_isinstance_recursion_limit(self):
"
9149,"def check_truediv(self,a,b,skip_small = True):
"
9150,"def test_correctly_rounded_true_division(self):
"
9151,"def assertWarning(self,_,warning,expected_message):
"
9152,"def assertNoWarning(self,_,recorder):
"
9153,"def test_type_inequality_comparisons(self):
"
9154,"def test_object_inequality_comparisons(self):
"
9155,"def test_dict_inequality_comparisons(self):
"
9156,"def test_cell_inequality_comparisons(self):
"
9157,"def test_code_inequality_comparisons(self):
"
9158,"def test_builtin_function_or_method_comparisons(self):
"
9159,"def test_frame_attributes(self):
"
9160,"def test_sort_cmp_arg(self):
"
9161,"def test_sys_exc_clear(self):
"
9162,"def test_methods_members(self):
"
9163,"def test_softspace(self):
"
9164,"def test_slice_methods(self):
"
9165,"def test_buffer(self):
"
9166,"def test_file_xreadlines(self):
"
9167,"def test_hash_inheritance(self):
"
9168,"def test_operator(self):
"
9169,"def test_platform_independent_removals(self):
"
9170,"def test_platform_specific_removals(self):
"
9171,"def test_optional_module_removals(self):
"
9172,"def test_os_path_walk(self):
"
9173,"def test_reduce_move(self):
"
9174,"def test_mutablestring_removal(self):
"
9175,"def test_no_overflow(self):
"
9176,"def test_negation_of_exponentiation(self):
"
9177,"def test_bad_types(self):
"
9178,"def __init__(self,* args):
"
9179,"def tearDown(self):
"
9180,"def setUp(self):
"
9181,"def test_whichdb_name(self,name = name,mod = mod):
"
9182,"def __init__(self,errorCode,messages,args):
"
9183,"def __str__(self):
"
9184,"def __init__(self,box,settings):
"
9185,"def actionGoNext(self):
"
9186,"def __init__(self,console,input):
"
9187,"def __repr__(self):
"
9188,"def __init__(self,fp):
"
9189,"def addheader(self,key,value,prefix = 0):
"
9190,"def flushheaders(self):
"
9191,"def startbody(self,ctype,plist =[],prefix = 1):
"
9192,"def startmultipartbody(self,subtype,boundary = None,plist =[],prefix = 1):
"
9193,"def nextpart(self):
"
9194,"def lastpart(self):
"
9195,"def __init__(self):
"
9196,"def visitModule(self,node):
"
9197,"def get_features(self):
"
9198,"def initialize_options(self):
"
9199,"def run(self):
"
9200,"def get_inidata(self):
"
9201,"def create_exe(self,arcname,fullname,bitmap = None):
"
9202,"def get_installer_filename(self,fullname):
"
9203,"def get_exe_bytes(self):
"
9204,"def __init__(self,threshold = WARN):
"
9205,"def log(self,level,msg,* args):
"
9206,"def debug(self,msg,* args):
"
9207,"def info(self,msg,* args):
"
9208,"def warn(self,msg,* args):
"
9209,"def error(self,msg,* args):
"
9210,"def fatal(self,msg,* args):
"
9211,"def __init__(self,_data,_subtype = 'octet-stream',_encoder = encoders.encode_base64,** _params):
"
9212,"def get_top_level_stats(self):
"
9213,"def dump_stats(self,filename):
"
9214,"def reverse_order(self):
"
9215,"def eval_print_amount(self,sel,list,msg):
"
9216,"def __init__(self,comp_select_list):
"
9217,"def compare(self,left,right):
"
9218,"def __init__(self,profile = None):
"
9219,"def do_add(self,line):
"
9220,"def do_quit(self,line):
"
9221,"def do_reverse(self,line):
"
9222,"def complete_sort(self,text,* args):
"
9223,"def do_strip(self,line):
"
9224,"def postcmd(self,stop,line):
"
9225,"def test_class_dict_is_copy(self):
"
9226,"def test_descr___get__(self):
"
9227,"def test_ints(self):
"
9228,"def test_subclass_cmp_right_op(self):
"
9229,"def test_iadd(self):
"
9230,"def test_imul(self):
"
9231,"def test_list(self):
"
9232,"def test_iand(self):
"
9233,"def test_hex(self):
"
9234,"def test_oct(self):
"
9235,"def test_other(self):
"
9236,"def _test(self,func):
"
9237,"def __init__(self,logfn):
"
9238,"def next(self,index = None):
"
9239,"def new_profiler(self,lineevents = 0,linetimings = 1):
"
9240,"def get_logreader(self):
"
9241,"def get_events_wotime(self):
"
9242,"def run_test(self,callable,events,profiler = None):
"
9243,"def test_addinfo(self):
"
9244,"def test_line_numbers(self):
"
9245,"def test_start_stop(self):
"
9246,"def test_bad_sys_path(self):
"
9247,"def assertInvalid(self,str,symbol = 'single',is_syntax = 1):
"
9248,"def test_valid(self):
"
9249,"def test_incomplete(self):
"
9250,"def test_invalid(self):
"
9251,"def test_filename(self):
"
9252,"def get_yolks(self):
"
9253,"def get_more_yolks(self):
"
9254,"def break_yolks(self):
"
9255,"def check(self,data,digest):
"
9256,"def test_case_1(self):
"
9257,"def test_case_2(self):
"
9258,"def test_case_3(self):
"
9259,"def test_case_4(self):
"
9260,"def test_subclass_int(self):
"
9261,"def __init__(self):
"
9262,"def startTest(self,test):
"
9263,"def stopTest(self,test):
"
9264,"def addError(self,test,err):
"
9265,"def addFailure(self,test,err):
"
9266,"def addSuccess(self,test):
"
9267,"def wasSuccessful(self):
"
9268,"def stop(self):
"
9269,"def _exc_info_to_string(self,err,test):
"
9270,"def _is_relevant_tb_level(self,tb):
"
9271,"def _count_relevant_tb_levels(self,tb):
"
9272,"def __repr__(self):
"
9273,"def setUp(self):
"
9274,"def tearDown(self):
"
9275,"def countTestCases(self):
"
9276,"def defaultTestResult(self):
"
9277,"def shortDescription(self):
"
9278,"def id(self):
"
9279,"def __str__(self):
"
9280,"def __repr__(self):
"
9281,"def run(self,result = None):
"
9282,"def __call__(self,* args,** kwds):
"
9283,"def debug(self):
"
9284,"def _exc_info(self):
"
9285,"def __init__(self,tests =()):
"
9286,"def __repr__(self):
"
9287,"def __iter__(self):
"
9288,"def countTestCases(self):
"
9289,"def addTest(self,test):
"
9290,"def addTests(self,tests):
"
9291,"def run(self,result):
"
9292,"def __call__(self,* args,** kwds):
"
9293,"def debug(self):
"
9294,"def __init__(self,testFunc,setUp = None,tearDown = None,description = None):
"
9295,"def setUp(self):
"
9296,"def tearDown(self):
"
9297,"def runTest(self):
"
9298,"def id(self):
"
9299,"def __str__(self):
"
9300,"def __repr__(self):
"
9301,"def shortDescription(self):
"
9302,"def loadTestsFromTestCase(self,testCaseClass):
"
9303,"def loadTestsFromModule(self,module):
"
9304,"def loadTestsFromNames(self,names,module = None):
"
9305,"def getTestCaseNames(self,testCaseClass):
"
9306,"def __init__(self,stream):
"
9307,"def __getattr__(self,attr):
"
9308,"def writeln(self,arg = None):
"
9309,"def __init__(self,stream,descriptions,verbosity):
"
9310,"def getDescription(self,test):
"
9311,"def startTest(self,test):
"
9312,"def addSuccess(self,test):
"
9313,"def addError(self,test,err):
"
9314,"def addFailure(self,test,err):
"
9315,"def printErrors(self):
"
9316,"def printErrorList(self,flavour,errors):
"
9317,"def __init__(self,stream = sys.stderr,descriptions = 1,verbosity = 1):
"
9318,"def _makeResult(self):
"
9319,"def run(self,test):
"
9320,"def __init__(self,module = '__main__',defaultTest = None,argv = None,testRunner = None,testLoader = defaultTestLoader):
"
9321,"def createTests(self):
"
9322,"def runTests(self):
"
9323,"def get(self,request,podname):
"
9324,"def __init__(self,enum_type,** kwargs):
"
9325,"def _value_to_enum(self,key):
"
9326,"def pre_validate(self,form):
"
9327,"def setUp(self):
"
9328,"def assert_schedule(self,started_at,frequency,interval,length,expected):
"
9329,"def test_invalid_interval(self):
"
9330,"def test_daily_schedule(self):
"
9331,"def test_daily_schedule_with_interval(self):
"
9332,"def test_daily_schedule_with_end_of_month(self):
"
9333,"def test_weekly_schedule(self):
"
9334,"def test_weekly_schedule_with_interval(self):
"
9335,"def test_monthly_schedule(self):
"
9336,"def test_monthly_schedule_with_interval(self):
"
9337,"def test_monthly_schedule_with_end_of_month(self):
"
9338,"def test_yearly_schedule(self):
"
9339,"def test_yearly_schedule_with_interval(self):
"
9340,"def test_yearly_schedule_with_leap_year(self):
"
9341,"def __init__(self,password = None,** kwargs):
"
9342,"def check_password(self,password):
"
9343,"def set_password(self,password):
"
9344,"def is_authenticated(self):
"
9345,"def balanced_customer(self):
"
9346,"def create_balanced_customer(self,card_href = None,merchant_data = None):
"
9347,"def _create_balanced_buyer(self,card_href):
"
9348,"def _create_balanced_merchant(self,merchant_data):
"
9349,"def lookup_balanced_customer(self):
"
9350,"def associate_balanced_customer(self,account_href = None):
"
9351,"def add_card(self,card_href):
"
9352,"def add_merchant(self,merchant_data):
"
9353,"def __init__(self,method,* args,** kargs):
"
9354,"def pages(self,limit = 0):
"
9355,"def items(self,limit = 0):
"
9356,"def __init__(self,method,args,kargs):
"
9357,"def next(self):
"
9358,"def prev(self):
"
9359,"def __iter__(self):
"
9360,"def __init__(self,method,args,kargs):
"
9361,"def next(self):
"
9362,"def prev(self):
"
9363,"def __init__(self,method,args,kargs):
"
9364,"def next(self):
"
9365,"def prev(self):
"
9366,"def __init__(self,method,args,kargs):
"
9367,"def next(self):
"
9368,"def prev(self):
"
9369,"def __init__(self,page_iterator):
"
9370,"def next(self):
"
9371,"def prev(self):
"
9372,"def initialize_options(self):
"
9373,"def handle_extra_path(self):
"
9374,"def run(self):
"
9375,"def do_egg_install(self):
"
9376,"def __init__(self):
"
9377,"def startTest(self,test):
"
9378,"def addFailure(self,test,err):
"
9379,"def addSuccess(self,test):
"
9380,"def addSkip(self,test,reason):
"
9381,"def addExpectedFailure(self,test,err):
"
9382,"def addUnexpectedSuccess(self,test):
"
9383,"def wasSuccessful(self):
"
9384,"def stop(self):
"
9385,"def _exc_info_to_string(self,err,test):
"
9386,"def _is_relevant_tb_level(self,tb):
"
9387,"def _count_relevant_tb_levels(self,tb):
"
9388,"def __repr__(self):
"
9389,"def __init__(self):
"
9390,"def metadata_type(self):
"
9391,"def player_is_playing(self):
"
9392,"def player_is_paused(self):
"
9393,"def player_is_idle(self):
"
9394,"def media_is_generic(self):
"
9395,"def media_is_tvshow(self):
"
9396,"def media_is_movie(self):
"
9397,"def media_is_musictrack(self):
"
9398,"def media_is_photo(self):
"
9399,"def stream_type_is_buffered(self):
"
9400,"def stream_type_is_live(self):
"
9401,"def title(self):
"
9402,"def series_title(self):
"
9403,"def season(self):
"
9404,"def episode(self):
"
9405,"def artist(self):
"
9406,"def album_name(self):
"
9407,"def album_artist(self):
"
9408,"def track(self):
"
9409,"def images(self):
"
9410,"def supports_pause(self):
"
9411,"def supports_seek(self):
"
9412,"def supports_stream_volume(self):
"
9413,"def supports_stream_mute(self):
"
9414,"def supports_skip_forward(self):
"
9415,"def supports_skip_backward(self):
"
9416,"def update(self,data):
"
9417,"def __repr__(self):
"
9418,"def __init__(self):
"
9419,"def channel_connected(self):
"
9420,"def channel_disconnected(self):
"
9421,"def receive_message(self,message,data):
"
9422,"def register_status_listener(self,listener):
"
9423,"def update_status(self,blocking = False):
"
9424,"def _send_command(self,command):
"
9425,"def is_playing(self):
"
9426,"def is_paused(self):
"
9427,"def is_idle(self):
"
9428,"def title(self):
"
9429,"def thumbnail(self):
"
9430,"def play(self):
"
9431,"def pause(self):
"
9432,"def stop(self):
"
9433,"def rewind(self):
"
9434,"def skip(self):
"
9435,"def seek(self,position):
"
9436,"def enable_subtitle(self,track_id):
"
9437,"def disable_subtitle(self):
"
9438,"def _process_media_status(self,data):
"
9439,"def _fire_status_changed(self):
"
9440,"def play_media(self,url,content_type,title = None,thumb = None,current_time = 0,autoplay = True,stream_type = STREAM_TYPE_BUFFERED,metadata = None):
"
9441,"def tear_down(self):
"
9442,"def status_response(self,data):
"
9443,"def __init__(self,value):
"
9444,"def __init__(self):
"
9445,"def generate(self,chunks,seed = None,prob = 0,offset = 0,cln = None,startf = lambda t:True,endchunkf = lambda t:True,kill = 0,prefix =()):
"
9446,"def more(self,chunks = 1):
"
9447,"def train(self,n,stream,noparagraphs = False):
"
9448,"def load(self,filename):
"
9449,"def dump(self,filename):
"
9450,"def wrap(self,source,outfile):
"
9451,"def _wrap_code(self,source):
"
9452,"def __init__(self,key,parent):
"
9453,"def add_path(self,path,index,length,heads,last_insert):
"
9454,"def _create_child(self,child_key,heads,last_insert):
"
9455,"def get_cond_tree(self,child,count,visited,heads,last_insert,dont_create = False):
"
9456,"def _create_cond_child(self,visited,heads,last_insert):
"
9457,"def _find_ancestor(self,heads,min_support):
"
9458,"def prune_me(self,from_head_list,visited_parents,merged_before,merged_now,heads,min_support):
"
9459,"def __str__(self):
"
9460,"def __repr__(self):
"
9461,"def testEclipse(self):
"
9462,"def setUp(self):
"
9463,"def tearDown(self):
"
9464,"def testCreateCodeDB(self):
"
9465,"def testCreateCodeLocal(self):
"
9466,"def testListCodeLocal(self):
"
9467,"def testListCodeDB(self):
"
9468,"def testCreateCodeElementKinds(self):
"
9469,"def testLinkEclipseProject(self):
"
9470,"def setUp(self):
"
9471,"def tearDown(self):
"
9472,"def testCodeWords(self):
"
9473,"def testJavaDiff(self):
"
9474,"def load_snippets(self):
"
9475,"def testJavaSnippetParser(self):
"
9476,"def testJavaCodeParser(self):
"
9477,"def _should_avoid(self,link):
"
9478,"def _should_avoid(self,link):
"
9479,"def __init__(self,input_url,output_url):
"
9480,"def __init__(self,input_url,output_url):
"
9481,"def _should_avoid(self,link):
"
9482,"def handle_noargs(self,** options):
"
9483,"def __init__(self,func,name = None,doc = None):
"
9484,"def __get__(self,obj,type = None):
"
9485,"def __init__(self,import_name,template_folder = None):
"
9486,"def _get_static_folder(self):
"
9487,"def _set_static_folder(self,value):
"
9488,"def _get_static_url_path(self):
"
9489,"def _set_static_url_path(self,value):
"
9490,"def has_static_folder(self):
"
9491,"def jinja_loader(self):
"
9492,"def get_send_file_max_age(self,filename):
"
9493,"def send_static_file(self,filename):
"
9494,"def open_resource(self,resource,mode = 'rb'):
"
9495,"def __init__(self,message = None):
"
9496,"def test_btype_init(self):
"
9497,"def test_btype_get_bucket(self):
"
9498,"def test_btype_default(self):
"
9499,"def test_btype_repr(self):
"
9500,"def test_btype_get_props(self):
"
9501,"def test_btype_set_props(self):
"
9502,"def test_btype_set_props_immutable(self):
"
9503,"def test_btype_list_buckets(self):
"
9504,"def test_btype_list_keys(self):
"
9505,"def test_default_btype_list_buckets(self):
"
9506,"def test_default_btype_list_keys(self):
"
9507,"def test_multiget_bucket_types(self):
"
9508,"def test_write_once_bucket_type(self):
"
9509,"def __init__(self,transport,codec):
"
9510,"def __iter__(self):
"
9511,"def next(self):
"
9512,"def __next__(self):
"
9513,"def _is_done(self,response):
"
9514,"def attach(self,resource):
"
9515,"def close(self):
"
9516,"def next(self):
"
9517,"def __next__(self):
"
9518,"def next(self):
"
9519,"def __next__(self):
"
9520,"def next(self):
"
9521,"def __next__(self):
"
9522,"def __init__(self,transport,codec,index,return_terms = False):
"
9523,"def next(self):
"
9524,"def __next__(self):
"
9525,"def next(self):
"
9526,"def __next__(self):
"
9527,"def __init__(self):
"
9528,"def get_item_data(self,* args,** kwargs):
"
9529,"def __init__(self,autoscaleUnzoom):
"
9530,"def setAutoscaleUnzoom(self,state):
"
9531,"def _get_history(self,axes):
"
9532,"def zoomed(self,axes):
"
9533,"def set(self,axes,xrange,yrange):
"
9534,"def restore(self,axes):
"
9535,"def __init__(self,view,zoom = True,selection = True,rightClickUnzoom = True,autoscaleUnzoom = True):
"
9536,"def setSelection(self,state):
"
9537,"def setZoomEnabled(self,state):
"
9538,"def setAutoscaleUnzoom(self,state):
"
9539,"def setRightClickUnzoom(self,state):
"
9540,"def canDraw(self):
"
9541,"def zoomed(self,axes):
"
9542,"def keyDown(self,evt):
"
9543,"def keyUp(self,evt):
"
9544,"def leftButtonDown(self,evt,x,y):
"
9545,"def leftButtonUp(self,evt,x,y):
"
9546,"def rightButtonDown(self,evt,x,y):
"
9547,"def rightButtonUp(self,evt,x,y):
"
9548,"def mouseMotion(self,evt,x,y):
"
9549,"def selectionMouseMotion(self,evt,x,y,axes,xdata,ydata):
"
9550,"def canvasMouseMotion(self,evt,x,y):
"
9551,"def axesMouseMotion(self,evt,x,y,axes,xdata,ydata):
"
9552,"def unzoomableAxesMouseMotion(self,evt,x,y,axes,xdata,ydata):
"
9553,"def __init__(self,view,enabled = True):
"
9554,"def setEnabled(self,state):
"
9555,"def set(self,* value):
"
9556,"def redraw(self,dc = None):
"
9557,"def clear(self,dc = None):
"
9558,"def _paint(self,value,dc):
"
9559,"def formatValue(self,value):
"
9560,"def drawValue(self,dc,value):
"
9561,"def clearValue(self,dc,value):
"
9562,"def formatValue(self,value):
"
9563,"def get_XYWH(self,dc,value):
"
9564,"def drawValue(self,dc,value):
"
9565,"def clearValue(self,dc,value):
"
9566,"def formatValue(self,value):
"
9567,"def drawValue(self,dc,value):
"
9568,"def clearValue(self,dc,value):
"
9569,"def formatValue(self,value):
"
9570,"def drawValue(self,dc,value):
"
9571,"def clearValue(self,dc,value):
"
9572,"def __init__(self,view,enabled = True):
"
9573,"def setEnabled(self,state):
"
9574,"def setNormal(self):
"
9575,"def setCross(self):
"
9576,"def __init__(self,view,printData = None):
"
9577,"def getPrintData(self):
"
9578,"def setPrintData(self,printData):
"
9579,"def pageSetup(self):
"
9580,"def previewFigure(self,figure,title = None):
"
9581,"def printFigure(self,figure,title = None):
"
9582,"def __init__(self,figure,title = None,size = None,aspectRatio = None):
"
9583,"def GetPageInfo(self):
"
9584,"def HasPage(self,pageNumber):
"
9585,"def OnPrintPage(self,pageNumber):
"
9586,"def render_figure_as_image(self,wFig,hFig,dpi):
"
9587,"def __init__(self,id,axes,x,y):
"
9588,"def Clone(self):
"
9589,"def __init__(self,id,axes,x1,y1,x2,y2):
"
9590,"def Clone(self):
"
9591,"def __init__(self,parent,id,size =(6.0,3.70),dpi = 96,cursor = True,location = True,crosshairs = True,selection = True,zoom = True,autoscaleUnzoom = True):
"
9592,"def OnActivate(self,evt):
"
9593,"def OnEraseBackground(self,evt):
"
9594,"def OnDestroy(self,evt):
"
9595,"def _onPaint(self,evt):
"
9596,"def get_figure(self):
"
9597,"def set_cursor(self,state):
"
9598,"def set_location(self,state):
"
9599,"def set_crosshairs(self,state):
"
9600,"def set_selection(self,state):
"
9601,"def set_zoom(self,state):
"
9602,"def set_autoscale_unzoom(self,state):
"
9603,"def zoomed(self,axes):
"
9604,"def draw(self,** kwds):
"
9605,"def notify_point(self,axes,x,y):
"
9606,"def notify_selection(self,axes,x1,y1,x2,y2):
"
9607,"def _get_canvas_xy(self,evt):
"
9608,"def _onKeyDown(self,evt):
"
9609,"def _onKeyUp(self,evt):
"
9610,"def _onLeftButtonDown(self,evt):
"
9611,"def _onLeftButtonUp(self,evt):
"
9612,"def _onRightButtonDown(self,evt):
"
9613,"def _onRightButtonUp(self,evt):
"
9614,"def _onMotion(self,evt):
"
9615,"def __init__(self,parent,id,title,size =(6.0,3.7),dpi = 96,cursor = True,location = True,crosshairs = True,selection = True,zoom = True,autoscaleUnzoom = True,** kwds):
"
9616,"def OnMenuFilePageSetup(self,evt):
"
9617,"def OnMenuFilePrintPreview(self,evt):
"
9618,"def OnMenuFilePrint(self,evt):
"
9619,"def OnMenuFileClose(self,evt):
"
9620,"def OnMenuHelpAbout(self,evt):
"
9621,"def get_figure(self):
"
9622,"def set_cursor(self,state):
"
9623,"def set_location(self,state):
"
9624,"def set_crosshairs(self,state):
"
9625,"def set_selection(self,state):
"
9626,"def set_zoom(self,state):
"
9627,"def set_autoscale_unzoom(self,state):
"
9628,"def draw(self):
"
9629,"def __init__(self,title = ""WxMpl"",size =(6.0,3.7),dpi = 96,cursor = True,location = True,crosshairs = True,selection = True,zoom = True,** kwds):
"
9630,"def OnInit(self):
"
9631,"def get_figure(self):
"
9632,"def set_cursor(self,state):
"
9633,"def set_location(self,state):
"
9634,"def set_crosshairs(self,state):
"
9635,"def set_selection(self,state):
"
9636,"def set_zoom(self,state):
"
9637,"def draw(self):
"
9638,"def __init__(self):
"
9639,"def clear(self):
"
9640,"def reset(self):
"
9641,"def append(self,point):
"
9642,"def getData(self):
"
9643,"def __init__(self):
"
9644,"def clear(self):
"
9645,"def reset(self):
"
9646,"def append(self,row):
"
9647,"def getData(self):
"
9648,"def __init__(self,axes):
"
9649,"def setChannels(self,channels):
"
9650,"def update(self):
"
9651,"def _create_plot(self):
"
9652,"def _plot_channel(self,channel,styleGen):
"
9653,"def _update_channel(self,channel,zoomed):
"
9654,"def __init__(self,name,color = None,style = None,marker = None):
"
9655,"def getLabel(self):
"
9656,"def getColor(self):
"
9657,"def getStyle(self):
"
9658,"def getMarker(self):
"
9659,"def hasChanged(self):
"
9660,"def setChanged(self,changed):
"
9661,"def getX(self):
"
9662,"def getY(self):
"
9663,"def setUp(self):
"
9664,"def screenshot(self):
"
9665,"def select_option(self,select,option_id):
"
9666,"def visit(self,url):
"
9667,"def click(self,selector):
"
9668,"def wait(self,id):
"
9669,"def login(self):
"
9670,"def tearDown(self):
"
9671,"def url_change(self,id):
"
9672,"def test_admin_select(self):
"
9673,"def test_admin_move_page(self):
"
9674,"def loglkl(self,cosmo,data):
"
9675,"def test(self,template,expected_result):
"
9676,"def cholesky(self):
"
9677,"def __init__(self,f,** kwargs):
"
9678,"def message_to_child(self,gradient = False):
"
9679,"def __init__(self,GPs,** kwargs):
"
9680,"def message_to_parent(self,index):
"
9681,"def message_to_child(self,gradient = False):
"
9682,"def __init__(self,m,k,k_sparse = None,pseudoinputs = None,** kwargs):
"
9683,"def __call__(self,x,covariance = None):
"
9684,"def message_to_parent(self,index):
"
9685,"def message_to_child(self):
"
9686,"def get_parameters(self):
"
9687,"def observe(self,x,f):
"
9688,"def options(self,parser,env):
"
9689,"def configure(self,options,conf):
"
9690,"def prepareTestRunner(self,runner):
"
9691,"def __init__(self,runner):
"
9692,"def run(self,test):
"
9693,"def tearDown(self):
"
9694,"def GetChart(self,* args,** kwargs):
"
9695,"def AddToChart(self,chart,points,color = None,label = None):
"
9696,"def testCanRemoveDefaultFormatters(self):
"
9697,"def testChartType(self):
"
9698,"def testEmptyChart(self):
"
9699,"def testChartCreation(self):
"
9700,"def testAddSegment(self):
"
9701,"def testAddMultipleSegments(self):
"
9702,"def testMultiplePies(self):
"
9703,"def testMultiplePiesNo3d(self):
"
9704,"def testAddSegmentByIndex(self):
"
9705,"def testSetColors(self):
"
9706,"def testSetSegmentSize(self):
"
9707,"def testChartAngle(self):
"
9708,"def __init__(self):
"
9709,"def redis(self):
"
9710,"def redis(self,conn):
"
9711,"def __init__(self,name,consumer_key,consumer_secret,scope):
"
9712,"def login(self,request):
"
9713,"def __init__(self):
"
9714,"def validate(self,username,password):
"
9715,"def setUp(self):
"
9716,"def test_route_decorator_can_be_used_to_define_endpoint_rather_than_kwarg(self):
"
9717,"def test_route_decorator_can_be_used_rather_than_kwarg_to_specify_sender_auth(self):
"
9718,"def send_message(self,msg):
"
9719,"def get_response(self):
"
9720,"def __init__(self,host,port,size):
"
9721,"def _new_conn(self):
"
9722,"def get(self):
"
9723,"def put(self,conn):
"
9724,"def contextual_connection(self):
"
9725,"def __del__(self):
"
9726,"def __init__(self,host,port,graph_name,graph_obj_name = 'g',username = '',password = ''):
"
9727,"def _open_session(self):
"
9728,"def open_transaction(self):
"
9729,"def close_transaction(self,success = True):
"
9730,"def close(self):
"
9731,"def transaction(self):
"
9732,"def execute(self,script,params = { },isolate = True,transaction = True,pretty = False):
"
9733,"def read(self,user = True,defaults = True):
"
9734,"def check_mp3val(self,path):
"
9735,"def check_flac(self,path):
"
9736,"def check_custom(self,command):
"
9737,"def get_checker(self,ext):
"
9738,"def command(self,lib,opts,args):
"
9739,"def imported(self,session,task):
"
9740,"def setUp(self):
"
9741,"def tearDown(self):
"
9742,"def test_stored_hashes(self):
"
9743,"def mk_test_album(self):
"
9744,"def setUp(self):
"
9745,"def tearDown(self):
"
9746,"def __init__(self,stream_opener,config):
"
9747,"def reset(self):
"
9748,"def uri(self,uri):
"
9749,"def feature(self,feature):
"
9750,"def background(self,background):
"
9751,"def scenario(self,scenario):
"
9752,"def scenario_outline(self,scenario_outline):
"
9753,"def examples(self,examples):
"
9754,"def step(self,step):
"
9755,"def match(self,match):
"
9756,"def result(self,result):
"
9757,"def embedding(self,mime_type,data):
"
9758,"def eof(self):
"
9759,"def close(self):
"
9760,"def add_feature_element(self,element):
"
9761,"def current_feature_element(self):
"
9762,"def update_status_data(self):
"
9763,"def write_json_header(self):
"
9764,"def write_json_footer(self):
"
9765,"def write_json_feature(self,feature_data):
"
9766,"def write_json_feature_separator(self):
"
9767,"def getas(self,convert,name,default = None,valuetype = None):
"
9768,"def getint(self,name,default = 0):
"
9769,"def getfloat(self,name,default = 0.0):
"
9770,"def getbool(self,name,default = False):
"
9771,"def check_match(self,step):
"
9772,"def setUp(self):
"
9773,"def test_returns_none_if_check_match_returns_none(self):
"
9774,"def test_returns_match_object_if_check_match_returns_arguments(self):
"
9775,"def setUp(self):
"
9776,"def record_args(self,* args,** kwargs):
"
9777,"def test_returns_none_if_parser_does_not_match(self):
"
9778,"def test_returns_arguments_based_on_matches(self):
"
9779,"def test_named_arguments(self):
"
9780,"def test_positional_arguments(self):
"
9781,"def test_returns_none_if_regex_does_not_match(self):
"
9782,"def test_returns_arguments_based_on_groups(self):
"
9783,"def test_steps_with_same_prefix_are_not_ordering_sensitive(self):
"
9784,"def test_step_should_not_use_regex_begin_marker(self):
"
9785,"def test_step_should_not_use_regex_end_marker(self):
"
9786,"def test_step_should_not_use_regex_begin_and_end_marker(self):
"
9787,"def __init__(self,wrapper):
"
9788,"def broadcast(self,message):
"
9789,"def console(self,msg):
"
9790,"def when_I_declare_a_queue(self):
"
9791,"def it_should_send_a_QueueDeclare_method(self):
"
9792,"def when_QueueDeclareOK_arrives(self):
"
9793,"def it_should_have_the_correct_queue_name(self):
"
9794,"def it_should_be_durable(self):
"
9795,"def it_should_be_exclusive(self):
"
9796,"def it_should_auto_delete(self):
"
9797,"def when_QueueDeclareOK_arrives(self):
"
9798,"def it_should_return_a_queue_with_the_correct_name(self):
"
9799,"def it_should_throw_ValueError(self):
"
9800,"def when_I_bind_the_queue(self):
"
9801,"def it_should_send_QueueBind(self):
"
9802,"def when_QueueBindOK_arrives(self):
"
9803,"def then_the_returned_binding_should_have_the_correct_queue(self):
"
9804,"def and_the_returned_binding_should_have_the_correct_exchange(self):
"
9805,"def when_I_unbind_the_queue(self):
"
9806,"def it_should_send_QueueUnbind(self):
"
9807,"def when_QueueUnbindOK_arrives(self):
"
9808,"def it_should_be_ok(self):
"
9809,"def it_should_throw_Deleted(self):
"
9810,"def when_I_get_a_message(self):
"
9811,"def it_should_send_BasicGet(self):
"
9812,"def when_BasicGetEmpty_arrives(self):
"
9813,"def it_should_return_None(self):
"
9814,"def when_BasicGetOK_arrives_with_content(self):
"
9815,"def it_should_return_the_expected_message(self):
"
9816,"def it_should_put_the_exchange_name_on_the_msg(self):
"
9817,"def it_should_put_the_routing_key_on_the_msg(self):
"
9818,"def when_connection_is_closed(self):
"
9819,"def it_should_raise_exception(self):
"
9820,"def when_I_start_a_consumer(self):
"
9821,"def it_should_send_BasicConsume(self):
"
9822,"def when_BasicConsumeOK_arrives(self):
"
9823,"def it_should_return_a_consumer_with_the_correct_consumer_tag(self):
"
9824,"def given_a_message(self):
"
9825,"def when_BasicDeliver_arrives_with_content(self):
"
9826,"def it_should_send_the_message_to_the_callback(self):
"
9827,"def given_a_consumer_has_thrown_an_exception(self):
"
9828,"def when_another_message_arrives(self):
"
9829,"def it_should_correctly_call_the_consumer_again(self):
"
9830,"def deliver_msg(self):
"
9831,"def cleanup_the_exception_handler(self):
"
9832,"def when_I_cancel_the_consumer(self):
"
9833,"def it_should_send_a_BasicCancel_method(self):
"
9834,"def when_BasicCancelOK_arrives(self):
"
9835,"def it_should_be_cancelled(self):
"
9836,"def when_BasicCancelOK_arrives(self):
"
9837,"def it_should_call_on_cancel(self):
"
9838,"def __init__(self):
"
9839,"def __call__(self):
"
9840,"def on_cancel(self):
"
9841,"def when_the_connection_dies(self):
"
9842,"def it_should_call_on_error(self):
"
9843,"def __init__(self):
"
9844,"def __call__(self):
"
9845,"def on_error(self,exc):
"
9846,"def because_I_purge_the_queue(self):
"
9847,"def it_should_send_a_QueuePurge_method(self):
"
9848,"def when_QueuePurgeOK_arrives(self):
"
9849,"def it_should_return(self):
"
9850,"def because_I_delete_the_queue(self):
"
9851,"def it_should_send_a_QueueDelete_method(self):
"
9852,"def when_QueueDeleteOK_arrives(self):
"
9853,"def it_should_be_deleted(self):
"
9854,"def it_should_throw_Deleted(self):
"
9855,"def when_connection_is_closed(self):
"
9856,"def it_should_not_hang(self):
"
9857,"def when_QueueDeclareOK_arrives(self):
"
9858,"def it_should_return_queue_object(self):
"
9859,"def it_should_have_sent_passive_in_frame(self):
"
9860,"def when_error_arrives(self):
"
9861,"def it_should_raise_exception(self):
"
9862,"def it_should_return_queue_object_without_wait(self):
"
9863,"def it_should_have_sent_nowait_in_frame(self):
"
9864,"def search(self,** kwargs):
"
9865,"def handle(self,* args,** kwargs):
"
9866,"def __call__(self,test_case,response,** assertions):
"
9867,"def assert_x_sendfile_response(self,test_case,response):
"
9868,"def assert_basename(self,test_case,response,value):
"
9869,"def assert_content_type(self,test_case,response,value):
"
9870,"def assert_file_path(self,test_case,response,value):
"
9871,"def assert_attachment(self,test_case,response,value):
"
9872,"def was_modified_since(self,file_instance,since):
"
9873,"def get_test_db_name(self,dbname):
"
9874,"def get_test_db(self,db):
"
9875,"def __init__(self):
"
9876,"def register(self,name,ref):
"
9877,"def unregister(self,ref_or_name):
"
9878,"def registered(self,ref = None):
"
9879,"def by_name(self,name):
"
9880,"def __getitem__(self,ref_or_name):
"
9881,"def __delitem__(self,ref_or_name):
"
9882,"def __contains__(self,ref_or_name):
"
9883,"def __iter__(self):
"
9884,"def copy(self):
"
9885,"def run(self,config,args):
"
9886,"def parse_concurrency(self,args):
"
9887,"def default_appname(self,config,args):
"
9888,"def parse_name(self,name,default = ""default""):
"
9889,"def use_procfile(self,config,appname):
"
9890,"def confirm(self,prompt,resp = True):
"
9891,"def load_jsonconfig(self,fname):
"
9892,"def run(self,config,args):
"
9893,"def __init__(self,ip,cookies,arguments,headers,path):
"
9894,"def get_argument(self,name):
"
9895,"def get_cookie(self,name):
"
9896,"def get_header(self,name):
"
9897,"def __init__(self,conn,server):
"
9898,"def set_handler(self,handler):
"
9899,"def verify_state(self):
"
9900,"def remove_handler(self,handler):
"
9901,"def close(self,code = 3000,message = 'Go away!'):
"
9902,"def delayed_close(self):
"
9903,"def get_close_reason(self):
"
9904,"def is_closed(self):
"
9905,"def send_message(self,msg,stats = True,binary = False):
"
9906,"def send_jsonified(self,msg,stats = True):
"
9907,"def broadcast(self,clients,msg):
"
9908,"def __init__(self,conn,server,session_id,expiry = None):
"
9909,"def on_delete(self,forced):
"
9910,"def set_handler(self,handler,start_heartbeat = True):
"
9911,"def verify_state(self):
"
9912,"def remove_handler(self,handler):
"
9913,"def send_message(self,msg,stats = True,binary = False):
"
9914,"def send_jsonified(self,msg,stats = True):
"
9915,"def flush(self):
"
9916,"def close(self,code = 3000,message = 'Go away!'):
"
9917,"def start_heartbeat(self):
"
9918,"def stop_heartbeat(self):
"
9919,"def delay_heartbeat(self):
"
9920,"def _heartbeat(self):
"
9921,"def on_messages(self,msg_list):
"
9922,"def __init__(self,name,args = None,kwargs = None):
"
9923,"def reply(self,result):
"
9924,"def reply_error(self,error):
"
9925,"def __init__(self,usage = None):
"
9926,"def is_listen_ssl(self):
"
9927,"def get_spooldir(self):
"
9928,"def load_routes(self):
"
9929,"def __init__(self,reason,exit_status = 1):
"
9930,"def __str__(self):
"
9931,"def __init__(self,cfg,script):
"
9932,"def start(self):
"
9933,"def init_signals(self):
"
9934,"def signal(self,sig,frame):
"
9935,"def handle_chld(self,* args):
"
9936,"def handle_hup(self):
"
9937,"def handle_quit(self):
"
9938,"def handle_int(self):
"
9939,"def handle_term(self):
"
9940,"def handle_ttin(self):
"
9941,"def handle_ttou(self):
"
9942,"def handle_usr1(self):
"
9943,"def handle_usr2(self):
"
9944,"def handle_winch(self):
"
9945,"def halt(self,reason = None,exit_status = 0):
"
9946,"def stop(self,graceful = True):
"
9947,"def reexec(self):
"
9948,"def reload(self):
"
9949,"def murder_workers(self):
"
9950,"def spawn_worker(self):
"
9951,"def spawn_workers(self):
"
9952,"def kill_workers(self,sig):
"
9953,"def test_start(self):
"
9954,"def question_count(self,obj):
"
9955,"def __init__(self,field):
"
9956,"def append(self,value):
"
9957,"def __setitem__(self,key,value):
"
9958,"def get_table_list(self,cursor):
"
9959,"def __init__(self,fget = None):
"
9960,"def __get__(self,instance,ownerclass = None):
"
9961,"def __set__(self,instance,value):
"
9962,"def __delete__(self,instance):
"
9963,"def __init__(self):
"
9964,"def __setitem__(self,key,value):
"
9965,"def __dir__(self):
"
9966,"def __repr__(self):
"
9967,"def __str__(self):
"
9968,"def __dir__(self):
"
9969,"def __format__(self,format_spec):
"
9970,"def __cmp__(self,other):
"
9971,"def __le__(self,other):
"
9972,"def __lt__(self,other):
"
9973,"def __ge__(self,other):
"
9974,"def __gt__(self,other):
"
9975,"def __eq__(self,other):
"
9976,"def __ne__(self,other):
"
9977,"def __hash__(self):
"
9978,"def __reduce_ex__(self,proto):
"
9979,"def name(self):
"
9980,"def value(self):
"
9981,"def get_current_user(self):
"
9982,"def setContentType(self):
"
9983,"def setContentType(self,image_data):
"
9984,"def getImageData(self,comic_id,pagenum):
"
9985,"def resizeImage(self,max,image_data):
"
9986,"def get(self):
"
9987,"def get(self):
"
9988,"def get(self):
"
9989,"def get(self):
"
9990,"def get(self,args):
"
9991,"def get(self,args):
"
9992,"def get(self,id):
"
9993,"def get(self,comic_id,pagenum):
"
9994,"def get(self,comic_id):
"
9995,"def get(self,comic_id):
"
9996,"def buildQuery(self,session,entities,arglist):
"
9997,"def get(self):
"
9998,"def get(self):
"
9999,"def get(self,page):
"
10000,"def get(self):
"
10001,"def get(self):
"
10002,"def get(self):
"
10003,"def render_config(self,formdata,success = """",failure = """"):
"
10004,"def get(self):
"
10005,"def get(self):
"
10006,"def post(self):
"
10007,"def rebuild(self):
"
10008,"def restart(self):
"
10009,"def shutdown(self):
"
10010,"def log_request(self,handler):
"
10011,"def run(self):
"
10012,"def runInThread(self):
"
10013,"def getComicArchive(self,path):
"
10014,"def setUp(self):
"
10015,"def test_init_dimensions(self):
"
10016,"def test_init_dimensions_1(self):
"
10017,"def test_init_dimensions_3_goal_4(self):
"
10018,"def test_init_not_won(self):
"
10019,"def test_init_not_filled(self):
"
10020,"def test_size(self):
"
10021,"def test_goal(self):
"
10022,"def test_won(self):
"
10023,"def test_canMove_no_empty_cell(self):
"
10024,"def test_canMove_empty_cell(self):
"
10025,"def test_canMove_no_empty_cell_can_collapse(self):
"
10026,"def test_addTile(self):
"
10027,"def test_getCell(self):
"
10028,"def test_setCell(self):
"
10029,"def test_getLine(self):
"
10030,"def test_setLine(self):
"
10031,"def test_setCol(self):
"
10032,"def test_getEmptyCells(self):
"
10033,"def test_getEmptyCells_filled(self):
"
10034,"def test_move_filled(self):
"
10035,"def test_move_add_tile_if_collapse(self):
"
10036,"def test_move_add_tile_if_move(self):
"
10037,"def test_move_dont_add_tile_if_nothing_move(self):
"
10038,"def test_move_dont_add_tile_if_nothing_move2(self):
"
10039,"def test_move_collapse(self):
"
10040,"def test_move_collapse_triplet1(self):
"
10041,"def test_move_collapse_triplet2(self):
"
10042,"def test_move_collapse_with_empty_cell_in_between(self):
"
10043,"def test_move_collapse_with_empty_cell_in_between2(self):
"
10044,"def test_move_collapse_and_win(self):
"
10045,"def test_move_wrong_direction(self):
"
10046,"def test_move_collapse_chain_col(self):
"
10047,"def test_move_collapse_chain_line_right(self):
"
10048,"def test_move_collapse_chain_line_right2(self):
"
10049,"def test_move_collapse_chain_line_left(self):
"
10050,"def test_move_collapse_chain_four_same_tiles(self):
"
10051,"def setUp(self):
"
10052,"def tearDown(self):
"
10053,"def test_xrange_fallback_on_range_on_py3k(self):
"
10054,"def setUp(self):
"
10055,"def tearDown(self):
"
10056,"def set_result(self,result):
"
10057,"def set_exception(self,exception):
"
10058,"def call_later(self,delay,func,* args,** kwargs):
"
10059,"def test_callback(self):
"
10060,"def test_callback_chain(self):
"
10061,"def test_log_error(self):
"
10062,"def test_errback(self):
"
10063,"def test_callback_skips(self):
"
10064,"def test_errback_reraised(self):
"
10065,"def test_cancelled(self):
"
10066,"def test_already_called(self):
"
10067,"def test_cancel_callback(self):
"
10068,"def test_result_chain(self):
"
10069,"def test_result(self):
"
10070,"def test_result_exceptioned(self):
"
10071,"def test_delayed_result(self):
"
10072,"def test_delayed_result_chained(self):
"
10073,"def test_delayed_result_timeout(self):
"
10074,"def test_delayed_result_cancelled(self):
"
10075,"def __init__(self,errorcode):
"
10076,"def __str__(self):
"
10077,"def __init__(self,msg,res):
"
10078,"def status_code(self):
"
10079,"def headers(self):
"
10080,"def content(self):
"
10081,"def test_init(self):
"
10082,"def test_str(self):
"
10083,"def test_create_object(self):
"
10084,"def test_get(self):
"
10085,"def test_get(self):
"
10086,"def test_parent_id(self):
"
10087,"def test_create(self):
"
10088,"def test_create(self):
"
10089,"def test_all(self):
"
10090,"def test_all(self):
"
10091,"def test_google_mappings(self):
"
10092,"def test_update(self):
"
10093,"def test_update(self):
"
10094,"def test_delete_all(self):
"
10095,"def test_delete(self):
"
10096,"def test_delete_all(self):
"
10097,"def test_delete(self):
"
10098,"def test_count(self):
"
10099,"def test_count(self):
"
10100,"def test_count_with_custom_count_path(self):
"
10101,"def __init__(self):
"
10102,"def create_anomaly_score(self,anomaly,input_data = None,args = None,wait_time = 3,retries = 10):
"
10103,"def get_anomaly_score(self,anomaly_score):
"
10104,"def list_anomaly_scores(self,query_string = ''):
"
10105,"def update_anomaly_score(self,anomaly_score,changes):
"
10106,"def delete_anomaly_score(self,anomaly_score):
"
10107,"def category_probability(self,input_data,unique_terms,coefficients):
"
10108,"def map_coefficients(self):
"
10109,"def test_time_base_map(self):
"
10110,"def test_address_table(self):
"
10111,"def test_block(self):
"
10112,"def test_element_permissions(self):
"
10113,"def test_periodicity(self):
"
10114,"def test_utc_datetime(self):
"
10115,"def setUp(self):
"
10116,"def model_serialization_test(self):
"
10117,"def test_save_and_load(self):
"
10118,"def save(self,update_info):
"
10119,"def load(self):
"
10120,"def setUp(self):
"
10121,"def test_not_checked_ever(self):
"
10122,"def test_check_needed(self):
"
10123,"def test_higher_version_ok(self):
"
10124,"def _save_info(self,manager,server_info,timedelta):
"
10125,"def test_archive_default(self,capfd):
"
10126,"def test_archive_skipping(self,capfd):
"
10127,"def test_archive_named_snapshot(self,capfd):
"
10128,"def test_archive_description(self,capfd):
"
10129,"def test_archive_directory_exists(self,capfd):
"
10130,"def __init__(self,name = ""binderd""):
"
10131,"def _connect(self):
"
10132,"def send(self,msg):
"
10133,"def __enter__(self):
"
10134,"def __exit__(self):
"
10135,"def close(self):
"
10136,"def stop_daemon(self):
"
10137,"def start_module(self,name):
"
10138,"def stop_module(self,name):
"
10139,"def __init__(self,hosts,index = 'pyspider'):
"
10140,"def insert(self,name,obj = { }):
"
10141,"def update(self,name,obj = { },** kwargs):
"
10142,"def get_all(self,fields = None):
"
10143,"def get(self,name,fields = None):
"
10144,"def check_update(self,timestamp,fields = None):
"
10145,"def drop(self,name):
"
10146,"def __init__(self,buffer = None):
"
10147,"def isatty(self):
"
10148,"def close(self):
"
10149,"def flush(self):
"
10150,"def seek(self,n,mode = 0):
"
10151,"def readline(self):
"
10152,"def reset(self):
"
10153,"def write(self,x):
"
10154,"def writelines(self,x):
"
10155,"def __init__(self,taskid,priority = 0,exetime = 0):
"
10156,"def __cmp__(self,other):
"
10157,"def __lt__(self,other):
"
10158,"def _init(self,maxsize):
"
10159,"def _qsize(self,len = len):
"
10160,"def _put(self,item,heappush = heapq.heappush):
"
10161,"def _get(self,heappop = heapq.heappop):
"
10162,"def top(self):
"
10163,"def _resort(self):
"
10164,"def __contains__(self,taskid):
"
10165,"def __getitem__(self,taskid):
"
10166,"def __setitem__(self,taskid,item):
"
10167,"def __delitem__(self,taskid):
"
10168,"def __init__(self,rate = 0,burst = 0):
"
10169,"def rate(self):
"
10170,"def rate(self,value):
"
10171,"def burst(self):
"
10172,"def burst(self,value):
"
10173,"def check_update(self):
"
10174,"def _check_time_queue(self):
"
10175,"def _check_processing(self):
"
10176,"def put(self,taskid,priority = 0,exetime = 0):
"
10177,"def get(self):
"
10178,"def done(self,taskid):
"
10179,"def size(self):
"
10180,"def __len__(self):
"
10181,"def __contains__(self,taskid):
"
10182,"def setUpClass(self):
"
10183,"def tearDownClass(self):
"
10184,"def test_10_bad_result(self):
"
10185,"def test_20_insert_result(self):
"
10186,"def test_30_overwrite(self):
"
10187,"def test_40_insert_list(self):
"
10188,"def test_invalid_input(self):
"
10189,"def test_empty(self):
"
10190,"def test_single_count_vector(self):
"
10191,"def test_input_types(self):
"
10192,"def test_observed_otus(self):
"
10193,"def test_faith_pd(self):
"
10194,"def test_no_ids(self):
"
10195,"def test_optimized(self):
"
10196,"def setUp(self):
"
10197,"def test_invalid_input(self):
"
10198,"def test_empty(self):
"
10199,"def test_input_types(self):
"
10200,"def test_euclidean(self):
"
10201,"def test_braycurtis(self):
"
10202,"def test_unweighted_unifrac(self):
"
10203,"def test_weighted_unifrac(self):
"
10204,"def test_weighted_unifrac_normalized(self):
"
10205,"def test_scipy_kwargs(self):
"
10206,"def test_alt_pairwise_func(self):
"
10207,"def test_get_alpha_diversity_metrics(self):
"
10208,"def test_get_alpha_diversity_metrics_sorted(self):
"
10209,"def test_get_beta_diversity_metrics(self):
"
10210,"def test_get_beta_diversity_metrics_sorted(self):
"
10211,"def test_label_line_parser(self):
"
10212,"def test_is_clustal_seq_line(self):
"
10213,"def test_delete_trailing_number(self):
"
10214,"def test_check_lengh(self):
"
10215,"def setUp(self):
"
10216,"def test_tabular_msa_to_clustal_with_empty_input(self):
"
10217,"def test_tabular_msa_to_clustal_with_bad_input(self):
"
10218,"def test_valid_tabular_msa_to_clustal_and_clustal_to_tabular_msa(self):
"
10219,"def test_invalid_tabular_msa_to_clustal_and_clustal_to_tabular_msa(self):
"
10220,"def test_clustal_sniffer_valid_files(self):
"
10221,"def test_clustal_sniffer_invalid_files(self):
"
10222,"def test_no_constructor(self):
"
10223,"def test_duplicate_labels(self):
"
10224,"def __init__(self,seq,width,indent,chunk_size):
"
10225,"def _process_header(self):
"
10226,"def _process_data(self):
"
10227,"def _find_optimal_seq_chunking(self):
"
10228,"def _compute_chunked_seq_line_len(self,num_chunks):
"
10229,"def _format_chunked_seq(self,line_idxs,num_chars,column_width):
"
10230,"def test_majority_rule(self):
"
10231,"def test_majority_rule_multiple_trees(self):
"
10232,"def test_walk_clades(self):
"
10233,"def test_filter_clades(self):
"
10234,"def test_build_trees(self):
"
10235,"def __init__(self,contig,start,stop,name = None,score = None,strand = None,thick_start = None,thick_end = None,item_rgb = None):
"
10236,"def to_tuple(self):
"
10237,"def to_line(self):
"
10238,"def __repr__(self):
"
10239,"def __init__(self,filename):
"
10240,"def __iter__(self):
"
10241,"def tabix(self):
"
10242,"def query(self,contig = None,start = None,stop = None):
"
10243,"def contigs(self):
"
10244,"def default(self,obj):
"
10245,"def __init__(self,data = { }):
"
10246,"def set_content(self,data):
"
10247,"def __init__(self,error_message = '',error_type = None,field_errors = None):
"
10248,"def too_many_connections(self):
"
10249,"def setUp(self):
"
10250,"def __init__(self,* args,** kwargs):
"
10251,"def formfield(self,** kwargs):
"
10252,"def setUp(self):
"
10253,"def test_render_tag(self):
"
10254,"def setupUi(self,helpDialog):
"
10255,"def __init__(self,family = socket.AF_INET,type = socket.SOCK_STREAM,proto = 0,_sock = None):
"
10256,"def __recvall(self,count):
"
10257,"def setproxy(self,proxytype = None,addr = None,port = None,rdns = True,username = None,password = None):
"
10258,"def __negotiatesocks5(self,destaddr,destport):
"
10259,"def getproxysockname(self):
"
10260,"def getproxypeername(self):
"
10261,"def getpeername(self):
"
10262,"def __negotiatesocks4(self,destaddr,destport):
"
10263,"def __negotiatehttp(self,destaddr,destport):
"
10264,"def connect(self,destpair):
"
10265,"def set_cursor(self,x):
"
10266,"def restore_or_create(self):
"
10267,"def verify_seed(self):
"
10268,"def get_string(self,y,x):
"
10269,"def update(self):
"
10270,"def print_history(self):
"
10271,"def update_history(self):
"
10272,"def print_balance(self):
"
10273,"def print_contacts(self):
"
10274,"def print_receive(self):
"
10275,"def print_edit_line(self,y,label,text,index,size):
"
10276,"def print_send_tab(self):
"
10277,"def print_banner(self):
"
10278,"def print_list(self,list,firstline = None):
"
10279,"def refresh(self):
"
10280,"def run_tab(self,i,print_func,exec_func):
"
10281,"def run_history_tab(self,c):
"
10282,"def edit_str(self,target,c,is_num = False):
"
10283,"def run_send_tab(self,c):
"
10284,"def run_receive_tab(self,c):
"
10285,"def run_contacts_tab(self,c):
"
10286,"def run_banner_tab(self,c):
"
10287,"def main(self,url):
"
10288,"def do_clear(self):
"
10289,"def do_send(self):
"
10290,"def show_message(self,message,getchar = True):
"
10291,"def run_popup(self,title,items):
"
10292,"def settings_dialog(self):
"
10293,"def password_dialog(self):
"
10294,"def run_dialog(self,title,items,interval = 2,buttons = None,y_pos = 3):
"
10295,"def print_help_cb(self,opt,value,parser):
"
10296,"def __init__(self,vect_rules):
"
10297,"def fit(self,raw_documents,y = None):
"
10298,"def transform(self,raw_documents):
"
10299,"def fit_transform(self,raw_documents,y = None):
"
10300,"def get_feature_size(self):
"
10301,"def inverse_transform(self,X):
"
10302,"def execute(self,server,argv):
"
10303,"def to_python(self,value):
"
10304,"def run_validators(self,values):
"
10305,"def __init__(self,srid = 4326,* args,** kwargs):
"
10306,"def to_python(self,value):
"
10307,"def to_python(self,value):
"
10308,"def to_python(self,value):
"
10309,"def to_python(self,value):
"
10310,"def test_foo(self):
"
10311,"def setUp(self):
"
10312,"def __init__(self):
"
10313,"def code(self):
"
10314,"def msg(self):
"
10315,"def __init__(self,i,errString):
"
10316,"def __init__(self,element,csv,delimiter = ',',header = None,na_value = '',lineterminator = '\n',quotechar = '""',escapechar = '\\',encoding = 'utf8',skiprows = 0,bind = None,** kwargs):
"
10317,"def __init__(self,path,** kwargs):
"
10318,"def open(self):
"
10319,"def __init__(self,identifier,address,label):
"
10320,"def __init__(self,api_key = None):
"
10321,"def __init__(self,watcher):
"
10322,"def peek_has_url_recently_changed(self,url):
"
10323,"def has_url_recently_changed(self,url):
"
10324,"def __init__(self,retry_timestr_list):
"
10325,"def calc_active(self):
"
10326,"def is_active(self):
"
10327,"def disable(self):
"
10328,"def reactivate_time(self):
"
10329,"def __init__(self,repo_name,repo_args,conduit_manager,url_watcher_wrapper,sys_admin_emails,mail_sender):
"
10330,"def __call__(self):
"
10331,"def __init__(self):
"
10332,"def get_conduit_and_cache_for_args(self,args):
"
10333,"def __init__(self,data):
"
10334,"def setUp(self):
"
10335,"def tearDown(self):
"
10336,"def test_A_Breathing(self):
"
10337,"def _get_updated_branch(self,branch_name):
"
10338,"def test_B_RawDiffNewCommits(self):
"
10339,"def _setup_for_tracked_branch(self):
"
10340,"def _setup_for_untracked_branch(self,repo_name = 'name',branch_url = None):
"
10341,"def _create_new_file(self,repo,filename):
"
10342,"def rotate_existing_files(self):
"
10343,"def rotator(self,source,dest):
"
10344,"def doRollover(self):
"
10345,"def __init__(self,app,endpoint = '/postreceive',secret = None):
"
10346,"def hook(self,event_type = 'push'):
"
10347,"def _get_digest(self):
"
10348,"def _postreceive(self):
"
10349,"def __init__(self,message,suppressable = False):
"
10350,"def __init__(self,values = None,comment = None):
"
10351,"def from_str(self,str_val):
"
10352,"def to_str(self):
"
10353,"def clear(self):
"
10354,"def acquire(self,key):
"
10355,"def release(self,key):
"
10356,"def context(self,key):
"
10357,"def acquire(self,key):
"
10358,"def release(self,key):
"
10359,"def __init__(self,options = None):
"
10360,"def merge_in(self,values):
"
10361,"def s3_fill_keys(self,options):
"
10362,"def __init__(self,type = ItemType.FILE,mtime = None,size = None,md5 = None,state = FileState.Tracked,** others):
"
10363,"def __repr__(self):
"
10364,"def read_from_file(self,path,md5 = None,compute_md5 = False,state = FileState.Tracked):
"
10365,"def to_str(self):
"
10366,"def invalidate(self):
"
10367,"def __init__(self,root_path,cache_criterion):
"
10368,"def _read_state(self):
"
10369,"def _write_state(self):
"
10370,"def cache_path_for(self,remote_path):
"
10371,"def lookup(self,remote_path):
"
10372,"def __init__(self,root_uri,config,file_cache = None):
"
10373,"def __repr__(self):
"
10374,"def read_string(self,store_path):
"
10375,"def write_string(self,store_path,value,clobber = False):
"
10376,"def append_string(self,store_path,value):
"
10377,"def exists(self,store_path):
"
10378,"def _log_download(self,store_path,local_path,show_info = False):
"
10379,"def _log_upload(self,local_path,store_path,show_info = False):
"
10380,"def list(self,store_path):
"
10381,"def download(self,store_path,local_path,clobber = False,backup_suffix = None,show_info = False):
"
10382,"def upload(self,local_path,store_path,clobber = False,show_info = False):
"
10383,"def __init__(self,root_uri,config,file_cache = None):
"
10384,"def _full_path(self,store_path):
"
10385,"def list(self,store_path):
"
10386,"def upload(self,local_path,store_path,clobber = False,show_info = False):
"
10387,"def __init__(self,root_uri,config,file_cache = None):
"
10388,"def list(self,store_path):
"
10389,"def __init__(self,path,store_path,scheme,add_scheme_suffix = True):
"
10390,"def __repr__(self):
"
10391,"def display_path(self,prefix = None):
"
10392,"def full_store_path(self,repo,scope):
"
10393,"def __init__(self,rev = None,user = UNKNOWN_USER,message = EMPTY_MESSAGE,items = None,changelist = None,time = None):
"
10394,"def __repr__(self):
"
10395,"def to_str(self):
"
10396,"def from_str(self,mf_str):
"
10397,"def to_summary(self,verbose = True):
"
10398,"def get_paths(self):
"
10399,"def get_items(self,paths):
"
10400,"def get_item(self,path):
"
10401,"def get_listing(self,path,recursive = False):
"
10402,"def _items_to_str(self):
"
10403,"def __init__(self,add_paths = None,rm_paths = None,mod_paths = None):
"
10404,"def __repr__(self):
"
10405,"def update(self,path,status):
"
10406,"def status_dict(self):
"
10407,"def all_paths(self):
"
10408,"def intersect(self,other_changelist):
"
10409,"def difference(self,other_changelist):
"
10410,"def discard(self,path):
"
10411,"def union(self,other_changelist):
"
10412,"def is_empty(self):
"
10413,"def brief_summary(self):
"
10414,"def to_summary(self,prefix = None,sep = ""\n""):
"
10415,"def to_str(self):
"
10416,"def __init__(self,store):
"
10417,"def fetch_item(self,scope,item,local_path,target_is_dir = False,clobber = False,backup_suffix = BACKUP_SUFFIX,show_info = True):
"
10418,"def store_item(self,scope,item,local_dir,show_info = True):
"
10419,"def __init__(self,root_uri,config,check_valid = True,file_cache = None):
"
10420,"def __repr__(self):
"
10421,"def scope_lock(self,scope):
"
10422,"def init_repo(self):
"
10423,"def create_scope(self,path,user = None,message = None,time = None):
"
10424,"def get_scopes(self):
"
10425,"def get_revs(self,scope,expect = True):
"
10426,"def get_tags(self,scope,srev_start = None,srev_end = None,filter = None):
"
10427,"def _add_tag(self,scope,tag_name,rev):
"
10428,"def get_tip(self,scope,expect = True):
"
10429,"def get_manifest(self,scope,srev):
"
10430,"def fetch_items(self,scope,items,local_dir,clobber = True,backup_suffix = None):
"
10431,"def copy(self,scope,path,srev,local_path,clobber = False,recursive = False,backup_suffix = None):
"
10432,"def list(self,scope,path,srev,recursive = False):
"
10433,"def locate(self,scope,path,srev,recursive = False):
"
10434,"def commit(self,scope,local_dir,prev_rev,changelist,user = UNKNOWN_USER,message = EMPTY_MESSAGE,time = None):
"
10435,"def log(self,scope,stream,srev_start = None,srev_end = None,filter = None):
"
10436,"def tag(self,scope,tag_name,srev = 'tip'):
"
10437,"def _apply_changelist_to_items(self,items,changelist,new_rev):
"
10438,"def _commit_from_manifest(self,scope,mf,new_paths,local_dir):
"
10439,"def _add_commit(self,scope,rev):
"
10440,"def resolve_rev(self,scope,srev,expect = True):
"
10441,"def __init__(self,scope,rev,mode,** others):
"
10442,"def __repr__(self):
"
10443,"def __init__(self,checkout_list = None):
"
10444,"def __repr__(self):
"
10445,"def clear(self):
"
10446,"def add(self,checkout):
"
10447,"def has_scope(self,scope):
"
10448,"def update_rev(self,scope,rev):
"
10449,"def rev(self,scope):
"
10450,"def to_str(self):
"
10451,"def __init__(self,fingerprints = None):
"
10452,"def __repr__(self):
"
10453,"def clear(self):
"
10454,"def lookup_fingerprint(self,local_path):
"
10455,"def to_str(self):
"
10456,"def __init__(self,work_dir,checkouts = None,fingerprints = None):
"
10457,"def __repr__(self):
"
10458,"def _check_file_exists(self,local_path):
"
10459,"def has_scope(self,scope):
"
10460,"def scope_mode(self,scope,mode = None):
"
10461,"def update_checkout_rev(self,scope,rev):
"
10462,"def update_from_changelist(self,scope,changelist,new_fingerprints):
"
10463,"def delete_item(self,scope,path):
"
10464,"def from_str(self,checkout_state_str):
"
10465,"def __repr__(self):
"
10466,"def _get_relative_paths(self,file_list,scope):
"
10467,"def _walk_files(self,scope,force_mode = Mode.PARTIAL,print_untracked = False):
"
10468,"def _get_absolute_path(self,scope,path):
"
10469,"def _delete_file(self,scope,filename,backup_suffix = None):
"
10470,"def _yield_fingerprint(self,scope,path):
"
10471,"def _read_checkout_state(self):
"
10472,"def _write_checkout_state(self):
"
10473,"def _is_tracking(self,scope,path,print_untracked = False):
"
10474,"def checkouts(self,expect_nonempty = True):
"
10475,"def get_checkout_rev(self,scope):
"
10476,"def get_scope_mode(self,scope):
"
10477,"def update_scope_mode(self,scope,mode):
"
10478,"def checkout(self,scope,srev = ""tip"",force = False,mode = Mode.AUTO):
"
10479,"def _fingerprint_status(self,scope,compute_md5 = False,force_mode = Mode.PARTIAL,print_untracked = False):
"
10480,"def _update_local_files(self,scope,items,changelist,delete_all = False,delete_items = False,backup_suffix = None):
"
10481,"def update(self,scope,srev = ""tip"",force = False,is_checkout = False,mode = None):
"
10482,"def track(self,scope,track_path_list =[],mode = None,no_download = False,recursive = False):
"
10483,"def enclosing_scope(self,path):
"
10484,"def __init__(self,vec,parent):
"
10485,"def callback(self,e):
"
10486,"def maxRot(self):
"
10487,"def maxRot(self,value):
"
10488,"def maxRot(self):
"
10489,"def speedUp(self,e):
"
10490,"def slowDown(self,e):
"
10491,"def timer(self):
"
10492,"def updateMessage(self,msg):
"
10493,"def updateSol(self,msg):
"
10494,"def showInWindow(self):
"
10495,"def cleanup(self):
"
10496,"def move(self):
"
10497,"def pieceOffset(self,x,y,z):
"
10498,"def gatherStats(self):
"
10499,"def resetStats(self):
"
10500,"def showStats(self,* args):
"
10501,"def drawHelp(self):
"
10502,"def click(self,event):
"
10503,"def assignHelp(self,key):
"
10504,"def assignHelpState(self,state):
"
10505,"def addMoves(self,moves,status = - 1):
"
10506,"def rotate(self,axis):
"
10507,"def makeMove(self,move,render = True,animate = True):
"
10508,"def pause(self,e):
"
10509,"def play(self,e):
"
10510,"def step(self,e):
"
10511,"def back(self,e):
"
10512,"def reverse(self,e):
"
10513,"def fromCamera(self,e):
"
10514,"def reset(self,e):
"
10515,"def guideThrough(self,* args):
"
10516,"def guideFastThrough(self,* args):
"
10517,"def getSolution(self,method = 'beginner'):
"
10518,"def __init__(self,state = 'solved'):
"
10519,"def copy(self):
"
10520,"def setBare(self):
"
10521,"def setSolved(self):
"
10522,"def __init__(self,what,where,when,geom):
"
10523,"def to_jsonable(self):
"
10524,"def __init__(self,gtfsdb_filename,timezone_name = ""America/Los_Angeles""):
"
10525,"def __call__(self,vertex1,edge,vertex2,context):
"
10526,"def __init__(self,gtfsdb_filename,timezone_name = ""America/Los_Angeles""):
"
10527,"def __call__(self,vertex1,edge,vertex2,context):
"
10528,"def __init__(self,gtfsdb_filename,timezone_name = ""America/Los_Angeles""):
"
10529,"def __call__(self,vertex1,edge,vertex2,context):
"
10530,"def __init__(self,gtfsdb_filename,timezone_name = ""America/Los_Angeles""):
"
10531,"def __call__(self,vertex1,edge,vertex2,context):
"
10532,"def __init__(self,gtfsdb_filename,timezone_name = ""America/Los_Angeles""):
"
10533,"def __call__(self,vertex1,edge,vertex2,context):
"
10534,"def __init__(self,osmdb_filename,timezone_name = ""America/Los_Angeles""):
"
10535,"def __call__(self,vertex1,edge,vertex2,context):
"
10536,"def __init__(self,gtfsdb_filename,timezone_name = ""America/Los_Angeles""):
"
10537,"def __call__(self,v1,e,v2,context):
"
10538,"def __init__(self,osmdb_filename,timezone_name = ""America/Los_Angeles""):
"
10539,"def __call__(self,edge1,vertex,edge2,context):
"
10540,"def __init__(self,osmdb_filename,timezone_name = ""America/Los_Angeles""):
"
10541,"def __call__(self,edge1,vertex,edge2,context):
"
10542,"def __init__(self,timezone_name = ""America/Los_Angeles""):
"
10543,"def __call__(self,edge1,vertex,edge2,context):
"
10544,"def __init__(self,osmdb_filename,timezone_name = ""America/Los_Angeles""):
"
10545,"def __call__(self,edge1,vertex,edge2,context):
"
10546,"def __init__(self):
"
10547,"def __call__(self,e1,v,e2,context):
"
10548,"def __init__(self):
"
10549,"def __call__(self,v1,e,v2,context):
"
10550,"def test_basic(self):
"
10551,"def test_single(self):
"
10552,"def test_overlap_a_little(self):
"
10553,"def test_multiple(self):
"
10554,"def test_add_three(self):
"
10555,"def test_periods(self):
"
10556,"def test_to_xml(self):
"
10557,"def test_pickle(self):
"
10558,"def get_client(self):
"
10559,"def __str__(self):
"
10560,"def __str__(self):
"
10561,"def __str__(self):
"
10562,"def __str__(self):
"
10563,"def driver_instance_object(self):
"
10564,"def state(self):
"
10565,"def state(self,value):
"
10566,"def public_addresses(self):
"
10567,"def private_addresses(self):
"
10568,"def actions(self):
"
10569,"def get_next_provider(self,image_id):
"
10570,"def __str__(self):
"
10571,"def __call__(self,function):
"
10572,"def setUp(self):
"
10573,"def test_get_cookie_group(self):
"
10574,"def test_get_cookie(self):
"
10575,"def test_caching(self):
"
10576,"def test_caching_expire(self):
"
10577,"def __init__(self,parent,linenumber,name):
"
10578,"def __repr__(self):
"
10579,"def __init__(self,parent,path = None,name = None,app = None):
"
10580,"def _on_visibility(self,event):
"
10581,"def _on_linenumber_control_click(self,event):
"
10582,"def _on_name_trace(self,* args):
"
10583,"def focus(self):
"
10584,"def toggle_linenumbers(self,show = None):
"
10585,"def get_selected_rows(self):
"
10586,"def get_row(self,linenumber):
"
10587,"def get_text(self):
"
10588,"def set_path(self,path):
"
10589,"def _create_widgets(self):
"
10590,"def save(self):
"
10591,"def _is_ascii(self,s):
"
10592,"def get_text_widget(self):
"
10593,"def on_popup(self,event = None):
"
10594,"def _on_dollar(self,event):
"
10595,"def on_star(self,event):
"
10596,"def _define_tags(self):
"
10597,"def OnYviewChanged(self,* args):
"
10598,"def __init__(self,parent,* args,** kwargs):
"
10599,"def _on_cancel(self,event):
"
10600,"def cancel(self):
"
10601,"def focus(self):
"
10602,"def _initialize_style(self):
"
10603,"def __init__(self,parent,* args,** kwargs):
"
10604,"def _on_previous(self,event):
"
10605,"def _on_next(self,event):
"
10606,"def cancel(self):
"
10607,"def next(self):
"
10608,"def previous(self):
"
10609,"def _on_validate(self,P):
"
10610,"def begin(self,pattern,start = ""insert""):
"
10611,"def _mark_current(self,start,end):
"
10612,"def reset(self):
"
10613,"def setUp(self):
"
10614,"def test_starts_with(self):
"
10615,"def test_eq(self):
"
10616,"def test_no_oper(self):
"
10617,"def test_range(self):
"
10618,"def setUp(self):
"
10619,"def test_starts_with(self):
"
10620,"def test_eq(self):
"
10621,"def test_range(self):
"
10622,"def test_empty_array(self):
"
10623,"def test_missing_args(self):
"
10624,"def test_missing_key(self):
"
10625,"def test_missing_dollar(self):
"
10626,"def test_extra_args(self):
"
10627,"def test_dict(self):
"
10628,"def test_dict_extra_keys(self):
"
10629,"def test_dict_invalid_values(self):
"
10630,"def test_string(self):
"
10631,"def test_number(self):
"
10632,"def setUp(self):
"
10633,"def test_that_serialize_with_bucket_and_key_succeeds(self):
"
10634,"def test_that_serialize_with_duplicate_condition_fails(self):
"
10635,"def test_that_after_configuration_serialize_without_bucket_succeeds(self):
"
10636,"def test_that_after_configuration_serialize_with_extra_condition_succeeds(self):
"
10637,"def test_that_serializer_invokes_validate_expiration(self):
"
10638,"def test_that_serializer_invokes_validate_condition_methods(self):
"
10639,"def test_that_after_configuration_serialize_with_valid_content_type_succeeds(self):
"
10640,"def __init__(self):
"
10641,"def _chunks(self,items,limit):
"
10642,"def send(self,data,registration_ids = None,** kwargs):
"
10643,"def setup(self):
"
10644,"def set_ranges(self):
"
10645,"def process_data(self):
"
10646,"def yield_renderers(self):
"
10647,"def __init__(self,* args,** kwargs):
"
10648,"def _check_empty_layout(self):
"
10649,"def _check_child_is_also_root(self):
"
10650,"def _sample_doc(self):
"
10651,"def test_create_req(self):
"
10652,"def test_create_reply(self):
"
10653,"def test_create_reply_then_parse(self):
"
10654,"def run(self):
"
10655,"def _get_source_nodes(self,source):
"
10656,"def html_visit_bokeh_plot(self,node):
"
10657,"def latex_visit_bokeh_plot(self,node):
"
10658,"def texinfo_visit_bokeh_plot(self,node):
"
10659,"def text_visit_bokeh_plot(self,node):
"
10660,"def man_visit_bokeh_plot(self,node):
"
10661,"def __init__(self,uid,name,window,activeView):
"
10662,"def getBufferID(self):
"
10663,"def getName(self):
"
10664,"def getUid(self):
"
10665,"def getRegion(self):
"
10666,"def getFilePath(self):
"
10667,"def getProjectPath(self):
"
10668,"def getLineNumber(self):
"
10669,"def getLineStr(self):
"
10670,"def getGroup(self):
"
10671,"def setLineStr(self,newLineStr):
"
10672,"def setRegion(self,region):
"
10673,"def setGroup(self,group):
"
10674,"def isTemporary(self):
"
10675,"def goto(self,window):
"
10676,"def isMyView(self,window,view):
"
10677,"def updateData(self,window,myView):
"
10678,"def __call__(self,* args,** kwargs):
"
10679,"def __call__(self,* args,** kwargs):
"
10680,"def __init__(self):
"
10681,"def solve(self):
"
10682,"def greedy(self,weights,values,remaining):
"
10683,"def greedy_soft(self,weights,values,remaining):
"
10684,"def search(self,weights,values,remaining,best,score,solution):
"
10685,"def __call__(self,* args,** kwargs):
"
10686,"def setUp(self):
"
10687,"def tearDown(self):
"
10688,"def test2DSurfaceFloatMP(self):
"
10689,"def test2DSurfaceFloatSP(self):
"
10690,"def test2DSurfaceIntSP(self):
"
10691,"def testNapsack(self):
"
10692,"def testGAUnitVector(self):
"
10693,"def testGAUnitRect(self):
"
10694,"def testCircularRange(self):
"
10695,"def testGAAngle(self):
"
10696,"def __init__(self):
"
10697,"def addSuccess(self,test):
"
10698,"def test_name(self,test):
"
10699,"def log_results(self,logger):
"
10700,"def successful_test_count(self):
"
10701,"def __enter__(self):
"
10702,"def __exit__(self,exc_type,exc_value,traceback):
"
10703,"def connect(self):
"
10704,"def disconnect(self):
"
10705,"def send(self):
"
10706,"def __init__(self,host = HOST,port = PORT):
"
10707,"def address(self):
"
10708,"def socket(self):
"
10709,"def socket(self,value):
"
10710,"def connect(self):
"
10711,"def disconnect(self):
"
10712,"def send(self,message):
"
10713,"def __init__(self,host = HOST,port = PORT,timeout = TIMEOUT):
"
10714,"def connect(self):
"
10715,"def disconnect(self):
"
10716,"def send(self,message):
"
10717,"def __init__(self,host = HOST,port = PORT,timeout = TIMEOUT,ca_certs = None):
"
10718,"def connect(self):
"
10719,"def __init__(self,* args,** kwargs):
"
10720,"def connect(self):
"
10721,"def send(self,message):
"
10722,"def disconnect(self):
"
10723,"def __len__(self):
"
10724,"def __init__(self,* args,** kwargs):
"
10725,"def __getattr__(self,name):
"
10726,"def __init__(self,layer1,data):
"
10727,"def update_from_data(self,data):
"
10728,"def service_arn(self):
"
10729,"def doc_service_endpoint(self):
"
10730,"def search_service_endpoint(self):
"
10731,"def created(self):
"
10732,"def created(self,value):
"
10733,"def deleted(self):
"
10734,"def deleted(self,value):
"
10735,"def processing(self):
"
10736,"def processing(self,value):
"
10737,"def requires_index_documents(self):
"
10738,"def requires_index_documents(self,value):
"
10739,"def search_partition_count(self):
"
10740,"def search_partition_count(self,value):
"
10741,"def search_instance_count(self):
"
10742,"def search_instance_count(self,value):
"
10743,"def name(self):
"
10744,"def id(self):
"
10745,"def delete(self):
"
10746,"def get_analysis_schemes(self):
"
10747,"def get_availability_options(self):
"
10748,"def get_scaling_options(self):
"
10749,"def get_access_policies(self):
"
10750,"def index_documents(self):
"
10751,"def get_index_fields(self,field_names = None):
"
10752,"def create_index_field(self,field_name,field_type,default = '',facet = False,returnable = False,searchable = False,sortable = False,highlight = False,source_field = None,analysis_scheme = None):
"
10753,"def get_expressions(self,names = None):
"
10754,"def create_expression(self,name,value):
"
10755,"def get_document_service(self):
"
10756,"def get_search_service(self):
"
10757,"def __repr__(self):
"
10758,"def __init__(self,queue = None,body = '',xml_attrs = None):
"
10759,"def set_body(self,body):
"
10760,"def get_body(self):
"
10761,"def __init__(self,aws_access_key_id = None,aws_secret_access_key = None,is_secure = True,port = None,proxy = None,proxy_port = None,proxy_user = None,proxy_pass = None,debug = 0,https_connection_factory = None,region = None,path = '/',security_token = None,validate_certs = True,profile_name = None,use_block_device_types = False):
"
10762,"def _required_auth_capability(self):
"
10763,"def build_list_params(self,params,items,label):
"
10764,"def _update_group(self,op,as_group):
"
10765,"def attach_instances(self,name,instance_ids):
"
10766,"def detach_instances(self,name,instance_ids,decrement_capacity = True):
"
10767,"def create_auto_scaling_group(self,as_group):
"
10768,"def delete_auto_scaling_group(self,name,force_delete = False):
"
10769,"def get_account_limits(self):
"
10770,"def create_scaling_policy(self,scaling_policy):
"
10771,"def delete_launch_configuration(self,launch_config_name):
"
10772,"def get_all_groups(self,names = None,max_records = None,next_token = None):
"
10773,"def get_all_launch_configurations(self,** kwargs):
"
10774,"def get_all_activities(self,autoscale_group,activity_ids = None,max_records = None,next_token = None):
"
10775,"def get_termination_policies(self):
"
10776,"def delete_scheduled_action(self,scheduled_action_name,autoscale_group = None):
"
10777,"def terminate_instance(self,instance_id,decrement_capacity = True):
"
10778,"def delete_policy(self,policy_name,autoscale_group = None):
"
10779,"def get_all_adjustment_types(self):
"
10780,"def get_all_autoscaling_instances(self,instance_ids = None,max_records = None,next_token = None):
"
10781,"def get_all_metric_collection_types(self):
"
10782,"def get_all_policies(self,as_group = None,policy_names = None,max_records = None,next_token = None):
"
10783,"def get_all_scaling_process_types(self):
"
10784,"def suspend_processes(self,as_group,scaling_processes = None):
"
10785,"def resume_processes(self,as_group,scaling_processes = None):
"
10786,"def create_scheduled_group_action(self,as_group,name,time = None,desired_capacity = None,min_size = None,max_size = None,start_time = None,end_time = None,recurrence = None):
"
10787,"def get_all_scheduled_actions(self,as_group = None,start_time = None,end_time = None,scheduled_actions = None,max_records = None,next_token = None):
"
10788,"def disable_metrics_collection(self,as_group,metrics = None):
"
10789,"def enable_metrics_collection(self,as_group,granularity,metrics = None):
"
10790,"def execute_policy(self,policy_name,as_group = None,honor_cooldown = None):
"
10791,"def put_notification_configuration(self,autoscale_group,topic,notification_types):
"
10792,"def delete_notification_configuration(self,autoscale_group,topic):
"
10793,"def set_instance_health(self,instance_id,health_status,should_respect_grace_period = True):
"
10794,"def set_desired_capacity(self,group_name,desired_capacity,honor_cooldown = False):
"
10795,"def get_all_tags(self,filters = None,max_records = None,next_token = None):
"
10796,"def create_or_update_tags(self,tags):
"
10797,"def delete_tags(self,tags):
"
10798,"def __init__(self,connection = None):
"
10799,"def __repr__(self):
"
10800,"def startElement(self,name,attrs,connection):
"
10801,"def endElement(self,name,value,connection):
"
10802,"def __init__(self,connection = None):
"
10803,"def __repr__(self):
"
10804,"def startElement(self,name,attrs,connection):
"
10805,"def endElement(self,name,value,connection):
"
10806,"def __init__(self,connection = None):
"
10807,"def __repr__(self):
"
10808,"def startElement(self,name,attrs,connection):
"
10809,"def endElement(self,name,value,connection):
"
10810,"def __init__(self,connection = None):
"
10811,"def __repr__(self):
"
10812,"def startElement(self,name,attrs,connection):
"
10813,"def endElement(self,name,value,connection):
"
10814,"def __init__(self,connection = None,nodename = None):
"
10815,"def __repr__(self):
"
10816,"def get(self,name):
"
10817,"def set(self,name,value):
"
10818,"def to_xml(self):
"
10819,"def startElement(self,name,attrs,connection):
"
10820,"def endElement(self,name,value,connection):
"
10821,"def __init__(self,connection = None):
"
10822,"def __init__(self,connection,action,params,page = 0):
"
10823,"def startElement(self,name,attrs,connection):
"
10824,"def endElement(self,name,value,connection):
"
10825,"def __next__(self):
"
10826,"def __iter__(self):
"
10827,"def to_xml(self):
"
10828,"def read(self,amt = None):
"
10829,"def __init__(self,** kwargs):
"
10830,"def _required_auth_capability(self):
"
10831,"def create_log_group(self,log_group_name):
"
10832,"def create_log_stream(self,log_group_name,log_stream_name):
"
10833,"def delete_log_group(self,log_group_name):
"
10834,"def delete_log_stream(self,log_group_name,log_stream_name):
"
10835,"def delete_metric_filter(self,log_group_name,filter_name):
"
10836,"def delete_retention_policy(self,log_group_name):
"
10837,"def describe_log_groups(self,log_group_name_prefix = None,next_token = None,limit = None):
"
10838,"def describe_log_streams(self,log_group_name,log_stream_name_prefix = None,next_token = None,limit = None):
"
10839,"def describe_metric_filters(self,log_group_name,filter_name_prefix = None,next_token = None,limit = None):
"
10840,"def get_log_events(self,log_group_name,log_stream_name,start_time = None,end_time = None,next_token = None,limit = None,start_from_head = None):
"
10841,"def put_log_events(self,log_group_name,log_stream_name,log_events,sequence_token = None):
"
10842,"def put_metric_filter(self,log_group_name,filter_name,filter_pattern,metric_transformations):
"
10843,"def put_retention_policy(self,log_group_name,retention_in_days):
"
10844,"def set_retention(self,log_group_name,retention_in_days):
"
10845,"def test_metric_filter(self,filter_pattern,log_event_messages):
"
10846,"def make_request(self,action,body):
"
10847,"def __init__(self,status_type = None,normal = None,status = None,message = None):
"
10848,"def __repr__(self):
"
10849,"def startElement(self,name,attrs,connection):
"
10850,"def endElement(self,name,value,connection):
"
10851,"def __init__(self,bucket = None,prefix = '',delimiter = '',marker = '',headers = None,encoding_type = None):
"
10852,"def __iter__(self):
"
10853,"def __init__(self,bucket = None,prefix = '',delimiter = '',key_marker = '',version_id_marker = '',headers = None,encoding_type = None):
"
10854,"def __iter__(self):
"
10855,"def __init__(self,bucket = None,key_marker = '',upload_id_marker = '',headers = None,encoding_type = None):
"
10856,"def __iter__(self):
"
10857,"def __init__(self,connection = None,name = None):
"
10858,"def __repr__(self):
"
10859,"def __iter__(self):
"
10860,"def startElement(self,name,attrs,connection):
"
10861,"def endElement(self,name,value,connection):
"
10862,"def get_metadata(self):
"
10863,"def put_attributes(self,item_name,attributes,replace = True,expected_value = None):
"
10864,"def batch_put_attributes(self,items,replace = True):
"
10865,"def get_attributes(self,item_name,attribute_name = None,consistent_read = False,item = None):
"
10866,"def delete_attributes(self,item_name,attributes = None,expected_values = None):
"
10867,"def batch_delete_attributes(self,items):
"
10868,"def select(self,query = '',next_token = None,consistent_read = False,max_items = None):
"
10869,"def get_item(self,item_name,consistent_read = False):
"
10870,"def new_item(self,item_name):
"
10871,"def delete_item(self,item):
"
10872,"def to_xml(self,f = None):
"
10873,"def from_xml(self,doc):
"
10874,"def delete(self):
"
10875,"def __init__(self,domain = None):
"
10876,"def startElement(self,name,attrs,connection):
"
10877,"def endElement(self,name,value,connection):
"
10878,"def __init__(self,domain):
"
10879,"def startElement(self,name,attrs):
"
10880,"def characters(self,ch):
"
10881,"def endElement(self,name):
"
10882,"def __init__(self,domain):
"
10883,"def run(self):
"
10884,"def __init__(self,aws_access_key_id = None,aws_secret_access_key = None,is_secure = True,port = None,proxy = None,proxy_port = None,proxy_user = None,proxy_pass = None,debug = 0,https_connection_factory = None,region = None,path = '/',converter = None,validate_certs = True,anon = False,security_token = None,profile_name = None):
"
10885,"def _required_auth_capability(self):
"
10886,"def _check_token_cache(self,token_key,duration = None,window_seconds = 60):
"
10887,"def _get_session_token(self,duration = None,mfa_serial_number = None,mfa_token = None):
"
10888,"def get_session_token(self,duration = None,force_new = False,mfa_serial_number = None,mfa_token = None):
"
10889,"def get_federation_token(self,name,duration = None,policy = None):
"
10890,"def assume_role(self,role_arn,role_session_name,policy = None,duration_seconds = None,external_id = None,mfa_serial_number = None,mfa_token = None):
"
10891,"def assume_role_with_saml(self,role_arn,principal_arn,saml_assertion,policy = None,duration_seconds = None):
"
10892,"def assume_role_with_web_identity(self,role_arn,role_session_name,web_identity_token,provider_id = None,policy = None,duration_seconds = None):
"
10893,"def decode_authorization_message(self,encoded_message):
"
10894,"def sample_service_call(self,conn):
"
10895,"def sample_service_call(self,conn):
"
10896,"def setUp(self):
"
10897,"def test_get_dkim_attributes(self):
"
10898,"def test_set_identity_dkim_enabled(self):
"
10899,"def test_verify_domain_dkim(self):
"
10900,"def test_get_all_subnets(self):
"
10901,"def test_create_subnet(self):
"
10902,"def test_delete_subnet(self):
"
10903,"def __init__(self,action_model,factory = None,service_context = None):
"
10904,"def __call__(self,parent,* args,** kwargs):
"
10905,"def __call__(self,parent,* args,** kwargs):
"
10906,"def __init__(self,waiter_model,waiter_resource_name):
"
10907,"def __call__(self,parent,* args,** kwargs):
"
10908,"def __init__(self,action_name,action_model,function,event_emitter):
"
10909,"def inject(self,class_attributes,service_context,event_name,** kwargs):
"
10910,"def test_resource_name(self):
"
10911,"def test_resource_shape(self):
"
10912,"def test_resource_identifiers(self):
"
10913,"def test_resource_action_raw(self):
"
10914,"def test_resource_action_response_resource(self):
"
10915,"def test_resource_load_action(self):
"
10916,"def test_resource_batch_action(self):
"
10917,"def test_sub_resources(self):
"
10918,"def test_resource_references(self):
"
10919,"def test_resource_collections(self):
"
10920,"def test_waiter(self):
"
10921,"def test_multiple(self):
"
10922,"def test_meta_beats_identifier(self):
"
10923,"def test_load_beats_identifier(self):
"
10924,"def test_identifier_beats_action(self):
"
10925,"def test_action_beats_reference(self):
"
10926,"def test_reference_beats_collection(self):
"
10927,"def test_collection_beats_waiter(self):
"
10928,"def test_waiter_beats_attribute(self):
"
10929,"def __init__(self,name,config = None,implicit = False):
"
10930,"def __eq__(self,other):
"
10931,"def __init__(self,injector):
"
10932,"def __missing__(self,func):
"
10933,"def __init__(self):
"
10934,"def add_value(self,name,value,alias =()):
"
10935,"def add_provider(self,name,func,alias =()):
"
10936,"def add_resolver(self,name,func,alias =()):
"
10937,"def remove(self,name):
"
10938,"def provider(self,name,alias =()):
"
10939,"def resolver(self,name,alias =()):
"
10940,"def inspect(self,func):
"
10941,"def _resolve(self,func):
"
10942,"def _prime(self,ip):
"
10943,"def call_inject(self,func,** ka):
"
10944,"def wrap(self,func):
"
10945,"def __init__(self):
"
10946,"def setup(self,app):
"
10947,"def apply(self,callback,route):
"
10948,"def __init__(self):
"
10949,"def addArguments(self):
"
10950,"def getArguments(self):
"
10951,"def validateArguments(self):
"
10952,"def getDescription(self):
"
10953,"def setUp(self):
"
10954,"def test_cli_description(self):
"
10955,"def __init__(self,attr,key = None,read_only = False):
"
10956,"def __call__(self,func):
"
10957,"def __get__(self,obj,cls):
"
10958,"def __set__(self,obj,value):
"
10959,"def __delete__(self,obj):
"
10960,"def __init__(self,func):
"
10961,"def __get__(self,obj,cls):
"
10962,"def __init__(self,func):
"
10963,"def __get__(self,obj,cls):
"
10964,"def add_filter(self,name,func):
"
10965,"def _itertokens(self,rule):
"
10966,"def add(self,rule,method,target,name = None):
"
10967,"def build(self,_name,* anons,** query):
"
10968,"def match(self,environ):
"
10969,"def __init__(self,app,rule,method,callback,name = None,plugins = None,skiplist = None,** config):
"
10970,"def __call__(self,* a,** ka):
"
10971,"def call(self):
"
10972,"def reset(self):
"
10973,"def prepare(self):
"
10974,"def _context(self):
"
10975,"def all_plugins(self):
"
10976,"def _make_callback(self):
"
10977,"def __repr__(self):
"
10978,"def __init__(self,catchall = True,autojson = True):
"
10979,"def mount(self,prefix,app,** options):
"
10980,"def merge(self,routes):
"
10981,"def install(self,plugin):
"
10982,"def uninstall(self,plugin):
"
10983,"def run(self,** kwargs):
"
10984,"def reset(self,route = None):
"
10985,"def close(self):
"
10986,"def match(self,environ):
"
10987,"def get_url(self,routename,** kargs):
"
10988,"def add_route(self,route):
"
10989,"def route(self,path = None,method = 'GET',callback = None,name = None,apply = None,skip = None,** config):
"
10990,"def get(self,path = None,method = 'GET',** options):
"
10991,"def post(self,path = None,method = 'POST',** options):
"
10992,"def put(self,path = None,method = 'PUT',** options):
"
10993,"def delete(self,path = None,method = 'DELETE',** options):
"
10994,"def error(self,code = 500):
"
10995,"def hook(self,name):
"
10996,"def handle(self,path,method = 'GET'):
"
10997,"def default_error_handler(self,res):
"
10998,"def _handle(self,environ):
"
10999,"def wsgi(self,environ,start_response):
"
11000,"def __call__(self,environ,start_response):
"
11001,"def __init__(self,environ = None):
"
11002,"def app(self):
"
11003,"def route(self):
"
11004,"def url_args(self):
"
11005,"def path(self):
"
11006,"def method(self):
"
11007,"def headers(self):
"
11008,"def get_header(self,name,default = None):
"
11009,"def cookies(self):
"
11010,"def get_cookie(self,key,default = None,secret = None):
"
11011,"def query(self):
"
11012,"def forms(self):
"
11013,"def params(self):
"
11014,"def files(self):
"
11015,"def json(self):
"
11016,"def _body(self):
"
11017,"def _get_body_string(self):
"
11018,"def body(self):
"
11019,"def POST(self):
"
11020,"def COOKIES(self):
"
11021,"def url(self):
"
11022,"def urlparts(self):
"
11023,"def fullpath(self):
"
11024,"def query_string(self):
"
11025,"def script_name(self):
"
11026,"def path_shift(self,shift = 1):
"
11027,"def content_length(self):
"
11028,"def content_type(self):
"
11029,"def is_xhr(self):
"
11030,"def is_ajax(self):
"
11031,"def auth(self):
"
11032,"def remote_route(self):
"
11033,"def remote_addr(self):
"
11034,"def copy(self):
"
11035,"def __repr__(self):
"
11036,"def __getattr__(self,name):
"
11037,"def __setattr__(self,name,value):
"
11038,"def __init__(self,name,reader = None,writer = str,default = ''):
"
11039,"def __get__(self,obj,cls):
"
11040,"def __set__(self,obj,value):
"
11041,"def __delete__(self,obj):
"
11042,"def __init__(self,body = '',status = None,headers = None,** more_headers):
"
11043,"def copy(self):
"
11044,"def __iter__(self):
"
11045,"def close(self):
"
11046,"def status_line(self):
"
11047,"def status_code(self):
"
11048,"def _set_status(self,status):
"
11049,"def _get_status(self):
"
11050,"def headers(self):
"
11051,"def set_header(self,name,value):
"
11052,"def add_header(self,name,value):
"
11053,"def iter_headers(self):
"
11054,"def wsgiheader(self):
"
11055,"def headerlist(self):
"
11056,"def charset(self,default = 'UTF-8'):
"
11057,"def COOKIES(self):
"
11058,"def set_cookie(self,name,value,secret = None,** options):
"
11059,"def delete_cookie(self,key,** kwargs):
"
11060,"def __repr__(self):
"
11061,"def __init__(self,body = '',status = None,headers = None,header = None,** more_headers):
"
11062,"def apply(self,response):
"
11063,"def _output(self,value = None):
"
11064,"def __init__(self,status = None,body = None,exception = None,traceback = None,** options):
"
11065,"def __init__(self,json_dumps = json_dumps):
"
11066,"def apply(self,callback,route):
"
11067,"def __init__(self):
"
11068,"def _empty(self):
"
11069,"def setup(self,app):
"
11070,"def add(self,name,func):
"
11071,"def remove(self,name,func):
"
11072,"def trigger(self,name,* a,** ka):
"
11073,"def apply(self,callback,route):
"
11074,"def apply(self,callback,route):
"
11075,"def __init__(self,name,impmask):
"
11076,"def find_module(self,fullname,path = None):
"
11077,"def load_module(self,fullname):
"
11078,"def __init__(self,* a,** k):
"
11079,"def get(self,key,default = None,index = - 1,type = None):
"
11080,"def append(self,key,value):
"
11081,"def replace(self,key,value):
"
11082,"def getall(self,key):
"
11083,"def _fix(self,s,encoding = None):
"
11084,"def decode(self,encoding = None):
"
11085,"def getunicode(self,name,default = None,encoding = None):
"
11086,"def __getattr__(self,name,default = unicode()):
"
11087,"def __init__(self,* a,** ka):
"
11088,"def filter(self,names):
"
11089,"def __init__(self,environ):
"
11090,"def _ekey(self,key):
"
11091,"def raw(self,key,default = None):
"
11092,"def __getitem__(self,key):
"
11093,"def __setitem__(self,key,value):
"
11094,"def __delitem__(self,key):
"
11095,"def __iter__(self):
"
11096,"def __setattr__(self,key,value):
"
11097,"def __delattr__(self,key):
"
11098,"def __call__(self,* a,** ka):
"
11099,"def __call__(self):
"
11100,"def push(self,value = None):
"
11101,"def __init__(self,fp,buffer_size = 1024 * 64):
"
11102,"def __iter__(self):
"
11103,"def __init__(self,iterator,close = None):
"
11104,"def __iter__(self):
"
11105,"def close(self):
"
11106,"def __init__(self,base = './',opener = open,cachemode = 'all'):
"
11107,"def add_path(self,path,base = None,index = None,create = False):
"
11108,"def __iter__(self):
"
11109,"def lookup(self,name):
"
11110,"def open(self,name,mode = 'r',* args,** kwargs):
"
11111,"def __init__(self,fileobj,name,filename,headers = None):
"
11112,"def _copy_file(self,fp,chunk_size = 2 ** 16):
"
11113,"def save(self,destination,overwrite = False,chunk_size = 2 ** 16):
"
11114,"def __init__(self,host = '127.0.0.1',port = 8080,** options):
"
11115,"def run(self,handler):
"
11116,"def __repr__(self):
"
11117,"def run(self,handler):
"
11118,"def run(self,handler):
"
11119,"def run(self,handler):
"
11120,"def run(self,handler):
"
11121,"def run(self,handler):
"
11122,"def run(self,handler):
"
11123,"def run(self,handler):
"
11124,"def run(self,handler):
"
11125,"def run(self,handler):
"
11126,"def run(self,handler):
"
11127,"def run(self,handler):
"
11128,"def run(self,handler):
"
11129,"def run(self,handler):
"
11130,"def run(self,handler):
"
11131,"def run(self,handler):
"
11132,"def run(self,handler):
"
11133,"def run(self,handler):
"
11134,"def run(self,handler):
"
11135,"def __init__(self,lockfile,interval):
"
11136,"def run(self):
"
11137,"def __enter__(self):
"
11138,"def __exit__(self,exc_type,exc_val,exc_tb):
"
11139,"def __init__(self,message):
"
11140,"def __init__(self,source = None,name = None,lookup =[],encoding = 'utf8',** settings):
"
11141,"def prepare(self,** options):
"
11142,"def render(self,* args,** kwargs):
"
11143,"def prepare(self,** options):
"
11144,"def render(self,* args,** kwargs):
"
11145,"def prepare(self,** options):
"
11146,"def render(self,* args,** kwargs):
"
11147,"def prepare(self,filters = None,tests = None,** kwargs):
"
11148,"def render(self,* args,** kwargs):
"
11149,"def loader(self,name):
"
11150,"def prepare(self,escape_func = html_escape,noescape = False,** kwargs):
"
11151,"def co(self):
"
11152,"def subtemplate(self,_name,_stdout,* args,** kwargs):
"
11153,"def execute(self,_stdout,* args,** kwargs):
"
11154,"def render(self,* args,** kwargs):
"
11155,"def setUp(self):
"
11156,"def test_artifact_directory_raises_value_error_if_subjob_id_or_atom_id_specified(self,subjob_id,atom_id):
"
11157,"def test_subjob_and_atom_ids_parses_for_properly_formatted_directory(self,artifact_directory,expected_subjob_id,expected_atom_id):
"
11158,"def test_subjob_and_atom_ids_raises_value_error_with_incorrect_format(self,incorrect_artifact_directory):
"
11159,"def test_get_events_raises_exception_if_both_timestamp_and_id_are_specified(self):
"
11160,"def test_get_events_should_write_to_cache(self):
"
11161,"def test_oldest_cache_event_is_stale_should_be_true_if_event_timestamp_is_greater_than_expire_time(self):
"
11162,"def test_oldest_cache_event_is_stale_should_be_false_if_event_timestamp_is_less_than_expire_time(self):
"
11163,"def __init__(self):
"
11164,"def __repr__(self):
"
11165,"def __call__(self,* args,** kwargs):
"
11166,"def test_keymap_map(self):
"
11167,"def test_keymap_setitem(self):
"
11168,"def test_keymap_delitem(self):
"
11169,"def test_keymap_getitem(self):
"
11170,"def test_keymap_keyerror(self):
"
11171,"def test_keymap_map(self):
"
11172,"def test_keymap_setitem(self):
"
11173,"def test_keymap_delitem(self):
"
11174,"def test_keymap_getitem(self):
"
11175,"def test_keymap_keyerror(self):
"
11176,"def setUp(self):
"
11177,"def test_send_mail(self):
"
11178,"def test_invalid_from(self):
"
11179,"def test_invalid_to(self):
"
11180,"def test_rejected_to(self):
"
11181,"def test_invalid_api_key(self):
"
11182,"def __init__(self,email = None,password = None,account_type = 'HOSTED_OR_GOOGLE',service = None,auth_service_url = None,source = None,server = None,additional_headers = None,handler = None,tokens = None,http_client = None,token_store = None):
"
11183,"def _SetAuthSubToken(self,auth_token,scopes = None):
"
11184,"def __SetAuthSubToken(self,auth_token,scopes = None):
"
11185,"def _GetAuthToken(self):
"
11186,"def _GetCaptchaToken(self):
"
11187,"def __GetCaptchaToken(self):
"
11188,"def _GetCaptchaURL(self):
"
11189,"def __GetCaptchaURL(self):
"
11190,"def GetAuthSubToken(self):
"
11191,"def SetAuthSubToken(self,token,scopes = None):
"
11192,"def GetClientLoginToken(self):
"
11193,"def SetClientLoginToken(self,token,scopes = None):
"
11194,"def __GetSource(self):
"
11195,"def __SetSource(self,new_source):
"
11196,"def ClientLogin(self,username,password,account_type = None,service = None,auth_service_url = None,source = None,captcha_token = None,captcha_response = None):
"
11197,"def GenerateAuthSubURL(self,next,scope,secure = False,session = True,domain = 'default'):
"
11198,"def UpgradeToSessionToken(self,token = None):
"
11199,"def upgrade_to_session_token(self,token):
"
11200,"def RevokeAuthSubToken(self):
"
11201,"def GetMedia(self,uri,extra_headers = None):
"
11202,"def GetNext(self,feed):
"
11203,"def Post(self,data,uri,extra_headers = None,url_params = None,escape_params = True,redirects_remaining = 4,media_source = None,converter = None):
"
11204,"def Put(self,data,uri,extra_headers = None,url_params = None,escape_params = True,redirects_remaining = 3,media_source = None,converter = None):
"
11205,"def __init__(self,feed = None,text_query = None,params = None,categories = None):
"
11206,"def _GetTextQuery(self):
"
11207,"def _SetTextQuery(self,query):
"
11208,"def _GetAuthor(self):
"
11209,"def _SetAuthor(self,query):
"
11210,"def _GetAlt(self):
"
11211,"def _SetAlt(self,query):
"
11212,"def _GetUpdatedMin(self):
"
11213,"def _SetUpdatedMin(self,query):
"
11214,"def _GetUpdatedMax(self):
"
11215,"def _SetUpdatedMax(self,query):
"
11216,"def _GetPublishedMin(self):
"
11217,"def _SetPublishedMin(self,query):
"
11218,"def _GetPublishedMax(self):
"
11219,"def _SetPublishedMax(self,query):
"
11220,"def _GetStartIndex(self):
"
11221,"def _SetStartIndex(self,query):
"
11222,"def _GetMaxResults(self):
"
11223,"def _SetMaxResults(self,query):
"
11224,"def _GetOrderBy(self):
"
11225,"def _SetOrderBy(self,query):
"
11226,"def ToUri(self):
"
11227,"def __str__(self):
"
11228,"def __init__(self,attrs = None,checked = None,** extra):
"
11229,"def header(self):
"
11230,"def render(self,value,bound_column,record):
"
11231,"def is_checked(self,value,record):
"
11232,"def handle_noargs(self,* args,** options):
"
11233,"def __init__(self):
"
11234,"def __init__(self):
"
11235,"def get_container_info(self):
"
11236,"def get_nodes(self):
"
11237,"def is_running(self):
"
11238,"def start(self):
"
11239,"def get_ip(self):
"
11240,"def add_node(self,browser):
"
11241,"def restart_nodes(self,browser = None):
"
11242,"def stop_nodes(self,by_browser = None):
"
11243,"def shutdown(self):
"
11244,"def __init__(self,gateway,attributes):
"
11245,"def __repr__(self):
"
11246,"def __init__(self,attributes):
"
11247,"def __init__(self,attributes):
"
11248,"def __repr__(self):
"
11249,"def __init__(self,gateway,attributes):
"
11250,"def next_bill_amount(self):
"
11251,"def test_find_returns_paypal_account(self):
"
11252,"def test_find_raises_on_not_found_token(self):
"
11253,"def test_find_will_not_return_credit_card(self):
"
11254,"def test_find_returns_subscriptions_associated_with_a_paypal_account(self):
"
11255,"def test_find_retuns_billing_agreement_id_with_a_paypal_account(self):
"
11256,"def test_delete_deletes_paypal_account(self):
"
11257,"def test_delete_raises_on_not_found(self):
"
11258,"def test_delete_delete_wont_delete_credit_card(self):
"
11259,"def test_update_can_update_token_and_default(self):
"
11260,"def test_update_returns_validation_errors(self):
"
11261,"def test_raise_exception_from_status_for_upgrade_required(self):
"
11262,"def test_backtrace_preserved_when_not_wrapping_exceptions(self):
"
11263,"def wait(self,timeout,condition = None,name = None,args = None):
"
11264,"def test_valid_activation(self):
"
11265,"def test_activation_expired_retry(self):
"
11266,"def test_retry_activation_ask(self):
"
11267,"def test_invalid_activation(self):
"
11268,"def test_valid_confirmation(self):
"
11269,"def test_invalid_confirmation(self):
"
11270,"def test_disabled_view(self):
"
11271,"def test_signup_view(self):
"
11272,"def test_signup_view_signout(self):
"
11273,"def test_signup_view_success(self):
"
11274,"def test_signup_view_with_signin(self):
"
11275,"def test_signin_view(self):
"
11276,"def test_signin_view_remember_me_on(self):
"
11277,"def test_signin_view_remember_off(self):
"
11278,"def test_signin_view_inactive(self):
"
11279,"def test_signin_view_success(self):
"
11280,"def test_signin_view_with_invalid_next(self):
"
11281,"def test_signout_view(self):
"
11282,"def test_change_email_view(self):
"
11283,"def test_change_valid_email_view(self):
"
11284,"def test_change_password_view(self):
"
11285,"def test_change_password_view_success(self):
"
11286,"def test_profile_detail_view(self):
"
11287,"def test_profile_edit_view(self):
"
11288,"def test_profile_edit_view_success(self):
"
11289,"def test_profile_list_view(self):
"
11290,"def test_password_reset_view_success(self):
"
11291,"def test_password_reset_view_failure(self):
"
11292,"def __init__(self,doc,target = None,stylesheet = """"):
"
11293,"def __unicode__(self):
"
11294,"def enqueue(self,func,* args,** kwargs):
"
11295,"def enqueue_call(self,func,* args,** kwargs):
"
11296,"def schedule(self,* args,** kwargs):
"
11297,"def schedule_call(self,* args,** kwargs):
"
11298,"def save(self,* args,** kwargs):
"
11299,"def __enter__(self):
"
11300,"def __repr__(self):
"
11301,"def to_json(self):
"
11302,"def __repr__(self):
"
11303,"def to_json(self):
"
11304,"def to_json(self):
"
11305,"def content(self):
"
11306,"def content(self,body):
"
11307,"def html(self):
"
11308,"def __init__(self,host,localaddrs):
"
11309,"def connect(self):
"
11310,"def readline_with_timeout(self,timeout):
"
11311,"def exec_command(self,cmd,shell = False,timeout = 60):
"
11312,"def exec_commands(self,cmds,shell = False,timeout = 60):
"
11313,"def collect_results(self,timeout):
"
11314,"def ping(self,timeout = 10):
"
11315,"def close(self):
"
11316,"def __init__(self,host,localaddrs,timeout):
"
11317,"def shutdown(self):
"
11318,"def connect(self):
"
11319,"def ping(self):
"
11320,"def connect_and_ping(self):
"
11321,"def run(self):
"
11322,"def iteration(self):
"
11323,"def send_commands(self,commands,shell,rq):
"
11324,"def __init__(self,localaddrs =[]):
"
11325,"def setup(self,host,timeout):
"
11326,"def send_commands(self,host,commands,timeout,shell = False):
"
11327,"def get_result(self,host,timeout):
"
11328,"def exec_command(self,host,command,timeout = 30):
"
11329,"def exec_commands(self,host,commands,timeout = 65):
"
11330,"def exec_multihost_commands(self,cmds,shell = False,timeout = 65):
"
11331,"def host_status(self):
"
11332,"def shutdown(self,host):
"
11333,"def shutdown_all(self):
"
11334,"def setUp(self):
"
11335,"def test_get_pages(self):
"
11336,"def test_get_404(self):
"
11337,"def test_template_context(self):
"
11338,"def test_add(self):
"
11339,"def test_sub(self):
"
11340,"def test_mul(self):
"
11341,"def test_div(self):
"
11342,"def test_div_scalar(self):
"
11343,"def test_div_scalar2(self):
"
11344,"def test_add_1(self):
"
11345,"def test_add_2(self):
"
11346,"def test_add_3(self):
"
11347,"def test_mul_1(self):
"
11348,"def test_div_1(self):
"
11349,"def test_div_2(self):
"
11350,"def test_div_3(self):
"
11351,"def test_div_4(self):
"
11352,"def test_getcoeff(self):
"
11353,"def forwards(self,orm):
"
11354,"def backwards(self,orm):
"
11355,"def __init__(self,* chained):
"
11356,"def has_key(self,key):
"
11357,"def __repr__(self):
"
11358,"def iterkeys(self):
"
11359,"def testTypeTupleScalars(self):
"
11360,"def testTypeTupleSequences(self):
"
11361,"def testTypeNestedTuple(self):
"
11362,"def testTuple(self):
"
11363,"def testNestedTupleReturn(self):
"
11364,"def testTupleReturn(self):
"
11365,"def testTupleSeqSeq(self):
"
11366,"def testTupleSeqScalar(self):
"
11367,"def testTupleSeqTuple(self):
"
11368,"def testTupleSeqArgs(self):
"
11369,"def testContainerize(self):
"
11370,"def put(self,message,key):
"
11371,"def get(self,key):
"
11372,"def __init__(self):
"
11373,"def put(self,message,key):
"
11374,"def get(self,key):
"
11375,"def _message_size_check(self,message):
"
11376,"def __init__(self,bucket,base_key,aws_key = None,aws_secret = None):
"
11377,"def put(self,message,key):
"
11378,"def get(self,key):
"
11379,"def setUp(self):
"
11380,"def tearDown(self):
"
11381,"def test_find_name(self):
"
11382,"def test_find_num(self):
"
11383,"def test_change(self):
"
11384,"def test_del(self):
"
11385,"def test_find_name(self):
"
11386,"def enqueue_back(self,item):
"
11387,"def dequeue_front(self):
"
11388,"def setUp(self):
"
11389,"def test_repr(self):
"
11390,"def test_str(self):
"
11391,"def test_unicode(self):
"
11392,"def get_fields(self):
"
11393,"def get_minimal_context_keys(self,context):
"
11394,"def get_minimal_context(self,context):
"
11395,"def get_api_context_data(self,context):
"
11396,"def render_to_response(self,context,** kwargs):
"
11397,"def _determine_accepted_types(self,request):
"
11398,"def get_batch_json_key(self):
"
11399,"def get_batch_json(self,key = None):
"
11400,"def post_json(self,request,* args,** kwargs):
"
11401,"def post(self,request,* args,** kwargs):
"
11402,"def get(self,name,overrides = None):
"
11403,"def configure(self,** options):
"
11404,"def __init__(self):
"
11405,"def should_notify(self):
"
11406,"def should_ignore(self,exception):
"
11407,"def get_endpoint(self):
"
11408,"def __init__(self):
"
11409,"def __init__(self,vars,render_func = create_crumb):
"
11410,"def __init__(self,title,url_node,render_func = create_crumb):
"
11411,"def render(self,context):
"
11412,"def _get_endpoint_by_name(self,name):
"
11413,"def get_schema(self):
"
11414,"def set_organization_id(self,org_id):
"
11415,"def _request(self,uri = None,name = None,method = None,payload = None,headers = None,params = None):
"
11416,"def get_organizations(self):
"
11417,"def create_dataset(self,name):
"
11418,"def upload_file(self,filepath,import_record_id,source_type):
"
11419,"def _upload_file_to_filesystem(self,filepath,upload_details,import_record_id,source_type):
"
11420,"def _upload_file_to_s3(self,filepath,upload_details,import_record_id,source_type):
"
11421,"def __init__(self,canvas):
"
11422,"def __enter__(self):
"
11423,"def __exit__(self,* args,** kw):
"
11424,"def __init__(self,flag):
"
11425,"def Clone(self):
"
11426,"def Validate(self,win):
"
11427,"def TransferToWindow(self):
"
11428,"def TransferFromWindow(self):
"
11429,"def OnChar(self,evt):
"
11430,"def parameters(self):
"
11431,"def pmp(self,* args):
"
11432,"def pm(self,* args):
"
11433,"def dev(self,std,mean = 0,limits = None,sigma = None,mu = None):
"
11434,"def pdf(self,dist):
"
11435,"def range(self,low,high):
"
11436,"def soft_range(self,low,high,std):
"
11437,"def bounds(self):
"
11438,"def bounds(self,b):
"
11439,"def __call__(self):
"
11440,"def __gt__(self,other):
"
11441,"def __ge__(self,other):
"
11442,"def __le__(self,other):
"
11443,"def __lt__(self,other):
"
11444,"def __add__(self,other):
"
11445,"def __sub__(self,other):
"
11446,"def __mul__(self,other):
"
11447,"def __div__(self,other):
"
11448,"def __pow__(self,other):
"
11449,"def __radd__(self,other):
"
11450,"def __rsub__(self,other):
"
11451,"def __rmul__(self,other):
"
11452,"def __rdiv__(self,other):
"
11453,"def __rpow__(self,other):
"
11454,"def __abs__(self):
"
11455,"def __neg__(self):
"
11456,"def __pos__(self):
"
11457,"def __float__(self):
"
11458,"def nllf(self):
"
11459,"def residual(self):
"
11460,"def valid(self):
"
11461,"def format(self):
"
11462,"def __str__(self):
"
11463,"def __repr__(self):
"
11464,"def value(self):
"
11465,"def __init__(self,value,name = None):
"
11466,"def set(self,value):
"
11467,"def clip_set(self,value):
"
11468,"def __init__(self,value = None,bounds = None,fixed = None,name = None,** kw):
"
11469,"def randomize(self,rng = None):
"
11470,"def feasible(self):
"
11471,"def __init__(self,obj,attr,** kw):
"
11472,"def value(self):
"
11473,"def value(self,value):
"
11474,"def __init__(self,reference,names = None):
"
11475,"def __getitem__(self,i):
"
11476,"def __setitem__(self,i,v):
"
11477,"def __iter__(self):
"
11478,"def __len__(self):
"
11479,"def set_model(self,index):
"
11480,"def values(self):
"
11481,"def values(self,values):
"
11482,"def range(self,* args,** kw):
"
11483,"def pm(self,* args,** kw):
"
11484,"def pmp(self,* args,** kw):
"
11485,"def __init__(self,names = None,** kw):
"
11486,"def __getstate__(self):
"
11487,"def __setstate__(self,state):
"
11488,"def __getattr__(self,k):
"
11489,"def parameters(self):
"
11490,"def set_model(self,i):
"
11491,"def __bool__(self):
"
11492,"def __str__(self):
"
11493,"def __init__(self,op,* args,** kw):
"
11494,"def parameters(self):
"
11495,"def _value(self):
"
11496,"def __getstate__(self):
"
11497,"def __setstate__(self,state):
"
11498,"def __str__(self):
"
11499,"def _get_value(self):
"
11500,"def _set_value(self,value):
"
11501,"def __init__(self,obj,attr,p = None,name = None):
"
11502,"def update(self):
"
11503,"def parameters(self):
"
11504,"def __init__(self,client,feed_entry):
"
11505,"def id(self):
"
11506,"def get_id_fields(self):
"
11507,"def _fetch_sheets(self):
"
11508,"def add_worksheet(self,title,rows,cols):
"
11509,"def del_worksheet(self,worksheet):
"
11510,"def worksheets(self):
"
11511,"def worksheet(self,title):
"
11512,"def get_worksheet(self,index):
"
11513,"def sheet1(self):
"
11514,"def title(self):
"
11515,"def __iter__(self):
"
11516,"def __init__(self,spreadsheet,element):
"
11517,"def __repr__(self):
"
11518,"def id(self):
"
11519,"def title(self):
"
11520,"def row_count(self):
"
11521,"def col_count(self):
"
11522,"def updated(self):
"
11523,"def get_id_fields(self):
"
11524,"def _cell_addr(self,row,col):
"
11525,"def _get_link(self,link_type,feed):
"
11526,"def _fetch_cells(self):
"
11527,"def get_int_addr(self,label):
"
11528,"def acell(self,label):
"
11529,"def cell(self,row,col):
"
11530,"def range(self,alphanum):
"
11531,"def get_all_values(self):
"
11532,"def get_all_records(self,empty2zero = False,head = 1):
"
11533,"def row_values(self,row):
"
11534,"def col_values(self,col):
"
11535,"def update_acell(self,label,val):
"
11536,"def update_cell(self,row,col,val):
"
11537,"def _create_update_feed(self,cell_list):
"
11538,"def update_cells(self,cell_list):
"
11539,"def resize(self,rows = None,cols = None):
"
11540,"def add_rows(self,rows):
"
11541,"def add_cols(self,cols):
"
11542,"def append_row(self,values):
"
11543,"def insert_row(self,values,index = 1):
"
11544,"def _finder(self,func,query):
"
11545,"def find(self,query):
"
11546,"def findall(self,query):
"
11547,"def export(self,format = 'csv'):
"
11548,"def __init__(self,worksheet,element):
"
11549,"def row(self):
"
11550,"def col(self):
"
11551,"def __repr__(self):
"
11552,"def __init__(self):
"
11553,"def __str__(self):
"
11554,"def do_exit(self,line):
"
11555,"def complete_import(self,text,line,begidx,endidx):
"
11556,"def complete_creds(self,text,line,begidx,endidx):
"
11557,"def printRowsCME(self):
"
11558,"def printRepliesCME(self):
"
11559,"def run(self,H = None,sambaopts = None,credopts = None,versionopts = None):
"
11560,"def run(self,username,H = None,sambaopts = None,credopts = None,versionopts = None):
"
11561,"def run(self,gpo,H = None,sambaopts = None,credopts = None,versionopts = None):
"
11562,"def run(self,container_dn,H = None,sambaopts = None,credopts = None,versionopts = None):
"
11563,"def run(self,container,gpo,H = None,sambaopts = None,credopts = None,versionopts = None):
"
11564,"def run(self,gpo,H = None,sambaopts = None,credopts = None,versionopts = None):
"
11565,"def run(self,container_dn,H = None,sambaopts = None,credopts = None,versionopts = None):
"
11566,"def run(self,H = None,sambaopts = None,credopts = None,versionopts = None):
"
11567,"def test_init(self):
"
11568,"def test_length(self):
"
11569,"def test_set_workgroup(self):
"
11570,"def test_is_mydomain(self):
"
11571,"def test_is_myname(self):
"
11572,"def test_load_default(self):
"
11573,"def test_section_nonexistent(self):
"
11574,"def initialize_options(self):
"
11575,"def finalize_options(self):
"
11576,"def run_tests(self):
"
11577,"def test_get_users_returns_all_users_except_admin(self):
"
11578,"def test_get_hidden_users_returns_hidden_users(self):
"
11579,"def test_user_bulk_actions_delete_successfully_deletes_user_comments(self):
"
11580,"def test_user_bulk_actions_delete_successfully_deletes_user_comments_not_admin(self):
"
11581,"def test_user_bulk_actions_hide_successfully_hides_users(self):
"
11582,"def test_user_bulk_actions_hide_successfully_hides_user_not_admin(self):
"
11583,"def test_user_bulk_actions_hide_hidden_user_doesnt_change_status(self):
"
11584,"def test_user_hide_not_ajax_call_fails(self):
"
11585,"def test_user_hide_succeeds(self):
"
11586,"def test_user_hide_admin_fails(self):
"
11587,"def test_user_hide_hidden_user_doesnt_change_state(self):
"
11588,"def test_user_hide_returns_404_for_nonexisting_user(self):
"
11589,"def test_user_unhide_not_ajax_call_fails(self):
"
11590,"def test_user_unhide_succeeds(self):
"
11591,"def test_user_unhide_admin_fails(self):
"
11592,"def test_user_unhide_returns_404_for_nonexisting_user(self):
"
11593,"def test_admin_changes_password_successfully(self):
"
11594,"def test_admin_changes_password_passwords_different_doesnt_change_password(self):
"
11595,"def test_admin_password_change_not_provided_password2_doesnt_change_password(self):
"
11596,"def test_admin_password_change_not_provided_password1_doesnt_change_password(self):
"
11597,"def test_admin_password_change_nonexistent_user_returns_404(self):
"
11598,"def test_change_admins_password_fails(self):
"
11599,"def _compat(self,script = None,interval = None,ttl = None,http = None,timeout = None):
"
11600,"def __init__(self,agent):
"
11601,"def list(self,name = None,index = None,wait = None):
"
11602,"def __init__(self,agent):
"
11603,"def __init__(self,agent):
"
11604,"def self(self):
"
11605,"def services(self):
"
11606,"def checks(self):
"
11607,"def members(self,wan = False):
"
11608,"def maintenance(self,enable,reason = None):
"
11609,"def join(self,address,wan = False):
"
11610,"def force_leave(self,node):
"
11611,"def __init__(self,agent):
"
11612,"def register(self,name,service_id = None,address = None,port = None,tags = None,check = None,token = None,script = None,interval = None,ttl = None,http = None,timeout = None):
"
11613,"def deregister(self,service_id):
"
11614,"def maintenance(self,service_id,enable,reason = None):
"
11615,"def __init__(self,agent):
"
11616,"def deregister(self,check_id):
"
11617,"def ttl_pass(self,check_id,notes = None):
"
11618,"def ttl_fail(self,check_id,notes = None):
"
11619,"def ttl_warn(self,check_id,notes = None):
"
11620,"def __init__(self,agent):
"
11621,"def register(self,node,address,service = None,check = None,dc = None):
"
11622,"def deregister(self,node,service_id = None,check_id = None,dc = None):
"
11623,"def datacenters(self):
"
11624,"def nodes(self,index = None,wait = None,consistency = None,dc = None):
"
11625,"def services(self,index = None,wait = None,consistency = None,dc = None):
"
11626,"def node(self,node,index = None,wait = None,consistency = None,dc = None):
"
11627,"def service(self,service,index = None,wait = None,tag = None,consistency = None,dc = None):
"
11628,"def __init__(self,agent):
"
11629,"def service(self,service,index = None,wait = None,passing = None,tag = None,dc = None):
"
11630,"def checks(self,service,index = None,wait = None,dc = None):
"
11631,"def state(self,name,index = None,wait = None,dc = None):
"
11632,"def node(self,node,index = None,wait = None,dc = None):
"
11633,"def __init__(self,agent):
"
11634,"def destroy(self,session_id,dc = None):
"
11635,"def list(self,index = None,wait = None,consistency = None,dc = None):
"
11636,"def node(self,node,index = None,wait = None,consistency = None,dc = None):
"
11637,"def info(self,session_id,index = None,wait = None,consistency = None,dc = None):
"
11638,"def renew(self,session_id,dc = None):
"
11639,"def __init__(self,agent):
"
11640,"def list(self,token = None):
"
11641,"def info(self,acl_id,token = None):
"
11642,"def clone(self,acl_id,token = None):
"
11643,"def destroy(self,acl_id,token = None):
"
11644,"def __init__(self,agent):
"
11645,"def leader(self):
"
11646,"def peers(self):
"
11647,"def dispatch(self,request,* args,** kwargs):
"
11648,"def get_data(self,request,key = 'params'):
"
11649,"def cache_data(self,request,data,key = 'params'):
"
11650,"def clear_data(self,request):
"
11651,"def authenticate(self,request):
"
11652,"def get_redirect_url(self,request):
"
11653,"def handle(self,request,data):
"
11654,"def get(self,request):
"
11655,"def post(self,request):
"
11656,"def get_redirect_url(self,request):
"
11657,"def get_request_form(self,client,data):
"
11658,"def get_authorization_form(self,request,client,data,client_data):
"
11659,"def get_client(self,client_id):
"
11660,"def save_authorization(self,request,client,form,client_data):
"
11661,"def _validate_client(self,request,data):
"
11662,"def error_response(self,request,error,** kwargs):
"
11663,"def get(self,request):
"
11664,"def post(self,request):
"
11665,"def error_response(self,error,mimetype = 'application/json',status = 400,** kwargs):
"
11666,"def get(self,request):
"
11667,"def get_authorization_code_grant(self,request,data,client):
"
11668,"def get_refresh_token_grant(self,request,data,client):
"
11669,"def get_password_grant(self,request,data,client):
"
11670,"def get_access_token(self,request,user,scope,client):
"
11671,"def create_access_token(self,request,user,scope,client):
"
11672,"def create_refresh_token(self,request,user,scope,access_token,client):
"
11673,"def invalidate_grant(self,grant):
"
11674,"def invalidate_refresh_token(self,refresh_token):
"
11675,"def invalidate_access_token(self,access_token):
"
11676,"def error_response(self,error,mimetype = 'application/json',status = 400,** kwargs):
"
11677,"def access_token_response(self,access_token):
"
11678,"def authorization_code(self,request,data,client):
"
11679,"def refresh_token(self,request,data,client):
"
11680,"def password(self,request,data,client):
"
11681,"def get_handler(self,grant_type):
"
11682,"def get(self,request):
"
11683,"def __init__(self):
"
11684,"def register_pseudo(self,name,fn):
"
11685,"def parse_selector(self,selector):
"
11686,"def match(self,selector,data):
"
11687,"def match_data(self,selector,data):
"
11688,"def match_node(self,selector,node):
"
11689,"def match_rules(self,selector,node):
"
11690,"def match_attrs(self,selector,node):
"
11691,"def match_pseudos(self,selector,d):
"
11692,"def match_type(self,typ,node):
"
11693,"def match_id(self,id_,node):
"
11694,"def match_attr(self,lft,op,rgt,no):
"
11695,"def iter_data(self,data):
"
11696,"def setUp(self):
"
11697,"def test_get_no_permission(self):
"
11698,"def test_post_no_permission(self):
"
11699,"def test_get(self):
"
11700,"def test_post_valid(self):
"
11701,"def test_post_invalid(self):
"
11702,"def setUp(self):
"
11703,"def test_get_no_permission(self):
"
11704,"def test_post_no_permission(self):
"
11705,"def test_bad_pk(self):
"
11706,"def test_get(self):
"
11707,"def test_post(self):
"
11708,"def setUp(self):
"
11709,"def _assert_no_change(self):
"
11710,"def test_get_no_permission(self):
"
11711,"def test_post_no_permission(self):
"
11712,"def test_bad_pk(self):
"
11713,"def test_get(self):
"
11714,"def test_post_valid(self):
"
11715,"def test_post_invalid(self):
"
11716,"def setUp(self):
"
11717,"def test_get_no_permission(self):
"
11718,"def test_list_all(self):
"
11719,"def test_list_none(self):
"
11720,"def test_list_one(self):
"
11721,"def test_no_results(self):
"
11722,"def test_one_result(self):
"
11723,"def test_multiple_results(self):
"
11724,"def test_filter_name(self):
"
11725,"def test_filter_description(self):
"
11726,"def setUp(self):
"
11727,"def test_get_no_permission(self):
"
11728,"def test_post(self):
"
11729,"def test_bad_pk(self):
"
11730,"def test_get(self):
"
11731,"def test_generate_months(self):
"
11732,"def test_generate_weeks(self):
"
11733,"def test_generate_days(self):
"
11734,"def check_truncs(self,trunc,billable,non_billable):
"
11735,"def test_trunc_month(self):
"
11736,"def test_trunc_week(self):
"
11737,"def test_trunc_day(self):
"
11738,"def get_project_totals(self,date_headers,trunc,query = Q(),hour_type = 'total'):
"
11739,"def log_daily(self,start,day2,end):
"
11740,"def test_daily_total(self):
"
11741,"def test_billable_nonbillable(self):
"
11742,"def test_weekly_total(self):
"
11743,"def test_monthly_total(self):
"
11744,"def args_helper(self,** kwargs):
"
11745,"def make_totals(self,args = { }):
"
11746,"def check_totals(self,args,data):
"
11747,"def test_form_type__none(self):
"
11748,"def test_form_type__all(self):
"
11749,"def test_form_type__exclude_billable(self):
"
11750,"def test_form_type__exclude_nonbillable(self):
"
11751,"def test_form_type__exclude_leave(self):
"
11752,"def test_form_type__only_billable(self):
"
11753,"def test_form_type__only_nonbillable(self):
"
11754,"def test_form_type__only_leave(self):
"
11755,"def test_form_day(self):
"
11756,"def test_form_week(self):
"
11757,"def test_form_month(self):
"
11758,"def test_form_projects(self):
"
11759,"def test_no_permission(self):
"
11760,"def test_entry_summary_permission(self):
"
11761,"def clean_link(self):
"
11762,"def __unicode__(self):
"
11763,"def office_count(self):
"
11764,"def candidate_count(self):
"
11765,"def election_count(self):
"
11766,"def candidate_count(self):
"
11767,"def election_year(self):
"
11768,"def election_type(self):
"
11769,"def __unicode__(self):
"
11770,"def short_description(self,character_limit = 60):
"
11771,"def __unicode__(self):
"
11772,"def test_csv_gettrs(self):
"
11773,"def test_verifycalacessrawfile(self):
"
11774,"def test_totalcalacessrawdata(self):
"
11775,"def setUp(self):
"
11776,"def tearDown(self):
"
11777,"def test_bad_call(self):
"
11778,"def test_bad_csv(self):
"
11779,"def test_bad_backend(self):
"
11780,"def test_bad_header(self):
"
11781,"def test_bad_field(self):
"
11782,"def test_simple_save(self):
"
11783,"def test_save_foreign_key(self):
"
11784,"def test_silent_save(self):
"
11785,"def test_pipe_save(self):
"
11786,"def test_null_save(self):
"
11787,"def test_backwards_save(self):
"
11788,"def test_field_override_save(self):
"
11789,"def test_encoding_save(self):
"
11790,"def test_static_values(self):
"
11791,"def test_bad_static_values(self):
"
11792,"def test_save_foreign_key(self):
"
11793,"def test_model_fixed_costs_op(self):
"
11794,"def test_model_var_costs_op(self):
"
11795,"def test_model_fixed_costs_op_with_varying_demand(self):
"
11796,"def test_model_var_costs_op_with_varying_demand(self):
"
11797,"def render_template(self,template_string,context = { }):
"
11798,"def testTooFewArguments(self):
"
11799,"def __init__(self,status_val,status_name):
"
11800,"def __call__(self,modeladmin,request,queryset):
"
11801,"def __init__(self,* args,** kwargs):
"
11802,"def _get_widget(self):
"
11803,"def formfield_for_dbfield(self,db_field,** kwargs):
"
11804,"def queryset(self,request):
"
11805,"def changelist_view(self,* args,** kwargs):
"
11806,"def get_changelist_formset(self,request,** kwargs):
"
11807,"def get_query_set(self):
"
11808,"def cloud(self,* args,** kwargs):
"
11809,"def related(self,tags,* args,** kwargs):
"
11810,"def usage(self,* args,** kwargs):
"
11811,"def related_to(self,obj,queryset = None,num = None):
"
11812,"def with_all(self,tags,queryset = None):
"
11813,"def with_any(self,tags,queryset = None):
"
11814,"def __get__(self,instance,owner):
"
11815,"def __set__(self,instance,value):
"
11816,"def __delete__(self,instance):
"
11817,"def __init__(self,data):
"
11818,"def __init__(self,u):
"
11819,"def __init__(self,u):
"
11820,"def __init__(self,u):
"
11821,"def __init__(self,u):
"
11822,"def __init__(self,u):
"
11823,"def __init__(self,u):
"
11824,"def __init__(self,u):
"
11825,"def __init__(self,u):
"
11826,"def __init__(self,u):
"
11827,"def __init__(self,u):
"
11828,"def __init__(self,u):
"
11829,"def __init__(self,u):
"
11830,"def __init__(self,u):
"
11831,"def __init__(self,u):
"
11832,"def __init__(self,u):
"
11833,"def __init__(self,u):
"
11834,"def __init__(self,u):
"
11835,"def __init__(self,u):
"
11836,"def test_logfollow(self):
"
11837,"def test_apache_parser(self):
"
11838,"def __init__(self,auth = None,email_address = None):
"
11839,"def get(self,email_address = None):
"
11840,"def add(self,email_address,name):
"
11841,"def update(self,new_email_address,name):
"
11842,"def delete(self):
"
11843,"def testIsSecureOption(self):
"
11844,"def testStaysSecure(self):
"
11845,"def testStaysUnsecure(self):
"
11846,"def testSetThenSetSecureTurnsSecure(self):
"
11847,"def testItemsHavePasswords(self):
"
11848,"def testSecureItems(self):
"
11849,"def testUnsavedOptions(self):
"
11850,"def testKeyringOffSet(self):
"
11851,"def __init__(self,* args,** kwargs):
"
11852,"def __init__(self,* args,** kwargs):
"
11853,"def pre_save(self,model_instance,add):
"
11854,"def __init__(self,* args,** kwargs):
"
11855,"def prepare_class(self,sender,** kwargs):
"
11856,"def contribute_to_class(self,cls,name):
"
11857,"def deconstruct(self):
"
11858,"def __init__(self,* args,** kwargs):
"
11859,"def contribute_to_class(self,cls,name):
"
11860,"def get_monitored_value(self,instance):
"
11861,"def _save_initial(self,sender,instance,** kwargs):
"
11862,"def pre_save(self,model_instance,add):
"
11863,"def deconstruct(self):
"
11864,"def __init__(self,instance,field_name,excerpt_field_name):
"
11865,"def _get_content(self):
"
11866,"def _set_content(self,val):
"
11867,"def _get_excerpt(self):
"
11868,"def _get_has_more(self):
"
11869,"def __str__(self):
"
11870,"def __init__(self,field):
"
11871,"def __get__(self,instance,owner):
"
11872,"def __set__(self,obj,value):
"
11873,"def __init__(self,* args,** kwargs):
"
11874,"def contribute_to_class(self,cls,name):
"
11875,"def pre_save(self,model_instance,add):
"
11876,"def value_to_string(self,obj):
"
11877,"def get_prep_value(self,value):
"
11878,"def deconstruct(self):
"
11879,"def __init__(self,* args,** kwargs):
"
11880,"def get_internal_type(self):
"
11881,"def formfield(self,** kwargs):
"
11882,"def __str__(self):
"
11883,"def __str__(self):
"
11884,"def __str__(self):
"
11885,"def __str__(self):
"
11886,"def __str__(self):
"
11887,"def __str__(self):
"
11888,"def __str__(self):
"
11889,"def __init__(self,** kw):
"
11890,"def __init__(self):
"
11891,"def set(self,entity):
"
11892,"def remove(self,entity):
"
11893,"def __init__(self,** kw):
"
11894,"def test_repr(self):
"
11895,"def test_accessor_getattr_for_nonexistant_component(self):
"
11896,"def test_accessor_getattr_for_non_member_entity(self):
"
11897,"def test_accessor_getattr_for_member_entity(self):
"
11898,"def test_accessor_setattr_adds_non_member_entity(self):
"
11899,"def test_accessor_setattr_for_member_entity(self):
"
11900,"def test_eq(self):
"
11901,"def test_delattr(self):
"
11902,"def test_entity_id(self):
"
11903,"def test_delete_exists(self):
"
11904,"def test_entity_subclass_slots(self):
"
11905,"def test_entity_subclass_cant_have_slots(self):
"
11906,"def test_entity_subclass_init(self):
"
11907,"def test_getattr(self):
"
11908,"def test_setattr_member_entity(self):
"
11909,"def test_setattr_nonmember_entity(self):
"
11910,"def test_truthiness(self):
"
11911,"def __unicode__(self):
"
11912,"def __init__(self,request = None):
"
11913,"def __unicode__(self):
"
11914,"def __unicode__(self):
"
11915,"def __init__(self,config_path = DEFAULT_CONFIG_PATH,status_callback = None):
"
11916,"def _LoadConfigFromPath(self,path):
"
11917,"def ListSourceTypes(self):
"
11918,"def ListSourcesWithDetails(self):
"
11919,"def ListSourceTitles(self):
"
11920,"def ConvertSourceTitleToType(self,detail):
"
11921,"def GetBestSourceDetails(self):
"
11922,"def GetNameForSource(self,source):
"
11923,"def GetCachedRecordCountForSource(self,source):
"
11924,"def _CreateRecordsFromHostEntries(self,entries,include_duplicates = False):
"
11925,"def _GenerateRandomHostname(self,domain):
"
11926,"def _GetHostsFromSource(self,source,min_file_size = None,max_mtime_age_days = None):
"
11927,"def _ExtractHostsFromHistoryFile(self,path):
"
11928,"def _ExtractHostsFromPcapFile(self,path):
"
11929,"def _ReadDataFile(self,path):
"
11930,"def _GetSourceSearchPaths(self,source):
"
11931,"def _FindBestFileForSource(self,source,min_file_size = None,max_mtime_age_days = None):
"
11932,"def __init__(self,rdclass,rdtype,address,protocol,bitmap):
"
11933,"def to_wire(self,file,compress = None,origin = None):
"
11934,"def _cmp(self,other):
"
11935,"def __init__(self,event_id,** kwargs):
"
11936,"def setUp(self):
"
11937,"def tearDown(self):
"
11938,"def _loadJson(self,name):
"
11939,"def test_convert_recent_tracks_json(self):
"
11940,"def test_convert_recent_tracks_json_no_recent_tracks(self):
"
11941,"def test_convert_recent_tracks_json_unknown_user(self):
"
11942,"def test_convert_top_artists(self):
"
11943,"def test_convert_top_artists_unknown_user(self):
"
11944,"def test_convert_top_artists_none(self):
"
11945,"def setUp(self):
"
11946,"def tearDown(self):
"
11947,"def login(self,username,password):
"
11948,"def register_user(self,username,email,password):
"
11949,"def edit_user(self,user,email):
"
11950,"def delete_user(self,uid):
"
11951,"def test_404(self):
"
11952,"def test_index(self):
"
11953,"def test_login(self):
"
11954,"def test_logout(self):
"
11955,"def test_register_user(self):
"
11956,"def test_edit_user(self):
"
11957,"def test_delete_user(self):
"
11958,"def test_user_list(self):
"
11959,"def __init__(self):
"
11960,"def my_function(self):
"
11961,"def not_implemented(self):
"
11962,"def __unicode__(self):
"
11963,"def in_group(self,group):
"
11964,"def get_profile(self,request = None):
"
11965,"def group_list(self):
"
11966,"def _set_password(self,password):
"
11967,"def _get_password(self):
"
11968,"def __init__(self,host,** kwargs):
"
11969,"def handle(self,* args,** options):
"
11970,"def __init__(self,response):
"
11971,"def read(self,* args,** kwargs):
"
11972,"def getheader(self,name,default = None):
"
11973,"def getheaders(self):
"
11974,"def status(self):
"
11975,"def reason(self):
"
11976,"def __repr__(self):
"
11977,"def __init__(self,host,port = None,strict = None,timeout = 20.0,http_client = None,** kwargs):
"
11978,"def request(self,method,path,body = None,headers = None):
"
11979,"def getrequest(self,scheme = None):
"
11980,"def getresponse(self,callback = None):
"
11981,"def set_debuglevel(self,level):
"
11982,"def connect(self):
"
11983,"def close(self):
"
11984,"def putrequest(self,method,path,** kwargs):
"
11985,"def putheader(self,header,value):
"
11986,"def endheaders(self):
"
11987,"def send(self,data):
"
11988,"def __repr__(self):
"
11989,"def __init__(self,http_client = None,** kwargs):
"
11990,"def get_http_connection(self,host,port,is_secure):
"
11991,"def _mexe(self,request,sender = None,callback = None):
"
11992,"def __init__(self,host,http_client = None,http_client_params = { },** kwargs):
"
11993,"def make_request(self,method,path,headers = None,data = '',host = None,auth_path = None,sender = None,callback = None,** kwargs):
"
11994,"def __init__(self,host,http_client = None,http_client_params = { },** kwargs):
"
11995,"def make_request(self,action,params,path,verb,callback = None):
"
11996,"def get_list(self,action,params,markers,path = '/',parent = None,verb = 'GET',callback = None):
"
11997,"def get_object(self,action,params,cls,path = '/',parent = None,verb = 'GET',callback = None):
"
11998,"def get_status(self,action,params,path = '/',parent = None,verb = 'GET',callback = None):
"
11999,"def _on_list_ready(self,parent,markers,response):
"
12000,"def _on_obj_ready(self,parent,cls,response):
"
12001,"def _on_status_ready(self,parent,response):
"
12002,"def _for_status(self,response,body):
"
12003,"def _init(self,maxsize):
"
12004,"def __init__(self,limit = None,preload = None,close_after_fork = None):
"
12005,"def setup(self):
"
12006,"def _add_when_empty(self):
"
12007,"def acquire(self,block = False,timeout = None):
"
12008,"def prepare(self,resource):
"
12009,"def close_resource(self,resource):
"
12010,"def release_resource(self,resource):
"
12011,"def replace(self,resource):
"
12012,"def release(self,resource):
"
12013,"def collect_resource(self,resource):
"
12014,"def force_close_all(self):
"
12015,"def resize(self,limit,force = False,ignore_errors = False,reset = False):
"
12016,"def _shrink_down(self):
"
12017,"def limit(self):
"
12018,"def limit(self,limit):
"
12019,"def acquire(self,* args,** kwargs):
"
12020,"def release(self,resource):
"
12021,"def setup(self):
"
12022,"def test_repr(self):
"
12023,"def test_pickle(self):
"
12024,"def test_no_channel(self):
"
12025,"def test_maybe_declare(self,maybe_declare):
"
12026,"def test_maybe_declare_when_entity_false(self,maybe_declare):
"
12027,"def test_auto_declare(self):
"
12028,"def test_manual_declare(self):
"
12029,"def test_prepare(self):
"
12030,"def test_prepare_compression(self):
"
12031,"def test_prepare_custom_content_type(self):
"
12032,"def test_prepare_is_already_unicode(self):
"
12033,"def test_publish_with_Exchange_instance(self):
"
12034,"def test_publish_with_expiration(self):
"
12035,"def test_publish_with_reply_to(self):
"
12036,"def test_set_on_return(self):
"
12037,"def test_publish_retry_calls_ensure(self):
"
12038,"def test_publish_retry_with_declare(self):
"
12039,"def test_revive_when_channel_is_connection(self):
"
12040,"def test_enter_exit(self):
"
12041,"def test_connection_property_handles_AttributeError(self):
"
12042,"def test_publish(self):
"
12043,"def test_no_exchange(self):
"
12044,"def test_revive(self):
"
12045,"def test_on_return(self):
"
12046,"def setup(self):
"
12047,"def test_accept(self):
"
12048,"def test_enter_exit_cancel_raises(self):
"
12049,"def test_receive_callback_accept(self):
"
12050,"def test_accept__content_disallowed(self):
"
12051,"def test_accept__content_allowed(self):
"
12052,"def test_set_no_channel(self):
"
12053,"def test_set_no_ack(self):
"
12054,"def test_add_queue_when_auto_declare(self):
"
12055,"def test_add_queue_when_not_auto_declare(self):
"
12056,"def test_consume_without_queues_returns(self):
"
12057,"def test_consuming_from(self):
"
12058,"def test_receive_callback_without_m2p(self):
"
12059,"def test_receive_callback__message_errors(self):
"
12060,"def test_set_callbacks(self):
"
12061,"def test_auto_declare(self):
"
12062,"def test_consumer_tag_prefix(self):
"
12063,"def test_manual_declare(self):
"
12064,"def test_consume__cancel(self):
"
12065,"def test___enter____exit__(self):
"
12066,"def test_flow(self):
"
12067,"def test_qos(self):
"
12068,"def test_purge(self):
"
12069,"def test_multiple_queues(self):
"
12070,"def test_receive_callback(self):
"
12071,"def test_basic_ack_twice(self):
"
12072,"def test_basic_reject(self):
"
12073,"def test_basic_reject_twice(self):
"
12074,"def test_basic_reject__requeue(self):
"
12075,"def test_basic_reject__requeue_twice(self):
"
12076,"def test_receive_without_callbacks_raises(self):
"
12077,"def test_decode_error(self):
"
12078,"def test_on_decode_error_callback(self):
"
12079,"def test_recover(self):
"
12080,"def test_revive(self):
"
12081,"def test_revive__with_prefetch_count(self):
"
12082,"def test__repr__(self):
"
12083,"def test_connection_property_handles_AttributeError(self):
"
12084,"def test_parse_url(self):
"
12085,"def test_as_url(self):
"
12086,"def test_maybe_sanitize_url(self):
"
12087,"def encode(self,s):
"
12088,"def decode(self,s):
"
12089,"def __init__(self,exchanges = None):
"
12090,"def clear(self):
"
12091,"def has_binding(self,queue,exchange,routing_key):
"
12092,"def binding_declare(self,queue,exchange,routing_key,arguments):
"
12093,"def binding_delete(self,queue,exchange,routing_key):
"
12094,"def queue_bindings_delete(self,queue):
"
12095,"def queue_bindings(self,queue):
"
12096,"def __init__(self,channel,prefetch_count = 0):
"
12097,"def can_consume(self):
"
12098,"def can_consume_max_estimate(self):
"
12099,"def append(self,message,delivery_tag):
"
12100,"def get(self,delivery_tag):
"
12101,"def _flush(self):
"
12102,"def ack(self,delivery_tag):
"
12103,"def reject(self,delivery_tag,requeue = False):
"
12104,"def restore_unacked(self):
"
12105,"def restore_unacked_once(self,stderr = None):
"
12106,"def restore_visible(self,* args,** kwargs):
"
12107,"def __init__(self,channel,payload,** kwargs):
"
12108,"def serializable(self):
"
12109,"def _get(self,queue,timeout = None):
"
12110,"def _put(self,queue,message):
"
12111,"def _purge(self,queue):
"
12112,"def _size(self,queue):
"
12113,"def _delete(self,queue,* args,** kwargs):
"
12114,"def _new_queue(self,queue,** kwargs):
"
12115,"def _has_queue(self,queue,** kwargs):
"
12116,"def _poll(self,cycle,timeout = None):
"
12117,"def __init__(self,connection,** kwargs):
"
12118,"def exchange_declare(self,exchange = None,type = 'direct',durable = False,auto_delete = False,arguments = None,nowait = False,passive = False):
"
12119,"def exchange_delete(self,exchange,if_unused = False,nowait = False):
"
12120,"def queue_declare(self,queue = None,passive = False,** kwargs):
"
12121,"def queue_delete(self,queue,if_unused = False,if_empty = False,** kwargs):
"
12122,"def after_reply_message_received(self,queue):
"
12123,"def exchange_bind(self,destination,source = '',routing_key = '',nowait = False,arguments = None):
"
12124,"def exchange_unbind(self,destination,source = '',routing_key = '',nowait = False,arguments = None):
"
12125,"def queue_bind(self,queue,exchange = None,routing_key = '',arguments = None,** kwargs):
"
12126,"def queue_unbind(self,queue,exchange = None,routing_key = '',arguments = None,** kwargs):
"
12127,"def list_bindings(self):
"
12128,"def queue_purge(self,queue,** kwargs):
"
12129,"def _next_delivery_tag(self):
"
12130,"def basic_publish(self,message,exchange,routing_key,** kwargs):
"
12131,"def basic_consume(self,queue,no_ack,callback,consumer_tag,** kwargs):
"
12132,"def basic_cancel(self,consumer_tag):
"
12133,"def basic_get(self,queue,no_ack = False,** kwargs):
"
12134,"def basic_ack(self,delivery_tag,multiple = False):
"
12135,"def basic_recover(self,requeue = False):
"
12136,"def basic_reject(self,delivery_tag,requeue = False):
"
12137,"def basic_qos(self,prefetch_size = 0,prefetch_count = 0,apply_global = False):
"
12138,"def get_exchanges(self):
"
12139,"def get_table(self,exchange):
"
12140,"def typeof(self,exchange,default = 'direct'):
"
12141,"def _lookup(self,exchange,routing_key,default = None):
"
12142,"def _restore(self,message):
"
12143,"def _restore_at_beginning(self,message):
"
12144,"def drain_events(self,timeout = None):
"
12145,"def message_to_python(self,raw_message):
"
12146,"def prepare_message(self,body,priority = None,content_type = None,content_encoding = None,headers = None,properties = None):
"
12147,"def flow(self,active = True):
"
12148,"def close(self):
"
12149,"def encode_body(self,body,encoding = None):
"
12150,"def decode_body(self,body,encoding = None):
"
12151,"def _reset_cycle(self):
"
12152,"def __enter__(self):
"
12153,"def __exit__(self,* exc_info):
"
12154,"def state(self):
"
12155,"def qos(self):
"
12156,"def cycle(self):
"
12157,"def _get_message_priority(self,message,reverse = False):
"
12158,"def __init__(self,transport):
"
12159,"def get_bindings(self):
"
12160,"def close(self):
"
12161,"def __init__(self,client,** kwargs):
"
12162,"def create_channel(self,connection):
"
12163,"def close_channel(self,channel):
"
12164,"def establish_connection(self):
"
12165,"def close_connection(self,connection):
"
12166,"def drain_events(self,connection,timeout = None):
"
12167,"def _deliver(self,message,queue):
"
12168,"def _reject_inbound_message(self,raw_message):
"
12169,"def on_message_ready(self,channel,message,queue):
"
12170,"def _drain_channel(self,channel,timeout = None):
"
12171,"def default_connection_params(self):
"
12172,"def __init__(self,app = None,service_url = '/api',auth_backend = authenticate,site = default_site,enable_web_browsable_api = False):
"
12173,"def _unique_name(self,suffix = ''):
"
12174,"def _make_browse_url(self,service_url):
"
12175,"def _register_browse(self,app):
"
12176,"def _enable_web_browsable_api(self,app,url_prefix = None):
"
12177,"def init_app(self,app):
"
12178,"def method(self,name,authenticated = False,safe = False,validate = False,** options):
"
12179,"def __init__(self,pattern,statement = None):
"
12180,"def __call__(self,string):
"
12181,"def __init__(self,_socket = None):
"
12182,"def __call__(self,string):
"
12183,"def __call__(self,string):
"
12184,"def __init__(self,package_name,rst_extension = '.txt',skip_patterns =['.*__','.*tests$'],):
"
12185,"def _import(self,name):
"
12186,"def _get_object_name(self,line):
"
12187,"def _parse_module_with_import(self,uri):
"
12188,"def _survives_exclude(self,matchstr):
"
12189,"def _uri2path(self,uri):
"
12190,"def _path2uri(self,dirpath):
"
12191,"def discover_modules(self):
"
12192,"def write_modules_api(self,modules,outdir):
"
12193,"def write_api_docs(self,outdir):
"
12194,"def write_index(self,outdir,froot = 'gen',relative_to = None):
"
12195,"def __init__(self,newPath,clobber = False):
"
12196,"def __enter__(self):
"
12197,"def __exit__(self,etype,value,traceback):
"
12198,"def default(self,obj):
"
12199,"def __init__(self,id,username = None):
"
12200,"def __repr__(self):
"
12201,"def add_stream(self,stream_id):
"
12202,"def emit_to_rooms(self,event,** data):
"
12203,"def to_JSON(self):
"
12204,"def __init__(self,name):
"
12205,"def __repr__(self):
"
12206,"def user_leave(self,user,disconnect = True):
"
12207,"def __init__(self):
"
12208,"def get_current_user(self):
"
12209,"def disconnected(self,stream_id):
"
12210,"def reinitialize_command(self,command,reinit_subcommands = 0):
"
12211,"def run(self):
"
12212,"def __init__(self,* args,** kwargs):
"
12213,"def clean_key(self):
"
12214,"def save(self):
"
12215,"def __init__(self,* args,** kwargs):
"
12216,"def save(self):
"
12217,"def forwards(self,orm):
"
12218,"def backwards(self,orm):
"
12219,"def __init__(self,numVertices,sparseOnly = False,numEdges = 0):
"
12220,"def __iter__(self):
"
12221,"def next(self):
"
12222,"def getNumGraphs(self):
"
12223,"def initialise(self):
"
12224,"def testAddEdge(self):
"
12225,"def testAddEdges(self):
"
12226,"def testRemoveEdge(self):
"
12227,"def testNeighbours(self):
"
12228,"def testNeighbourOf(self):
"
12229,"def testClusteringCoefficient(self):
"
12230,"def testDegreeDistribution(self):
"
12231,"def testDijkstrasAlgorithm(self):
"
12232,"def testGeodesicDistance(self):
"
12233,"def testHopCount(self):
"
12234,"def testHarmonicGeodesicDistance(self):
"
12235,"def testGetAllEdges(self):
"
12236,"def testGetNumEdges(self):
"
12237,"def testGetNumVertices(self):
"
12238,"def testGetEdge(self):
"
12239,"def testGetVertex(self):
"
12240,"def testSetVertex(self):
"
12241,"def testIsUndirected(self):
"
12242,"def testGetAllVertexIds(self):
"
12243,"def testSubgraph(self):
"
12244,"def testAdd(self):
"
12245,"def testMultiply(self):
"
12246,"def testCopy(self):
"
12247,"def testDensity(self):
"
12248,"def testDepthFirstSearch(self):
"
12249,"def testBreadthFirstSearch(self):
"
12250,"def testDiameter(self):
"
12251,"def testEffectiveDiameter(self):
"
12252,"def testFindComponents(self):
"
12253,"def testFitPowerLaw(self):
"
12254,"def testFloydWarshall(self):
"
12255,"def testFindAllDistances(self):
"
12256,"def testEgoGraph(self):
"
12257,"def testStr(self):
"
12258,"def testRemoveAllEdges(self):
"
12259,"def testAdjacencyMatrix(self):
"
12260,"def testComplement(self):
"
12261,"def testFindTrees(self):
"
12262,"def testSetWeightMatrix(self):
"
12263,"def testGetNumDirEdges(self):
"
12264,"def testOutDegreeSequence(self):
"
12265,"def testInDegreeSequence(self):
"
12266,"def testInDegreeDistribution(self):
"
12267,"def testGeneralVertexList(self):
"
12268,"def testFromNetworkXGraph(self):
"
12269,"def testDiameter2(self):
"
12270,"def testLaplacianMatrix(self):
"
12271,"def testLoad(self):
"
12272,"def testMaxEigenvector(self):
"
12273,"def testMaxProductPaths(self):
"
12274,"def testMaybeIsomorphicWith(self):
"
12275,"def testSave(self):
"
12276,"def testSetVertices(self):
"
12277,"def testToNetworkXGraph(self):
"
12278,"def testTriangleSequence(self):
"
12279,"def testUnion(self):
"
12280,"def testIntersect(self):
"
12281,"def testIsTree(self):
"
12282,"def testBetweenness(self):
"
12283,"def testSetVertexList(self):
"
12284,"def testNormalisedLaplacianSym(self):
"
12285,"def testNormalisedLaplacianRw(self):
"
12286,"def testSetDiff(self):
"
12287,"def testIncidenceMatrix(self):
"
12288,"def testDegreeSequence(self):
"
12289,"def testAdjacencyList(self):
"
12290,"def testGetItem(self):
"
12291,"def testSetItem(self):
"
12292,"def testToIGraph(self):
"
12293,"def testPickle(self):
"
12294,"def testToDictGraph(self):
"
12295,"def __init__(self,* args,** kwargs):
"
12296,"def get_queryset(self):
"
12297,"def field_definition_cls(self):
"
12298,"def setUp(self):
"
12299,"def authenticate(self,username = None,password = None,** kwargs):
"
12300,"def get_user(self,user_id):
"
12301,"def setUp(self):
"
12302,"def test_subdividePathWithPaths(self):
"
12303,"def __init__(self,* args,** kwargs):
"
12304,"def all(self,** kwargs):
"
12305,"def get(self,report_id):
"
12306,"def validate_credentials(self):
"
12307,"def get_credentials_arguments(self):
"
12308,"def load_config_from_file(self,provider_name,config_path):
"
12309,"def load_config_from_external_source(self,client_id,client_secret,refresh_token,application_name,network_code):
"
12310,"def setUp(self):
"
12311,"def test_words(self):
"
12312,"def test_words_filter(self):
"
12313,"def test_words_good_tags(self):
"
12314,"def test_words_min_freq(self):
"
12315,"def test_ngrams_less_than_1(self):
"
12316,"def test_ngrams_1(self):
"
12317,"def test_ngrams_2(self):
"
12318,"def test_ngrams_filter(self):
"
12319,"def test_ngrams_min_freq(self):
"
12320,"def test_ngrams_good_tag(self):
"
12321,"def test_named_entities(self):
"
12322,"def test_named_entities_good(self):
"
12323,"def test_named_entities_min_freq(self):
"
12324,"def test_named_entities_determiner(self):
"
12325,"def test_noun_chunks(self):
"
12326,"def test_noun_chunks_determiner(self):
"
12327,"def test_noun_chunks_min_freq(self):
"
12328,"def test_pos_regex_matches(self):
"
12329,"def test_subject_verb_object_triples(self):
"
12330,"def test_acronyms_and_definitions(self):
"
12331,"def test_direct_quotations(self):
"
12332,"def __init__(self,name,srcs,deps,warning,java_package,java_lib_packed,optimize,extra_swigflags,blade,kwargs):
"
12333,"def _pyswig_gen_python_file(self,path,src):
"
12334,"def _pyswig_gen_file(self,path,src):
"
12335,"def _javaswig_gen_file(self,path,src):
"
12336,"def _phpswig_gen_file(self,path,src):
"
12337,"def _swig_extract_dependency_files(self,src):
"
12338,"def _swig_library_rules_java(self,dep_files_map):
"
12339,"def scons_rules(self):
"
12340,"def test_without_middleware(self):
"
12341,"def test_with_middleware(self):
"
12342,"def setUp(self):
"
12343,"def test_can_delete_permissions(self):
"
12344,"def test_cannot_delete_permissions(self):
"
12345,"def test_can_update_permissions(self):
"
12346,"def test_cannot_update_permissions(self):
"
12347,"def test_cannot_update_permissions_non_existing(self):
"
12348,"def test_can_read_permissions(self):
"
12349,"def test_cannot_read_permissions(self):
"
12350,"def test_can_read_list_permissions(self):
"
12351,"def test_cannot_read_list_permissions(self):
"
12352,"def test_can_delete_permissions(self):
"
12353,"def test_cannot_delete_permissions(self):
"
12354,"def test_can_update_permissions(self):
"
12355,"def test_cannot_update_permissions(self):
"
12356,"def test_cannot_update_permissions_non_existing(self):
"
12357,"def test_can_read_permissions(self):
"
12358,"def test_cannot_read_permissions(self):
"
12359,"def test_can_read_list_permissions(self):
"
12360,"def test_cannot_read_list_permissions(self):
"
12361,"def __init__(self,plist = os.path.expanduser('~/Library/Preferences/com.chilcote.vfused.plist'),vmrun = '/Applications/VMware Fusion.app/Contents/Library/vmrun'):
"
12362,"def set_start(self,vmx,job_id = None):
"
12363,"def set_stop(self,vmx,job_id = None):
"
12364,"def set_reset(self,vmx,job_id = None):
"
12365,"def remove(self,vmx):
"
12366,"def set_running(self,vmx):
"
12367,"def get_pid(self,vmx):
"
12368,"def get_monitored(self):
"
12369,"def is_running(self,vmx):
"
12370,"def is_scheduled(self,vmx):
"
12371,"def to_be_removed(self,vmx):
"
12372,"def to_be_reset(self,vmx):
"
12373,"def get_scheduled(self):
"
12374,"def get_running(self):
"
12375,"def start_vmx(self,vmx):
"
12376,"def stop_vmx(self,vmx):
"
12377,"def reset_vmx(self,vmx):
"
12378,"def delete_vm(self,vmx):
"
12379,"def job_to_vmx(self,job_id):
"
12380,"def get_ip(self,vmx):
"
12381,"def vmx_is_valid(self,vmx):
"
12382,"def __init__(self,workers,func,prefix = None,app_name = None,logger = None):
"
12383,"def __init__(self,working_dir,size = STORE_FILE_SIZE,deduper = None,mkdirs = False,create_lock_file = False):
"
12384,"def shutdown(self):
"
12385,"def init(self):
"
12386,"def _generate_file(self):
"
12387,"def _destroy_file(self):
"
12388,"def _stringfy(self,obj):
"
12389,"def _destringfy(self,src_str):
"
12390,"def _seek_writable_pos(self,map_handle):
"
12391,"def put_one(self,obj,force = False,commit = True):
"
12392,"def put(self,objects,force = False,commit = True):
"
12393,"def get_one(self,commit = True):
"
12394,"def get(self,size = 1):
"
12395,"def __enter__(self):
"
12396,"def __exit__(self,type_,value,traceback):
"
12397,"def store(self,title,content,last_update):
"
12398,"def __init__(self,request,* args,** kwargs):
"
12399,"def save(self,commit = True):
"
12400,"def __init__(self,request,* args,** kwargs):
"
12401,"def save(self,commit = True):
"
12402,"def __init__(self,request,* args,** kwargs):
"
12403,"def clean_usernames_or_emails(self):
"
12404,"def save(self,commit = True):
"
12405,"def is_not_found(self,request,response,** kwargs):
"
12406,"def get_link_templates(self,request):
"
12407,"def get_queryset(self,request,** kwargs):
"
12408,"def get_object(self,request,pk = None,** kwargs):
"
12409,"def prepare(self,request,instance,template = None):
"
12410,"def _requestor_can_get_forks(self,request,instance):
"
12411,"def _requestor_can_fork(self,request,instance):
"
12412,"def get(self,request,** kwargs):
"
12413,"def post(self,request,** kwargs):
"
12414,"def __init__(self,type,payload,extended_size = False):
"
12415,"def size(self):
"
12416,"def _serialize(self,packet):
"
12417,"def size(self):
"
12418,"def __init__(self,boxes):
"
12419,"def size(self):
"
12420,"def _serialize(self,packet):
"
12421,"def __init__(self,box):
"
12422,"def size(self):
"
12423,"def _serialize(self,packet):
"
12424,"def __init__(self,data):
"
12425,"def __repr__(self):
"
12426,"def size(self):
"
12427,"def _serialize(self,packet):
"
12428,"def __init__(self,major_brand = ""f4v"",minor_version = 0,compatible_brands =[""isom"",""mp42"",""m4v""]):
"
12429,"def size(self):
"
12430,"def _serialize(self,packet):
"
12431,"def __init__(self,version = 0,creation_time = 0,modification_time = 0,time_scale = 1000,duration = 0,rate = 1.0,volume = 1.0,matrix =[65536,0,0,0,65536,0,0,0,1073741824],next_track_id = 0):
"
12432,"def size(self):
"
12433,"def _serialize(self,packet):
"
12434,"def __init__(self,sample_depends_on,sample_is_depended_on,sample_has_redundancy,sample_padding_value,sample_is_difference_sample,sample_degradation_priority):
"
12435,"def size(self):
"
12436,"def _serialize(self,packet):
"
12437,"def __init__(self,version,track_id,default_sample_description_index,default_sample_duration,default_sample_size,default_sample_flags):
"
12438,"def size(self):
"
12439,"def _serialize(self,packet):
"
12440,"def __init__(self,version = 0,flags = 1,creation_time = 0,modification_time = 0,track_id = 1,duration = 0,layer = 0,alternate_group = 0,volume = 0.0,transform_matrix =[65536,0,0,0,65536,0,0,0,1073741824],width = 0.0,height = 0.0):
"
12441,"def size(self):
"
12442,"def _serialize(self,packet):
"
12443,"def __init__(self,version = 0,creation_time = 0,modification_time = 0,time_scale = 1000,duration = 0,language = ""eng""):
"
12444,"def size(self):
"
12445,"def _serialize(self,packet):
"
12446,"def __init__(self,version = 0,predefined = 0,handler_type = ""vide"",name = """"):
"
12447,"def size(self):
"
12448,"def _serialize(self,packet):
"
12449,"def __init__(self,version = 0,flags = 1,graphics_mode = 0,op_color =[0,0,0]):
"
12450,"def size(self):
"
12451,"def _serialize(self,packet):
"
12452,"def __init__(self,version = 0,boxes =[]):
"
12453,"def size(self):
"
12454,"def _serialize(self,packet):
"
12455,"def __init__(self,version = 0,flags = 1):
"
12456,"def size(self):
"
12457,"def _serialize(self,packet):
"
12458,"def __init__(self,version = 0,descriptions =[]):
"
12459,"def size(self):
"
12460,"def boxes(self):
"
12461,"def _serialize(self,packet):
"
12462,"def __init__(self,data_reference_index = 0,width = 0,height = 0,horiz_resolution = 0.0,vert_resolution = 0.0,frame_count = 0,compressor_name = """",depth = 0,boxes =[]):
"
12463,"def size(self):
"
12464,"def _serialize(self,packet):
"
12465,"def __repr__(self):
"
12466,"def __repr__(self):
"
12467,"def __repr__(self):
"
12468,"def __init__(self,version,bootstrap_info_version,profile,live,update,time_scale,current_media_time,smpte_time_code_offset,movie_identifier,server_entry_table,quality_entry_table,drm_data,metadata,segment_run_table_entries,fragment_run_table_entries):
"
12469,"def size(self):
"
12470,"def _serialize(self,packet):
"
12471,"def __init__(self,first_segment,fragments_per_segment):
"
12472,"def size(self):
"
12473,"def _serialize(self,packet):
"
12474,"def __init__(self,version,flags,quality_segment_url_modifiers,segment_run_entry_table):
"
12475,"def size(self):
"
12476,"def _serialize(self,packet):
"
12477,"def __init__(self,first_fragment,first_fragment_timestamp,fragment_duration,discontinuity_indicator):
"
12478,"def size(self):
"
12479,"def _serialize(self,packet):
"
12480,"def __init__(self,version,flags,time_scale,quality_segment_url_modifiers,fragment_run_entry_table):
"
12481,"def size(self):
"
12482,"def _serialize(self,packet):
"
12483,"def __init__(self,URL,contentOverrides,experienceId,playerKey,TTLToken = """"):
"
12484,"def __init__(self,contentId = float(""nan""),contentRefId = None,contentType = 0,target = ""videoPlayer""):
"
12485,"def _create_amf_request(self,key,video_player,player_id):
"
12486,"def _send_amf_request(self,req,key):
"
12487,"def _get_player_params(self,retries = 5):
"
12488,"def _parse_result(self,res):
"
12489,"def _get_streams(self):
"
12490,"def can_handle_url(self,url):
"
12491,"def _get_streams(self):
"
12492,"def can_handle_url(self,url):
"
12493,"def __init__(self,session):
"
12494,"def __repr__(self):
"
12495,"def __json__(self):
"
12496,"def open(self):
"
12497,"def json(self):
"
12498,"def __init__(self,butt_disturbance_amplitude = 0.02,only_steer = False,max_time = 1000.0):
"
12499,"def indim(self):
"
12500,"def outdim(self):
"
12501,"def reset(self):
"
12502,"def performAction(self,action):
"
12503,"def getReward(self):
"
12504,"def __init__(self,* args,** kwargs):
"
12505,"def outdim(self):
"
12506,"def getBinIndices(self,linear_index):
"
12507,"def outdim(self):
"
12508,"def getPhi(self,theta,thetad,omega,omegad,omegadd):
"
12509,"def outdim(self):
"
12510,"def getReward(self):
"
12511,"def getReward(self):
"
12512,"def getReward(self):
"
12513,"def getReward(self):
"
12514,"def getReward(self):
"
12515,"def getReward(self):
"
12516,"def getReward(self):
"
12517,"def getReward(self):
"
12518,"def getReward(self):
"
12519,"def getReward(self):
"
12520,"def getReward(self):
"
12521,"def getReward(self):
"
12522,"def getReward(self):
"
12523,"def getReward(self):
"
12524,"def test_home_title(self):
"
12525,"def test_home_files(self):
"
12526,"def test_home_heading(self):
"
12527,"def test_features(self):
"
12528,"def __init__(self):
"
12529,"def is_anonymous(self):
"
12530,"def setUp(self):
"
12531,"def test_incrementing_counter_works(self):
"
12532,"def test_incrementing_counter_works_for_none(self):
"
12533,"def test_get_roles_for_None_raises(self):
"
12534,"def test_rulez_invalidate_works(self):
"
12535,"def test_get_empty_roles_works(self):
"
12536,"def test_user_with_role_works(self):
"
12537,"def test_get_roles_cache_works(self):
"
12538,"def test_has_role_works(self):
"
12539,"def test_has_role_caches_on_instance(self):
"
12540,"def test_doesnt_have_role_works(self):
"
12541,"def test_get_anonymous_user_works(self):
"
12542,"def test_get_roles_works_for_anonymous(self):
"
12543,"def test_get_counter_does_not_return_spaces(self):
"
12544,"def test_roles_for_users_on_users_raises_without_relevant_roles(self):
"
12545,"def test_roles_for_users_on_users_works_with_relevant_roles(self):
"
12546,"def test_no_api_key(self):
"
12547,"def test_oauth_not_supported(self):
"
12548,"def __init__(self,parent,** kwargs):
"
12549,"def _init_components(self):
"
12550,"def _do_layout(self):
"
12551,"def button(self,label = None,style = None,event_id = - 1):
"
12552,"def dispatch_click(self,event):
"
12553,"def hide_all_buttons(self):
"
12554,"def _load_image(self,img_path,height = 70):
"
12555,"def start(self,name):
"
12556,"def run(self):
"
12557,"def __init__(self,queue,num_threads = 2):
"
12558,"def do_work(self,item):
"
12559,"def worker(self):
"
12560,"def process_all(self):
"
12561,"def __init__(self):
"
12562,"def __iter__(self):
"
12563,"def add(self):
"
12564,"def make(self):
"
12565,"def __init__(self):
"
12566,"def __str__(self):
"
12567,"def _populate_fields(self):
"
12568,"def __init__(self):
"
12569,"def __setitem__(self,piece_name,num_pieces):
"
12570,"def __getitem__(self,piece):
"
12571,"def move(self,piece,player,old_position,new_position):
"
12572,"def __init__(self,code,name,description,assembly):
"
12573,"def call(self):
"
12574,"def read_external(self,code =[]):
"
12575,"def fmap(self,* args):
"
12576,"def fmap(self,* args):
"
12577,"def amap(self,* args):
"
12578,"def bind(self,* args):
"
12579,"def fmap(self,* args):
"
12580,"def amap(self,* args):
"
12581,"def __init__(self,name):
"
12582,"def __str__(self):
"
12583,"def __init__(self,** kwargs):
"
12584,"def get_kwargs(self):
"
12585,"def clone(self):
"
12586,"def check_compatibility(self,other):
"
12587,"def get_colordef(self):
"
12588,"def get_color_id(self):
"
12589,"def is_uncolored(self):
"
12590,"def __init__(self,** kwargs):
"
12591,"def get_kwargs(self):
"
12592,"def get_value(self):
"
12593,"def get_satoshi(self):
"
12594,"def __add__(self,other):
"
12595,"def __neg__(self):
"
12596,"def __radd__(self,other):
"
12597,"def __sub__(self,other):
"
12598,"def __iadd__(self,other):
"
12599,"def __eq__(self,other):
"
12600,"def __lt__(self,other):
"
12601,"def __gt__(self,other):
"
12602,"def __init__(self,** kwargs):
"
12603,"def get_kwargs(self):
"
12604,"def get_label(self):
"
12605,"def __repr__(self):
"
12606,"def __init__(self,** kwargs):
"
12607,"def init_new_wallet(self):
"
12608,"def increment_max_index_for_color_set(self,color_set):
"
12609,"def get_new_address(self,asset_or_color_set):
"
12610,"def get_genesis_address(self,genesis_index):
"
12611,"def get_new_genesis_address(self):
"
12612,"def update_genesis_address(self,address,color_set):
"
12613,"def get_some_address(self,color_set):
"
12614,"def get_change_address(self,color_set):
"
12615,"def get_all_addresses(self):
"
12616,"def find_address_record(self,address):
"
12617,"def get_addresses_for_color_set(self,color_set):
"
12618,"def update_config(self):
"
12619,"def setUp(self):
"
12620,"def test_basic(self):
"
12621,"def add_coins(self):
"
12622,"def test_operational(self):
"
12623,"def test_composed(self):
"
12624,"def test_other(self):
"
12625,"def __init__(self,* args):
"
12626,"def loadTestsFromModule(self,module,use_load_tests = True):
"
12627,"def __init__(self,filters):
"
12628,"def ShouldTestRun(self,test):
"
12629,"def run(self,suite):
"
12630,"def __init__(self):
"
12631,"def AddDirectory(self,dir_path,test_file_pattern = ""*test.py""):
"
12632,"def Main(self,argv = None):
"
12633,"def __call__(self,request,* args,** kwargs):
"
12634,"def get_object(self,request,space_url):
"
12635,"def title(self,obj):
"
12636,"def link(self,obj):
"
12637,"def description(self,obj):
"
12638,"def items(self,obj):
"
12639,"def item_title(self,item):
"
12640,"def item_description(self,item):
"
12641,"def setUp(self):
"
12642,"def test_parse(self):
"
12643,"def __init__(self):
"
12644,"def _connect_signals(self):
"
12645,"def _distribute_vesicle(self,vesicle,recipients = None):
"
12646,"def _find_source(self,obj):
"
12647,"def _log_errors(self,msg,errors,level = ""error""):
"
12648,"def object_insert(self,author,recipient,object_type,obj,session):
"
12649,"def object_update(self,author,recipient,object_type,obj,session):
"
12650,"def object_delete(self,author,recipient,object_type,obj,session):
"
12651,"def on_new_contact(self,sender,message):
"
12652,"def on_local_model_change(self,sender,message):
"
12653,"def request_object(self,object_type,object_id,author,recipient,session):
"
12654,"def shutdown(self):
"
12655,"def override(self,timeseries,timestep,override_val):
"
12656,"def __init__(self,auto_register = True,init_args = None,init_kwargs = None,paths = None,channel = channel):
"
12657,"def load(self,name):
"
12658,"def __init__(self,file = None,logger = None,** kwargs):
"
12659,"def log_response(self,response_event,value):
"
12660,"def log(self,response):
"
12661,"def started(self,* args):
"
12662,"def started(self,* args):
"
12663,"def init(self,args,opts):
"
12664,"def connect(self,sock,host,port):
"
12665,"def disconnect(self,sock):
"
12666,"def ready(self,server,bind):
"
12667,"def hello(self):
"
12668,"def foo(self,a,b,c):
"
12669,"def init(self):
"
12670,"def registered(self,component,manager):
"
12671,"def generate_events(self,event):
"
12672,"def done(self):
"
12673,"def hello(self):
"
12674,"def ready(self):
"
12675,"def foo(self):
"
12676,"def ready(self,* args):
"
12677,"def disconnect(self,component):
"
12678,"def remote_value_changed(self,value):
"
12679,"def index(self):
"
12680,"def foo(self):
"
12681,"def empty(self):
"
12682,"def index(self,* args,** kwargs):
"
12683,"def message(self,* args,** opts):
"
12684,"def execute(self,arbiter,props):
"
12685,"def console_msg(self,msg):
"
12686,"def test_decr_proc(self):
"
12687,"def test_decr_proc_singleton(self):
"
12688,"def setUp(self):
"
12689,"def tearDown(self):
"
12690,"def _start_arbiter(self):
"
12691,"def restart_arbiter(self):
"
12692,"def call(self,_cmd,** props):
"
12693,"def test_file_stream(self):
"
12694,"def test_watched_file_stream(self):
"
12695,"def test_timed_rotating_file_stream(self):
"
12696,"def test_stream(self):
"
12697,"def test_stop_and_restart(self):
"
12698,"def color_start(self,code):
"
12699,"def color_end(self):
"
12700,"def get_stream(self,* args,** kw):
"
12701,"def get_output(self,stream):
"
12702,"def test_random_colored_output(self):
"
12703,"def test_red_colored_output(self):
"
12704,"def test_time_formatting(self):
"
12705,"def test_data_split_into_lines(self):
"
12706,"def test_data_with_extra_lines(self):
"
12707,"def test_color_selections(self):
"
12708,"def get_stream(self,* args,** kw):
"
12709,"def get_output(self,stream):
"
12710,"def test_time_formatting(self):
"
12711,"def test_data_split_into_lines(self):
"
12712,"def test_data_with_extra_lines(self):
"
12713,"def test_data_with_no_EOL(self):
"
12714,"def get_real_stream(self,* args,** kw):
"
12715,"def test_move_file(self):
"
12716,"def __init__(self,username,password):
"
12717,"def upload(self,path):
"
12718,"def __get(self,uri):
"
12719,"def test(self):
"
12720,"def __init__(self,id,start,stop,orientation):
"
12721,"def __init__(self,seq_id,begin,end,strand):
"
12722,"def __init__(self,db,id,reversePath = None):
"
12723,"def __getitem__(self,k):
"
12724,"def absolute_slice(self,start,stop):
"
12725,"def __len__(self):
"
12726,"def __neg__(self):
"
12727,"def _get_anno_id(self,start):
"
12728,"def iter_frames(self):
"
12729,"def __repr__(self):
"
12730,"def __init__(self,seqDB,** kwargs):
"
12731,"def __init__(self,seqDB):
"
12732,"def __getitem__(self,k):
"
12733,"def __len__(self):
"
12734,"def __iter__(self):
"
12735,"def keys(self):
"
12736,"def serve_forever(self):
"
12737,"def exit_now(self):
"
12738,"def get_revision_list(self):
"
12739,"def checkout(self,sha):
"
12740,"def has_add_permission(self,request):
"
12741,"def update_hybrid_view(self,request):
"
12742,"def update_wurfl_view(self,request):
"
12743,"def render(self,name,value,attrs = None):
"
12744,"def __init__(self,* args,** kwargs):
"
12745,"def clean(self,value):
"
12746,"def test_signup_form(self):
"
12747,"def test_signin_form_email(self):
"
12748,"def test_signup_form_only_email(self):
"
12749,"def test_change_email_form(self):
"
12750,"def test_form_init(self):
"
12751,"def __init__(self,callable,* args,** kwargs):
"
12752,"def __call__(self):
"
12753,"def _get_kwargs(self):
"
12754,"def _set_kwargs(self,kwargs):
"
12755,"def __init__(self,dispatch_method_name = None,translate = punctuation_to_underscores):
"
12756,"def __call__(self,path_info):
"
12757,"def __call__(self,path_info):
"
12758,"def __init__(self,full_result = False):
"
12759,"def connect(self,name,route,controller,** kwargs):
"
12760,"def redirect(self,url):
"
12761,"def __call__(self,path_info):
"
12762,"def find_handler(self,path_info):
"
12763,"def __init__(self,bus):
"
12764,"def start(self):
"
12765,"def stop(self):
"
12766,"def handle(self,event):
"
12767,"def __init__(self):
"
12768,"def _get_state_event(self,state):
"
12769,"def _get_state(self):
"
12770,"def _set_state(self,value):
"
12771,"def wait(self,state,interval = 0.1,channel = None):
"
12772,"def key_for(self,obj):
"
12773,"def SvcDoRun(self):
"
12774,"def SvcStop(self):
"
12775,"def SvcOther(self,control):
"
12776,"def authorized(self):
"
12777,"def __init__(self):
"
12778,"def merge_options(self,initial_options,options):
"
12779,"def setup_logging(self):
"
12780,"def main(self,args,initial_options):
"
12781,"def __init__(self,request_callback,no_keep_alive = False,io_loop = None,xheaders = False,ssl_options = None,protocol = None,** kwargs):
"
12782,"def handle_stream(self,stream,address):
"
12783,"def _clear_request_state(self):
"
12784,"def set_close_callback(self,callback):
"
12785,"def _on_connection_close(self):
"
12786,"def close(self):
"
12787,"def write(self,chunk,callback = None):
"
12788,"def finish(self):
"
12789,"def _on_write_complete(self):
"
12790,"def _on_request_body(self,data):
"
12791,"def __init__(self,method,uri,version = ""HTTP/1.0"",headers = None,body = None,remote_ip = None,protocol = None,host = None,files = None,connection = None):
"
12792,"def supports_http_1_1(self):
"
12793,"def cookies(self):
"
12794,"def write(self,chunk,callback = None):
"
12795,"def finish(self):
"
12796,"def full_url(self):
"
12797,"def request_time(self):
"
12798,"def get_ssl_certificate(self,binary_form = False):
"
12799,"def __repr__(self):
"
12800,"def get_app(self):
"
12801,"def tearDown(self):
"
12802,"def test_multi_process(self):
"
12803,"def test_sigchild(self):
"
12804,"def test_sigchild_signal(self):
"
12805,"def setUp(self):
"
12806,"def tearDown(self):
"
12807,"def test_perform_get(self):
"
12808,"def skip_perform_get_with_default_write_function(self):
"
12809,"def setUp(self):
"
12810,"def tearDown(self):
"
12811,"def write_cb_returning_string(self,data):
"
12812,"def write_cb_returning_float(self,data):
"
12813,"def test_write_cb_returning_string(self):
"
12814,"def test_write_cb_returning_float(self):
"
12815,"def check(self,write_cb):
"
12816,"def test_custom_delimiter(self):
"
12817,"def __init__(self,query = None,configuration = None,hadoop_user = None,):
"
12818,"def write(self,oprot):
"
12819,"def validate(self):
"
12820,"def __hash__(self):
"
12821,"def __eq__(self,other):
"
12822,"def __ne__(self,other):
"
12823,"def __init__(self,id = None,log_context = None,):
"
12824,"def write(self,oprot):
"
12825,"def validate(self):
"
12826,"def __hash__(self):
"
12827,"def __eq__(self,other):
"
12828,"def __ne__(self,other):
"
12829,"def __init__(self,textual = None,):
"
12830,"def write(self,oprot):
"
12831,"def validate(self):
"
12832,"def __hash__(self):
"
12833,"def __eq__(self,other):
"
12834,"def __ne__(self,other):
"
12835,"def __init__(self,ready = None,columns = None,data = None,start_row = None,has_more = None,):
"
12836,"def write(self,oprot):
"
12837,"def validate(self):
"
12838,"def __hash__(self):
"
12839,"def __eq__(self,other):
"
12840,"def __ne__(self,other):
"
12841,"def __init__(self,schema = None,table_dir = None,in_tablename = None,delim = None,):
"
12842,"def write(self,oprot):
"
12843,"def validate(self):
"
12844,"def __hash__(self):
"
12845,"def __eq__(self,other):
"
12846,"def __ne__(self,other):
"
12847,"def __init__(self,message = None,log_context = None,handle = None,errorCode = thrift_spec[4][4],SQLState = thrift_spec[5][4],):
"
12848,"def write(self,oprot):
"
12849,"def validate(self):
"
12850,"def __str__(self):
"
12851,"def __hash__(self):
"
12852,"def __eq__(self,other):
"
12853,"def __ne__(self,other):
"
12854,"def write(self,oprot):
"
12855,"def validate(self):
"
12856,"def __str__(self):
"
12857,"def __hash__(self):
"
12858,"def __eq__(self,other):
"
12859,"def __ne__(self,other):
"
12860,"def __init__(self,key = None,value = None,description = None,):
"
12861,"def write(self,oprot):
"
12862,"def validate(self):
"
12863,"def __hash__(self):
"
12864,"def __eq__(self,other):
"
12865,"def __ne__(self,other):
"
12866,"def forwards(self,orm):
"
12867,"def backwards(self,orm):
"
12868,"def __init__(self,* args,** kwargs):
"
12869,"def clean_username(self):
"
12870,"def clean_password(self):
"
12871,"def clean_password2(self):
"
12872,"def clean_password1(self):
"
12873,"def clean_password_old(self):
"
12874,"def save(self,commit = True):
"
12875,"def __init__(self,* args,** kwargs):
"
12876,"def __init__(self,* args,** kwargs):
"
12877,"def __init__(self,* args,** kwargs):
"
12878,"def __init__(self,* args,** kwargs):
"
12879,"def clean_name(self):
"
12880,"def __init__(self,* args,** kwargs):
"
12881,"def _compute_diff(self,field_name):
"
12882,"def save(self):
"
12883,"def _save_members(self):
"
12884,"def _save_permissions(self):
"
12885,"def __init__(self,* args,** kwargs):
"
12886,"def _compute_diff(self,field_name):
"
12887,"def save(self):
"
12888,"def _save_permissions(self):
"
12889,"def __init__(self,* args,** kwargs):
"
12890,"def setUp(self):
"
12891,"def tearDown(self):
"
12892,"def test_no_directory_or_output_file_specified(self):
"
12893,"def test_no_directory_or_input_file_specified(self):
"
12894,"def setUp(self):
"
12895,"def tearDown(self):
"
12896,"def test_neither_default_nor_custom_keywords(self):
"
12897,"def test_no_output_file_specified(self):
"
12898,"def test_both_sort_output_and_sort_by_file(self):
"
12899,"def setUp(self):
"
12900,"def tearDown(self):
"
12901,"def test_no_input_file(self):
"
12902,"def test_no_locale(self):
"
12903,"def setUp(self):
"
12904,"def tearDown(self):
"
12905,"def _run_init_catalog(self):
"
12906,"def test_no_duplicated_output_for_multiple_runs(self):
"
12907,"def test_frontend_can_log_to_predefined_handler(self):
"
12908,"def test_compile_catalog(self):
"
12909,"def test_compile_fuzzy_catalog(self):
"
12910,"def test_compile_catalog_with_more_than_2_plural_forms(self):
"
12911,"def __init__(self,ctype = None,object_pk_expr = None,object_expr = None,as_varname = None,comment = None):
"
12912,"def render(self,context):
"
12913,"def get_queryset(self,context):
"
12914,"def get_target_ctype_pk(self,context):
"
12915,"def get_context_value_from_queryset(self,context,qs):
"
12916,"def get_context_value_from_queryset(self,context,qs):
"
12917,"def get_context_value_from_queryset(self,context,qs):
"
12918,"def get_form(self,context):
"
12919,"def get_object(self,context):
"
12920,"def render(self,context):
"
12921,"def __init__(self,** kwargs):
"
12922,"def to_python(self,value):
"
12923,"def clean(self,value):
"
12924,"def _has_changed(self,initial,data):
"
12925,"def test_ensure_geographic_media(self):
"
12926,"def test_olmap_OSM_rendering(self):
"
12927,"def test_olmap_WMS_rendering(self):
"
12928,"def test_olwidget_has_changed(self):
"
12929,"def test_google_map_scripts(self):
"
12930,"def form_valid(self,form):
"
12931,"def get_success_message(self,cleaned_data):
"
12932,"def handle_noargs(self,** options):
"
12933,"def __init__(self,func,args,kwargs,url_name = None,app_name = None,namespaces = None):
"
12934,"def namespace(self):
"
12935,"def view_name(self):
"
12936,"def __getitem__(self,index):
"
12937,"def __repr__(self):
"
12938,"def __init__(self,regex):
"
12939,"def regex(self):
"
12940,"def __init__(self,regex,callback,default_args = None,name = None):
"
12941,"def __repr__(self):
"
12942,"def add_prefix(self,prefix):
"
12943,"def resolve(self,path):
"
12944,"def callback(self):
"
12945,"def __init__(self,regex,urlconf_name,default_kwargs = None,app_name = None,namespace = None):
"
12946,"def __repr__(self):
"
12947,"def _populate(self):
"
12948,"def reverse_dict(self):
"
12949,"def namespace_dict(self):
"
12950,"def app_dict(self):
"
12951,"def resolve(self,path):
"
12952,"def urlconf_module(self):
"
12953,"def url_patterns(self):
"
12954,"def _resolve_special(self,view_type):
"
12955,"def resolve400(self):
"
12956,"def resolve403(self):
"
12957,"def resolve404(self):
"
12958,"def resolve500(self):
"
12959,"def reverse(self,lookup_view,* args,** kwargs):
"
12960,"def _reverse_with_prefix(self,lookup_view,_prefix,* args,** kwargs):
"
12961,"def __init__(self,urlconf_name,default_kwargs = None,app_name = None,namespace = None):
"
12962,"def regex(self):
"
12963,"def __init__(self,children = None,connector = None,negated = False):
"
12964,"def _combine(self,other,connector,reversed,node = None):
"
12965,"def contains_aggregate(self,existing_aggregates):
"
12966,"def prepare_database_save(self,unused):
"
12967,"def prepare(self,evaluator,query,allow_joins):
"
12968,"def evaluate(self,evaluator,qn,connection):
"
12969,"def __add__(self,other):
"
12970,"def __sub__(self,other):
"
12971,"def __mul__(self,other):
"
12972,"def __truediv__(self,other):
"
12973,"def __div__(self,other):
"
12974,"def __mod__(self,other):
"
12975,"def bitand(self,other):
"
12976,"def bitor(self,other):
"
12977,"def __radd__(self,other):
"
12978,"def __rsub__(self,other):
"
12979,"def __rmul__(self,other):
"
12980,"def __rtruediv__(self,other):
"
12981,"def __rdiv__(self,other):
"
12982,"def __rmod__(self,other):
"
12983,"def __init__(self,name):
"
12984,"def __deepcopy__(self,memodict):
"
12985,"def prepare(self,evaluator,query,allow_joins):
"
12986,"def evaluate(self,evaluator,qn,connection):
"
12987,"def __init__(self,children,connector,negated = False):
"
12988,"def evaluate(self,evaluator,qn,connection):
"
12989,"def __init__(self,options = None):
"
12990,"def __init__(self,data = None,files = None,auto_id = 'id_%s',prefix = None,initial = None,error_class = ErrorList,label_suffix = None,empty_permitted = False,instance = None):
"
12991,"def _update_errors(self,errors):
"
12992,"def _get_validation_exclusions(self):
"
12993,"def clean(self):
"
12994,"def _post_clean(self):
"
12995,"def validate_unique(self):
"
12996,"def save(self,commit = True):
"
12997,"def __init__(self,data = None,files = None,auto_id = 'id_%s',prefix = None,queryset = None,** kwargs):
"
12998,"def initial_form_count(self):
"
12999,"def _existing_object(self,pk):
"
13000,"def _construct_form(self,i,** kwargs):
"
13001,"def get_queryset(self):
"
13002,"def save_new(self,form,commit = True):
"
13003,"def save_existing(self,form,instance,commit = True):
"
13004,"def save(self,commit = True):
"
13005,"def clean(self):
"
13006,"def validate_unique(self):
"
13007,"def get_unique_error_message(self,unique_check):
"
13008,"def get_date_error_message(self,date_check):
"
13009,"def get_form_error(self):
"
13010,"def save_existing_objects(self,commit = True):
"
13011,"def save_new_objects(self,commit = True):
"
13012,"def add_fields(self,form,index):
"
13013,"def __init__(self,data = None,files = None,instance = None,save_as_new = False,prefix = None,queryset = None,** kwargs):
"
13014,"def initial_form_count(self):
"
13015,"def _construct_form(self,i,** kwargs):
"
13016,"def save_new(self,form,commit = True):
"
13017,"def add_fields(self,form,index):
"
13018,"def get_unique_error_message(self,unique_check):
"
13019,"def __init__(self,parent_instance,* args,** kwargs):
"
13020,"def clean(self,value):
"
13021,"def _has_changed(self,initial,data):
"
13022,"def __init__(self,field):
"
13023,"def __iter__(self):
"
13024,"def __len__(self):
"
13025,"def choice(self,obj):
"
13026,"def __init__(self,queryset,empty_label = ""---------"",cache_choices = False,required = True,widget = None,label = None,initial = None,help_text = '',to_field_name = None,* args,** kwargs):
"
13027,"def __deepcopy__(self,memo):
"
13028,"def _get_queryset(self):
"
13029,"def _set_queryset(self,queryset):
"
13030,"def label_from_instance(self,obj):
"
13031,"def _get_choices(self):
"
13032,"def prepare_value(self,value):
"
13033,"def to_python(self,value):
"
13034,"def validate(self,value):
"
13035,"def _has_changed(self,initial,data):
"
13036,"def __init__(self,queryset,cache_choices = False,required = True,widget = None,label = None,initial = None,help_text = '',* args,** kwargs):
"
13037,"def to_python(self,value):
"
13038,"def clean(self,value):
"
13039,"def _check_values(self,value):
"
13040,"def prepare_value(self,value):
"
13041,"def _has_changed(self,initial,data):
"
13042,"def load_template_source(self,template_name,template_dirs = None):
"
13043,"def assertObjectAttrs(self,obj,** kwargs):
"
13044,"def test_aggregates_in_where_clause(self):
"
13045,"def test_aggregates_in_where_clause_pre_eval(self):
"
13046,"def test_annotate_with_extra(self):
"
13047,"def test_aggregate(self):
"
13048,"def test_annotation(self):
"
13049,"def test_aggrate_annotation(self):
"
13050,"def test_field_error(self):
"
13051,"def test_more(self):
"
13052,"def test_aggregate_fexpr(self):
"
13053,"def test_db_col_table(self):
"
13054,"def test_boolean_conversion(self):
"
13055,"def test_empty(self):
"
13056,"def test_more_more(self):
"
13057,"def test_duplicate_alias(self):
"
13058,"def test_field_name_conflict(self):
"
13059,"def test_m2m_name_conflict(self):
"
13060,"def test_values_queryset_non_conflict(self):
"
13061,"def test_reverse_relation_name_conflict(self):
"
13062,"def test_pickle(self):
"
13063,"def test_empty_filter_count(self):
"
13064,"def test_empty_filter_aggregate(self):
"
13065,"def test_none_call_before_aggregate(self):
"
13066,"def test_annotate_and_join(self):
"
13067,"def test_values_annotate_values(self):
"
13068,"def test_having_group_by(self):
"
13069,"def test_annotation_disjunction(self):
"
13070,"def test_quoting_aggregate_order_by(self):
"
13071,"def test_stddev(self):
"
13072,"def test_filtering_by_annotation_name(self):
"
13073,"def test_type_conversion(self):
"
13074,"def test_annotate_joins(self):
"
13075,"def test_aggregate_duplicate_columns(self):
"
13076,"def test_aggregate_duplicate_columns_only(self):
"
13077,"def test_aggregate_duplicate_columns_select_related(self):
"
13078,"def test_reverse_join_trimming(self):
"
13079,"def test_aggregation_with_generic_reverse_relation(self):
"
13080,"def test_negated_aggregation(self):
"
13081,"def test_name_filters(self):
"
13082,"def test_name_expressions(self):
"
13083,"def test_ticket_11293(self):
"
13084,"def test_ticket_11293_q_immutable(self):
"
13085,"def test_fobj_group_by(self):
"
13086,"def test_ticket_21150(self):
"
13087,"def test_simple_object(self):
"
13088,"def test_detail_by_pk(self):
"
13089,"def test_detail_by_custom_pk(self):
"
13090,"def test_detail_by_slug(self):
"
13091,"def test_detail_by_custom_slug(self):
"
13092,"def test_verbose_name(self):
"
13093,"def test_template_name(self):
"
13094,"def test_template_name_suffix(self):
"
13095,"def test_template_name_field(self):
"
13096,"def test_context_object_name(self):
"
13097,"def test_duplicated_context_object_name(self):
"
13098,"def test_invalid_url(self):
"
13099,"def test_invalid_queryset(self):
"
13100,"def test_non_model_object_with_meta(self):
"
13101,"def test_deletion(self):
"
13102,"def test_add_form_deletion_when_invalid(self):
"
13103,"def test_change_form_deletion_when_invalid(self):
"
13104,"def test_save_new(self):
"
13105,"def test_inline_formset_factory(self):
"
13106,"def test_exception_on_unspecified_foreign_key(self):
"
13107,"def test_fk_name_not_foreign_key_field_from_child(self):
"
13108,"def test_non_foreign_key_field(self):
"
13109,"def test_any_iterable_allowed_as_argument_to_exclude(self):
"
13110,"def test_zero_primary_key(self):
"
13111,"def __str__(self):
"
13112,"def __str__(self):
"
13113,"def __str__(self):
"
13114,"def __str__(self):
"
13115,"def __str__(self):
"
13116,"def __str__(self):
"
13117,"def __str__(self):
"
13118,"def __str__(self):
"
13119,"def __str__(self):
"
13120,"def __str__(self):
"
13121,"def __str__(self):
"
13122,"def __str__(self):
"
13123,"def __str__(self):
"
13124,"def __str__(self):
"
13125,"def __str__(self):
"
13126,"def __str__(self):
"
13127,"def __str__(self):
"
13128,"def __str__(self):
"
13129,"def setUp(self):
"
13130,"def test_m2m_forward(self):
"
13131,"def test_m2m_reverse(self):
"
13132,"def test_foreignkey_forward(self):
"
13133,"def test_foreignkey_reverse(self):
"
13134,"def test_onetoone_reverse_no_match(self):
"
13135,"def test_survives_clone(self):
"
13136,"def test_len(self):
"
13137,"def test_bool(self):
"
13138,"def test_in_and_prefetch_related(self):
"
13139,"def test_clear(self):
"
13140,"def test_m2m_then_m2m(self):
"
13141,"def test_overriding_prefetch(self):
"
13142,"def test_get(self):
"
13143,"def test_foreign_key_then_m2m(self):
"
13144,"def test_attribute_error(self):
"
13145,"def test_invalid_final_lookup(self):
"
13146,"def setUp(self):
"
13147,"def setUp(self):
"
13148,"def test_prefetch_GFK(self):
"
13149,"def test_traverse_GFK(self):
"
13150,"def test_nullable_GFK(self):
"
13151,"def test_generic_relation(self):
"
13152,"def test_charfield_GFK(self):
"
13153,"def setUp(self):
"
13154,"def test_foreignkey(self):
"
13155,"def test_foreignkey_to_inherited(self):
"
13156,"def test_m2m_to_inheriting_model(self):
"
13157,"def test_parent_link_prefetch(self):
"
13158,"def test_child_link_prefetch(self):
"
13159,"def setUp(self):
"
13160,"def test_foreignkey(self):
"
13161,"def test_m2m(self):
"
13162,"def setUp(self):
"
13163,"def setUp(self):
"
13164,"def test_traverse_nullable(self):
"
13165,"def test_prefetch_nullable(self):
"
13166,"def test_in_bulk(self):
"
13167,"def test_using_is_honored_inheritance(self):
"
13168,"def setUp(self):
"
13169,"def test_bug(self):
"
13170,"def setUp(self):
"
13171,"def test_bug(self):
"
13172,"def setUp(self):
"
13173,"def test_bug(self):
"
13174,"def test_dotted_test_module(self):
"
13175,"def test_dotted_test_class_vanilla_unittest(self):
"
13176,"def test_dotted_test_class_unittest2(self):
"
13177,"def test_dotted_test_class_django_testcase(self):
"
13178,"def test_dotted_test_method_vanilla_unittest(self):
"
13179,"def test_dotted_test_method_unittest2(self):
"
13180,"def test_dotted_test_method_django_testcase(self):
"
13181,"def test_pattern(self):
"
13182,"def test_file_path(self):
"
13183,"def __init__(self,extra_vars_func = None,options = None,extension = 'mak'):
"
13184,"def load_template(self,templatename,template_string = None):
"
13185,"def render(self,info,format = ""html"",fragment = False,template = None):
"
13186,"def test__FOR_LOOP(self):
"
13187,"def test_out_of_context_access(self):
"
13188,"def setUp(self):
"
13189,"def test__pop(self):
"
13190,"def test__push(self):
"
13191,"def test_exit(self):
"
13192,"def setUp(self):
"
13193,"def test_first(self):
"
13194,"def test_last(self):
"
13195,"def test_even(self):
"
13196,"def test_odd(self):
"
13197,"def test_cycle(self):
"
13198,"def test_loop_disabled_template(self):
"
13199,"def test_loop_disabled_override_template(self):
"
13200,"def test_loop_enabled_override_template(self):
"
13201,"def __init__(self,address,allowed_request_methods =(),suppress_http_headers =()):
"
13202,"def __call__(self,environ,start_response):
"
13203,"def __init__(self,force_host = None,force_scheme = 'http'):
"
13204,"def __repr__(self):
"
13205,"def __call__(self,environ,start_response):
"
13206,"def suggest_name(self):
"
13207,"def split_model_def(self,model,model_def):
"
13208,"def current_model_from_key(self,key):
"
13209,"def current_field_from_key(self,key,fieldname):
"
13210,"def __init__(self,migrations,old_defs,old_orm,new_defs):
"
13211,"def suggest_name(self):
"
13212,"def get_changes(self):
"
13213,"def __init__(self,migrations,added_models,added_fields,added_indexes):
"
13214,"def suggest_name(self):
"
13215,"def get_changes(self):
"
13216,"def suggest_name(self):
"
13217,"def __init__(self,migrations):
"
13218,"def get_changes(self):
"
13219,"def handle(self,check_app_name = None,** options):
"
13220,"def forwards(self):
"
13221,"def backwards(self):
"
13222,"def __init__(self,* args):
"
13223,"def _get_own_repr(self):
"
13224,"def _addr_repr(self,address):
"
13225,"def __repr__(self,c_name = None):
"
13226,"def _convert_to_address(self,BClass):
"
13227,"def _get_size_of_instance(self):
"
13228,"def _cast_to_integer(self):
"
13229,"def __iter__(self):
"
13230,"def __hash__(self):
"
13231,"def _to_string(self,maxlen):
"
13232,"def __eq__(self,other):
"
13233,"def __ne__(self,other):
"
13234,"def __hash__(self):
"
13235,"def _get_own_repr(self):
"
13236,"def _get_own_repr(self):
"
13237,"def _get_own_repr(self):
"
13238,"def _cast_to_integer(self):
"
13239,"def __nonzero__(self):
"
13240,"def __bool__(self):
"
13241,"def _convert_to_address(self,BClass):
"
13242,"def _get_own_repr(self):
"
13243,"def _convert_to_address(self,BClass):
"
13244,"def __repr__(self,c_name = None):
"
13245,"def __init__(self):
"
13246,"def set_ffi(self,ffi):
"
13247,"def _get_types(self):
"
13248,"def load_library(self,path,flags = 0):
"
13249,"def new_void_type(self):
"
13250,"def new_primitive_type(self,name):
"
13251,"def _new_struct_or_union(self,kind,name,base_ctypes_class):
"
13252,"def new_struct_type(self,name):
"
13253,"def new_union_type(self,name):
"
13254,"def new_enum_type(self,name,enumerators,enumvalues,CTypesInt):
"
13255,"def get_errno(self):
"
13256,"def set_errno(self,value):
"
13257,"def string(self,b,maxlen = - 1):
"
13258,"def buffer(self,bptr,size = - 1):
"
13259,"def sizeof(self,cdata_or_BType):
"
13260,"def alignof(self,BType):
"
13261,"def newp(self,BType,source):
"
13262,"def cast(self,BType,source):
"
13263,"def callback(self,BType,source,error,onerror):
"
13264,"def getcname(self,BType,replace_with):
"
13265,"def typeoffsetof(self,BType,fieldname,num = 0):
"
13266,"def rawaddressof(self,BTypePtr,cdata,offset = None):
"
13267,"def __init__(self,backend,cdll):
"
13268,"def load_function(self,BType,name):
"
13269,"def read_variable(self,BType,name):
"
13270,"def write_variable(self,BType,name,value):
"
13271,"def __init__(self,password):
"
13272,"def testBindDecimal(self):
"
13273,"def testBindFloat(self):
"
13274,"def testBindInteger(self):
"
13275,"def testBindLargeLong(self):
"
13276,"def testBindIntegerAfterString(self):
"
13277,"def testBindNull(self):
"
13278,"def testBindNumberArrayDirect(self):
"
13279,"def testBindNumberArrayBySizes(self):
"
13280,"def testBindNumberArrayByVar(self):
"
13281,"def testBindZeroLengthNumberArrayByVar(self):
"
13282,"def testBindInOutNumberArrayByVar(self):
"
13283,"def testBindOutNumberArrayByVar(self):
"
13284,"def testBindOutSetInputSizes(self):
"
13285,"def testBindInOutSetInputSizes(self):
"
13286,"def testBindOutVar(self):
"
13287,"def testBindInOutVarDirectSet(self):
"
13288,"def testCursorDescription(self):
"
13289,"def testFetchAll(self):
"
13290,"def testFetchMany(self):
"
13291,"def testFetchOne(self):
"
13292,"def testReturnAsLong(self):
"
13293,"def testReturnAsFloat(self):
"
13294,"def execute(self,* args,** options):
"
13295,"def __init__(self,language,nodelist,name = ''):
"
13296,"def render(self,context):
"
13297,"def __init__(self,html = 0):
"
13298,"def feed(self,data):
"
13299,"def close(self):
"
13300,"def finish_starttag(self,tag,attrib):
"
13301,"def finish_endtag(self,tag):
"
13302,"def handle_data(self,data):
"
13303,"def setUp(self):
"
13304,"def test_hiding_tag(self):
"
13305,"def test_inheritance_from_heapview(self):
"
13306,"def test_inheritance_from_special_types(self):
"
13307,"def test_nodeset_circularity(self):
"
13308,"def test_registered_hiding(self):
"
13309,"def test_unregistered_hiding(self):
"
13310,"def test_1(self):
"
13311,"def test_weaky(self):
"
13312,"def test_constructor_and_methods(self):
"
13313,"def test_inheritance(self):
"
13314,"def test_inrel(self):
"
13315,"def acl_version(self):
"
13316,"def children_version(self):
"
13317,"def created(self):
"
13318,"def last_modified(self):
"
13319,"def owner_session_id(self):
"
13320,"def creation_transaction_id(self):
"
13321,"def last_modified_transaction_id(self):
"
13322,"def data_length(self):
"
13323,"def children_count(self):
"
13324,"def _pass(self):
"
13325,"def _fail(self,times = 1):
"
13326,"def _makeOne(self,* args,** kwargs):
"
13327,"def test_reset(self):
"
13328,"def test_too_many_tries(self):
"
13329,"def test_maximum_delay(self):
"
13330,"def test_copy(self):
"
13331,"def _makeOne(self,** kw):
"
13332,"def test_connection_closed(self):
"
13333,"def test_session_expired(self):
"
13334,"def test_schematron(self):
"
13335,"def test_schematron_elementtree_error(self):
"
13336,"def test_schematron_invalid_schema(self):
"
13337,"def test_schematron_invalid_schema_empty(self):
"
13338,"def test_schematron_invalid_schema_namespace(self):
"
13339,"def http_request(self,request):
"
13340,"def __init__(self,ssl_context,debug = False,proxies = None,no_proxy = None,cookie = None,http_basicauth = None,headers = None):
"
13341,"def __init__(self,title):
"
13342,"def __init__(self,worksheet = None,min_col = None,min_row = None,max_col = None,max_row = None,range_string = None):
"
13343,"def __repr__(self):
"
13344,"def __str__(self):
"
13345,"def __len__(self):
"
13346,"def rows(self):
"
13347,"def cols(self):
"
13348,"def cells(self):
"
13349,"def pop(self):
"
13350,"def sheetname(self):
"
13351,"def __init__(self,horizontal = None,vertical = None,textRotation = 0,wrapText = None,shrinkToFit = None,indent = 0,relativeIndent = 0,justifyLastLine = None,readingOrder = 0,text_rotation = None,wrap_text = None,shrink_to_fit = None,mergeCell = None):
"
13352,"def __iter__(self):
"
13353,"def __init__(self,type):
"
13354,"def has(self):
"
13355,"def get(self):
"
13356,"def set(self,text):
"
13357,"def __init__(self):
"
13358,"def hasHeader(self):
"
13359,"def hasFooter(self):
"
13360,"def getHeader(self):
"
13361,"def getFooter(self):
"
13362,"def setHeader(self,item):
"
13363,"def setFooter(self,item):
"
13364,"def __init__(self,tagClass,tagFormat,tagId):
"
13365,"def __str__(self):
"
13366,"def __repr__(self):
"
13367,"def __str__(self):
"
13368,"def __repr__(self):
"
13369,"def __add__(self,superTag):
"
13370,"def __radd__(self,superTag):
"
13371,"def tagImplicitly(self,superTag):
"
13372,"def __init__(self,funcname):
"
13373,"def visit_FuncCall(self,node):
"
13374,"def __init__(self,key,* args,** kwargs):
"
13375,"def size(self):
"
13376,"def __init__(self,hashmod,description,expected):
"
13377,"def shortDescription(self):
"
13378,"def runTest(self):
"
13379,"def __init__(self,hashmod,description,expected,input):
"
13380,"def shortDescription(self):
"
13381,"def runTest(self):
"
13382,"def __init__(self,hashmod,oid):
"
13383,"def runTest(self):
"
13384,"def __init__(self,hashmod,description,expected_dict,input,key,hashmods):
"
13385,"def shortDescription(self):
"
13386,"def runTest(self):
"
13387,"def runTest(self):
"
13388,"def __init__(self,publisher_id = None,creation_instant = None,serial_number = None,text = None,extension_elements = None,extension_attributes = None,):
"
13389,"def __init__(self,registration_authority = None,registration_instant = None,registration_policy = None,text = None,extension_elements = None,extension_attributes = None,):
"
13390,"def __init__(self,publisher = None,text = None,extension_elements = None,extension_attributes = None,):
"
13391,"def __init__(self,creation_instant = None,serial_number = None,usage_policy = None,publishers = None,text = None,extension_elements = None,extension_attributes = None,):
"
13392,"def __init__(self,issuer = None,idp_list = None,must_understand = None,actor = None,provider_name = None,is_passive = None,text = None,extension_elements = None,extension_attributes = None,):
"
13393,"def __init__(self,must_understand = None,actor = None,assertion_consumer_service_url = None,text = None,extension_elements = None,extension_attributes = None,):
"
13394,"def __init__(self,must_understand = None,actor = None,text = None,extension_elements = None,extension_attributes = None,):
"
13395,"def __init__(self):
"
13396,"def handle_starttag(self,tag,method,attrs):
"
13397,"def handle_endtag(self,tag,method):
"
13398,"def startElementNS(self,tag,qname,attrs):
"
13399,"def endElementNS(self,tag,qname):
"
13400,"def unknown_starttag(self,tag,attrs):
"
13401,"def unknown_endtag(self,tag):
"
13402,"def donothing(self,tag,attrs = None):
"
13403,"def s_file_entry(self,tag,attrs):
"
13404,"def __init__(self,* args):
"
13405,"def _replace(self,** kwargs):
"
13406,"def is_date(self):
"
13407,"def __init__(self,parent_workbook,title,workbook_name,sheet_codename,xml_source):
"
13408,"def iter_rows(self,range_string = '',row_offset = 0,column_offset = 0):
"
13409,"def cell(self,* args,** kwargs):
"
13410,"def range(self,* args,** kwargs):
"
13411,"def __init__(self,queue):
"
13412,"def run(self):
"
13413,"def __init__(self,new_socket,wake_up):
"
13414,"def _read_len(self):
"
13415,"def read(self):
"
13416,"def write(self):
"
13417,"def ready(self,all_ok,message):
"
13418,"def is_writeable(self):
"
13419,"def is_readable(self):
"
13420,"def is_closed(self):
"
13421,"def fileno(self):
"
13422,"def close(self):
"
13423,"def __init__(self,processor,lsocket,inputProtocolFactory = None,outputProtocolFactory = None,threads = 10):
"
13424,"def setNumThreads(self,num):
"
13425,"def wake_up(self):
"
13426,"def stop(self):
"
13427,"def _select(self):
"
13428,"def handle(self):
"
13429,"def serve(self):
"
13430,"def __init__(self,module):
"
13431,"def _load_settings_module(self,module_name):
"
13432,"def _resolve_appdir_path(self,path):
"
13433,"def urls(self):
"
13434,"def conf(self):
"
13435,"def get_bootstrap_file(self):
"
13436,"def settings(self):
"
13437,"def locale_path(self):
"
13438,"def _submodule(self,name):
"
13439,"def __str__(self):
"
13440,"def __str__(self):
"
13441,"def response_data(self):
"
13442,"def __init__(self,msg,filename = None,error_code = 500):
"
13443,"def __init__(self,ex,* args,** kwargs):
"
13444,"def __init__(self,s3_connection):
"
13445,"def _init_bucket_cache(self):
"
13446,"def _get_bucket(self,name):
"
13447,"def _get_key(self,path,validate = True):
"
13448,"def open(self,path,mode = 'r'):
"
13449,"def read(self,path,offset,length):
"
13450,"def isfile(self,path):
"
13451,"def isdir(self,path):
"
13452,"def exists(self,path):
"
13453,"def stats(self,path):
"
13454,"def listdir_stats(self,path,glob = None):
"
13455,"def listdir(self,path,glob = None):
"
13456,"def rmtree(self,path,skipTrash = False):
"
13457,"def remove(self,path,skip_trash = False):
"
13458,"def restore(self,* args,** kwargs):
"
13459,"def mkdir(self,path,* args,** kwargs):
"
13460,"def copy(self,src,dst,recursive = False,* args,** kwargs):
"
13461,"def copyfile(self,src,dst,* args,** kwargs):
"
13462,"def copy_remote_dir(self,src,dst,* args,** kwargs):
"
13463,"def _copy(self,src,dst,recursive,use_src_basename):
"
13464,"def rename(self,old,new):
"
13465,"def rename_star(self,old_dir,new_dir):
"
13466,"def create(self,path,overwrite = False,data = None):
"
13467,"def copyFromLocal(self,local_src,remote_dst,* args,** kwargs):
"
13468,"def setuser(self,user):
"
13469,"def setUp(self):
"
13470,"def test_remove_header(self):
"
13471,"def __init__(self,user):
"
13472,"def create_index(self,name,fields,unique_key_field = 'id',df = 'text'):
"
13473,"def delete_alias(self,name):
"
13474,"def _format_flags(self,fields):
"
13475,"def test_is_solr_cloud_mode(self):
"
13476,"def test_query(self):
"
13477,"def create_session(self,lang = 'scala',properties = None):
"
13478,"def cancel(self,notebook,snippet):
"
13479,"def get_log(self,notebook,snippet,startFrom = 0,size = None):
"
13480,"def progress(self,snippet,logs):
"
13481,"def close_statement(self,snippet):
"
13482,"def get_jobs(self,notebook,snippet,logs):
"
13483,"def _get_standalone_jobs(self,logs):
"
13484,"def _get_yarn_jobs(self,logs):
"
13485,"def _is_yarn_mode(self):
"
13486,"def get_tokens_unprocessed(self,text):
"
13487,"def setUp(self):
"
13488,"def test_abs(self):
"
13489,"def test_group_concat(self):
"
13490,"def test_zeroifnull(self):
"
13491,"def test_fillna(self):
"
13492,"def test_ceil_floor(self):
"
13493,"def test_sign(self):
"
13494,"def test_round(self):
"
13495,"def _check_unary_op(self,expr,fname,ex_op,ex_type):
"
13496,"def setUp(self):
"
13497,"def test_coalesce_instance_method(self):
"
13498,"def test_integer_promotions(self):
"
13499,"def test_floats(self):
"
13500,"def test_bools(self):
"
13501,"def test_decimal_promotions(self):
"
13502,"def test_series_to_ibis_literal(self):
"
13503,"def test_dtype_bool(self):
"
13504,"def test_dtype_int8(self):
"
13505,"def test_dtype_int16(self):
"
13506,"def test_dtype_int32(self):
"
13507,"def test_dtype_int64(self):
"
13508,"def test_dtype_float32(self):
"
13509,"def test_dtype_float64(self):
"
13510,"def test_dtype_uint8(self):
"
13511,"def test_dtype_uint16(self):
"
13512,"def test_dtype_uint32(self):
"
13513,"def test_dtype_uint64(self):
"
13514,"def test_dtype_datetime64(self):
"
13515,"def test_dtype_timedelta64(self):
"
13516,"def test_dtype_string(self):
"
13517,"def test_dtype_categorical(self):
"
13518,"def test_alltypes_roundtrip(self):
"
13519,"def test_writer_cleanup_deletes_hdfs_dir(self):
"
13520,"def test_create_table_from_dataframe(self):
"
13521,"def test_insert(self):
"
13522,"def test_insert_partition(self):
"
13523,"def test_round_trip_exhaustive(self):
"
13524,"def _check_roundtrip(self,df):
"
13525,"def test_column_schema(self):
"
13526,"def test_create_schema(self):
"
13527,"def test_column_schema_repr(self):
"
13528,"def test_column_schema_default_value(self):
"
13529,"def setUp(self):
"
13530,"def test_table_basics(self):
"
13531,"def test_table_exists(self):
"
13532,"def test_delete_table(self):
"
13533,"def test_open_table_nonexistent(self):
"
13534,"def test_insert_nonexistent_field(self):
"
13535,"def test_insert_rows_and_delete(self):
"
13536,"def test_capture_kudu_error(self):
"
13537,"def setUp(self):
"
13538,"def test_scan_rows_basic(self):
"
13539,"def test_scan_rows_simple_predicate(self):
"
13540,"def test_scan_rows_string_predicate(self):
"
13541,"def __init__(self):
"
13542,"def get_deployment_update(self,deployment_update_id):
"
13543,"def deployment_updates_list(self,include = None,filters = None,pagination = None,sort = None):
"
13544,"def create_deployment_update_step(self,deployment_update_id,operation,entity_type,entity_id):
"
13545,"def _extract_changes(self,dep_update,raw_nodes):
"
13546,"def _execute_update_workflow(self,dep_update,node_instances,modified_entity_ids):
"
13547,"def __init__(self,app,headers = None):
"
13548,"def do_request(self,requests_method,uri,data = None,params = None,headers = None,pagination = None,sort = None,expected_status_code = 200,stream = False):
"
13549,"def _do_request(self,requests_method,request_url,body,params,headers,expected_status_code,stream,verify):
"
13550,"def __init__(self,* args,** kwargs):
"
13551,"def create_client(self,headers = None):
"
13552,"def setUp(self):
"
13553,"def cleanup(self):
"
13554,"def initialize_provider_context(self,client = None):
"
13555,"def create_configuration(self):
"
13556,"def _version_url(self,url):
"
13557,"def post(self,resource_path,data,query_params = None):
"
13558,"def post_file(self,resource_path,file_path,query_params = None):
"
13559,"def put_file(self,resource_path,file_path,query_params = None):
"
13560,"def put(self,resource_path,data = None,query_params = None):
"
13561,"def patch(self,resource_path,data):
"
13562,"def get(self,resource_path,query_params = None,headers = None):
"
13563,"def head(self,resource_path):
"
13564,"def delete(self,resource_path,query_params = None):
"
13565,"def _check_if_resource_on_fileserver(self,folder,container_id,resource_path):
"
13566,"def check_if_resource_on_fileserver(self,blueprint_id,resource_path):
"
13567,"def check_if_deployment_resource_on_fileserver(self,deployment_id,resource_path):
"
13568,"def get_blueprint_path(self,blueprint_dir_name):
"
13569,"def upload_plugin(self,package_name,package_version):
"
13570,"def create_wheel(self,package_name,package_version):
"
13571,"def wait_for_url(self,url,timeout = 5):
"
13572,"def wait_for_deployment_creation(self,client,deployment_id):
"
13573,"def test_get_nonexisting_node(self):
"
13574,"def test_get_node(self):
"
13575,"def test_patch_node(self):
"
13576,"def test_patch_node_runtime_props_update(self):
"
13577,"def test_patch_node_runtime_props_overwrite(self):
"
13578,"def test_patch_node_runtime_props_cleanup(self):
"
13579,"def test_partial_patch_node(self):
"
13580,"def test_patch_node_conflict(self):
"
13581,"def test_list_node_instances_multiple_value_filter(self):
"
13582,"def test_list_node_instances(self):
"
13583,"def test_patch_before_put(self):
"
13584,"def put_node_instance(self,instance_id,deployment_id,runtime_properties = None,node_id = None):
"
13585,"def test_cancel_execution(self):
"
13586,"def test_force_cancel_execution(self):
"
13587,"def test_cancel_execution_with_graph_workflow(self):
"
13588,"def test_cancel_execution_and_then_force_cancel(self):
"
13589,"def test_legacy_cancel_execution(self):
"
13590,"def test_cancel_execution_before_it_started(self):
"
13591,"def test_get_deployments_executions_with_status(self):
"
13592,"def test_update_execution_status(self):
"
13593,"def _assert_execution_cancelled(self,execution,deployment_id):
"
13594,"def __init__(self,response = None):
"
13595,"def response(self):
"
13596,"def status(self):
"
13597,"def headers(self):
"
13598,"def reason(self):
"
13599,"def __init__(self,response):
"
13600,"def parse_body(self):
"
13601,"def parse_error(self):
"
13602,"def success(self):
"
13603,"def _log_response(self,r):
"
13604,"def _log_curl(self,method,url,body,headers):
"
13605,"def getresponse(self):
"
13606,"def request(self,method,url,body = None,headers = None):
"
13607,"def getresponse(self):
"
13608,"def request(self,method,url,body = None,headers = None):
"
13609,"def __init__(self,key,secure = True,host = None,force_port = None):
"
13610,"def connect(self,host = None,port = None):
"
13611,"def _user_agent(self):
"
13612,"def user_agent_append(self,token):
"
13613,"def add_default_params(self,params):
"
13614,"def add_default_headers(self,headers):
"
13615,"def encode_data(self,data):
"
13616,"def __init__(self,user_id,key,secure = True,host = None,port = None):
"
13617,"def __init__(self,value,driver,container_name):
"
13618,"def __str__(self):
"
13619,"def __init__(self,value,driver,object_name):
"
13620,"def __str__(self):
"
13621,"def __init__(self,script,name = None,icon = None,gui_only = None,include_in_bootstrap_env = True,** kwds):
"
13622,"def name(self):
"
13623,"def gui_only(self):
"
13624,"def initialize_options(self):
"
13625,"def finalize_options(self):
"
13626,"def _name2func(self,name):
"
13627,"def run(self):
"
13628,"def _run(self):
"
13629,"def _run_initialise_dirs(self):
"
13630,"def _run_freeze_scripts(self):
"
13631,"def _generate_filelist_manifest(self):
"
13632,"def _obj2code(self,obj):
"
13633,"def get_bootstrap_code(self):
"
13634,"def get_executables(self,normalise = True):
"
13635,"def get_package_dir(self,pkg):
"
13636,"def compile_to_bootstrap_exe(self,exe,source,relpath = None):
"
13637,"def copy_to_bootstrap_env(self,src,dst = None):
"
13638,"def add_to_bootstrap_manifest(self,dstpath):
"
13639,"def initialize_options(self):
"
13640,"def finalize_options(self):
"
13641,"def __init__(self):
"
13642,"def run(self,* args,** kwargs):
"
13643,"def main(self,* args,** kwargs):
"
13644,"def __init__(self,region,domain_name,schema_class = StateRecord):
"
13645,"def conn(self):
"
13646,"def domain(self):
"
13647,"def get_backend(self):
"
13648,"def save_state(self,task_id,result,previous):
"
13649,"def get_old_states(self):
"
13650,"def __init__(self,key,value,propogate):
"
13651,"def JSONrepr(self):
"
13652,"def __add__(self,newtags):
"
13653,"def JSONrepr(self):
"
13654,"def __init__(self,init,authentication = None):
"
13655,"def JSONrepr(self):
"
13656,"def __init__(self,urls,emitter_args = { },format = 'csv',max_emit_retries = 9,):
"
13657,"def _get_feature_type(self,feature):
"
13658,"def emit_dict_as_graphite(self,sysname,group,suffix,data,timestamp = None,):
"
13659,"def emit(self,feature_key,feature_val,feature_type = None,):
"
13660,"def _close_file(self):
"
13661,"def _publish_to_mtgraphite(self,url):
"
13662,"def _write_to_file(self,url):
"
13663,"def __exit__(self,typ,exc,trc,):
"
13664,"def _priceHandler(self,msg):
"
13665,"def _sizeHandler(self,msg):
"
13666,"def _writeData(self,data):
"
13667,"def flush(self):
"
13668,"def __init__(self,user_agent = None,wait_time = 2,fullscreen = False,incognito = False,** kwargs):
"
13669,"def test_is_text_present(self):
"
13670,"def test_is_text_present_and_should_return_false(self):
"
13671,"def test_is_text_present_and_should_wait_time(self):
"
13672,"def test_is_text_not_present(self):
"
13673,"def test_is_text_not_present_and_should_return_false(self):
"
13674,"def test_is_text_not_present_and_should_wait_time(self):
"
13675,"def test_is_text_present_no_body(self):
"
13676,"def test_is_text_not_present_no_body(self):
"
13677,"def send_leadership_proclamation(self,pnum):
"
13678,"def on_leadership_acquired(self):
"
13679,"def on_leadership_lost(self):
"
13680,"def on_leadership_change(self,old_uid,new_uid):
"
13681,"def create_node(self):
"
13682,"def test_initial_leader(self):
"
13683,"def test_gain_leader(self):
"
13684,"def test_gain_leader_nack(self):
"
13685,"def test_lose_leader(self):
"
13686,"def test_lose_leader_via_nacks(self):
"
13687,"def test_regain_leader(self):
"
13688,"def test_ignore_old_leader_proclamation(self):
"
13689,"def test_proposal_id_increment(self):
"
13690,"def setUp(self):
"
13691,"def setUp(self):
"
13692,"def setUp(self):
"
13693,"def setUp(self):
"
13694,"def run(self,bundle_store,parent_dict):
"
13695,"def test_desugar(self):
"
13696,"def forwards(self,orm):
"
13697,"def backwards(self,orm):
"
13698,"def __init__(self,path):
"
13699,"def get_instance(self):
"
13700,"def get_message(self,condition = None):
"
13701,"def main(self,args,folder,** kwargs):
"
13702,"def cmd(self,* args,** kwargs):
"
13703,"def _check_column_count(self,count):
"
13704,"def _make_column_name_list(self,column_count):
"
13705,"def _make_column_names_and_placeholders(self,column_count):
"
13706,"def create_word_table_sql(self,column_count):
"
13707,"def create_param_table_sql(self):
"
13708,"def set_param_sql(self):
"
13709,"def get_param_sql(self):
"
13710,"def create_index_sql(self,column_count):
"
13711,"def select_count_for_words_sql(self,column_count):
"
13712,"def update_count_for_words_sql(self,column_count):
"
13713,"def insert_row_for_words_sql(self,column_count):
"
13714,"def select_words_and_counts_sql(self,column_count):
"
13715,"def delete_words_sql(self):
"
13716,"def test_extractors_from_department_and_password(self):
"
13717,"def test_get_extractor_from_department(self):
"
13718,"def test_regen_extractor_envs(self):
"
13719,"def test_get_extractor_from_department_without_extractor(self):
"
13720,"def test_get_complaint_blocks(self):
"
13721,"def test_get_uof_blocks(self):
"
13722,"def test_get_ois_blocks(self):
"
13723,"def __init__(self,repository,revision):
"
13724,"def message(self):
"
13725,"def committer(self):
"
13726,"def author(self):
"
13727,"def date(self):
"
13728,"def _timestamp(self):
"
13729,"def status(self):
"
13730,"def branch(self):
"
13731,"def _fix_path(self,path):
"
13732,"def _get_kind(self,path):
"
13733,"def _get_filectx(self,path):
"
13734,"def _get_file_nodes(self):
"
13735,"def parents(self):
"
13736,"def children(self):
"
13737,"def next(self,branch = None):
"
13738,"def prev(self,branch = None):
"
13739,"def diff(self,ignore_whitespace = True,context = 3):
"
13740,"def get_file_mode(self,path):
"
13741,"def get_file_content(self,path):
"
13742,"def get_file_size(self,path):
"
13743,"def get_file_changeset(self,path):
"
13744,"def get_file_history_2(self,path):
"
13745,"def fill_archive(self,stream = None,kind = 'tgz',prefix = None,subrepos = False):
"
13746,"def affected_files(self):
"
13747,"def _diff_name_status(self):
"
13748,"def _changes_cache(self):
"
13749,"def _get_paths_for_status(self,status):
"
13750,"def added(self):
"
13751,"def changed(self):
"
13752,"def removed(self):
"
13753,"def get_vcsrc(self):
"
13754,"def test_default_argv(self):
"
13755,"def test_default_prog_name(self):
"
13756,"def test_default_stdout(self):
"
13757,"def test_default_stderr(self):
"
13758,"def test_get_vcsrc(self):
"
13759,"def test_get_command_class(self):
"
13760,"def test_get_commands(self):
"
13761,"def test_execute_calls_run_command_if_argv_given(self):
"
13762,"def test_execute_calls_show_help_if_argv_not_given(self):
"
13763,"def test_show_help_writes_to_stdout(self):
"
13764,"def test_get_version(self):
"
13765,"def test_usage(self):
"
13766,"def test_get_parser(self):
"
13767,"def test_execute(self):
"
13768,"def test_run_from_argv(self):
"
13769,"def test_log_command(self):
"
13770,"def __repr__(self):
"
13771,"def __reduce__(self):
"
13772,"def __init__(self,func):
"
13773,"def __get__(self,obj,klass = None):
"
13774,"def __get__(self,obj,klass = None):
"
13775,"def forwards(self,orm):
"
13776,"def backwards(self,orm):
"
13777,"def __init__(self,message,* args):
"
13778,"def private_encrypt(self,value,padding = RSA_PKCS1_PADDING):
"
13779,"def public_decrypt(self,value,padding = RSA_PKCS1_PADDING):
"
13780,"def private_export(self):
"
13781,"def public_export(self):
"
13782,"def __del__(self):
"
13783,"def setUp(self):
"
13784,"def test_listdir(self):
"
13785,"def test_delete(self):
"
13786,"def test_exists(self):
"
13787,"def test_size(self):
"
13788,"def test_save(self):
"
13789,"def test_all(self):
"
13790,"def get(self):
"
13791,"def get(self,nonce,extension):
"
13792,"def get(self,token,test_case):
"
13793,"def get(self):
"
13794,"def post(self):
"
13795,"def __init__(self,conn,boss):
"
13796,"def get_task_patterns(self):
"
13797,"def register_with_boss(self):
"
13798,"def require_boss(self,callback):
"
13799,"def command_patterns(self):
"
13800,"def register_success(self,nick,message,channel,cmd_channel):
"
13801,"def worker_execute(self,nick,message,channel,task_id,command,workers = None):
"
13802,"def worker_stop(self,nick,message,channel):
"
13803,"def worker_ping_handler(self,nick,message,channel):
"
13804,"def __init__(self,host,port,socket_timeout):
"
13805,"def connect(self):
"
13806,"def send(self,data):
"
13807,"def get_task_patterns(self):
"
13808,"def get_time(self,format = None):
"
13809,"def download(self,url):
"
13810,"def info(self):
"
13811,"def ports(self):
"
13812,"def run(self,program):
"
13813,"def send_file(self,filename,destination):
"
13814,"def slowloris(self,host,num,timeout,port = None):
"
13815,"def slowloristest(self,host,port = None):
"
13816,"def status_report(self):
"
13817,"def db_value(self,value):
"
13818,"def python_value(self,value):
"
13819,"def __init__(self,value_field,ordered = False,database = None):
"
13820,"def create_model(self):
"
13821,"def query(self,* select):
"
13822,"def convert_node(self,node):
"
13823,"def __contains__(self,key):
"
13824,"def __len__(self):
"
13825,"def __getitem__(self,node):
"
13826,"def _upsert(self,key,value):
"
13827,"def __delitem__(self,node):
"
13828,"def __iter__(self):
"
13829,"def keys(self):
"
13830,"def values(self):
"
13831,"def items(self):
"
13832,"def get(self,k,default = None):
"
13833,"def pop(self,k,default = Sentinel):
"
13834,"def clear(self):
"
13835,"def __init__(self,ordered = False,database = None):
"
13836,"def __init__(self,ordered = False,database = None):
"
13837,"def test_assert_query_count(self):
"
13838,"def test_topological_sort_fundamentals(self):
"
13839,"def __init__(self,database,name):
"
13840,"def decr(self,decr_by = 1):
"
13841,"def incr(self,incr_by = 1):
"
13842,"def value(self):
"
13843,"def _op(self,method,other):
"
13844,"def __iadd__(self,other):
"
13845,"def __isub__(self,other):
"
13846,"def text_to_counter(self,text):
"
13847,"def __init__(self,tokenizer_func):
"
13848,"def text_to_token_list(self,text):
"
13849,"def __init__(self,pos_types =[],sent_tokenizer = nltk.sent_tokenize,word_tokenizer = TokenizerBasic(),word_tokenizer_func = None,pos_tagger = nltk.pos_tag):
"
13850,"def text_to_token_list(self,text):
"
13851,"def _sent_filter(self,tokenized_sent):
"
13852,"def sstr_to_dict(self,sstr):
"
13853,"def sstr_to_info(self,sstr):
"
13854,"def sstr_to_token_list(self,sstr):
"
13855,"def sfile_to_token_iter(self,filepath_or_buffer,limit = None):
"
13856,"def _string_to_number(self,string,empty_sub = None):
"
13857,"def __init__(self):
"
13858,"def _parse_preamble(self,preamble):
"
13859,"def __init__(self):
"
13860,"def _parse_preamble(self,preamble):
"
13861,"def __init__(self,formatter,bit_precision = 18,sfile = None,verbose = True):
"
13862,"def _get_hash_fun(self):
"
13863,"def load_sfile(self,sfile):
"
13864,"def set_bit_precision_required(self):
"
13865,"def filter_extremes(self,doc_freq_min = 0,doc_freq_max = np.inf,doc_fraction_min = 0,doc_fraction_max = 1,token_score_min = 0,token_score_max = np.inf,token_score_quantile_min = 0,token_score_quantile_max = 1):
"
13866,"def filter_tokens(self,tokens):
"
13867,"def _print(self,msg):
"
13868,"def to_frame(self):
"
13869,"def vocab_size(self):
"
13870,"def save(self,savepath,protocol = - 1,set_id2token = True):
"
13871,"def __init__(self):
"
13872,"def __init__(self):
"
13873,"def __init__(self):
"
13874,"def __init__(self):
"
13875,"def __init__(self):
"
13876,"def __init__(self):
"
13877,"def __init__(self):
"
13878,"def __init__(self):
"
13879,"def __init__(self):
"
13880,"def __init__(self):
"
13881,"def __init__(self):
"
13882,"def __init__(self):
"
13883,"def __init__(self):
"
13884,"def __init__(self):
"
13885,"def __init__(self):
"
13886,"def __init__(self):
"
13887,"def __init__(self):
"
13888,"def __init__(self):
"
13889,"def __init__(self):
"
13890,"def __init__(self):
"
13891,"def __init__(self):
"
13892,"def __init__(self):
"
13893,"def __init__(self):
"
13894,"def __init__(self):
"
13895,"def __init__(self):
"
13896,"def __init__(self):
"
13897,"def __init__(self):
"
13898,"def __init__(self):
"
13899,"def __init__(self):
"
13900,"def __init__(self):
"
13901,"def __init__(self):
"
13902,"def __init__(self):
"
13903,"def __init__(self):
"
13904,"def __init__(self):
"
13905,"def __init__(self):
"
13906,"def __init__(self):
"
13907,"def __init__(self):
"
13908,"def __init__(self):
"
13909,"def __init__(self):
"
13910,"def __init__(self):
"
13911,"def __init__(self):
"
13912,"def __init__(self):
"
13913,"def __init__(self):
"
13914,"def __init__(self):
"
13915,"def __init__(self):
"
13916,"def __init__(self):
"
13917,"def __init__(self):
"
13918,"def __init__(self):
"
13919,"def __init__(self):
"
13920,"def __init__(self):
"
13921,"def __init__(self):
"
13922,"def __init__(self):
"
13923,"def __init__(self):
"
13924,"def __init__(self):
"
13925,"def __init__(self):
"
13926,"def __init__(self):
"
13927,"def __init__(self):
"
13928,"def __init__(self):
"
13929,"def __init__(self):
"
13930,"def __init__(self):
"
13931,"def __init__(self):
"
13932,"def __init__(self):
"
13933,"def __init__(self):
"
13934,"def __init__(self):
"
13935,"def __init__(self):
"
13936,"def __init__(self):
"
13937,"def __init__(self):
"
13938,"def __init__(self):
"
13939,"def __init__(self):
"
13940,"def __init__(self):
"
13941,"def __init__(self):
"
13942,"def __init__(self):
"
13943,"def __init__(self):
"
13944,"def __init__(self):
"
13945,"def __init__(self):
"
13946,"def __init__(self):
"
13947,"def __init__(self):
"
13948,"def __init__(self):
"
13949,"def __init__(self):
"
13950,"def __init__(self):
"
13951,"def __init__(self):
"
13952,"def __init__(self):
"
13953,"def __init__(self):
"
13954,"def __init__(self):
"
13955,"def __init__(self):
"
13956,"def __init__(self):
"
13957,"def __init__(self):
"
13958,"def __init__(self):
"
13959,"def __init__(self):
"
13960,"def __init__(self):
"
13961,"def __init__(self):
"
13962,"def __init__(self):
"
13963,"def __init__(self):
"
13964,"def __init__(self):
"
13965,"def __init__(self):
"
13966,"def __init__(self):
"
13967,"def __init__(self):
"
13968,"def __init__(self):
"
13969,"def __init__(self):
"
13970,"def __init__(self):
"
13971,"def __init__(self):
"
13972,"def __init__(self):
"
13973,"def __init__(self):
"
13974,"def __init__(self):
"
13975,"def __init__(self):
"
13976,"def __init__(self):
"
13977,"def __init__(self):
"
13978,"def __init__(self):
"
13979,"def __init__(self):
"
13980,"def __init__(self):
"
13981,"def __init__(self):
"
13982,"def __init__(self):
"
13983,"def __init__(self):
"
13984,"def __init__(self):
"
13985,"def __init__(self):
"
13986,"def __init__(self):
"
13987,"def __init__(self):
"
13988,"def __init__(self):
"
13989,"def __init__(self):
"
13990,"def __init__(self):
"
13991,"def __init__(self):
"
13992,"def __init__(self):
"
13993,"def __init__(self):
"
13994,"def __init__(self):
"
13995,"def __init__(self):
"
13996,"def __init__(self):
"
13997,"def __init__(self):
"
13998,"def __init__(self):
"
13999,"def __init__(self):
"
14000,"def __init__(self):
"
14001,"def __init__(self):
"
14002,"def __init__(self):
"
14003,"def __init__(self):
"
14004,"def __init__(self):
"
14005,"def __init__(self):
"
14006,"def __init__(self):
"
14007,"def __init__(self):
"
14008,"def __init__(self):
"
14009,"def __init__(self):
"
14010,"def __init__(self):
"
14011,"def __init__(self):
"
14012,"def __init__(self):
"
14013,"def __init__(self):
"
14014,"def __init__(self):
"
14015,"def __init__(self):
"
14016,"def __init__(self):
"
14017,"def __init__(self):
"
14018,"def __init__(self):
"
14019,"def __init__(self):
"
14020,"def __init__(self):
"
14021,"def __init__(self):
"
14022,"def __init__(self):
"
14023,"def __init__(self):
"
14024,"def __init__(self):
"
14025,"def __init__(self):
"
14026,"def __init__(self):
"
14027,"def __init__(self):
"
14028,"def __init__(self):
"
14029,"def __init__(self):
"
14030,"def __init__(self):
"
14031,"def __init__(self):
"
14032,"def __init__(self):
"
14033,"def __init__(self):
"
14034,"def __init__(self):
"
14035,"def __init__(self):
"
14036,"def __init__(self):
"
14037,"def __init__(self):
"
14038,"def __init__(self):
"
14039,"def __init__(self):
"
14040,"def __init__(self):
"
14041,"def __init__(self):
"
14042,"def __init__(self):
"
14043,"def __init__(self):
"
14044,"def __init__(self):
"
14045,"def __init__(self):
"
14046,"def __init__(self):
"
14047,"def __init__(self):
"
14048,"def __init__(self):
"
14049,"def __init__(self):
"
14050,"def __init__(self):
"
14051,"def __init__(self):
"
14052,"def __init__(self):
"
14053,"def __init__(self):
"
14054,"def __init__(self):
"
14055,"def __init__(self):
"
14056,"def __init__(self):
"
14057,"def __init__(self):
"
14058,"def __init__(self):
"
14059,"def __init__(self):
"
14060,"def __init__(self):
"
14061,"def read(self,res_id = None,attributes = None):
"
14062,"def create(self,res_id = None,attributes = None):
"
14063,"def update(self,res_id = None,attributes = None):
"
14064,"def delete(self,res_id = None,attributes = None):
"
14065,"def _sanitize_groups(self,groups):
"
14066,"def is_compliant(self,persisted_state,current_state):
"
14067,"def test_upload(self):
"
14068,"def _extractall(self,path = ""."",members = None):
"
14069,"def content(self):
"
14070,"def __init__(self,keyword = 'http_basic_credentials'):
"
14071,"def get_authorization_type(self):
"
14072,"def parse_authorization_value(self,header_value):
"
14073,"def get_invalid_header_response(self):
"
14074,"def setUp(self):
"
14075,"def _create(self,number,version,deps = None,export = True,no_config = False):
"
14076,"def upper_option_test(self):
"
14077,"def inverse_upper_option_test(self):
"
14078,"def upper_option_txt_test(self):
"
14079,"def change_option_txt_test(self):
"
14080,"def reuse_test(self):
"
14081,"def _assert_library_exists(self,package_ref,paths):
"
14082,"def __init__(self):
"
14083,"def upload_conan(self,* argc,** argv):
"
14084,"def setUp(self):
"
14085,"def test_no_remotes(self):
"
14086,"def remote_selection_test(self):
"
14087,"def method_called_test(self):
"
14088,"def get_success_url(self):
"
14089,"def __init__(self,i =[]):
"
14090,"def extend(self,l):
"
14091,"def append(self,key,value):
"
14092,"def appendleft(self,key,value):
"
14093,"def pop(self):
"
14094,"def popleft(self):
"
14095,"def iteritemsright(self):
"
14096,"def iteritems(self):
"
14097,"def iterkeysright(self):
"
14098,"def movehead(self,key):
"
14099,"def removeall(self,key):
"
14100,"def __getitem__(self,key):
"
14101,"def __delitem__(self,key):
"
14102,"def __contains__(self,key):
"
14103,"def __len__(self):
"
14104,"def __nonzero__(self):
"
14105,"def __setstate__(self,state):
"
14106,"def __init__(self,path,retries = 10):
"
14107,"def __enter__(self):
"
14108,"def __exit__(self,exc_type,exc_value,traceback):
"
14109,"def __init__(self,module = '__main__',defaultTest = None,argv = None,testRunner = None,testLoader = loader.defaultTestLoader,exit = True,verbosity = 1,failfast = None,catchbreak = None,buffer = None,tb_locals = False):
"
14110,"def usageExit(self,msg = None):
"
14111,"def _print_help(self,* args,** kwargs):
"
14112,"def parseArgs(self,argv):
"
14113,"def createTests(self):
"
14114,"def _initArgParsers(self):
"
14115,"def _getParentArgParser(self):
"
14116,"def _getMainArgParser(self,parent):
"
14117,"def _do_discovery(self,argv,Loader = None):
"
14118,"def runTests(self):
"
14119,"def __init__(self,function,sequence):
"
14120,"def __repr__(self):
"
14121,"def __getitem__(self,i):
"
14122,"def __iter__(self):
"
14123,"def __init__(self,iterable,definitely_infinite = False):
"
14124,"def known_length(self):
"
14125,"def exhaust(self,i = infinity):
"
14126,"def __getitem__(self,i):
"
14127,"def __len__(self):
"
14128,"def __eq__(self,other):
"
14129,"def __ne__(self,other):
"
14130,"def __bool__(self):
"
14131,"def __lt__(self,other):
"
14132,"def __repr__(self):
"
14133,"def __add__(self,other):
"
14134,"def __radd__(self,other):
"
14135,"def __mul__(self,other):
"
14136,"def __rmul__(self,other):
"
14137,"def __hash__(self):
"
14138,"def __init__(self,working_directory):
"
14139,"def __init__(self,parent,id = - 1,label = '',url = '',pos = wx.DefaultPosition,size = wx.DefaultSize,style = wx.HL_DEFAULT_STYLE,name = wx.HyperlinkCtrlNameStr):
"
14140,"def __init__(self,input = """",width = _DEFAULT_COL_WIDTH,flag = wx.ALIGN_LEFT,image = - 1,shown = True,colour = None,edit = False):
"
14141,"def GetText(self):
"
14142,"def SetText(self,text):
"
14143,"def GetWidth(self):
"
14144,"def SetWidth(self,width):
"
14145,"def GetAlignment(self):
"
14146,"def SetAlignment(self,flag):
"
14147,"def GetColour(self):
"
14148,"def SetColour(self,colour):
"
14149,"def GetImage(self):
"
14150,"def SetImage(self,image):
"
14151,"def GetSelectedImage(self):
"
14152,"def SetSelectedImage(self,image):
"
14153,"def IsEditable(self):
"
14154,"def SetEditable(self,edit):
"
14155,"def IsShown(self):
"
14156,"def SetShown(self,shown):
"
14157,"def SetFont(self,font):
"
14158,"def GetFont(self):
"
14159,"def __init__(self,parent,id = wx.ID_ANY,owner = None,pos = wx.DefaultPosition,size = wx.DefaultSize,style = 0,name = ""wxtreelistctrlcolumntitles""):
"
14160,"def SetBuffered(self,buffered):
"
14161,"def GetWidth(self):
"
14162,"def GetColumnCount(self):
"
14163,"def GetColumn(self,column):
"
14164,"def GetColumnText(self,column):
"
14165,"def SetColumnText(self,column,text):
"
14166,"def GetColumnAlignment(self,column):
"
14167,"def SetColumnAlignment(self,column,flag):
"
14168,"def GetColumnWidth(self,column):
"
14169,"def GetColumnColour(self,column):
"
14170,"def SetColumnColour(self,column,colour):
"
14171,"def IsColumnEditable(self,column):
"
14172,"def IsColumnShown(self,column):
"
14173,"def AdjustDC(self,dc):
"
14174,"def DrawCurrent(self):
"
14175,"def SetCustomRenderer(self,renderer = None):
"
14176,"def RefreshColLabel(self,col):
"
14177,"def OnSetFocus(self,event):
"
14178,"def SendListEvent(self,evtType,pos):
"
14179,"def AddColumnInfo(self,colInfo):
"
14180,"def AddColumn(self,text,width = _DEFAULT_COL_WIDTH,flag = wx.ALIGN_LEFT,image = - 1,shown = True,colour = None,edit = False):
"
14181,"def SetColumnWidth(self,column,width):
"
14182,"def InsertColumnInfo(self,before,colInfo):
"
14183,"def InsertColumn(self,before,text,width = _DEFAULT_COL_WIDTH,flag = wx.ALIGN_LEFT,image = - 1,shown = True,colour = None,edit = False):
"
14184,"def RemoveColumn(self,column):
"
14185,"def SetColumn(self,column,info):
"
14186,"def __init__(self,mainWin,parent,text =[],ct_type = 0,wnd = None,image = - 1,selImage = - 1,data = None):
"
14187,"def IsHidden(self):
"
14188,"def Hide(self,hide):
"
14189,"def DeleteChildren(self,tree):
"
14190,"def GetText(self,column = None):
"
14191,"def GetImage(self,which = wx.TreeItemIcon_Normal,column = None):
"
14192,"def GetCurrentImage(self,column = None):
"
14193,"def SetText(self,column,text):
"
14194,"def SetImage(self,column,image,which):
"
14195,"def GetTextX(self):
"
14196,"def SetTextX(self,text_x):
"
14197,"def SetWindow(self,wnd,column = None):
"
14198,"def OnSetFocus(self,event):
"
14199,"def GetWindow(self,column = None):
"
14200,"def DeleteWindow(self,column = None):
"
14201,"def GetWindowEnabled(self,column = None):
"
14202,"def SetWindowEnabled(self,enable = True,column = None):
"
14203,"def GetWindowSize(self,column = None):
"
14204,"def AcceptChanges(self):
"
14205,"def Finish(self):
"
14206,"def OnChar(self,event):
"
14207,"def OnKeyUp(self,event):
"
14208,"def OnKillFocus(self,event):
"
14209,"def StopEditing(self):
"
14210,"def item(self):
"
14211,"def column(self):
"
14212,"def __init__(self,parent,id = wx.ID_ANY,pos = wx.DefaultPosition,size = wx.DefaultSize,style = 0,agwStyle = wx.TR_DEFAULT_STYLE,validator = wx.DefaultValidator,name = ""wxtreelistmainwindow""):
"
14213,"def SetBuffered(self,buffered):
"
14214,"def IsVirtual(self):
"
14215,"def GetItemImage(self,item,column = None,which = wx.TreeItemIcon_Normal):
"
14216,"def SetItemImage(self,item,image,column = None,which = wx.TreeItemIcon_Normal):
"
14217,"def GetItemWindowEnabled(self,item,column = None):
"
14218,"def GetItemWindow(self,item,column = None):
"
14219,"def SetItemWindow(self,item,window,column = None):
"
14220,"def SetItemWindowEnabled(self,item,enable = True,column = None):
"
14221,"def IsItemVisible(self,item):
"
14222,"def GetPrevChild(self,item,cookie):
"
14223,"def GetFirstExpandedItem(self):
"
14224,"def GetNextExpanded(self,item):
"
14225,"def GetPrevExpanded(self,item):
"
14226,"def GetFirstVisibleItem(self):
"
14227,"def GetPrevVisible(self,item):
"
14228,"def DoInsertItem(self,parent,previous,text,ct_type = 0,wnd = None,image = - 1,selImage = - 1,data = None):
"
14229,"def AddRoot(self,text,ct_type = 0,wnd = None,image = - 1,selImage = - 1,data = None):
"
14230,"def Delete(self,item):
"
14231,"def ChildrenClosing(self,item):
"
14232,"def DeleteRoot(self):
"
14233,"def DeleteAllItems(self):
"
14234,"def IsItemEnabled(self,item):
"
14235,"def GetCurrentItem(self):
"
14236,"def GetColumnCount(self):
"
14237,"def SetMainColumn(self,column):
"
14238,"def GetMainColumn(self):
"
14239,"def ScrollTo(self,item):
"
14240,"def SetDragItem(self,item):
"
14241,"def AdjustMyScrollbars(self):
"
14242,"def OnEraseBackground(self,event):
"
14243,"def HitTest(self,point,flags = 0):
"
14244,"def EditLabel(self,item,column = None):
"
14245,"def OnRenameTimer(self):
"
14246,"def OnRenameAccept(self,value):
"
14247,"def OnRenameCancelled(self):
"
14248,"def OnMouse(self,event):
"
14249,"def OnScroll(self,event):
"
14250,"def SetItemText(self,item,text,column = None):
"
14251,"def GetItemText(self,item,column = None):
"
14252,"def GetItemWidth(self,item,column):
"
14253,"def GetBestColumnWidth(self,column,parent = None):
"
14254,"def HideItem(self,item,hide = True):
"
14255,"def __init__(self,parent,id = wx.ID_ANY,pos = wx.DefaultPosition,size = wx.DefaultSize,style = 0,agwStyle = wx.TR_DEFAULT_STYLE,validator = wx.DefaultValidator,name = ""HyperTreeList""):
"
14256,"def SetBuffered(self,buffered):
"
14257,"def CalculateAndSetHeaderHeight(self):
"
14258,"def DoHeaderLayout(self):
"
14259,"def OnSize(self,event):
"
14260,"def SetFont(self,font):
"
14261,"def SetHeaderCustomRenderer(self,renderer = None):
"
14262,"def SetAGWWindowStyleFlag(self,agwStyle):
"
14263,"def GetAGWWindowStyleFlag(self):
"
14264,"def HasAGWFlag(self,flag):
"
14265,"def SetBackgroundColour(self,colour):
"
14266,"def SetForegroundColour(self,colour):
"
14267,"def SetColumnWidth(self,column,width):
"
14268,"def GetColumnWidth(self,column):
"
14269,"def SetColumnText(self,column,text):
"
14270,"def GetColumnText(self,column):
"
14271,"def AddColumn(self,text,width = _DEFAULT_COL_WIDTH,flag = wx.ALIGN_LEFT,image = - 1,shown = True,colour = None,edit = False):
"
14272,"def AddColumnInfo(self,colInfo):
"
14273,"def InsertColumnInfo(self,before,colInfo):
"
14274,"def InsertColumn(self,before,text,width = _DEFAULT_COL_WIDTH,flag = wx.ALIGN_LEFT,image = - 1,shown = True,colour = None,edit = False):
"
14275,"def RemoveColumn(self,column):
"
14276,"def SetColumn(self,column,colInfo):
"
14277,"def GetColumn(self,column):
"
14278,"def SetColumnImage(self,column,image):
"
14279,"def GetColumnImage(self,column):
"
14280,"def SetColumnEditable(self,column,edit):
"
14281,"def SetColumnShown(self,column,shown):
"
14282,"def IsColumnEditable(self,column):
"
14283,"def IsColumnShown(self,column):
"
14284,"def SetColumnAlignment(self,column,flag):
"
14285,"def GetColumnAlignment(self,column):
"
14286,"def SetColumnColour(self,column,colour):
"
14287,"def GetColumnColour(self,column):
"
14288,"def SetColumnFont(self,column,font):
"
14289,"def GetColumnFont(self,column):
"
14290,"def Refresh(self,erase = True,rect = None):
"
14291,"def SetFocus(self):
"
14292,"def GetHeaderWindow(self):
"
14293,"def GetMainWindow(self):
"
14294,"def DoGetBestSize(self):
"
14295,"def OnGetItemText(self,item,column):
"
14296,"def SortChildren(self,item):
"
14297,"def OnCompareItems(self,item1,item2):
"
14298,"def GetClassDefaultAttributes(self):
"
14299,"def __init__(self,inputs =(),outputs =(),name = None):
"
14300,"def get_inputs(self):
"
14301,"def get_outputs(self):
"
14302,"def _get_input_layers(self):
"
14303,"def _recalculate_total_callable_outputs_recursively(self):
"
14304,"def _recalculate_total_callable_outputs(self):
"
14305,"def add_input(self,emitter):
"
14306,"def remove_input(self,emitter):
"
14307,"def add_output(self,thing):
"
14308,"def remove_output(self,thing):
"
14309,"def disconnect_from_all(self):
"
14310,"def _get_callable_outputs(self):
"
14311,"def _get_emitter_outputs(self):
"
14312,"def get_total_callable_outputs(self):
"
14313,"def emit(self):
"
14314,"def __repr__(self):
"
14315,"def counting_func(self):
"
14316,"def process_request(self,request):
"
14317,"def process_response(self,request,response,data,format):
"
14318,"def process_request(self,request):
"
14319,"def process_response(self,request,response,data,format):
"
14320,"def __init__(self,session,objid = None,verbose = False):
"
14321,"def buildnemxmlfiles(self,e,ifc):
"
14322,"def __init__(self,session,objid = None,name = None,nodedir = None,verbose = False,start = True):
"
14323,"def boot(self):
"
14324,"def validate(self):
"
14325,"def shutdown(self):
"
14326,"def termcmdstring(self,sh = ""/bin/sh""):
"
14327,"def cmdresult(self,args):
"
14328,"def shcmd(self,cmdstr,sh = ""/bin/sh""):
"
14329,"def addaddr(self,ifindex,addr):
"
14330,"def deladdr(self,ifindex,addr):
"
14331,"def adoptnetif(self,netif,ifindex,hwaddr,addrlist):
"
14332,"def newifindex(self):
"
14333,"def newnetif(self,net = None,addrlist =[],hwaddr = None,ifindex = None,ifname = None):
"
14334,"def mount(self,source,target):
"
14335,"def umount(self,target):
"
14336,"def __init__(self,core,ipaddr,routerid = None,objid = None,name = None,nodedir = None):
"
14337,"def qconf(self):
"
14338,"def boot(self):
"
14339,"def bootscript(self):
"
14340,"def __eq__(self,other):
"
14341,"def __str__(self):
"
14342,"def __init__(self,options,start):
"
14343,"def logbegin(self):
"
14344,"def logend(self):
"
14345,"def logdata(self,nbrs,mdrs,lsdbs,krs,zrs):
"
14346,"def compareroutes(self,node,kr,zr):
"
14347,"def comparemdrlevels(self,nbrs,mdrs):
"
14348,"def comparelsdbs(self,lsdbs):
"
14349,"def checknodes(self):
"
14350,"def __init__(self,node,verbose = False):
"
14351,"def run(self):
"
14352,"def open(self):
"
14353,"def parse(self):
"
14354,"def cleanup(self):
"
14355,"def open(self):
"
14356,"def parse(self):
"
14357,"def parse(self):
"
14358,"def parse(self):
"
14359,"def parse(self):
"
14360,"def __init__(self,datadir,base):
"
14361,"def repo(self):
"
14362,"def apply_manifest(self):
"
14363,"def _git(self):
"
14364,"def init(self,args):
"
14365,"def add(self,args):
"
14366,"def commit(self,args):
"
14367,"def refresh(self,args):
"
14368,"def status(self,args):
"
14369,"def log(self,args):
"
14370,"def diff(self,args):
"
14371,"def show(self,args):
"
14372,"def push(self,args):
"
14373,"def remote(self,args):
"
14374,"def config(self,args):
"
14375,"def rm(self,args):
"
14376,"def mv(self,args):
"
14377,"def checkout(self,args):
"
14378,"def clone(self,args):
"
14379,"def test_one(self):
"
14380,"def test_two(self):
"
14381,"def test_one(self):
"
14382,"def build_args(self,settings):
"
14383,"def test_defaults_no_origin(self):
"
14384,"def test_defaults_with_origin(self):
"
14385,"def test_send_wildcard_with_origin(self):
"
14386,"def test_list_serialized(self):
"
14387,"def test_string_serialized(self):
"
14388,"def test_set_serialized(self):
"
14389,"def test_not_matching_origins(self):
"
14390,"def test_subdomain_regex(self):
"
14391,"def test_compiled_subdomain_regex(self):
"
14392,"def test_regex_list(self):
"
14393,"def test_regex_mixed_list(self):
"
14394,"def test_exposed(self):
"
14395,"def test_other_exposed(self):
"
14396,"def test_unexposed(self):
"
14397,"def test_exposed(self):
"
14398,"def test_unexposed(self):
"
14399,"def test_override(self):
"
14400,"def test_value_error(self):
"
14401,"def test_default(self):
"
14402,"def test_index(self):
"
14403,"def test_wildcard(self):
"
14404,"def test_exact_match(self):
"
14405,"def test_compiled_regex(self):
"
14406,"def test_value_error(self):
"
14407,"def __eq__(self,other):
"
14408,"def __init__(self,* args,** kwargs):
"
14409,"def query(self,* args,** kwargs):
"
14410,"def n1ql_query(self,* args,** kwargs):
"
14411,"def connect(self):
"
14412,"def _pycbc_repr_extra(self):
"
14413,"def _resolve(self,item):
"
14414,"def __getitem__(self,item):
"
14415,"def __iter__(self):
"
14416,"def command_count(self):
"
14417,"def result_count(self):
"
14418,"def get(self,path_or_index,default = None):
"
14419,"def exists(self,path_or_index):
"
14420,"def access_ok(self):
"
14421,"def value(self):
"
14422,"def __test_oprsesult(self,rv,check_exact = True,exprc = 0):
"
14423,"def __test_valresult(self,rv,value):
"
14424,"def test_results(self):
"
14425,"def __init__(self,tz,style):
"
14426,"def save(self,dt):
"
14427,"def __init__(self,tz,conversion):
"
14428,"def load(self,timestamp):
"
14429,"def __init__(self,saved_dt,stored_dt,loaded_dt):
"
14430,"def __init__(self,save_method,load_method):
"
14431,"def __unicode__(self):
"
14432,"def make_roundtrip(self,saved_dt):
"
14433,"def run_test(self,saved_dt):
"
14434,"def __init__(self):
"
14435,"def add_datetime(self,dt):
"
14436,"def add_test(self,test):
"
14437,"def run(self):
"
14438,"def run(self):
"
14439,"def scan(self):
"
14440,"def run(self):
"
14441,"def run(self):
"
14442,"def can_run(self):
"
14443,"def run(self,context):
"
14444,"def __init__(self,file,name,delete = True):
"
14445,"def __getattr__(self,name):
"
14446,"def __enter__(self):
"
14447,"def close(self):
"
14448,"def __del__(self):
"
14449,"def __exit__(self,exc,value,tb):
"
14450,"def test_load_store_simple(self):
"
14451,"def test_compiler(self):
"
14452,"def __init__(self,sql):
"
14453,"def update_attributes_from_columns(self):
"
14454,"def update_columns_with_constrains(self):
"
14455,"def columns(self):
"
14456,"def column(self,column_name):
"
14457,"def primary_keys(self):
"
14458,"def primary_key_names(self):
"
14459,"def foreign_key_references(self):
"
14460,"def dependencies(self):
"
14461,"def temporary_clone_script(self):
"
14462,"def exists_clone_script(self):
"
14463,"def drop_script(self):
"
14464,"def analyze_script(self):
"
14465,"def rename_script(self,new_name):
"
14466,"def delete_script(self,where_condition = ''):
"
14467,"def foreign_key_reference_script(self,source_columns,reference_name,reference_columns):
"
14468,"def select_duplicates_script(self):
"
14469,"def _source_sql(self,source_relation,filter_clause = None):
"
14470,"def insert_script(self,source_relation,filter_clause = None):
"
14471,"def delete_matching_rows_script(self,source_relation):
"
14472,"def de_duplication_script(self):
"
14473,"def upsert_script(self,source_relation,enforce_primary_key = True,delete_existing = False,filter_clause = None):
"
14474,"def check_not_exists_script(self):
"
14475,"def __init__(self,id,schedule,redshift_database,schema_name,table_name):
"
14476,"def schema(self):
"
14477,"def table(self):
"
14478,"def setUp(self):
"
14479,"def tearDown(self):
"
14480,"def test_config_not_found_default_hooks(self):
"
14481,"def test_hook_file_not_found_default_hooks(self):
"
14482,"def test_before_hook_simple(self):
"
14483,"def test_after_hook_simple(self):
"
14484,"def test_both_before_and_after_hook(self):
"
14485,"def test_that_hooks_do_not_leak(self):
"
14486,"def valid_ip(self,address):
"
14487,"def wait(self,line):
"
14488,"def finish(self,line):
"
14489,"def lineReceived(self,line):
"
14490,"def __init__(self,rooms,server,nick):
"
14491,"def connectionInitialized(self):
"
14492,"def joinedRoom(self,room):
"
14493,"def connectionMade(self):
"
14494,"def connectionLost(self,reason):
"
14495,"def onMessage(self,msg):
"
14496,"def receivedGroupChat(self,room,user,body):
"
14497,"def receivedHistory(self,room,user,body,dely,frm = None):
"
14498,"def start(self,cfg):
"
14499,"def broadcast(self,msgtype,msg):
"
14500,"def report(self,msgtype,to,xmsg):
"
14501,"def createSession(self,peerIP,peerPort,hostIP,hostPort):
"
14502,"def handleTTYLogOpened(self,session,args):
"
14503,"def handleConnectionLost(self,session,args):
"
14504,"def handleLoginFailed(self,session,args):
"
14505,"def handleLoginSucceeded(self,session,args):
"
14506,"def handleCommand(self,session,args):
"
14507,"def handleUnknownCommand(self,session,args):
"
14508,"def handleInput(self,session,args):
"
14509,"def handleTerminalSize(self,session,args):
"
14510,"def handleClientVersion(self,session,args):
"
14511,"def parse_cmd_line_opts(self):
"
14512,"def __init__(self):
"
14513,"def set_list(self,alist):
"
14514,"def get_idx(self,key):
"
14515,"def get_selected_note_key(self):
"
14516,"def main_loop(self):
"
14517,"def observer_notes_db_change_note_status(self,notes_db,evt_type,evt):
"
14518,"def observer_notes_db_sync_full(self,notes_db,evt_type,evt):
"
14519,"def observer_notes_db_synced_note(self,notes_db,evt_type,evt):
"
14520,"def observer_view_click_notelink(self,view,evt_type,note_name):
"
14521,"def observer_view_delete_note(self,view,evt_type,evt):
"
14522,"def observer_view_markdown(self,view,evt_type,evt):
"
14523,"def observer_view_rest(self,view,evt_type,evt):
"
14524,"def helper_save_sync_msg(self):
"
14525,"def observer_view_keep_house(self,view,evt_type,evt):
"
14526,"def observer_view_select_note(self,view,evt_type,evt):
"
14527,"def observer_view_sync_current_note(self,view,evt_type,evt):
"
14528,"def observer_view_change_cs(self,view,evt_type,evt):
"
14529,"def observer_view_change_search_mode(self,view,evt_type,evt):
"
14530,"def observer_view_change_entry(self,view,evt_type,evt):
"
14531,"def observer_view_change_text(self,view,evt_type,evt):
"
14532,"def observer_view_change_tags(self,view,evt_type,evt):
"
14533,"def observer_view_delete_tag(self,view,evt_type,evt):
"
14534,"def observer_view_add_tag(self,view,evt_type,evt):
"
14535,"def observer_view_change_pinned(self,view,evt_type,evt):
"
14536,"def observer_view_close(self,view,evt_type,evt):
"
14537,"def observer_view_create_note(self,view,evt_type,evt):
"
14538,"def select_note(self,idx):
"
14539,"def __init__(self,input_files,output_file,template = None,lang = ""en"",excluded = None,scope = None):
"
14540,"def say_something(self):
"
14541,"def __str__(self):
"
14542,"def say_something(self):
"
14543,"def say_something(self):
"
14544,"def say_something(self):
"
14545,"def say_something(self):
"
14546,"def say_something(self):
"
14547,"def forwards(self,orm):
"
14548,"def backwards(self,orm):
"
14549,"def evaluate(self,types = None):
"
14550,"def get_model(self):
"
14551,"def prepare(self,obj):
"
14552,"def forwards(self,orm):
"
14553,"def backwards(self,orm):
"
14554,"def title(self):
"
14555,"def name(self):
"
14556,"def title(self):
"
14557,"def time(self):
"
14558,"def render(self):
"
14559,"def __init__(self,query,per_page,page,endpoint):
"
14560,"def entries(self):
"
14561,"def has_previous(self):
"
14562,"def has_next(self):
"
14563,"def previous(self):
"
14564,"def next(self):
"
14565,"def count(self):
"
14566,"def pages(self):
"
14567,"def load(self,filename):
"
14568,"def load(self):
"
14569,"def load(self,filename):
"
14570,"def load(self,filename):
"
14571,"def write(self,msg):
"
14572,"def loseConnection(self):
"
14573,"def __str__(self):
"
14574,"def __repr__(self):
"
14575,"def _check_all_bool(self):
"
14576,"def __init__(self,publisher_identification = None,publication_trustlevels = None,pattern_based_subscription = None,session_meta_api = None,subscription_meta_api = None,subscriber_blackwhite_listing = None,publisher_exclusion = None,subscription_revocation = None,event_history = None,payload_transparency = None,payload_encryption_cryptobox = None,** kwargs):
"
14577,"def __init__(self,publisher_identification = None,publication_trustlevels = None,pattern_based_subscription = None,subscription_revocation = None,event_history = None,payload_transparency = None,payload_encryption_cryptobox = None,** kwargs):
"
14578,"def __init__(self,publisher_identification = None,subscriber_blackwhite_listing = None,publisher_exclusion = None,payload_transparency = None,payload_encryption_cryptobox = None,** kwargs):
"
14579,"def __init__(self,caller_identification = None,call_trustlevels = None,pattern_based_registration = None,session_meta_api = None,registration_meta_api = None,shared_registration = None,call_timeout = None,call_canceling = None,progressive_call_results = None,registration_revocation = None,payload_transparency = None,payload_encryption_cryptobox = None,** kwargs):
"
14580,"def __init__(self,caller_identification = None,call_timeout = None,call_canceling = None,progressive_call_results = None,payload_transparency = None,payload_encryption_cryptobox = None,** kwargs):
"
14581,"def __init__(self,caller_identification = None,call_trustlevels = None,pattern_based_registration = None,shared_registration = None,call_timeout = None,call_canceling = None,progressive_call_results = None,registration_revocation = None,payload_transparency = None,payload_encryption_cryptobox = None,** kwargs):
"
14582,"def __init__(self,peer,headers,host,path,params,version,origin,protocols,extensions):
"
14583,"def __json__(self):
"
14584,"def __str__(self):
"
14585,"def __init__(self,peer,headers,version,protocol,extensions):
"
14586,"def __json__(self):
"
14587,"def __str__(self):
"
14588,"def __init__(self,subprotocol = None,headers = None):
"
14589,"def __init__(self,code,reason = None):
"
14590,"def __init__(self,payload,is_binary = False):
"
14591,"def __init__(self,payload,is_binary = False,dont_compress = False):
"
14592,"def __init__(self,payload = None):
"
14593,"def onJoin(self,details):
"
14594,"def set(self,key = None,value = None):
"
14595,"def get(self,key = None):
"
14596,"def keys(self):
"
14597,"def onConnect(self,response):
"
14598,"def onMessage(self,payload,isBinary):
"
14599,"def onClose(self,wasClean,code,reason):
"
14600,"def sendHello(self):
"
14601,"def onOpen(self):
"
14602,"def onClose(self,wasClean,code,reason):
"
14603,"def onMessage(self,payload,isBinary):
"
14604,"def clientConnectionLost(self,connector,reason):
"
14605,"def clientConnectionFailed(self,connector,reason):
"
14606,"def parseStreamServer(self,reactor,description,** options):
"
14607,"def __init__(self,reactor,endpoint,options):
"
14608,"def listen(self,protocolFactory):
"
14609,"def parseStreamClient(self,* args,** options):
"
14610,"def __init__(self,reactor,endpoint,options):
"
14611,"def connect(self,protocolFactory):
"
14612,"def setUp(self):
"
14613,"def test_save(self):
"
14614,"def test_delete(self):
"
14615,"def test_url(self):
"
14616,"def test_no_auto_confirm_upper(self,mocked_input):
"
14617,"def test_no_auto_confirm_lower(self,mocked_input):
"
14618,"def test_no_auto_do_not_confirm(self,mocked_input):
"
14619,"def test_no_auto_do_blank(self,mocked_input):
"
14620,"def test_auto_confirm(self,mocked_input):
"
14621,"def __init__(self,stype,units = 'inch'):
"
14622,"def __str__(self):
"
14623,"def to_inch(self):
"
14624,"def to_metric(self):
"
14625,"def offset(self,x_offset = 0,y_offset = 0):
"
14626,"def __eq__(self,other):
"
14627,"def __init__(self,param):
"
14628,"def __init__(self,param,zero_suppression = 'leading',notation = 'absolute',format =(2,4)):
"
14629,"def to_gerber(self,settings = None):
"
14630,"def __str__(self):
"
14631,"def __init__(self,param,mo):
"
14632,"def to_gerber(self,settings = None):
"
14633,"def to_inch(self):
"
14634,"def to_metric(self):
"
14635,"def __str__(self):
"
14636,"def __init__(self,param,lp):
"
14637,"def to_gerber(self,settings = None):
"
14638,"def __str__(self):
"
14639,"def __init__(self,param,d,shape,modifiers):
"
14640,"def to_inch(self):
"
14641,"def to_metric(self):
"
14642,"def to_gerber(self,settings = None):
"
14643,"def __str__(self):
"
14644,"def __init__(self,param,name,macro):
"
14645,"def read(self,macro):
"
14646,"def build(self,modifiers =[[]]):
"
14647,"def to_inch(self):
"
14648,"def to_metric(self):
"
14649,"def to_gerber(self,settings = None):
"
14650,"def __str__(self):
"
14651,"def __init__(self,param,mode):
"
14652,"def to_gerber(self,settings = None):
"
14653,"def __str__(self):
"
14654,"def __init__(self,param,name):
"
14655,"def to_gerber(self,settings = None):
"
14656,"def __str__(self):
"
14657,"def __init__(self,param,ip):
"
14658,"def to_gerber(self,settings = None):
"
14659,"def __str__(self):
"
14660,"def __init__(self,param,angle):
"
14661,"def to_gerber(self,settings = None):
"
14662,"def __str__(self):
"
14663,"def __init__(self,param,a,b):
"
14664,"def to_gerber(self,settings = None):
"
14665,"def __str__(self):
"
14666,"def __init__(self,param,a,b):
"
14667,"def to_gerber(self,settings = None):
"
14668,"def to_inch(self):
"
14669,"def to_metric(self):
"
14670,"def offset(self,x_offset = 0,y_offset = 0):
"
14671,"def __str__(self):
"
14672,"def __init__(self,param,a,b):
"
14673,"def to_gerber(self,settings = None):
"
14674,"def to_inch(self):
"
14675,"def to_metric(self):
"
14676,"def offset(self,x_offset = 0,y_offset = 0):
"
14677,"def __str__(self):
"
14678,"def __init__(self,param,name):
"
14679,"def to_gerber(self,settings = None):
"
14680,"def __str__(self):
"
14681,"def __init__(self,line):
"
14682,"def to_gerber(self,settings = None):
"
14683,"def __init__(self,function,x,y,i,j,op,settings):
"
14684,"def to_gerber(self,settings = None):
"
14685,"def to_inch(self):
"
14686,"def to_metric(self):
"
14687,"def offset(self,x_offset = 0,y_offset = 0):
"
14688,"def __str__(self):
"
14689,"def __init__(self,d,deprecated = None):
"
14690,"def to_gerber(self,settings = None):
"
14691,"def __str__(self):
"
14692,"def __init__(self,comment):
"
14693,"def to_gerber(self,settings = None):
"
14694,"def __str__(self):
"
14695,"def __init__(self):
"
14696,"def to_gerber(self,settings = None):
"
14697,"def __str__(self):
"
14698,"def __init__(self,mode):
"
14699,"def to_gerber(self,settings = None):
"
14700,"def __init__(self,mode):
"
14701,"def to_gerber(self,settings = None):
"
14702,"def __init__(self,line):
"
14703,"def to_gerber(self,settings = None):
"
14704,"def do_PUT(self):
"
14705,"def log_message(self,format,* args):
"
14706,"def run(self,edit):
"
14707,"def function_line(self,point):
"
14708,"def is_end_bracket(self,line):
"
14709,"def function_name(self,line):
"
14710,"def __init__(self,interval = 5.,target = None):
"
14711,"def stop(self):
"
14712,"def stopped(self):
"
14713,"def run(self):
"
14714,"def task(self):
"
14715,"def __call__(self,node):
"
14716,"def process_entry(self,entry):
"
14717,"def visit_AttributeNode(self,node):
"
14718,"def visit_NameNode(self,node):
"
14719,"def __init__(self,dtype,ndim,is_c_contig = False,is_f_contig = False,inner_contig = False,broadcasting = None):
"
14720,"def __repr__(self):
"
14721,"def __call__(self,x):
"
14722,"def __enter__(self):
"
14723,"def __exit__(self,exc_type,exc_value,traceback):
"
14724,"def __enter__(self):
"
14725,"def __exit__(self,exc_class,exc,tb):
"
14726,"def _pointer(self,n = 1):
"
14727,"def __init__(self,value = None):
"
14728,"def __getitem__(self,ix):
"
14729,"def __setitem__(self,ix,value):
"
14730,"def __eq__(self,value):
"
14731,"def __repr__(self):
"
14732,"def __init__(self):
"
14733,"def __init__(self,cast_from = _Unspecified,** data):
"
14734,"def __setattr__(self,key,value):
"
14735,"def __init__(self,cast_from = _Unspecified,** data):
"
14736,"def __setattr__(self,key,value):
"
14737,"def __init__(self,type,name = None):
"
14738,"def __call__(self,* arg):
"
14739,"def __repr__(self):
"
14740,"def parallel(self,num_threads = None):
"
14741,"def prange(self,start = 0,stop = None,step = 1,schedule = None,nogil = False):
"
14742,"def threadid(self):
"
14743,"def a(self,i):
"
14744,"def a(self,i):
"
14745,"def __init__(self,** kw):
"
14746,"def run(self):
"
14747,"def t_NUMBER(self,t):
"
14748,"def t_newline(self,t):
"
14749,"def t_error(self,t):
"
14750,"def p_statement_assign(self,p):
"
14751,"def p_statement_expr(self,p):
"
14752,"def p_expression_binop(self,p):
"
14753,"def p_expression_uminus(self,p):
"
14754,"def p_expression_group(self,p):
"
14755,"def p_expression_number(self,p):
"
14756,"def p_expression_name(self,p):
"
14757,"def p_error(self,p):
"
14758,"def read_from_mat(self,matfilepath):
"
14759,"def __init__(self,* args,** kwargs):
"
14760,"def get_short_name(self):
"
14761,"def get_text_summary(self,** kwargs):
"
14762,"def summarize_num_observations(self):
"
14763,"def select_subset_by_mask(self,* args,** kwargs):
"
14764,"def add_data(self,DataObj):
"
14765,"def __init__(self,savedir = None,seed = 0,algParams = dict(),outputParams = dict(),onLapCompleteFunc = lambda:None,onFinishFunc = lambda:None,):
"
14766,"def fit(self,hmodel,Data):
"
14767,"def set_random_seed_at_lap(self,lap):
"
14768,"def set_start_time_now(self):
"
14769,"def add_nObs(self,nObs):
"
14770,"def get_elapsed_time(self):
"
14771,"def buildRunInfo(self,evBound,status,nLap = None):
"
14772,"def hasMove(self,moveName):
"
14773,"def verify_evidence(self,evBound = 0.00001,prevBound = 0,lapFrac = None):
"
14774,"def save_state(self,hmodel,iterid,lap,evBound,doFinal = False):
"
14775,"def mkfile(self,fname):
"
14776,"def getFileWriteMode(self):
"
14777,"def plot_results(self,hmodel,Data,LP):
"
14778,"def print_state(self,hmodel,iterid,lap,evBound,doFinal = False,status = '',rho = None):
"
14779,"def print_msg(self,msg):
"
14780,"def isFirstBatch(self,lapFrac):
"
14781,"def isLastBatch(self,lapFrac):
"
14782,"def do_birth_at_lap(self,lapFrac):
"
14783,"def eval_custom_func(self,hmodel,iterid,lapFrac):
"
14784,"def setUp(self):
"
14785,"def test_dimension(self):
"
14786,"def test_cholinvW(self):
"
14787,"def test_post_update_soVB(self,rho = 0.375):
"
14788,"def shortDescription(self):
"
14789,"def test_copy(self,K = 2,D = 2):
"
14790,"def test_ampFactor(self,K = 2,D = 2):
"
14791,"def makeSuffStatBagAndFillWithOnes(self,K,D):
"
14792,"def addELBOtoSuffStatBag(self,SS,K):
"
14793,"def getExpectedMergedFields(self,K,D,kA = 0):
"
14794,"def test_mergeComps_K2_D3_noELBO(self,K = 2,D = 3):
"
14795,"def test_mergeComps_K2_D3_withELBO(self,K = 2,D = 3):
"
14796,"def test_mergeComps_K5_D3_withELBO_kA0(self,K = 5,D = 3):
"
14797,"def test_mergeComps_K5_D3_withELBO_kA3(self,K = 5,D = 3):
"
14798,"def test_mergeComps_K5_D3_withELBO_back2back(self,K = 5,D = 3):
"
14799,"def run(self,edit):
"
14800,"def run(self,edit):
"
14801,"def run(self,edit):
"
14802,"def run(self,edit,** args):
"
14803,"def run(self,edit,** args):
"
14804,"def run(self,edit,** args):
"
14805,"def __init__(self):
"
14806,"def addComponent(self,name,description,license,url):
"
14807,"def OnClose(self,e):
"
14808,"def __init__(self):
"
14809,"def hasCamera(self):
"
14810,"def listCameras(self):
"
14811,"def setActiveCamera(self,cameraIdx):
"
14812,"def _openCam(self):
"
14813,"def propertyPages(self):
"
14814,"def openPropertyPage(self,pageType = 0):
"
14815,"def takeNewImage(self,withOverlay = True):
"
14816,"def getLastImage(self):
"
14817,"def endTimelapse(self):
"
14818,"def _cleanTempDir(self):
"
14819,"def __add__(self,other):
"
14820,"def __sub__(self,other):
"
14821,"def __mul__(self,other):
"
14822,"def __init__(self,origin =(0,0,0),size =(0,0,0)):
"
14823,"def __repr__(self):
"
14824,"def origin(self):
"
14825,"def size(self):
"
14826,"def width(self):
"
14827,"def height(self):
"
14828,"def length(self):
"
14829,"def minx(self):
"
14830,"def miny(self):
"
14831,"def minz(self):
"
14832,"def maxx(self):
"
14833,"def maxy(self):
"
14834,"def maxz(self):
"
14835,"def maximum(self):
"
14836,"def volume(self):
"
14837,"def intersect(self,box):
"
14838,"def union(self,box):
"
14839,"def expand(self,dx,dy = None,dz = None):
"
14840,"def __contains__(self,pos):
"
14841,"def __cmp__(self,b):
"
14842,"def mincx(self):
"
14843,"def mincz(self):
"
14844,"def maxcx(self):
"
14845,"def maxcz(self):
"
14846,"def chunkBox(self,level):
"
14847,"def chunkCount(self):
"
14848,"def isChunkAligned(self):
"
14849,"def __init__(self,ax,hist_size = 0.6,pad = 0.05):
"
14850,"def xmax(self):
"
14851,"def ymax(self):
"
14852,"def xmin(self):
"
14853,"def ymin(self):
"
14854,"def limits(self):
"
14855,"def append(self,x,y,scatter_kwargs,hist_kwargs = None,xhist_kwargs = None,yhist_kwargs = None,num_ticks = 3,labels = None,hist_share = False,marginal_histograms = True):
"
14856,"def add_legends(self,xhists = True,yhists = False,scatter = True,** kwargs):
"
14857,"def setUp(self):
"
14858,"def test_app_return_body(self):
"
14859,"def test_app_return_body_with_more_than_one_item(self):
"
14860,"def test_app_use_write_callable(self):
"
14861,"def test_app_return_an_iterable(self):
"
14862,"def test_app_receives_a_post_request(self):
"
14863,"def _run_wsgid(self,app):
"
14864,"def _kill_wsgid(self,pid):
"
14865,"def can_load(self,app_path):
"
14866,"def load_app(self,app_path,app_full_name):
"
14867,"def can_load(self,app_path):
"
14868,"def load_app(self,app_path,app_full_name):
"
14869,"def recaptcha_html(self,server,query,options):
"
14870,"def setUp(self):
"
14871,"def test_expose_flash(self):
"
14872,"def test_expose_inexistent_flash(self):
"
14873,"def test_expose_invalid_flash(self):
"
14874,"def __init__(self,name):
"
14875,"def setUp(self):
"
14876,"def tearDown(self):
"
14877,"def json_get(self,url,follow_redirects = False):
"
14878,"def json_post(self,url,data,follow_redirects = False):
"
14879,"def json_put(self,url,data,follow_redirects = False):
"
14880,"def json_delete(self,url,data = None,follow_redirects = False):
"
14881,"def assert_redirects(self,request,location,status_code = None):
"
14882,"def test_get_url(self):
"
14883,"def test_get_non_existing(self):
"
14884,"def test_put_non_existing(self):
"
14885,"def test_delete_non_existing(self):
"
14886,"def test_list_limit(self):
"
14887,"def test_list_limit_greater_than_max(self):
"
14888,"def test_invalid_offset_html(self):
"
14889,"def test_missing_template_generates_406(self):
"
14890,"def __init__(self,view):
"
14891,"def extract(self,content):
"
14892,"def replace(self,content):
"
14893,"def resolve(self,content):
"
14894,"def get_link_command(self):
"
14895,"def execute(self,content):
"
14896,"def __init__(self,view):
"
14897,"def extract(self,content):
"
14898,"def replace(self,match):
"
14899,"def __init__(self):
"
14900,"def create_minion(self,player):
"
14901,"def __init__(self):
"
14902,"def create_minion(self,player):
"
14903,"def __init__(self):
"
14904,"def create_minion(self,player):
"
14905,"def __init__(self):
"
14906,"def create_minion(self,player):
"
14907,"def __init__(self):
"
14908,"def create_minion(self,player):
"
14909,"def __init__(self):
"
14910,"def create_minion(self,player):
"
14911,"def __init__(self):
"
14912,"def create_minion(self,player):
"
14913,"def __init__(self):
"
14914,"def create_minion(self,player):
"
14915,"def __init__(self):
"
14916,"def create_minion(self,player):
"
14917,"def __init__(self):
"
14918,"def create_minion(self,player):
"
14919,"def __init__(self):
"
14920,"def create_minion(self,player):
"
14921,"def __init__(self):
"
14922,"def create_minion(self,player):
"
14923,"def __init__(self):
"
14924,"def create_minion(self,player):
"
14925,"def __init__(self):
"
14926,"def create_minion(self,player):
"
14927,"def __init__(self):
"
14928,"def create_minion(self,player):
"
14929,"def __init__(self):
"
14930,"def play(self,game):
"
14931,"def __to_json__(self):
"
14932,"def __update_json__(self,json):
"
14933,"def __init__(self,card,index = - 1,target = None):
"
14934,"def play(self,game):
"
14935,"def to_output_string(self):
"
14936,"def __to_json__(self):
"
14937,"def __from_json__(self,card,index = - 1,target = None):
"
14938,"def __init__(self,character,target):
"
14939,"def to_output_string(self):
"
14940,"def play(self,game):
"
14941,"def __to_json__(self):
"
14942,"def __from_json__(self,character,target):
"
14943,"def __init__(self,target = None):
"
14944,"def to_output_string(self):
"
14945,"def play(self,game):
"
14946,"def __to_json__(self):
"
14947,"def __from_json__(self,target = None):
"
14948,"def __init__(self):
"
14949,"def to_output_string(self):
"
14950,"def play(self,game):
"
14951,"def __to_json__(self):
"
14952,"def __from_json__(self):
"
14953,"def __init__(self):
"
14954,"def to_output_string(self):
"
14955,"def play(self,game):
"
14956,"def __to_json__(self):
"
14957,"def __from_json__(self):
"
14958,"def __init__(self):
"
14959,"def to_output_string(self):
"
14960,"def play(self,game):
"
14961,"def __to_json__(self):
"
14962,"def __from_json__(self):
"
14963,"def setUp(self):
"
14964,"def test_AvengingWrath(self):
"
14965,"def test_BlessedChampion(self):
"
14966,"def test_BlessedChampion_and_Cogmaster(self):
"
14967,"def test_BlessingOfKings(self):
"
14968,"def test_BlessingOfMight(self):
"
14969,"def test_BlessingOfWisdom(self):
"
14970,"def test_Consecration(self):
"
14971,"def test_DivineFavor(self):
"
14972,"def test_Equality(self):
"
14973,"def test_HammerOfWrath(self):
"
14974,"def test_HandOfProtection(self):
"
14975,"def test_HolyLight(self):
"
14976,"def test_HolyWrath(self):
"
14977,"def test_HolyWrath_fatigue(self):
"
14978,"def test_Humility(self):
"
14979,"def test_LayOnHands(self):
"
14980,"def test_AldorPeacekeeper(self):
"
14981,"def test_ArgentProtector(self):
"
14982,"def test_GuardianOfKings(self):
"
14983,"def test_EyeForAnEye(self):
"
14984,"def test_NobleSacrifice(self):
"
14985,"def test_Redemption(self):
"
14986,"def test_RedemptionEnemy(self):
"
14987,"def test_RedemptionAoE(self):
"
14988,"def test_Redemption_NobleSacrifice(self):
"
14989,"def test_Redemption_full_board(self):
"
14990,"def test_Repentance(self):
"
14991,"def test_RepentanceSelf(self):
"
14992,"def test_LightsJustice(self):
"
14993,"def test_SwordOfJustice(self):
"
14994,"def test_TruesilverChampion(self):
"
14995,"def test_TirionFordring(self):
"
14996,"def test_Avenge(self):
"
14997,"def test_AvengewithAoE(self):
"
14998,"def test_NobleSacrifice_hero(self):
"
14999,"def test_CobaltGuardian(self):
"
15000,"def test_Coghammer(self):
"
15001,"def test_SealOfLight(self):
"
15002,"def test_MusterForBattle(self):
"
15003,"def test_Quartermaster(self):
"
15004,"def test_ScarletPurifier(self):
"
15005,"def test_BolvarFordragon(self):
"
15006,"def test_Bolvar_and_Hobgoblin(self):
"
15007,"def test_Bolvar_and_Warsong(self):
"
15008,"def test_SolemnVigil(self):
"
15009,"def test_DragonConsort_no_dragon(self):
"
15010,"def test_DragonConsort(self):
"
15011,"def test_ArgentLance(self):
"
15012,"def test_ArgentLance_lost_joust(self):
"
15013,"def __init__(self,as_varname,content_types):
"
15014,"def render(self,context):
"
15015,"def __init__(self,count,content_types,template_path = None):
"
15016,"def __init__(self,count,as_varname,content_types):
"
15017,"def render(self,context):
"
15018,"def _setup(self):
"
15019,"def __init__(self,* args):
"
15020,"def __setattr__(self,name,value):
"
15021,"def __init__(self,version):
"
15022,"def get_char_count(self):
"
15023,"def get_token_count(self):
"
15024,"def get_line_count(self):
"
15025,"def get_title(self):
"
15026,"def get_byline(self):
"
15027,"def tokens(self):
"
15028,"def root(self):
"
15029,"def version(self):
"
15030,"def update_from_lines(self,lines):
"
15031,"def to_lines(self,writer_cls = None,writer_args = None):
"
15032,"def reparse(self,writer_cls = None,writer_args = None):
"
15033,"def __init__(self,tokens,root,args = None):
"
15034,"def _walk_token(self,token):
"
15035,"def _walk_value(self,value):
"
15036,"def _walk(self,node):
"
15037,"def walk(self):
"
15038,"def _default_node_handler(self,node):
"
15039,"def to_lines(self):
"
15040,"def to_lines(self):
"
15041,"def __init__(self,* args,** kwargs):
"
15042,"def _get_code_for_spaces(self,node):
"
15043,"def _get_name(self,node,tok):
"
15044,"def _get_text(self,node,keyword):
"
15045,"def _get_semis(self,node):
"
15046,"def _walk_Chunk(self,node):
"
15047,"def _walk_StatAssignment(self,node):
"
15048,"def _walk_StatFunctionCall(self,node):
"
15049,"def _walk_StatDo(self,node):
"
15050,"def _walk_StatWhile(self,node):
"
15051,"def _walk_StatRepeat(self,node):
"
15052,"def _walk_StatIf(self,node):
"
15053,"def _walk_StatForStep(self,node):
"
15054,"def _walk_StatForIn(self,node):
"
15055,"def _walk_StatFunction(self,node):
"
15056,"def _walk_StatLocalFunction(self,node):
"
15057,"def _walk_StatLocalAssignment(self,node):
"
15058,"def _walk_StatGoto(self,node):
"
15059,"def _walk_StatLabel(self,node):
"
15060,"def _walk_StatBreak(self,node):
"
15061,"def _walk_StatReturn(self,node):
"
15062,"def _walk_FunctionName(self,node):
"
15063,"def _walk_FunctionArgs(self,node):
"
15064,"def _walk_VarList(self,node):
"
15065,"def _walk_VarName(self,node):
"
15066,"def _walk_VarIndex(self,node):
"
15067,"def _walk_VarAttribute(self,node):
"
15068,"def _walk_NameList(self,node):
"
15069,"def _walk_ExpList(self,node):
"
15070,"def _walk_ExpValue(self,node):
"
15071,"def _walk_VarargDots(self,node):
"
15072,"def _walk_ExpBinOp(self,node):
"
15073,"def _walk_ExpUnOp(self,node):
"
15074,"def _walk_FunctionCall(self,node):
"
15075,"def _walk_FunctionCallMethod(self,node):
"
15076,"def _walk_Function(self,node):
"
15077,"def _walk_FunctionBody(self,node):
"
15078,"def _walk_TableConstructor(self,node):
"
15079,"def _walk_FieldExpKey(self,node):
"
15080,"def _walk_FieldNamedKey(self,node):
"
15081,"def _walk_FieldExp(self,node):
"
15082,"def _walk(self,node):
"
15083,"def to_lines(self):
"
15084,"def __init__(self):
"
15085,"def get_short_name(self,name):
"
15086,"def __init__(self,* args,** kwargs):
"
15087,"def _get_name(self,node,tok):
"
15088,"def _get_semis(self,node):
"
15089,"def __init__(self,* args,** kwargs):
"
15090,"def __init__(self,* args,** kwargs):
"
15091,"def to_lines(self):
"
15092,"def __init__(self,* args,** kwargs):
"
15093,"def to_lines(self):
"
15094,"def __init__(self):
"
15095,"def Activate(self,x):
"
15096,"def Derivative(self,x):
"
15097,"def __init__(self,bucket,name = None):
"
15098,"def __repr__(self):
"
15099,"def url(self,scheme = 'http'):
"
15100,"def url(self,scheme = 'rtmp'):
"
15101,"def __init__(self,connection = None):
"
15102,"def __repr__(self):
"
15103,"def startElement(self,name,attrs,connection):
"
15104,"def endElement(self,name,value,connection):
"
15105,"def __init__(self,connection = None):
"
15106,"def __repr__(self):
"
15107,"def startElement(self,name,attrs,connection):
"
15108,"def endElement(self,name,value,connection):
"
15109,"def __init__(self,connection = None,metric = None,granularity = None):
"
15110,"def __repr__(self):
"
15111,"def startElement(self,name,attrs,connection):
"
15112,"def endElement(self,name,value,connection):
"
15113,"def __init__(self,connection = None,name = None,launch_config = None,availability_zones = None,load_balancers = None,default_cooldown = None,health_check_type = None,health_check_period = None,placement_group = None,vpc_zone_identifier = None,desired_capacity = None,min_size = None,max_size = None,** kwargs):
"
15114,"def _get_cooldown(self):
"
15115,"def _set_cooldown(self,val):
"
15116,"def __repr__(self):
"
15117,"def startElement(self,name,attrs,connection):
"
15118,"def endElement(self,name,value,connection):
"
15119,"def set_capacity(self,capacity):
"
15120,"def update(self):
"
15121,"def shutdown_instances(self):
"
15122,"def delete(self,force_delete = False):
"
15123,"def get_activities(self,activity_ids = None,max_records = 50):
"
15124,"def suspend_processes(self,scaling_processes = None):
"
15125,"def resume_processes(self,scaling_processes = None):
"
15126,"def __init__(self,connection = None):
"
15127,"def __repr__(self):
"
15128,"def startElement(self,name,attrs,connection):
"
15129,"def endElement(self,name,value,connection):
"
15130,"def __init__(self,connection = None):
"
15131,"def __repr__(self):
"
15132,"def startElement(self,name,attrs,connection):
"
15133,"def endElement(self,name,value,connection):
"
15134,"def stop_all(self):
"
15135,"def __init__(self,connection = None):
"
15136,"def __repr__(self):
"
15137,"def startElement(self,name,attrs,connection):
"
15138,"def endElement(self,name,value,connection):
"
15139,"def _update(self,updated):
"
15140,"def update(self,validate = False):
"
15141,"def terminate(self):
"
15142,"def stop(self,force = False):
"
15143,"def start(self):
"
15144,"def reboot(self):
"
15145,"def get_console_output(self):
"
15146,"def confirm_product(self,product_code):
"
15147,"def use_ip(self,ip_address):
"
15148,"def monitor(self):
"
15149,"def unmonitor(self):
"
15150,"def get_attribute(self,attribute):
"
15151,"def modify_attribute(self,attribute,value):
"
15152,"def reset_attribute(self,attribute):
"
15153,"def __init__(self,parent = None):
"
15154,"def startElement(self,name,attrs,connection):
"
15155,"def endElement(self,name,value,connection):
"
15156,"def __init__(self,parent = None):
"
15157,"def startElement(self,name,attrs,connection):
"
15158,"def endElement(self,name,value,connection):
"
15159,"def __init__(self,section,parent = None):
"
15160,"def startElement(self,name,attrs,connection):
"
15161,"def endElement(self,name,value,connection):
"
15162,"def __init__(self,name,contained_key):
"
15163,"def __iter__(self):
"
15164,"def __str__(self):
"
15165,"def delete_key(self,key_name,headers = None,version_id = None,mfa_token = None):
"
15166,"def get_all_keys(self,headers = None,** params):
"
15167,"def get_key(self,key_name,headers = None,version_id = None,key_type = Key.KEY_REGULAR_FILE):
"
15168,"def new_key(self,key_name = None,key_type = Key.KEY_REGULAR_FILE):
"
15169,"def __init__(self,aws_access_key_id = None,aws_secret_access_key = None,is_secure = True,port = None,proxy = None,proxy_port = None,proxy_user = None,proxy_pass = None,host = None,debug = 0,https_connection_factory = None):
"
15170,"def _required_auth_capability(self):
"
15171,"def get_account_balance(self):
"
15172,"def register_hit_type(self,title,description,reward,duration,keywords = None,approval_delay = None,qual_req = None):
"
15173,"def set_email_notification(self,hit_type,email,event_types = None):
"
15174,"def set_rest_notification(self,hit_type,url,event_types = None):
"
15175,"def _set_notification(self,hit_type,transport,destination,event_types = None):
"
15176,"def create_hit(self,hit_type = None,question = None,lifetime = datetime.timedelta(days = 7),max_assignments = 1,title = None,description = None,keywords = None,reward = None,duration = datetime.timedelta(days = 7),approval_delay = None,annotation = None,questions = None,qualifications = None,response_groups = None):
"
15177,"def change_hit_type_of_hit(self,hit_id,hit_type):
"
15178,"def get_reviewable_hits(self,hit_type = None,status = 'Reviewable',sort_by = 'Expiration',sort_direction = 'Ascending',page_size = 10,page_number = 1):
"
15179,"def search_hits(self,sort_by = 'CreationTime',sort_direction = 'Ascending',page_size = 10,page_number = 1,response_groups = None):
"
15180,"def get_assignments(self,hit_id,status = None,sort_by = 'SubmitTime',sort_direction = 'Ascending',page_size = 10,page_number = 1,response_groups = None):
"
15181,"def approve_assignment(self,assignment_id,feedback = None):
"
15182,"def reject_assignment(self,assignment_id,feedback = None):
"
15183,"def get_hit(self,hit_id,response_groups = None):
"
15184,"def set_reviewing(self,hit_id,revert = None):
"
15185,"def disable_hit(self,hit_id,response_groups = None):
"
15186,"def dispose_hit(self,hit_id):
"
15187,"def expire_hit(self,hit_id):
"
15188,"def extend_hit(self,hit_id,assignments_increment = None,expiration_increment = None):
"
15189,"def get_help(self,about,help_type = 'Operation'):
"
15190,"def grant_bonus(self,worker_id,assignment_id,bonus_price,reason):
"
15191,"def block_worker(self,worker_id,reason):
"
15192,"def unblock_worker(self,worker_id,reason):
"
15193,"def notify_workers(self,worker_ids,subject,message_text):
"
15194,"def create_qualification_type(self,name,description,status,keywords = None,retry_delay = None,test = None,answer_key = None,answer_key_xml = None,test_duration = None,auto_granted = False,auto_granted_value = 1):
"
15195,"def get_qualification_type(self,qualification_type_id):
"
15196,"def get_qualifications_for_qualification_type(self,qualification_type_id):
"
15197,"def update_qualification_type(self,qualification_type_id,description = None,status = None,retry_delay = None,test = None,answer_key = None,test_duration = None,auto_granted = None,auto_granted_value = None):
"
15198,"def dispose_qualification_type(self,qualification_type_id):
"
15199,"def search_qualification_types(self,query = None,sort_by = 'Name',sort_direction = 'Ascending',page_size = 10,page_number = 1,must_be_requestable = True,must_be_owned_by_caller = True):
"
15200,"def get_qualification_requests(self,qualification_type_id,sort_by = 'Expiration',sort_direction = 'Ascending',page_size = 10,page_number = 1):
"
15201,"def grant_qualification(self,qualification_request_id,integer_value = 1):
"
15202,"def revoke_qualification(self,subject_id,qualification_type_id,reason = None):
"
15203,"def assign_qualification(self,qualification_type_id,worker_id,value = 1,send_notification = True):
"
15204,"def get_qualification_score(self,qualification_type_id,worker_id):
"
15205,"def update_qualification_score(self,qualification_type_id,worker_id,value):
"
15206,"def _process_request(self,request_type,params,marker_elems = None):
"
15207,"def _process_response(self,response,marker_elems = None):
"
15208,"def __init__(self,connection):
"
15209,"def startElement(self,name,attrs,connection):
"
15210,"def endElement(self,name,value,connection):
"
15211,"def _has_expired(self):
"
15212,"def __init__(self,connection):
"
15213,"def endElement(self,name,value,connection):
"
15214,"def __init__(self,connection):
"
15215,"def endElement(self,name,value,connection):
"
15216,"def __init__(self,connection = None,name = None,endpoint = None,connection_cls = None):
"
15217,"def __repr__(self):
"
15218,"def startElement(self,name,attrs,connection):
"
15219,"def endElement(self,name,value,connection):
"
15220,"def connect(self,** kw_params):
"
15221,"def __init__(self,queue = None,body = ''):
"
15222,"def __len__(self):
"
15223,"def startElement(self,name,attrs,connection):
"
15224,"def endElement(self,name,value,connection):
"
15225,"def encode(self,value):
"
15226,"def decode(self,value):
"
15227,"def set_body(self,body):
"
15228,"def get_body(self):
"
15229,"def get_body_encoded(self):
"
15230,"def delete(self):
"
15231,"def change_visibility(self,visibility_timeout):
"
15232,"def encode(self,value):
"
15233,"def decode(self,value):
"
15234,"def __init__(self,queue = None,body = None,xml_attrs = None):
"
15235,"def decode(self,value):
"
15236,"def encode(self,value):
"
15237,"def __getitem__(self,key):
"
15238,"def __setitem__(self,key,value):
"
15239,"def keys(self):
"
15240,"def values(self):
"
15241,"def items(self):
"
15242,"def has_key(self,key):
"
15243,"def update(self,d):
"
15244,"def get(self,key,default = None):
"
15245,"def decode(self,value):
"
15246,"def encode(self,value):
"
15247,"def __unicode__(self):
"
15248,"def __unicode__(self):
"
15249,"def run(self,text):
"
15250,"def run(self,text):
"
15251,"def escape(self,html):
"
15252,"def run(self,text):
"
15253,"def unescape(self,m):
"
15254,"def run(self,text):
"
15255,"def __init__(self,** options):
"
15256,"def _get_css_class(self,ttype):
"
15257,"def _create_stylesheet(self):
"
15258,"def _decodeifneeded(self,value):
"
15259,"def _wrap_inlinelinenos(self,inner):
"
15260,"def _wrap_lineanchors(self,inner):
"
15261,"def _wrap_div(self,inner):
"
15262,"def _wrap_pre(self,inner):
"
15263,"def _format_lines(self,tokensource):
"
15264,"def _highlight_lines(self,tokensource):
"
15265,"def wrap(self,source,outfile):
"
15266,"def format_unencoded(self,tokensource,outfile):
"
15267,"def __init__(self):
"
15268,"def load(self):
"
15269,"def check_version(self):
"
15270,"def save(self):
"
15271,"def get_text(self,element):
"
15272,"def parse_books(self,url_handler):
"
15273,"def handle_book(self,book_element):
"
15274,"def parse_shelfs(self,url_handler):
"
15275,"def handle_shelf(self,shelf_element):
"
15276,"def handle_authors(self,authors_element):
"
15277,"def handle_author(self,author_element):
"
15278,"def __init__(self,app,path):
"
15279,"def _get_config(self):
"
15280,"def _get_json_config(self,path):
"
15281,"def _get_yaml_config(self,path):
"
15282,"def _populate_vars(self):
"
15283,"def _sub(self,txt):
"
15284,"def _sub_or_pass(self,path,data):
"
15285,"def _inject(self,dest_path):
"
15286,"def _inject_or_pass(self,path):
"
15287,"def _copy_path(self,tmpl_path,dest_path):
"
15288,"def _write_file(self,dest_path,data,overwrite = False):
"
15289,"def _walk_path(self,path):
"
15290,"def copy(self,dest_basedir):
"
15291,"def setUp(self):
"
15292,"def tearDown(self):
"
15293,"def test_configobj(self):
"
15294,"def test_has_section(self):
"
15295,"def test_keys(self):
"
15296,"def test_parse_file_bad_path(self):
"
15297,"def test_parse_file(self):
"
15298,"def get_headers(self):
"
15299,"def deserialize(self,serialized_string):
"
15300,"def serialize(self,dict_obj):
"
15301,"def __init__(self,** kw):
"
15302,"def deserialize(self,serialized_string):
"
15303,"def serialize(self,dict_obj):
"
15304,"def get_headers(self):
"
15305,"def __call__(self,search,output = 'names'):
"
15306,"def __call__(self,key = curdir):
"
15307,"def __init__(self,size = None,mtime = None,filename = None):
"
15308,"def __eq__(self,other):
"
15309,"def __ne__(self,other):
"
15310,"def __call__(self,demoposarg,demooptposarg1 = 99,demooptposarg2 = 999,demoarg = 100):
"
15311,"def __init__(self,categories_filter = None,directories_list = None,plugin_info_ext = None,plugin_locator = None):
"
15312,"def _locatorDecide(self,plugin_info_ext,plugin_locator):
"
15313,"def setCategoriesFilter(self,categories_filter):
"
15314,"def setPluginPlaces(self,directories_list):
"
15315,"def updatePluginPlaces(self,directories_list):
"
15316,"def setPluginInfoExtension(self,ext):
"
15317,"def setPluginInfoClass(self,picls,strategies = None):
"
15318,"def getPluginInfoClass(self):
"
15319,"def setPluginLocator(self,plugin_locator,dir_list = None,picls = None):
"
15320,"def getPluginLocator(self):
"
15321,"def _gatherCorePluginInfo(self,directory,plugin_info_filename):
"
15322,"def _getPluginNameAndModuleFromStream(self,infoFileObject,candidate_infofile = ""<buffered info>""):
"
15323,"def getCategories(self):
"
15324,"def removePluginFromCategory(self,plugin,category_name):
"
15325,"def appendPluginToCategory(self,plugin,category_name):
"
15326,"def getPluginsOfCategory(self,category_name):
"
15327,"def getAllPlugins(self):
"
15328,"def getPluginCandidates(self):
"
15329,"def removePluginCandidate(self,candidateTuple):
"
15330,"def appendPluginCandidate(self,candidateTuple):
"
15331,"def locatePlugins(self):
"
15332,"def loadPlugins(self,callback = None):
"
15333,"def instanciateElement(self,element):
"
15334,"def collectPlugins(self):
"
15335,"def getPluginByName(self,name,category = ""Default""):
"
15336,"def activatePluginByName(self,name,category = ""Default""):
"
15337,"def deactivatePluginByName(self,name,category = ""Default""):
"
15338,"def __init__(self):
"
15339,"def setBehaviour(self,list_of_pmd):
"
15340,"def get(self):
"
15341,"def _categories(self,definition):
"
15342,"def __init__(self,definition):
"
15343,"def __len__(self):
"
15344,"def __init__(self,value):
"
15345,"def __unicode__(self):
"
15346,"def __eq__(self,other):
"
15347,"def __unicode__(self):
"
15348,"def __init__(self,field,value):
"
15349,"def __unicode__(self):
"
15350,"def __hash__(self):
"
15351,"def __eq__(self,other):
"
15352,"def __ne__(self,other):
"
15353,"def get_context_size(self):
"
15354,"def set_context_id(self,i):
"
15355,"def update_context(self,ctx):
"
15356,"def __init__(self,field,operator,value,quote_field = True):
"
15357,"def __hash__(self):
"
15358,"def __eq__(self,other):
"
15359,"def get_context_size(self):
"
15360,"def set_context_id(self,i):
"
15361,"def update_context(self,ctx):
"
15362,"def insert_tuple(self):
"
15363,"def insert_tuple(self):
"
15364,"def __init__(self,field,value,operation = None,previous = None):
"
15365,"def _analyze(self):
"
15366,"def get_context_size(self):
"
15367,"def update_context(self,ctx):
"
15368,"def __unicode__(self):
"
15369,"def _analyze(self):
"
15370,"def get_context_size(self):
"
15371,"def update_context(self,ctx):
"
15372,"def __unicode__(self):
"
15373,"def get_context_size(self):
"
15374,"def update_context(self,ctx):
"
15375,"def _analyze(self):
"
15376,"def _analyze(self):
"
15377,"def get_context_size(self):
"
15378,"def update_context(self,ctx):
"
15379,"def is_assignment(self):
"
15380,"def __unicode__(self):
"
15381,"def __init__(self,field,value,previous = None):
"
15382,"def get_context_size(self):
"
15383,"def update_context(self,ctx):
"
15384,"def __unicode__(self):
"
15385,"def __init__(self,field):
"
15386,"def __unicode__(self):
"
15387,"def update_context(self,ctx):
"
15388,"def get_context_size(self):
"
15389,"def __init__(self,field,value,previous = None):
"
15390,"def _analyze(self):
"
15391,"def update_context(self,ctx):
"
15392,"def get_context_size(self):
"
15393,"def __unicode__(self):
"
15394,"def __init__(self,table,timestamp = None,where = None,fetch_size = None,conditionals = None):
"
15395,"def _update_part_key_values(self,field_index_map,clauses,parts):
"
15396,"def partition_key_values(self,field_index_map):
"
15397,"def add_where(self,column,operator,value,quote_field = True):
"
15398,"def _add_where_clause(self,clause):
"
15399,"def get_context(self):
"
15400,"def add_conditional_clause(self,clause):
"
15401,"def _get_conditionals(self):
"
15402,"def get_context_size(self):
"
15403,"def update_context_id(self,i):
"
15404,"def timestamp_normalized(self):
"
15405,"def __unicode__(self):
"
15406,"def __repr__(self):
"
15407,"def _where(self):
"
15408,"def __init__(self,table,fields = None,count = False,where = None,order_by = None,limit = None,allow_filtering = False,distinct_fields = None,fetch_size = None):
"
15409,"def __unicode__(self):
"
15410,"def __init__(self,table,assignments = None,where = None,ttl = None,timestamp = None,conditionals = None):
"
15411,"def update_context_id(self,i):
"
15412,"def partition_key_values(self,field_index_map):
"
15413,"def add_assignment(self,column,value):
"
15414,"def _add_assignment_clause(self,clause):
"
15415,"def is_empty(self):
"
15416,"def get_context(self):
"
15417,"def __init__(self,table,assignments = None,where = None,ttl = None,timestamp = None,if_not_exists = False):
"
15418,"def __unicode__(self):
"
15419,"def __init__(self,table,assignments = None,where = None,ttl = None,timestamp = None,conditionals = None,if_exists = False):
"
15420,"def __unicode__(self):
"
15421,"def get_context(self):
"
15422,"def update_context_id(self,i):
"
15423,"def add_update(self,column,value,operation = None,previous = None):
"
15424,"def __init__(self,table,fields = None,where = None,timestamp = None,conditionals = None,if_exists = False):
"
15425,"def update_context_id(self,i):
"
15426,"def get_context(self):
"
15427,"def add_field(self,field):
"
15428,"def __unicode__(self):
"
15429,"def __init__(self,offset):
"
15430,"def utcoffset(self,dt):
"
15431,"def tzname(self,dt):
"
15432,"def dst(self,dt):
"
15433,"def test_query_filter_parsing(self):
"
15434,"def test_query_expression_parsing(self):
"
15435,"def test_using_invalid_column_names_in_filter_kwargs_raises_error(self):
"
15436,"def test_using_nonexistant_column_names_in_query_args_raises_error(self):
"
15437,"def test_using_non_query_operators_in_query_args_raises_error(self):
"
15438,"def test_queryset_is_immutable(self):
"
15439,"def test_queryset_limit_immutability(self):
"
15440,"def test_the_all_method_duplicates_queryset(self):
"
15441,"def test_queryset_with_distinct(self):
"
15442,"def test_count(self):
"
15443,"def test_query_expression_count(self):
"
15444,"def test_iteration(self):
"
15445,"def test_multiple_iterations_work_properly(self):
"
15446,"def test_multiple_iterators_are_isolated(self):
"
15447,"def test_get_success_case(self):
"
15448,"def test_query_expression_get_success_case(self):
"
15449,"def test_get_doesnotexist_exception(self):
"
15450,"def test_get_multipleobjects_exception(self):
"
15451,"def test_distinct_without_parameter(self):
"
15452,"def test_distinct_with_parameter(self):
"
15453,"def test_distinct_with_filter(self):
"
15454,"def test_distinct_with_non_partition(self):
"
15455,"def test_zero_result(self):
"
15456,"def test_distinct_with_explicit_count(self):
"
15457,"def test_order_by_success_case(self):
"
15458,"def test_ordering_by_non_second_primary_keys_fail(self):
"
15459,"def test_ordering_by_non_primary_keys_fails(self):
"
15460,"def test_ordering_on_indexed_columns_fails(self):
"
15461,"def test_ordering_on_multiple_clustering_columns(self):
"
15462,"def test_out_of_range_index_raises_error(self):
"
15463,"def test_array_indexing_works_properly(self):
"
15464,"def test_negative_indexing_works_properly(self):
"
15465,"def test_slicing_works_properly(self):
"
15466,"def test_negative_slicing(self):
"
15467,"def test_primary_key_or_index_must_be_specified(self):
"
15468,"def test_primary_key_or_index_must_have_equal_relation_filter(self):
"
15469,"def test_indexed_field_can_be_queried(self):
"
15470,"def test_delete(self):
"
15471,"def test_delete_without_partition_key(self):
"
15472,"def test_delete_without_any_where_args(self):
"
15473,"def test_range_deletion(self):
"
15474,"def test_tzaware_datetime_support(self):
"
15475,"def test_success_case(self):
"
15476,"def test_kwarg_success_case(self):
"
15477,"def test_query_expression_success_case(self):
"
15478,"def test_kwarg_success_case(self):
"
15479,"def test_query_expression_success_case(self):
"
15480,"def test_values_list(self):
"
15481,"def test_objects_property_returns_fresh_queryset(self):
"
15482,"def test_paged_result_handling(self):
"
15483,"def test_default_timeout(self):
"
15484,"def test_float_timeout(self):
"
15485,"def test_none_timeout(self):
"
15486,"def setUp(self):
"
15487,"def test_default_timeout(self):
"
15488,"def test_float_timeout(self):
"
15489,"def test_none_timeout(self):
"
15490,"def test_timeout_then_batch(self):
"
15491,"def test_batch_then_timeout(self):
"
15492,"def test_basic_crud(self):
"
15493,"def test_slice(self):
"
15494,"def test_order(self):
"
15495,"def test_index(self):
"
15496,"def test_db_field_names_used(self):
"
15497,"def test_defaultFetchSize(self):
"
15498,"def test_defaultFetchSize(self):
"
15499,"def test_get_support(self):
"
15500,"def test_add_license_get_details_and_deactivate(self):
"
15501,"def test_get_install_id(self):
"
15502,"def test_get_apps(self):
"
15503,"def test_get_app_info(self):
"
15504,"def test_upload_start_and_uninstall_app(self):
"
15505,"def test_get_app_health(self):
"
15506,"def test_download_logs(self):
"
15507,"def test_login(self):
"
15508,"def test_logout(self):
"
15509,"def activate_user(self,activation_key):
"
15510,"def create_inactive_user(self,username,password,email,send_email = True,profile_callback = None):
"
15511,"def create_profile(self,user):
"
15512,"def delete_expired_users(self):
"
15513,"def activation_key_expired(self):
"
15514,"def __getattr__(self,name):
"
15515,"def __init__(self,dct):
"
15516,"def test_function_doc(self):
"
15517,"def test_attribute_docstring(self):
"
15518,"def test_multiple_docstrings(self):
"
15519,"def test_completion(self):
"
15520,"def test_docstrings_type_dotted_import(self):
"
15521,"def test_docstrings_param_type(self):
"
15522,"def test_docstrings_type_str(self):
"
15523,"def test_docstring_instance(self):
"
15524,"def test_numpydoc_docstring(self):
"
15525,"def test_numpydoc_docstring_set_of_values(self):
"
15526,"def test_numpydoc_alternative_types(self):
"
15527,"def get(self,url):
"
15528,"def get(self,url):
"
15529,"def __init__(self,database,user,password,host,port,socket,charset,local_infile,ssl = False):
"
15530,"def run(self,statement):
"
15531,"def execute_normal_sql(self,split_sql):
"
15532,"def tables(self):
"
15533,"def table_columns(self):
"
15534,"def databases(self):
"
15535,"def functions(self):
"
15536,"def show_candidates(self):
"
15537,"def users(self):
"
15538,"def server_type(self):
"
15539,"def __init__(self,name,image,command = None,links = None,volumes = None,publish_ports = None,expose_ports = None,environment = None,hostname = None,dns = None,start_delay = 0,neutral = False,holy = False,container_name = None):
"
15540,"def __init__(self,containers,network = None):
"
15541,"def __init__(self,marathon_url,timeout = http.DEFAULT_TIMEOUT):
"
15542,"def _create_url(self,path):
"
15543,"def get_version(self):
"
15544,"def get_about(self):
"
15545,"def get_app(self,app_id,version = None):
"
15546,"def get_groups(self):
"
15547,"def get_group(self,group_id,version = None):
"
15548,"def get_app_versions(self,app_id,max_count = None):
"
15549,"def get_apps(self):
"
15550,"def get_apps_for_framework(self,framework_name):
"
15551,"def add_app(self,app_resource):
"
15552,"def _update(self,resource_id,payload,force = None,url_endpoint = ""apps""):
"
15553,"def update_app(self,app_id,payload,force = None):
"
15554,"def update_group(self,group_id,payload,force = None):
"
15555,"def scale_app(self,app_id,instances,force = None):
"
15556,"def scale_group(self,group_id,scale_factor,force = None):
"
15557,"def stop_app(self,app_id,force = None):
"
15558,"def remove_app(self,app_id,force = None):
"
15559,"def remove_group(self,group_id,force = None):
"
15560,"def kill_tasks(self,app_id,scale = None,host = None):
"
15561,"def restart_app(self,app_id,force = None):
"
15562,"def get_deployment(self,deployment_id):
"
15563,"def get_deployments(self,app_id = None):
"
15564,"def _cancel_deployment(self,deployment_id,force):
"
15565,"def rollback_deployment(self,deployment_id):
"
15566,"def stop_deployment(self,deployment_id):
"
15567,"def get_tasks(self,app_id):
"
15568,"def get_task(self,task_id):
"
15569,"def stop_task(self,task_id,wipe = None):
"
15570,"def get_app_schema(self):
"
15571,"def normalize_app_id(self,app_id):
"
15572,"def create_group(self,group_resource):
"
15573,"def get_leader(self):
"
15574,"def __init__(self,template,errors):
"
15575,"def __init__(self,subscription_id,tenant_id,client_id,client_secret,random_resource_group_name_prefix = 'testing',** kwargs):
"
15576,"def subscription_endpoint(self):
"
15577,"def _get_subscription_endpoint(self,sub_id):
"
15578,"def resource_endpoint(self):
"
15579,"def _get_resource_endpoint(self,sub_url,resource_group):
"
15580,"def deployment_endpoint(self):
"
15581,"def _generate_api_urls(self):
"
15582,"def get_token_from_client_credentials(self,endpoint,client_id,client_secret):
"
15583,"def get_auth_token(self):
"
15584,"def verify(self,template_body_json,template_parameters):
"
15585,"def get_template_deployment(self):
"
15586,"def get_template_deployment_status(self):
"
15587,"def create_template_deployment(self,template_body_json,template_parameters):
"
15588,"def cancel_template_deployment(self):
"
15589,"def delete_template_deployment(self):
"
15590,"def get_template_json(self,template_body_json,template_parameters):
"
15591,"def get_resource_group(self,resource_group_name = None):
"
15592,"def create_resource_group(self,location = 'East US',resource_group_name = None):
"
15593,"def delete_resource_group(self,resource_group_name = None):
"
15594,"def status_delete_resource_group(self,poll_location):
"
15595,"def get_random_resource_group_name(self):
"
15596,"def get_random_deployment_name(self):
"
15597,"def __init__(self,path):
"
15598,"def __full_path(self,path):
"
15599,"def fetch(self,path):
"
15600,"def download_inner(self,path,local_path):
"
15601,"def __copy(self,full_source_path,full_destination_path):
"
15602,"def copy(self,source_path,destination_path):
"
15603,"def upload(self,destination_path,blob = None,local_path = None,no_cache = None,content_type = None):
"
15604,"def exists(self,path):
"
15605,"def remove_recursive(self,path):
"
15606,"def list_recursive(self,path):
"
15607,"def url(self):
"
15608,"def importBox(self,importType,fileName):
"
15609,"def testSTEP(self):
"
15610,"def test_email_not_found(self):
"
15611,"def test_email_found(self):
"
15612,"def _test_confirm_start(self):
"
15613,"def test_confirm_valid(self):
"
15614,"def test_confirm_invalid(self):
"
15615,"def test_confirm_invalid_post(self):
"
15616,"def test_confirm_complete(self):
"
15617,"def test_confirm_different_passwords(self):
"
15618,"def tearDown(self):
"
15619,"def login(self,password = 'password'):
"
15620,"def fail_login(self,password = 'password'):
"
15621,"def logout(self):
"
15622,"def test_password_change_fails_with_invalid_old_password(self):
"
15623,"def test_password_change_fails_with_mismatched_passwords(self):
"
15624,"def test_password_change_succeeds(self):
"
15625,"def __init__(self,type_input):
"
15626,"def __str__(self):
"
15627,"def __eq__(self,other):
"
15628,"def __ne__(self,other):
"
15629,"def name(self):
"
15630,"def django(self):
"
15631,"def test01_initial_sql(self):
"
15632,"def test02_proxy(self):
"
15633,"def test03a_kml(self):
"
15634,"def test04_transform(self):
"
15635,"def test05_extent(self):
"
15636,"def test06_make_line(self):
"
15637,"def test09_disjoint(self):
"
15638,"def test10_contains_contained(self):
"
15639,"def test11_lookup_insert_transform(self):
"
15640,"def test12_null_geometries(self):
"
15641,"def test13_left_right(self):
"
15642,"def test14_equals(self):
"
15643,"def test15_relate(self):
"
15644,"def test16_createnull(self):
"
15645,"def test17_unionagg(self):
"
15646,"def test18_geometryfield(self):
"
15647,"def test19_centroid(self):
"
15648,"def test20_pointonsurface(self):
"
15649,"def test21_scale(self):
"
15650,"def test22_translate(self):
"
15651,"def test23_numgeom(self):
"
15652,"def test24_numpoints(self):
"
15653,"def test25_geoset(self):
"
15654,"def test26_inherited_geofields(self):
"
15655,"def __init__(self,file):
"
15656,"def __str__(self):
"
15657,"def __repr__(self):
"
15658,"def __nonzero__(self):
"
15659,"def __len__(self):
"
15660,"def _get_name(self):
"
15661,"def _get_mode(self):
"
15662,"def _get_closed(self):
"
15663,"def _get_size(self):
"
15664,"def _set_size(self,size):
"
15665,"def chunks(self,chunk_size = None):
"
15666,"def multiple_chunks(self,chunk_size = None):
"
15667,"def xreadlines(self):
"
15668,"def readlines(self):
"
15669,"def __iter__(self):
"
15670,"def open(self,mode = None):
"
15671,"def seek(self,position):
"
15672,"def tell(self):
"
15673,"def read(self,num_bytes = None):
"
15674,"def write(self,content):
"
15675,"def flush(self):
"
15676,"def close(self):
"
15677,"def __init__(self,content):
"
15678,"def __str__(self):
"
15679,"def __nonzero__(self):
"
15680,"def open(self,mode = None):
"
15681,"def __init__(self):
"
15682,"def contribute_to_class(self,model,name):
"
15683,"def _set_creation_counter(self):
"
15684,"def _copy_to_model(self,model):
"
15685,"def get_empty_query_set(self):
"
15686,"def get_query_set(self):
"
15687,"def none(self):
"
15688,"def all(self):
"
15689,"def count(self):
"
15690,"def dates(self,* args,** kwargs):
"
15691,"def distinct(self,* args,** kwargs):
"
15692,"def extra(self,* args,** kwargs):
"
15693,"def get(self,* args,** kwargs):
"
15694,"def get_or_create(self,** kwargs):
"
15695,"def create(self,** kwargs):
"
15696,"def filter(self,* args,** kwargs):
"
15697,"def complex_filter(self,* args,** kwargs):
"
15698,"def exclude(self,* args,** kwargs):
"
15699,"def in_bulk(self,* args,** kwargs):
"
15700,"def iterator(self,* args,** kwargs):
"
15701,"def latest(self,* args,** kwargs):
"
15702,"def order_by(self,* args,** kwargs):
"
15703,"def select_related(self,* args,** kwargs):
"
15704,"def values(self,* args,** kwargs):
"
15705,"def values_list(self,* args,** kwargs):
"
15706,"def update(self,* args,** kwargs):
"
15707,"def reverse(self,* args,** kwargs):
"
15708,"def _insert(self,values,** kwargs):
"
15709,"def _update(self,values,** kwargs):
"
15710,"def __init__(self,manager):
"
15711,"def get_query_set(self):
"
15712,"def __init__(self,variable):
"
15713,"def render(self,context):
"
15714,"def __init__(self,variable):
"
15715,"def render(self,context):
"
15716,"def __init__(self,variable):
"
15717,"def render(self,context):
"
15718,"def __init__(self,value,noop):
"
15719,"def render(self,context):
"
15720,"def __init__(self,extra_context,singular,plural = None,countervar = None,counter = None):
"
15721,"def __unicode__(self):
"
15722,"def get_object(self,bits):
"
15723,"def items(self):
"
15724,"def item_link(self,item):
"
15725,"def test_serve(self):
"
15726,"def test_unknown_mime_type(self):
"
15727,"def test_copes_with_empty_path_component(self):
"
15728,"def forwards(self,orm):
"
15729,"def queryset(self,request):
"
15730,"def get_changelist(self,request,** kwargs):
"
15731,"def get_query_set(self):
"
15732,"def get_results(self,request):
"
15733,"def __init__(self,group_id):
"
15734,"def __call__(self,request,group):
"
15735,"def actions(self,request,action_list,group):
"
15736,"def panels(self,request,panel_list,group):
"
15737,"def __init__(self,* args,** kwargs):
"
15738,"def __init__(self,renderer):
"
15739,"def _context_get(self,key):
"
15740,"def title(self):
"
15741,"def title_bars(self):
"
15742,"def looping(self):
"
15743,"def thing(self):
"
15744,"def __init__(self,level,rectTuple,image = None):
"
15745,"def update(self):
"
15746,"def load_frames(self,filename):
"
15747,"def updateAnim(self):
"
15748,"def get_accel(self,keys,jumping):
"
15749,"def accelerate(self,accel,speed):
"
15750,"def jump(self,speed,onBlock):
"
15751,"def fall(self,speed):
"
15752,"def get_shortest_distance(self,rect,speed,axis,level):
"
15753,"def check_dir(self,speed,axis):
"
15754,"def check_lines(self,rect,axis,level):
"
15755,"def calculate_distance(self,coord,lines,dir,level):
"
15756,"def convert_pixel_to_level(self,x,y,level):
"
15757,"def scan_line(self,line,start,end,dir,axis,level):
"
15758,"def check_collision(self,speed,minDistance):
"
15759,"def check_on_block(self,rect,level):
"
15760,"def check_head_collision(self,level):
"
15761,"def get_coords(self,level):
"
15762,"def __init__(self,level,rectTuple,image = None):
"
15763,"def update(self,keys,level):
"
15764,"def forwards(self,orm):
"
15765,"def backwards(self,orm):
"
15766,"def create(self,name,image,command,** kwargs):
"
15767,"def destroy(self,name):
"
15768,"def run(self,name,image,entrypoint,command):
"
15769,"def start(self,name):
"
15770,"def state(self,name):
"
15771,"def stop(self,name):
"
15772,"def __init__(self,error_hook = None,pool = None,metrics = None):
"
15773,"def set_parent(self,parent):
"
15774,"def on_start(self):
"
15775,"def on_stop(self,** kwargs):
"
15776,"def pool(self):
"
15777,"def error_hook(self):
"
15778,"def metrics(self):
"
15779,"def spawn(self,func,* args,** kwargs):
"
15780,"def __init__(self,factory):
"
15781,"def __call__(self,* args,** kwargs):
"
15782,"def decorate(self,decorator):
"
15783,"def __get__(self,componentized,cls):
"
15784,"def __init__(self,** kwargs):
"
15785,"def add_component(self,component):
"
15786,"def install(self,factory,** kwargs):
"
15787,"def on_start(self):
"
15788,"def on_stop(self,** kwargs):
"
15789,"def __init__(self,container,config_file = None,environment = None,app_name = None,** kwargs):
"
15790,"def on_interface_installation(self,interface):
"
15791,"def _wrap_methods(self,methods):
"
15792,"def on_error(self,exc_info,** kwargs):
"
15793,"def on_http_request(self,request,rule,kwargs):
"
15794,"def __init__(self,timeout = None,** kwargs):
"
15795,"def add(self,greenlet):
"
15796,"def __init__(self):
"
15797,"def get_group_members(self,gname):
"
15798,"def get_group_epoch(self,gname):
"
15799,"def get_group_state(self,gname):
"
15800,"def add_group(self,gname,minsize):
"
15801,"def remove_group(self,gname):
"
15802,"def approve_join(self,gname,node,epochno):
"
15803,"def wait(self,gname):
"
15804,"def check_member(self,gname,node):
"
15805,"def notify_failure(self,gname,epoch,failednode):
"
15806,"def __init__(self,minsize):
"
15807,"def wait(self,_concoord_command):
"
15808,"def notifyAll(self):
"
15809,"def add_member(self,member):
"
15810,"def remove_member(self,member):
"
15811,"def get_size(self):
"
15812,"def get_epoch(self):
"
15813,"def get_members(self):
"
15814,"def inc_epoch(self):
"
15815,"def __str__(self):
"
15816,"def __init__(self,bootstrap,timeout = 60,debug = False,token = None):
"
15817,"def __concoordinit__(self):
"
15818,"def getvalue(self):
"
15819,"def setvalue(self,newvalue):
"
15820,"def __str__(self):
"
15821,"def initialize_options(self):
"
15822,"def finalize_options(self):
"
15823,"def run_tests(self):
"
15824,"def download(self,url,fakeoutfile,outputfile,* args,** kwargs):
"
15825,"def ctrl_c(self):
"
15826,"def success(self,data):
"
15827,"def error(self,error,url):
"
15828,"def __init__(self,wget,fakeoutfile,url,outfile,headers = None):
"
15829,"def noPage(self,reason):
"
15830,"def pageEnd(self):
"
15831,"def __init__(self,* args,** kwargs):
"
15832,"def _post_init(self):
"
15833,"def __reduce__(self):
"
15834,"def _clone(self,klass = None,** kwargs):
"
15835,"def _clone(self,klass = None,* args,** kwargs):
"
15836,"def rewrite(self,mode = True):
"
15837,"def populate(self,mode = 'all'):
"
15838,"def _rewrite_applied_operations(self):
"
15839,"def select_related(self,* fields,** kwargs):
"
15840,"def _rewrite_col(self,col):
"
15841,"def _rewrite_where(self,q):
"
15842,"def _rewrite_order(self):
"
15843,"def _rewrite_select_related(self):
"
15844,"def _rewrite_q(self,q):
"
15845,"def _rewrite_f(self,q):
"
15846,"def _filter_or_exclude(self,negate,* args,** kwargs):
"
15847,"def _get_original_fields(self):
"
15848,"def order_by(self,* field_names):
"
15849,"def update(self,** kwargs):
"
15850,"def _populate_mode(self):
"
15851,"def create(self,** kwargs):
"
15852,"def get_or_create(self,** kwargs):
"
15853,"def defer(self,* fields):
"
15854,"def only(self,* fields):
"
15855,"def raw_values(self,* fields):
"
15856,"def _values(self,* original,** kwargs):
"
15857,"def values(self,* fields):
"
15858,"def values_list(self,* fields,** kwargs):
"
15859,"def dates(self,field_name,* args,** kwargs):
"
15860,"def __iter__(self):
"
15861,"def __iter__(self):
"
15862,"def __iter__(self):
"
15863,"def _setup_query(self):
"
15864,"def iterator(self):
"
15865,"def _clone(self,klass = None,setup = False,** kwargs):
"
15866,"def iterator(self):
"
15867,"def _setup_query(self):
"
15868,"def _clone(self,* args,** kwargs):
"
15869,"def get_queryset(self):
"
15870,"def _patch_queryset(self,qs):
"
15871,"def rewrite(self,* args,** kwargs):
"
15872,"def populate(self,* args,** kwargs):
"
15873,"def raw_values(self,* args,** kwargs):
"
15874,"def get_queryset(self):
"
15875,"def __init__(self,point_class = Point,precision = 12):
"
15876,"def decode(self,string):
"
15877,"def __getattr__(self,attr):
"
15878,"def __init__(self,form):
"
15879,"def __init__(self,response):
"
15880,"def __init__(self,request):
"
15881,"def is_multipart(self):
"
15882,"def content_type(self):
"
15883,"def translate(self):
"
15884,"def __call__(self,parser,namespace,values,option_string = None):
"
15885,"def get_parser(self,prog_name):
"
15886,"def take_action(self,parsed_args):
"
15887,"def rendered_title(self):
"
15888,"def render(self,context):
"
15889,"def form(self,** kwargs):
"
15890,"def __init__(self,s):
"
15891,"def __init__(self,i):
"
15892,"def single(self):
"
15893,"def __iter__(self):
"
15894,"def __len__(self):
"
15895,"def __init__(self):
"
15896,"def run_with_nameserver(self,myns,nameservers,* objs):
"
15897,"def __call__(self):
"
15898,"def log_resolution_table(self,rlog,processed):
"
15899,"def register(self,mod):
"
15900,"def host_specific_send(self,host,msg,typ,transport_cb):
"
15901,"def local_response(self,result):
"
15902,"def send(self,m,timeout = 10):
"
15903,"def broadcast(self,m):
"
15904,"def rpc(self,m,timeout = 10):
"
15905,"def retry(self,id):
"
15906,"def deliver(self):
"
15907,"def __init__(self,m,timeout,rqueue = None,broadcast = False):
"
15908,"def due(self,t):
"
15909,"def reschedule(self):
"
15910,"def remaining(self):
"
15911,"def expired(self,t):
"
15912,"def __init__(self,env):
"
15913,"def respond(self,m):
"
15914,"def handle(self,* args,** options):
"
15915,"def setUp(self):
"
15916,"def test_creation(self):
"
15917,"def test_deletions(self):
"
15918,"def test_autopay_user(self):
"
15919,"def tearDown(self):
"
15920,"def setUp(self):
"
15921,"def test_creation(self):
"
15922,"def test_no_activation(self):
"
15923,"def test_activation(self):
"
15924,"def test_no_deactivation(self):
"
15925,"def test_deactivation(self):
"
15926,"def test_deletions(self):
"
15927,"def test_is_hidden_to_ops(self):
"
15928,"def test_next_subscription(self):
"
15929,"def tearDown(self):
"
15930,"def setUp(self):
"
15931,"def test_should_send_email(self):
"
15932,"def test_should_send_email_contracted(self):
"
15933,"def test_should_send_email_autogenerate_credits(self):
"
15934,"def test_should_send_email_hidden(self):
"
15935,"def setUp(self):
"
15936,"def test_set_autopay(self,fake_customer):
"
15937,"def test_unset_autopay(self,fake_customer):
"
15938,"def allowed_domain(self,domain):
"
15939,"def get(self,* args,** kwargs):
"
15940,"def post(self,* args,** kwargs):
"
15941,"def head(self,* args,** kwargs):
"
15942,"def dispatch(self,* args,** kwargs):
"
15943,"def update_suite(self):
"
15944,"def get_frame_children(self,target_form,module_only = False):
"
15945,"def create_workflow_stack(self,form_command,frame_metas):
"
15946,"def get_form_datums(self,form):
"
15947,"def get_module_datums(self,module_id):
"
15948,"def get_form_entry(self,form_command):
"
15949,"def _get_entries_datums(self):
"
15950,"def __init__(self,helper):
"
15951,"def form_workflow_frames(self,if_prefix,module,form):
"
15952,"def __init__(self,helper):
"
15953,"def case_list_forms_frames(self,form):
"
15954,"def __init__(self,if_prefix,if_clause,children = None,allow_empty_frame = False):
"
15955,"def add_child(self,child):
"
15956,"def to_frame(self):
"
15957,"def __init__(self,command):
"
15958,"def __lt__(self,other):
"
15959,"def __eq__(self,other):
"
15960,"def __ne__(self,other):
"
15961,"def __repr__(self):
"
15962,"def __init__(self,datum_id,nodeset,function):
"
15963,"def requires_selection(self):
"
15964,"def case_type(self):
"
15965,"def to_stack_datum(self,datum_id = None,source_id = None):
"
15966,"def __lt__(self,other):
"
15967,"def __eq__(self,other):
"
15968,"def __ne__(self,other):
"
15969,"def __repr__(self):
"
15970,"def setUp(self):
"
15971,"def tearDown(self):
"
15972,"def test_basic_workflow(self):
"
15973,"def test_workflow_with_put_in_root(self):
"
15974,"def test_deleted_parent(self):
"
15975,"def test_circular_relation(self):
"
15976,"def test_child_module_session_datums_added(self):
"
15977,"def test_child_module_adjust_session_datums(self):
"
15978,"def test_form_case_id(self):
"
15979,"def test_form_display_condition(self):
"
15980,"def test_child_module_session_datums_added(self):
"
15981,"def test_form_case_id(self):
"
15982,"def test_form_display_condition(self):
"
15983,"def test_form_rename_session_vars(self):
"
15984,"def test_parent_preload(self):
"
15985,"def setUp(self):
"
15986,"def test_download_file_bad_xform_404(self):
"
15987,"def test_edit_commcare_profile(self):
"
15988,"def _test_status_codes(self,names,kwargs):
"
15989,"def _json_content_from_get(self,name,kwargs,data = { }):
"
15990,"def test_basic_app(self):
"
15991,"def test_advanced_module(self):
"
15992,"def test_report_module(self):
"
15993,"def test_shadow_module(self):
"
15994,"def test_careplan_module(self):
"
15995,"def setUp(self):
"
15996,"def test_case_management_app_from_template(self):
"
15997,"def test_survey_app_from_template(self):
"
15998,"def test_default_new_app(self):
"
15999,"def __init__(self,name,** options):
"
16000,"def __getitem__(self,items):
"
16001,"def structure(self):
"
16002,"def render(self,depth = 0):
"
16003,"def __unicode__(self):
"
16004,"def dispatch(self,request,* args,** kwargs):
"
16005,"def get(self,request,domain,urlPath):
"
16006,"def dispatch(self,request,* args,** kwargs):
"
16007,"def page_context(self):
"
16008,"def put(self,request,* args,** kwargs):
"
16009,"def _get_name_for_domain(self):
"
16010,"def create_report(self,transactions = None,tag = None,date = None):
"
16011,"def _create_models_for_stock_report_helper(self,form,stock_report_helper):
"
16012,"def setUp(self):
"
16013,"def tearDown(self):
"
16014,"def test_stock_report(self):
"
16015,"def test_get_current_ledger_transactions(self):
"
16016,"def _validate_case_data(self,data,expected):
"
16017,"def _test_get_current_ledger_transactions(self,tester_fn):
"
16018,"def test_get_current_ledger_transactions_1(self):
"
16019,"def test_get_current_ledger_state(self):
"
16020,"def __init__(self,datespan_object_list):
"
16021,"def build_table(self):
"
16022,"def _get_malt_row_dicts(self,domain_name,monthspan,all_users_by_id):
"
16023,"def dispatch(self,request,* args,** kwargs):
"
16024,"def section_url(self):
"
16025,"def page_url(self):
"
16026,"def parameters(self):
"
16027,"def total(self):
"
16028,"def column_names(self):
"
16029,"def page_context(self):
"
16030,"def paginated_list(self):
"
16031,"def _get_item_data(self,case_group):
"
16032,"def post(self,* args,** kwargs):
"
16033,"def get_create_form(self,is_blank = False):
"
16034,"def get_update_form(self,initial_data = None):
"
16035,"def get_create_item_data(self,create_form):
"
16036,"def get_deleted_item_data(self,item_id):
"
16037,"def dispatch(self,request,* args,** kwargs):
"
16038,"def dispatch(self,request,* args,** kwargs):
"
16039,"def page_url(self):
"
16040,"def page_context(self):
"
16041,"def process(self):
"
16042,"def post(self,request,* args,** kwargs):
"
16043,"def group_id(self):
"
16044,"def case_group(self):
"
16045,"def parent_pages(self):
"
16046,"def page_name(self):
"
16047,"def page_url(self):
"
16048,"def page_context(self):
"
16049,"def update_case_group_form(self):
"
16050,"def parameters(self):
"
16051,"def total(self):
"
16052,"def column_names(self):
"
16053,"def paginated_list(self):
"
16054,"def allowed_actions(self):
"
16055,"def bulk_response(self):
"
16056,"def is_bulk_upload(self):
"
16057,"def is_case_group_update(self):
"
16058,"def bulk_upload_id(self):
"
16059,"def _get_item_data(self,case):
"
16060,"def get_create_form(self,is_blank = False):
"
16061,"def get_create_item_data(self,create_form):
"
16062,"def get_deleted_item_data(self,item_id):
"
16063,"def post(self,request,* args,** kwargs):
"
16064,"def dispatch(self,request,* args,** kwargs):
"
16065,"def get_form_ids_or_query_string(self,request):
"
16066,"def post(self,request,* args,** kwargs):
"
16067,"def dispatch(self,request,* args,** kwargs):
"
16068,"def get(self,request,* args,** kwargs):
"
16069,"def page_url(self):
"
16070,"def project_timezone(self):
"
16071,"def dispatch(self,* args,** kwargs):
"
16072,"def _format_rule(self,rule):
"
16073,"def get_pagination_data(self,in_data):
"
16074,"def update_rule(self,in_data):
"
16075,"def page_url(self):
"
16076,"def initial_rule_form(self):
"
16077,"def rule_form(self):
"
16078,"def page_context(self):
"
16079,"def get_case_property_map(self):
"
16080,"def dispatch(self,* args,** kwargs):
"
16081,"def create_criteria(self,rule):
"
16082,"def create_actions(self,rule):
"
16083,"def create_rule(self):
"
16084,"def post(self,request,* args,** kwargs):
"
16085,"def rule_id(self):
"
16086,"def page_url(self):
"
16087,"def rule(self):
"
16088,"def initial_rule_form(self):
"
16089,"def rule_form(self):
"
16090,"def update_rule(self,rule):
"
16091,"def post(self,request,* args,** kwargs):
"
16092,"def setUp(self):
"
16093,"def tearDown(self):
"
16094,"def test_valid_data(self):
"
16095,"def test_invalid_user_data(self):
"
16096,"def setUp(self):
"
16097,"def tearDown(self):
"
16098,"def test_domain_transfer_inactive(self):
"
16099,"def test_domain_transfer(self):
"
16100,"def test_send_transfer_request(self):
"
16101,"def test_get_active_transfer(self):
"
16102,"def setUp(self):
"
16103,"def tearDown(self):
"
16104,"def test_permissions_for_activation(self):
"
16105,"def test_permissions_for_deactivation(self):
"
16106,"def test_permissions_for_transfer_domain_view(self):
"
16107,"def setUp(self):
"
16108,"def test_basic_workflow(self):
"
16109,"def test_transfer_cancel_workflow(self):
"
16110,"def __init__(self,raw,aggregation):
"
16111,"def __init__(self):
"
16112,"def aggregation(self,aggregation):
"
16113,"def assemble(self):
"
16114,"def parse_result(self,result):
"
16115,"def keys(self):
"
16116,"def buckets(self):
"
16117,"def buckets_dict(self):
"
16118,"def buckets_list(self):
"
16119,"def raw_buckets(self):
"
16120,"def normalized_buckets(self):
"
16121,"def counts_by_bucket(self):
"
16122,"def bucket(self):
"
16123,"def raw_hits(self):
"
16124,"def doc_ids(self):
"
16125,"def hits(self):
"
16126,"def total(self):
"
16127,"def count(self):
"
16128,"def max(self):
"
16129,"def min(self):
"
16130,"def avg(self):
"
16131,"def std_dev(self):
"
16132,"def __init__(self,result,aggregations):
"
16133,"def key(self):
"
16134,"def doc_count(self):
"
16135,"def __getattr__(self,attr):
"
16136,"def __repr__(self):
"
16137,"def doc_count(self):
"
16138,"def __init__(self,name,filter):
"
16139,"def __init__(self,name,filters = None):
"
16140,"def add_filter(self,name,filter):
"
16141,"def assemble(self):
"
16142,"def normalized_buckets(self):
"
16143,"def __init__(self,name,field,ranges = None,keyed = True):
"
16144,"def add_range(self,range_):
"
16145,"def as_facet_result(self):
"
16146,"def __init__(self,name,datefield,interval,timezone = None):
"
16147,"def __init__(self,base_query,terms):
"
16148,"def get_data(self):
"
16149,"def _format_counts(self,counts):
"
16150,"def test_get_number_of_cases_in_domain(self):
"
16151,"def test_get_number_of_cases_in_domain__type(self):
"
16152,"def test_get_case_ids_in_domain(self):
"
16153,"def test_get_case_ids_in_domain__type(self):
"
16154,"def assert_doc_list_equal(self,doc_list_1,doc_list_2,raw_json = False):
"
16155,"def test_get_cases_in_domain(self):
"
16156,"def test_get_cases_in_domain__type(self):
"
16157,"def test_get_open_case_ids_in_domain(self):
"
16158,"def test_get_open_case_ids_in_domain__owner_id(self):
"
16159,"def test_get_open_case_docs_by_type(self):
"
16160,"def test_get_open_case_docs_by_type__owner_id(self):
"
16161,"def test_get_case_types_for_domain(self):
"
16162,"def test_get_case_ids_in_domain_by_owner(self):
"
16163,"def test_get_all_case_owner_ids(self):
"
16164,"def test_get_case_properties(self):
"
16165,"def initiate_outbound_call(self,call,logged_subevent,ivr_data = None):
"
16166,"def get_response(self,gateway_session_id,ivr_responses,collect_input = False,hang_up = True,input_length = None):
"
16167,"def cache_first_ivr_response(self):
"
16168,"def set_first_ivr_response(self,call,gateway_session_id,ivr_data):
"
16169,"def setUp(self):
"
16170,"def test_group_name(self):
"
16171,"def test_id_assignment(self):
"
16172,"def test_group_properties(self):
"
16173,"def test_accessory_methods(self):
"
16174,"def test_not_real_groups(self):
"
16175,"def test_cant_save_wont_save(self):
"
16176,"def test_get_owner_ids(self):
"
16177,"def test_custom_data(self):
"
16178,"def test_location_fixture_generator(self):
"
16179,"def test_location_fixture_generator_no_user_location(self):
"
16180,"def test_location_fixture_generator_domain_no_locations(self):
"
16181,"def test_get_pending_repeat_record_count(self):
"
16182,"def test_get_success_repeat_record_count(self):
"
16183,"def test_get_failure_repeat_record_count(self):
"
16184,"def test_get_paged_repeat_records_with_state_and_no_records(self):
"
16185,"def test_get_paged_repeat_records(self):
"
16186,"def test_get_paged_repeat_records_with_repeater_id(self):
"
16187,"def test_get_paged_repeat_records_with_state(self):
"
16188,"def test_get_paged_repeat_records_wrong_domain(self):
"
16189,"def test_iterate_repeat_records(self):
"
16190,"def test_get_repeaters_by_domain(self):
"
16191,"def __init__(self,report,case):
"
16192,"def case_type(self):
"
16193,"def case_name(self):
"
16194,"def case_name_display(self):
"
16195,"def case_id(self):
"
16196,"def external_id(self):
"
16197,"def case_detail_url(self):
"
16198,"def is_closed(self):
"
16199,"def _dateprop(self,prop,iso = True):
"
16200,"def opened_on(self):
"
16201,"def modified_on(self):
"
16202,"def closed_on(self):
"
16203,"def creating_user(self):
"
16204,"def _user_meta(self,user_id):
"
16205,"def location(self):
"
16206,"def owner(self):
"
16207,"def owner_type(self):
"
16208,"def user_id(self):
"
16209,"def owner_id(self):
"
16210,"def owning_group(self):
"
16211,"def _get_username(self,user_id):
"
16212,"def parse_date(self,date_string):
"
16213,"def closed_display(self):
"
16214,"def case_link(self):
"
16215,"def opened_on(self):
"
16216,"def modified_on(self):
"
16217,"def owner_display(self):
"
16218,"def user_not_found_display(self,user_id):
"
16219,"def creating_user(self):
"
16220,"def _clear_docs(self):
"
16221,"def setUp(self):
"
16222,"def tearDown(self):
"
16223,"def testExportTokenMigration(self):
"
16224,"def testExportTokens(self):
"
16225,"def testExportFilter(self):
"
16226,"def test_no_subscription(self):
"
16227,"def clean_keyword(self):
"
16228,"def clean_phone_numbers(self):
"
16229,"def enable_registration_welcome_sms_for_case(self):
"
16230,"def enable_registration_welcome_sms_for_mobile_worker(self):
"
16231,"def current_values(self):
"
16232,"def populate_dynamic_choices(self):
"
16233,"def _clean_dependent_field(self,bool_field,field):
"
16234,"def clean_use_default_sms_response(self):
"
16235,"def clean_default_sms_response(self):
"
16236,"def clean_use_custom_case_username(self):
"
16237,"def clean_custom_case_username(self):
"
16238,"def clean_use_custom_message_count_threshold(self):
"
16239,"def clean_custom_message_count_threshold(self):
"
16240,"def clean_use_custom_chat_template(self):
"
16241,"def clean_custom_chat_template(self):
"
16242,"def _clean_time_window_json(self,field_name):
"
16243,"def clean_use_restricted_sms_times(self):
"
16244,"def clean_restricted_sms_times_json(self):
"
16245,"def clean_use_sms_conversation_times(self):
"
16246,"def clean_sms_conversation_times_json(self):
"
16247,"def clean_send_to_duplicated_case_numbers(self):
"
16248,"def clean_count_messages_as_read_by_anyone(self):
"
16249,"def clean_sms_case_registration_enabled(self):
"
16250,"def clean_sms_case_registration_type(self):
"
16251,"def _clean_registration_id_field(self,field_name):
"
16252,"def clean_sms_case_registration_owner_id(self):
"
16253,"def clean_sms_case_registration_user_id(self):
"
16254,"def clean_sms_mobile_worker_registration_enabled(self):
"
16255,"def clean_sms_conversation_length(self):
"
16256,"def is_global_backend(self):
"
16257,"def general_fields(self):
"
16258,"def gateway_specific_fields(self):
"
16259,"def clean_name(self):
"
16260,"def clean_authorized_domains(self):
"
16261,"def clean_reply_to_phone_number(self):
"
16262,"def __init__(self,* args,** kwargs):
"
16263,"def set_catchall_choices(self,backends):
"
16264,"def _clean_prefix(self,prefix):
"
16265,"def _clean_backend_id(self,backend_id):
"
16266,"def clean_backend_map(self):
"
16267,"def clean_catchall_backend_id(self):
"
16268,"def set_app_id_choices(self):
"
16269,"def __init__(self,* args,** kwargs):
"
16270,"def clean_phone_numbers(self):
"
16271,"def __init__(self,is_superuser = False,* args,** kwargs):
"
16272,"def __init__(self,* args,** kwargs):
"
16273,"def save(self,commtrack_settings):
"
16274,"def __init__(self,* args,** kwargs):
"
16275,"def __init__(self,* args,** kwargs):
"
16276,"def __init__(self,domain,* args,** kwargs):
"
16277,"def to_python(self,value):
"
16278,"def prepare_value(self,value):
"
16279,"def __init__(self,initial = None,choices =(),* args,** kwargs):
"
16280,"def _get_choices(self):
"
16281,"def _set_choices(self,value):
"
16282,"def to_python(self,value):
"
16283,"def run_validators(self,value):
"
16284,"def _get_validation_exclusions(self):
"
16285,"def __init__(self,data_source_provider,auto_repopulate_tables = False,* args,** kwargs):
"
16286,"def get_all_configs(self):
"
16287,"def needs_bootstrap(self):
"
16288,"def bootstrap_if_needed(self):
"
16289,"def bootstrap(self,configs = None):
"
16290,"def rebuild_table(self,sql_adapter):
"
16291,"def process_change(self,pillow_instance,change,do_set_checkpoint):
"
16292,"def __init__(self,processor,pillow_name):
"
16293,"def bootstrap(self,configs = None):
"
16294,"def rebuild_table(self,sql_adapter):
"
16295,"def setUp(self):
"
16296,"def test_no_parameters(self):
"
16297,"def test_lastndays(self):
"
16298,"def test_range_filter(self):
"
16299,"def setUp(self):
"
16300,"def tearDown(self):
"
16301,"def _delete_everything(self):
"
16302,"def test_get_statuses(self):
"
16303,"def test_get_status(self):
"
16304,"def test_update_status_set_location(self):
"
16305,"def test_update_status_unset_location(self):
"
16306,"def test_update_status_reset_location(self):
"
16307,"def __init__(self,new_db,old_db):
"
16308,"def put(self,* args,** kw):
"
16309,"def get(self,* args,** kw):
"
16310,"def delete(self,* args,** kw):
"
16311,"def get_path(self,* args,** kw):
"
16312,"def copy_blob(self,content,info,bucket):
"
16313,"def __init__(self,case):
"
16314,"def actions(self):
"
16315,"def to_full_dict(self):
"
16316,"def get_display_config(self):
"
16317,"def dynamic_properties(self):
"
16318,"def related_cases_columns(self):
"
16319,"def related_type_info(self):
"
16320,"def to_full_dict(self):
"
16321,"def get_display_config(self):
"
16322,"def __init__(self,domain,cases,dirtiness_flags,extensions_to_close = None):
"
16323,"def get_clean_owner_ids(self):
"
16324,"def set_cases(self,cases):
"
16325,"def get_flags_to_save(self):
"
16326,"def close_extensions(self):
"
16327,"def commit_dirtiness_flags(self):
"
16328,"def __init__(self,strict_asserts = True,case_id_blacklist = None):
"
16329,"def __repr__(self):
"
16330,"def __init__(self,section_to_consumption_types = None,consumption_config = None,default_product_list = None,force_consumption_case_filter = None):
"
16331,"def __init__(self,username = None,items = False):
"
16332,"def close(self):
"
16333,"def __enter__(self):
"
16334,"def __exit__(self,exc_type,exc_val,exc_tb):
"
16335,"def append(self,xml_element):
"
16336,"def extend(self,iterable):
"
16337,"def finalize(self):
"
16338,"def get_cache_payload(self,full = False):
"
16339,"def as_string(self):
"
16340,"def __str__(self):
"
16341,"def __init__(self,username = None,items = False):
"
16342,"def get_filename(self,suffix = None):
"
16343,"def __add__(self,other):
"
16344,"def finalize(self):
"
16345,"def get_cache_payload(self,full = False):
"
16346,"def as_string(self):
"
16347,"def get_http_response(self):
"
16348,"def __init__(self,payload,is_initial):
"
16349,"def __nonzero__(self):
"
16350,"def as_string(self):
"
16351,"def get_content_length(self):
"
16352,"def as_file(self):
"
16353,"def __init__(self,payload):
"
16354,"def exists(self):
"
16355,"def as_string(self):
"
16356,"def get_http_response(self):
"
16357,"def __init__(self,sync_log_id = '',version = V1,state_hash = '',include_item_count = False,force_restore_mode = None,app = None):
"
16358,"def __init__(self,force_cache = False,cache_timeout = None,overwrite_cache = False):
"
16359,"def __init__(self,project,user,params):
"
16360,"def validate_state(self):
"
16361,"def last_sync_log(self):
"
16362,"def is_initial(self):
"
16363,"def version(self):
"
16364,"def owner_ids(self):
"
16365,"def stock_settings(self):
"
16366,"def is_first_extension_sync(self):
"
16367,"def start_sync(self):
"
16368,"def finish_sync(self):
"
16369,"def create_sync_log(self):
"
16370,"def sync_log_class(self):
"
16371,"def loadtest_factor(self):
"
16372,"def __init__(self,project = None,user = None,params = None,cache_settings = None):
"
16373,"def sync_log(self):
"
16374,"def get_payload(self):
"
16375,"def _initial_cache_key(self):
"
16376,"def get_cached_payload(self):
"
16377,"def set_cached_payload_if_necessary(self,resp,duration):
"
16378,"def testSaveAndLoad(self):
"
16379,"def testGetLast(self):
"
16380,"def tearDown(self):
"
16381,"def post_it(self,** kwargs):
"
16382,"def _test_split_column(self,rows,ignore_extras = False):
"
16383,"def test_split_column(self):
"
16384,"def test_split_column_order(self):
"
16385,"def test_split_column_empty(self):
"
16386,"def test_split_column_None(self):
"
16387,"def test_split_column_ignore_extras(self):
"
16388,"def test_split_column_missing(self):
"
16389,"def test_split_column_missing_ignore_extras(self):
"
16390,"def test_split_column_None_ignore_extras(self):
"
16391,"def test_split_column_fit_to_schema_None(self):
"
16392,"def test_split_column_fit_to_schema_missing(self):
"
16393,"def test_split_column_remainder(self):
"
16394,"def test_split_column_header_format(self):
"
16395,"def test_split_column_not_string(self):
"
16396,"def test(self):
"
16397,"def test_wrap_datetime_hippy(self):
"
16398,"def test_wrap_datetime_min(self):
"
16399,"def setUp(self):
"
16400,"def tearDown(self):
"
16401,"def assert_properties_equal(self,obj,expected):
"
16402,"def test_basic_devicelog(self):
"
16403,"def assert_user_entries(self):
"
16404,"def assert_user_error_entries(self):
"
16405,"def assert_force_close_entries(self):
"
16406,"def test_subreports_that_shouldnt_fail(self):
"
16407,"def __init__(self,domain):
"
16408,"def iter_all_changes(self,start_from = None):
"
16409,"def attachments(self):
"
16410,"def form_data(self):
"
16411,"def metadata(self):
"
16412,"def is_normal(self):
"
16413,"def is_archived(self):
"
16414,"def is_deprecated(self):
"
16415,"def is_duplicate(self):
"
16416,"def is_error(self):
"
16417,"def is_submission_error_log(self):
"
16418,"def is_deleted(self):
"
16419,"def auth_context(self):
"
16420,"def get_data(self,xpath):
"
16421,"def get_attachment(self,attachment_name):
"
16422,"def archive(self,user_id = None):
"
16423,"def unarchive(self,user_id = None):
"
16424,"def get_xml_element(self):
"
16425,"def get_xml(self):
"
16426,"def save(self,* args,** kwargs):
"
16427,"def set_submission_properties(self,submission_post):
"
16428,"def soft_delete(self):
"
16429,"def to_json(self):
"
16430,"def get(self,xform_id):
"
16431,"def xml_md5(self):
"
16432,"def version(self):
"
16433,"def uiversion(self):
"
16434,"def type(self):
"
16435,"def get_sync_token(self):
"
16436,"def case_name(self):
"
16437,"def parent(self):
"
16438,"def soft_delete(self):
"
16439,"def get_attachment(self,attachment_name):
"
16440,"def is_deleted(self):
"
16441,"def dynamic_case_properties(self):
"
16442,"def get_actions_for_form(self,xform):
"
16443,"def modified_since_sync(self,sync_log):
"
16444,"def get_subcases(self):
"
16445,"def get_case_property(self,property):
"
16446,"def to_json(self):
"
16447,"def to_api_json(self):
"
16448,"def get_index_map(self,reversed = False):
"
16449,"def get_properties_in_api_format(self):
"
16450,"def get_attachment_map(self):
"
16451,"def to_xml(self,version,include_case_on_closed = False):
"
16452,"def get_attachment_server_url(self,identifier):
"
16453,"def is_image(self):
"
16454,"def is_present(self):
"
16455,"def __enter__(self):
"
16456,"def __exit__(self,exc_type,exc_val,exc_tb):
"
16457,"def __init__(self,submitted_form,existing_duplicate = None):
"
16458,"def _get_form_lock(self,form_id):
"
16459,"def get_locked_forms(self):
"
16460,"def __init__(self,submitted_form):
"
16461,"def get_locked_forms(self):
"
16462,"def phone_number(self):
"
16463,"def setUp(self):
"
16464,"def tearDown(self):
"
16465,"def simulate_inbound_call(self,phone_number):
"
16466,"def check_response(self,response):
"
16467,"def __init__(self,rows):
"
16468,"def row_to_json(self,row):
"
16469,"def __iter__(self):
"
16470,"def __init__(self,title):
"
16471,"def __init__(self,worksheet,title = None):
"
16472,"def __init__(self,f):
"
16473,"def get_worksheet(self,title = None,index = None):
"
16474,"def work_book_headers_as_tuples(self):
"
16475,"def work_book_data_as_tuples(self):
"
16476,"def tabular_data(self,mode,case_id,start_date,end_date):
"
16477,"def headers(self):
"
16478,"def rows(self):
"
16479,"def __init__(self,case,parent):
"
16480,"def update_type(self,new_type):
"
16481,"def update_owner(self,new_owner):
"
16482,"def to_row(self):
"
16483,"def handle(self,* args,** options):
"
16484,"def __init__(self,user,domain,msg,sql_location):
"
16485,"def sql_location(self):
"
16486,"def parser(self):
"
16487,"def respond(self,message,** kwargs):
"
16488,"def options(self):
"
16489,"def options(self):
"
16490,"def __init__(self,* args,** kwargs):
"
16491,"def options(self):
"
16492,"def format(self,text):
"
16493,"def _is_pilot_location(self):
"
16494,"def get_message(self,data):
"
16495,"def on_success(self):
"
16496,"def on_error(self,data):
"
16497,"def help(self):
"
16498,"def __call__(self,user,version,last_sync = None,app = None):
"
16499,"def get_fixture(self,user,domain,location_id):
"
16500,"def __init__(self,defn,meta):
"
16501,"def __init__(self,defn,meta):
"
16502,"def iter_events(self):
"
16503,"def new_subject_module(self,app):
"
16504,"def get_new_app(self,domain_name,app_name,version = APP_V2):
"
16505,"def __init__(self,defn,meta):
"
16506,"def iter_forms(self):
"
16507,"def new_module_for_app(self,app,subject_module):
"
16508,"def __init__(self,defn,meta):
"
16509,"def iter_item_groups(self):
"
16510,"def add_new_form_to_module(self,module):
"
16511,"def __init__(self,defn,meta):
"
16512,"def iter_items(self):
"
16513,"def __init__(self,defn,meta,item_group):
"
16514,"def get_choices(self,cl_oid):
"
16515,"def handle(self,* args,** options):
"
16516,"def __contains__(self,item):
"
16517,"def get(self,key,default = None):
"
16518,"def __init__(self,default_date = None,explicit_map = None):
"
16519,"def _service_dates(self):
"
16520,"def __init__(self,* args,** kwargs):
"
16521,"def data_provider(self):
"
16522,"def datespan(self):
"
16523,"def set_extra_row_objects(self,row_objects):
"
16524,"def __init__(self,forms = None,** kwargs):
"
16525,"def get_forms(self):
"
16526,"def __init__(self,case,report,data_provider = None,child_index = 1,** kwargs):
"
16527,"def setUp(self):
"
16528,"def test_mock_data(self):
"
16529,"def date(self,case):
"
16530,"def total(self,case):
"
16531,"def total(self,case):
"
16532,"def total(self,case):
"
16533,"def total(self,case):
"
16534,"def total(self,case):
"
16535,"def total(self,case):
"
16536,"def __init__(self,verbose = True):
"
16537,"def __enter__(self):
"
16538,"def __exit__(self,exc_type,exc_val,exc_tb):
"
16539,"def __init__(self,default = Ellipsis,name = None,choices = None,required = False,exclude_if_none = False,validators = None,verbose_name = None,type_config = None):
"
16540,"def init_property(self,default_name,type_config):
"
16541,"def wrap(self,obj):
"
16542,"def unwrap(self,obj):
"
16543,"def to_json(self,value):
"
16544,"def to_python(self,value):
"
16545,"def __get__(self,instance,owner):
"
16546,"def __set__(self,instance,value):
"
16547,"def __call__(self,method):
"
16548,"def exclude(self,value):
"
16549,"def empty(self,value):
"
16550,"def validate(self,value,required = True,recursive = True):
"
16551,"def _custom_validate(self,value):
"
16552,"def __init__(self,item_type = None,** kwargs):
"
16553,"def init_property(self,** kwargs):
"
16554,"def set_item_type(self,item_type):
"
16555,"def item_type(self):
"
16556,"def empty(self,value):
"
16557,"def wrap(self,obj):
"
16558,"def type_to_property(self,item_type):
"
16559,"def unwrap(self,obj):
"
16560,"def _update(self,container,extension):
"
16561,"def wrap(self,obj):
"
16562,"def unwrap(self,obj):
"
16563,"def value_to_property(self,value):
"
16564,"def value_to_python(self,value):
"
16565,"def assert_type(self,obj):
"
16566,"def selective_coerce(self,obj):
"
16567,"def wrap(self,obj):
"
16568,"def unwrap(self,obj):
"
16569,"def __init__(self,exact = False,* args,** kwargs):
"
16570,"def wrap(self,obj):
"
16571,"def unwrap(self,obj):
"
16572,"def _wrap(self,obj):
"
16573,"def _unwrap(self,obj):
"
16574,"def __init__(self):
"
16575,"def __init__(self,cursor,connection,state,queries = False):
"
16576,"def _incr(self,sql,params):
"
16577,"def execute(self,sql,params =()):
"
16578,"def executemany(self,sql,paramlist):
"
16579,"def __getattr__(self,attr):
"
16580,"def __iter__(self):
"
16581,"def __init__(self,application,threshold = 1,stacks = False,queries = False,logger = None,** kwargs):
"
16582,"def __call__(self,environ,start_response):
"
16583,"def log_request(self,request,state):
"
16584,"def options(self,parser,env):
"
16585,"def configure(self,options,conf):
"
16586,"def begin(self):
"
16587,"def report(self,stream):
"
16588,"def cluster(self):
"
16589,"def test_map_single_connection(self):
"
16590,"def test_no_proxy_without_call_on_map(self):
"
16591,"def setUp(self):
"
16592,"def test_proxy(self):
"
16593,"def test_with_cluster(self):
"
16594,"def test_provides_retryable_exceptions(self):
"
16595,"def test_provides_identifier(self):
"
16596,"def test_client_instantiates_with_kwargs(self,RedisClient):
"
16597,"def test_map_does_pipeline(self,RedisClient):
"
16598,"def test_map_only_runs_on_required_nodes(self,RedisClient):
"
16599,"def test_normal_exceptions_dont_break_the_cluster(self):
"
16600,"def test_custom_identifier_specified(self):
"
16601,"def format_output(self,fmt,data):
"
16602,"def __init__(self,settings,defaults = { }):
"
16603,"def get_value(self,key):
"
16604,"def to_dict(self):
"
16605,"def forwards(self,orm):
"
16606,"def backwards(self,orm):
"
16607,"def configure(self):
"
16608,"def render(self,context,instance,placeholder):
"
16609,"def get_extra_global_plugin_menu_items(self,request,plugin):
"
16610,"def get_extra_placeholder_menu_items(self,request,placeholder):
"
16611,"def create_alias(self,request):
"
16612,"def process_response(self,request,response):
"
16613,"def audience(self):
"
16614,"def save(self,* args,** kwargs):
"
16615,"def __str__(self):
"
16616,"def __str__(self):
"
16617,"def test_language_code(self):
"
16618,"def test_get_languages_default_site(self):
"
16619,"def test_get_languages_defined_site(self):
"
16620,"def test_get_languages_undefined_site(self):
"
16621,"def test_get_languages_default_site(self):
"
16622,"def test_get_languages_defined_site(self):
"
16623,"def test_get_languages_undefined_site(self):
"
16624,"def test_language_code(self):
"
16625,"def test_get_languages_default_site(self):
"
16626,"def test_get_languages_defined_site(self):
"
16627,"def test_get_languages_undefined_site(self):
"
16628,"def test_language_code(self):
"
16629,"def test_get_languages_default_site(self):
"
16630,"def test_get_languages_defined_site(self):
"
16631,"def test_get_languages_undefined_site(self):
"
16632,"def test_get_fallback_languages(self):
"
16633,"def test_language_code(self):
"
16634,"def test_session_language(self):
"
16635,"def admin_class(self):
"
16636,"def get_admin(self):
"
16637,"def test_template_creation(self):
"
16638,"def test_empty(self):
"
16639,"def test_local(self):
"
16640,"def test_publish_stack(self):
"
16641,"def test_permissions(self):
"
16642,"def test_move_plugin(self):
"
16643,"def test_copy_plugin(self):
"
16644,"def test_create_by_admin(self):
"
16645,"def __init__(self,* args,** kwargs):
"
16646,"def import_file(self,file_obj,folder):
"
16647,"def get_or_create_folder(self,folder_names):
"
16648,"def walker(self,path = None,base_folder = None):
"
16649,"def handle_noargs(self,** options):
"
16650,"def forwards(self,orm):
"
16651,"def backwards(self,orm):
"
16652,"def __init__(self,settings_module,** overrides):
"
16653,"def __enter__(self):
"
16654,"def __exit__(self,_type,value,traceback):
"
16655,"def run(self):
"
16656,"def run_async(self):
"
16657,"def on_selection(self,branch_name_index):
"
16658,"def run(self):
"
16659,"def run_async(self,name = """"):
"
16660,"def run(self):
"
16661,"def run_async(self):
"
16662,"def on_selection(self,remote_branch_index):
"
16663,"def run(self):
"
16664,"def get_branches(self):
"
16665,"def merge(self,branch_name):
"
16666,"def __init__(self,endpoint,transport = 'plaintext',username = None,password = None,realm = None,service = None,keytab = None,ca_trust_path = None,cert_pem = None,cert_key_pem = None,server_cert_validation = 'validate'):
"
16667,"def set_timeout(self,seconds):
"
16668,"def open_shell(self,i_stream = 'stdin',o_stream = 'stdout stderr',working_directory = None,env_vars = None,noprofile = False,codepage = 437,lifetime = None,idle_timeout = None):
"
16669,"def _get_soap_header(self,action = None,resource_uri = None,shell_id = None,message_id = None):
"
16670,"def send_message(self,message):
"
16671,"def close_shell(self,shell_id):
"
16672,"def run_command(self,shell_id,command,arguments =(),console_mode_stdin = True,skip_cmd_shell = False):
"
16673,"def cleanup_command(self,shell_id,command_id):
"
16674,"def get_command_output(self,shell_id,command_id):
"
16675,"def _raw_get_command_output(self,shell_id,command_id):
"
16676,"def forwards(self,orm):
"
16677,"def backwards(self,orm):
"
16678,"def __init__(self,** kwargs):
"
16679,"def init_with_context(self,context):
"
16680,"def __init__(self,* args,** kwargs):
"
16681,"def init_with_context(self,context):
"
16682,"def test_urls_user(self):
"
16683,"def filter_queryset(self,request,queryset,view):
"
16684,"def filter_queryset(self,request,queryset,view):
"
16685,"def filter_queryset(self,request,queryset,view):
"
16686,"def filter_queryset(self,request,queryset,view):
"
16687,"def filter_queryset(self,request,queryset,view):
"
16688,"def filter_queryset(self,request,queryset,view):
"
16689,"def filter_queryset(self,request,queryset,view):
"
16690,"def filter_queryset(self,request,queryset,view):
"
16691,"def filter_queryset(self,request,queryset,view):
"
16692,"def comments(self):
"
16693,"def get_queryset(self):
"
16694,"def test_validation(self):
"
16695,"def test_api(self):
"
16696,"def test_basic(self):
"
16697,"def test_simple(self):
"
16698,"def test_configured(self):
"
16699,"def test_configure_method(self):
"
16700,"def test_init_kwargs(self):
"
16701,"def test_init_kwargs_with_prefix(self):
"
16702,"def test_proxy(self):
"
16703,"def test_dir_members(self):
"
16704,"def test_custom_holder(self):
"
16705,"def test_subclass_configured_data(self):
"
16706,"def test_override_settings_once(self):
"
16707,"def test_override_settings_twice(self):
"
16708,"def test_prefix(self):
"
16709,"def test_simple(self):
"
16710,"def test_configured(self):
"
16711,"def test_configure_method(self):
"
16712,"def test_prefix(self):
"
16713,"def test_simple(self):
"
16714,"def test_configured(self):
"
16715,"def test_configure_method(self):
"
16716,"def test_prefix(self):
"
16717,"def test_simple(self):
"
16718,"def create_invalid_conf(self):
"
16719,"def test_value_is_defined(self):
"
16720,"def test_default_is_defined(self):
"
16721,"def test_missing(self):
"
16722,"def parse(self,parser):
"
16723,"def _spaceless(self,caller):
"
16724,"def __init__(self,charset,env):
"
16725,"def parse(self,template_name):
"
16726,"def process_template(self,template,context):
"
16727,"def get_init_context(self,offline_context):
"
16728,"def process_node(self,template,context,node):
"
16729,"def _render_nodes(self,template,context,nodes):
"
16730,"def render_nodelist(self,template,context,node):
"
16731,"def render_node(self,template,context,node):
"
16732,"def get_nodelist(self,node):
"
16733,"def walk_nodes(self,node,block_name = None):
"
16734,"def handle(self,** options):
"
16735,"def _save_new_backup(self,database):
"
16736,"def write_local_file(self,outputfile,path):
"
16737,"def get_tx_id(self):
"
16738,"def on_open(self):
"
16739,"def __str__(self):
"
16740,"def on_close(self,* args,** kwargs):
"
16741,"def on_message(self,message):
"
16742,"def ddp_frames_from_message(self,message):
"
16743,"def dispatch(self,msg,kwargs):
"
16744,"def send(self,data,tx_id = None):
"
16745,"def reply(self,msg,** kwargs):
"
16746,"def recv_ping(self,id_ = None):
"
16747,"def recv_sub(self,id_,name,params):
"
16748,"def recv_unsub(self,id_ = None):
"
16749,"def recv_method(self,method,params,id_,randomSeed = None):
"
16750,"def remove_and_ban(self,request,queryset):
"
16751,"def title(self):
"
16752,"def generate_stats(self,request,response):
"
16753,"def get_template(self,* args,** kwargs):
"
16754,"def load_template(self,* args,** kwargs):
"
16755,"def handle(self,** kwargs):
"
16756,"def __init__(self,* args,** kwargs):
"
16757,"def render(self,name,value,attrs = None):
"
16758,"def render_pair(self,key,value,name):
"
16759,"def value_from_datadict(self,data,files,name):
"
16760,"def filter(self,record):
"
16761,"def handle(self,* scripts,** options):
"
16762,"def __init__(self,* args,** kwargs):
"
16763,"def to_python(self,value):
"
16764,"def get_db_prep_value(self,value):
"
16765,"def get_internal_type(self):
"
16766,"def formfield(self,** kwargs):
"
16767,"def __init__(self,max_length = None,* args,** kwargs):
"
16768,"def get_internal_type(self):
"
16769,"def formfield(self,** kwargs):
"
16770,"def test_widont(self):
"
16771,"def test_widont_html(self):
"
16772,"def ready(self):
"
16773,"def test_checks(self):
"
16774,"def __init__(self,** kwargs):
"
16775,"def get_results(self,request):
"
16776,"def get_model(self):
"
16777,"def get_model(self):
"
16778,"def test_discovery(self):
"
16779,"def test_discovery(self):
"
16780,"def setUp(self):
"
16781,"def test_fields(self):
"
16782,"def test_field_column_name(self):
"
16783,"def test_meta(self):
"
16784,"def test_get_export_order(self):
"
16785,"def test_inheritance(self):
"
16786,"def test_inheritance_with_custom_attributes(self):
"
16787,"def setUp(self):
"
16788,"def test_default_instance_loader_class(self):
"
16789,"def test_fields(self):
"
16790,"def test_fields_foreign_key(self):
"
16791,"def test_fields_m2m(self):
"
16792,"def test_excluded_fields(self):
"
16793,"def test_init_instance(self):
"
16794,"def test_default(self):
"
16795,"def test_get_instance(self):
"
16796,"def test_get_instance_import_id_fields(self):
"
16797,"def test_get_export_headers(self):
"
16798,"def test_export(self):
"
16799,"def test_export_iterable(self):
"
16800,"def test_get_diff_with_callable_related_manager(self):
"
16801,"def test_import_data(self):
"
16802,"def test_import_data_value_error_includes_field_name(self):
"
16803,"def test_import_data_error_saving_model(self):
"
16804,"def test_import_data_delete(self):
"
16805,"def test_relationships_fields(self):
"
16806,"def test_dehydrating_fields(self):
"
16807,"def test_widget_fomat_in_fk_field(self):
"
16808,"def test_widget_kwargs_for_field(self):
"
16809,"def test_foreign_keys_export(self):
"
16810,"def test_foreign_keys_import(self):
"
16811,"def test_m2m_export(self):
"
16812,"def test_m2m_import(self):
"
16813,"def test_m2m_options_import(self):
"
16814,"def test_related_one_to_one(self):
"
16815,"def test_empty_get_queryset(self):
"
16816,"def test_import_data_skip_unchanged(self):
"
16817,"def test_before_import_access_to_kwargs(self):
"
16818,"def test_link_to_nonexistent_field(self):
"
16819,"def test_link_to_nonrelation_field(self):
"
16820,"def test_override_field_construction_in_resource(self):
"
16821,"def test_readonly_annotated_field_import_and_export(self):
"
16822,"def test_follow_relationship_for_modelresource(self):
"
16823,"def test_import_data_dynamic_default_callable(self):
"
16824,"def test_float_field(self):
"
16825,"def test_m2m_import_with_transactions(self):
"
16826,"def test_m2m_import_with_transactions_error(self):
"
16827,"def test_create(self):
"
16828,"def test_create_object_after_importing_dataset_with_id(self):
"
16829,"def setUp(self):
"
16830,"def test_data_in_correct_format_when_instantiated_with_blog_object(self):
"
16831,"def test_data_in_correct_format_when_instantiated_with_entry_object(self):
"
16832,"def test_deserialize_primitive_data_blog(self):
"
16833,"def test_data_in_correct_format_when_instantiated_with_queryset(self):
"
16834,"def test_deserialize_many(self):
"
16835,"def test_model_serializer_with_implicit_fields(self,comment,client):
"
16836,"def create_test_db(self,* args,** kwargs):
"
16837,"def destroy_test_db(self,* args,** kwargs):
"
16838,"def __init__(self,ldap_connection):
"
16839,"def __init__(self,connection):
"
16840,"def quote_name(self,name):
"
16841,"def no_limit_value(self):
"
16842,"def __init__(self,* args,** kwargs):
"
16843,"def close(self):
"
16844,"def ensure_connection(self):
"
16845,"def _commit(self):
"
16846,"def _cursor(self):
"
16847,"def _rollback(self):
"
16848,"def _set_autocommit(self,autocommit):
"
16849,"def add_s(self,dn,modlist):
"
16850,"def delete_s(self,dn):
"
16851,"def modify_s(self,dn,modlist):
"
16852,"def rename_s(self,dn,newrdn):
"
16853,"def search_s(self,base,scope,filterstr = '(objectClass=*)',attrlist = None):
"
16854,"def __init__(self,* args,** kwargs):
"
16855,"def handle(self,request,data):
"
16856,"def clean(self):
"
16857,"def handle(self,request,data):
"
16858,"def _wrap_all(self):
"
16859,"def __init__(self,* args,** kwargs):
"
16860,"def __init__(self,column,datum,form):
"
16861,"def get_link_url(self):
"
16862,"def allowed(self,request,instance):
"
16863,"def delete(self,request,obj_id):
"
16864,"def get_formset(self):
"
16865,"def __init__(self,request,data = None,needs_form_wrapper = None,** kwargs):
"
16866,"def get_object_id(self,datum):
"
16867,"def get_object_name(self,datum):
"
16868,"def __init__(self,column,datum,form):
"
16869,"def get_formset(self):
"
16870,"def __init__(self,* args,** kwargs):
"
16871,"def get(self,request,* args,** kwargs):
"
16872,"def __init__(self,* args,** kwargs):
"
16873,"def log(self,msg,level = 2):
"
16874,"def __iter__(self):
"
16875,"def _get_cursor(self):
"
16876,"def process_request(self,request):
"
16877,"def process_request(self,request):
"
16878,"def process_response(self,request,response):
"
16879,"def get_context_data(self,** kwargs):
"
16880,"def post(self,request,* args,** kwargs):
"
16881,"def handle_payment(self,order_number,total,** kwargs):
"
16882,"def select_account(self,request):
"
16883,"def add_allocation(self,request):
"
16884,"def remove_allocation(self,request):
"
16885,"def store_allocation_in_session(self,form):
"
16886,"def get_account_allocations(self):
"
16887,"def set_account_allocations(self,allocations):
"
16888,"def handle(self,* args,** options):
"
16889,"def __init__(self,language):
"
16890,"def get_obj_location(self,obj):
"
16891,"def location(self,obj):
"
16892,"def items(self):
"
16893,"def get_obj_location(self,obj):
"
16894,"def items(self):
"
16895,"def items(self):
"
16896,"def __init__(self,* args,** kwargs):
"
16897,"def adjust_country_field(self):
"
16898,"def __init__(self,* args,** kwargs):
"
16899,"def clean_username(self):
"
16900,"def clean(self):
"
16901,"def is_guest_checkout(self):
"
16902,"def is_new_account_checkout(self):
"
16903,"def get(self,request,* args,** kwargs):
"
16904,"def get_logged_in_redirect(self):
"
16905,"def get_form_kwargs(self):
"
16906,"def get_context_data(self,* args,** kwargs):
"
16907,"def form_valid(self,form):
"
16908,"def get(self,request,* args,** kwargs):
"
16909,"def get_context_data(self,* args,** kwargs):
"
16910,"def get_login_form(self,bind_data = False):
"
16911,"def get_login_form_kwargs(self,bind_data = False):
"
16912,"def validate_login_form(self):
"
16913,"def get_login_success_message(self,form):
"
16914,"def get_login_success_url(self,form):
"
16915,"def get_registration_form(self,bind_data = False):
"
16916,"def get_registration_form_kwargs(self,bind_data = False):
"
16917,"def validate_registration_form(self):
"
16918,"def get_registration_success_message(self,form):
"
16919,"def get_registration_success_url(self,form):
"
16920,"def get(self,request,* args,** kwargs):
"
16921,"def get_context_data(self,** kwargs):
"
16922,"def get_profile_fields(self,user):
"
16923,"def get_model_field_data(self,model_class,field_name):
"
16924,"def get_form_kwargs(self):
"
16925,"def form_valid(self,form):
"
16926,"def get_form_kwargs(self):
"
16927,"def form_valid(self,form):
"
16928,"def get_form_kwargs(self):
"
16929,"def form_valid(self,form):
"
16930,"def get_queryset(self):
"
16931,"def get_object(self,queryset = None):
"
16932,"def get(self,request,* args,** kwargs):
"
16933,"def get_queryset(self):
"
16934,"def get_context_data(self,* args,** kwargs):
"
16935,"def get_template_names(self):
"
16936,"def get_object(self,queryset = None):
"
16937,"def do_reorder(self,order):
"
16938,"def get_object(self,queryset = None):
"
16939,"def do_reorder(self,line):
"
16940,"def get_object(self,queryset = None):
"
16941,"def get_queryset(self):
"
16942,"def get_form_kwargs(self):
"
16943,"def get_context_data(self,** kwargs):
"
16944,"def get_success_url(self):
"
16945,"def get_form_kwargs(self):
"
16946,"def get_context_data(self,** kwargs):
"
16947,"def get_queryset(self):
"
16948,"def get_success_url(self):
"
16949,"def get_queryset(self):
"
16950,"def get_success_url(self):
"
16951,"def get(self,request,pk = None,action = None,* args,** kwargs):
"
16952,"def get_report_generators(self):
"
16953,"def get_generator(self,code):
"
16954,"def order_number(self,basket):
"
16955,"def place_order(self,basket,total,shipping_method,shipping_charge,user = None,shipping_address = None,billing_address = None,order_number = None,status = None,** kwargs):
"
16956,"def create_order_model(self,user,basket,shipping_address,shipping_method,shipping_charge,billing_address,total,order_number,status,** extra_order_fields):
"
16957,"def create_line_models(self,order,basket_line,extra_line_fields = None):
"
16958,"def update_stock_records(self,line):
"
16959,"def create_additional_line_models(self,order,order_line,basket_line):
"
16960,"def create_line_price_models(self,order,order_line,basket_line):
"
16961,"def create_line_attributes(self,order,order_line,basket_line):
"
16962,"def create_discount_model(self,order,discount):
"
16963,"def record_discount(self,discount):
"
16964,"def record_voucher_usage(self,order,voucher,user):
"
16965,"def __init__(self,currency,excl_tax,incl_tax = None,tax = None):
"
16966,"def _get_tax(self):
"
16967,"def _set_tax(self,value):
"
16968,"def __repr__(self):
"
16969,"def __eq__(self,other):
"
16970,"def test_cannot_access_reset_password_page(self):
"
16971,"def test_does_not_receive_an_email_when_their_profile_is_updated_but_email_address_not_changed(self):
"
16972,"def test_receives_an_email_when_their_email_address_is_changed(self):
"
16973,"def assertCanLogin(self,email,password):
"
16974,"def test_can_login(self):
"
16975,"def test_can_login_with_email_containing_capitals_in_local_part(self):
"
16976,"def test_can_login_with_email_containing_capitals_in_host(self):
"
16977,"def test_can_register(self):
"
16978,"def test_casing_of_local_part_of_email_is_preserved(self):
"
16979,"def setUp(self):
"
16980,"def test_gets_redirected_to_the_dashboard_when_they_login(self):
"
16981,"def setUp(self):
"
16982,"def test_has_discount_recorded_correctly_when_order_is_placed(self):
"
16983,"def setUp(self):
"
16984,"def test_get_price_excl_tax_returns_correct_value(self):
"
16985,"def test_net_stock_level_with_no_allocation(self):
"
16986,"def test_net_stock_level_with_allocation(self):
"
16987,"def test_allocated_does_not_alter_num_in_stock(self):
"
16988,"def test_allocation_handles_null_value(self):
"
16989,"def test_consuming_allocation(self):
"
16990,"def test_cancelling_allocation(self):
"
16991,"def test_cancelling_allocation_ignores_too_big_allocations(self):
"
16992,"def setUp(self):
"
16993,"def test_can_get_primary_address(self):
"
16994,"def test_fails_on_two_addresses(self):
"
16995,"def _mock_response(self):
"
16996,"def _execute_request(self):
"
16997,"def test_enabled(self):
"
16998,"def test_disabled(self):
"
16999,"def test_init(self):
"
17000,"def test_get_related_resource(self):
"
17001,"def test_resource_from_uri(self):
"
17002,"def test_build_related_resource(self):
"
17003,"def forwards(self,orm):
"
17004,"def backwards(self,orm):
"
17005,"def __init__(self,* args,** kwargs):
"
17006,"def deconstruct(self):
"
17007,"def __init__(self,* args,** kwargs):
"
17008,"def deconstruct(self):
"
17009,"def clean(self,value):
"
17010,"def clean(self,value):
"
17011,"def __init__(self,attrs = None):
"
17012,"def clean(self,value):
"
17013,"def __init__(self,attrs = None):
"
17014,"def __init__(self,attrs = None):
"
17015,"def __init__(self,attrs = None):
"
17016,"def __init__(self,attrs = None):
"
17017,"def clean(self,value):
"
17018,"def clean(self,value):
"
17019,"def __init__(self,attrs = None):
"
17020,"def __init__(self,attrs = None):
"
17021,"def clean(self,value):
"
17022,"def test_JPPrefectureSelect(self):
"
17023,"def test_JPPrefectureCodeSelect(self):
"
17024,"def test_JPPostalCodeField(self):
"
17025,"def test_tn_governorate_select(self):
"
17026,"def setUp(self):
"
17027,"def test_field_name(self):
"
17028,"def test_builtin_fields(self):
"
17029,"def get_by_natural_key(self,codename,app_label,model):
"
17030,"def __str__(self):
"
17031,"def natural_key(self):
"
17032,"def get_by_natural_key(self,name):
"
17033,"def __str__(self):
"
17034,"def natural_key(self):
"
17035,"def _create_user(self,username,email,password,** extra_fields):
"
17036,"def create_user(self,username,email = None,password = None,** extra_fields):
"
17037,"def create_superuser(self,username,email,password,** extra_fields):
"
17038,"def get_group_permissions(self,obj = None):
"
17039,"def get_all_permissions(self,obj = None):
"
17040,"def has_perm(self,perm,obj = None):
"
17041,"def has_perms(self,perm_list,obj = None):
"
17042,"def has_module_perms(self,app_label):
"
17043,"def get_full_name(self):
"
17044,"def get_short_name(self):
"
17045,"def email_user(self,subject,message,from_email = None,** kwargs):
"
17046,"def __init__(self):
"
17047,"def __str__(self):
"
17048,"def __eq__(self,other):
"
17049,"def __ne__(self,other):
"
17050,"def __hash__(self):
"
17051,"def save(self):
"
17052,"def delete(self):
"
17053,"def set_password(self,raw_password):
"
17054,"def check_password(self,raw_password):
"
17055,"def _get_groups(self):
"
17056,"def _get_user_permissions(self):
"
17057,"def get_group_permissions(self,obj = None):
"
17058,"def get_all_permissions(self,obj = None):
"
17059,"def has_perm(self,perm,obj = None):
"
17060,"def has_perms(self,perm_list,obj = None):
"
17061,"def has_module_perms(self,module):
"
17062,"def is_anonymous(self):
"
17063,"def is_authenticated(self):
"
17064,"def get_username(self):
"
17065,"def __init__(self,dr_input):
"
17066,"def __str__(self):
"
17067,"def name(self):
"
17068,"def render(self):
"
17069,"def body(self):
"
17070,"def onload(self):
"
17071,"def api_script(self):
"
17072,"def js(self):
"
17073,"def scripts(self):
"
17074,"def style(self):
"
17075,"def xhtml(self):
"
17076,"def icons(self):
"
17077,"def __init__(self,* args,** kwargs):
"
17078,"def load_map_js(self):
"
17079,"def render(self):
"
17080,"def onload(self):
"
17081,"def icons(self):
"
17082,"def _get(self,* args,** kwargs):
"
17083,"def _store(self,messages,response,* args,** kwargs):
"
17084,"def serialize_messages(self,messages):
"
17085,"def deserialize_messages(self,data):
"
17086,"def __str__(self):
"
17087,"def __init__(self,request):
"
17088,"def __str__(self):
"
17089,"def save(self,force_insert = False,force_update = False):
"
17090,"def delete(self):
"
17091,"def __init__(self,* args,** kwargs):
"
17092,"def send_messages(self,messages):
"
17093,"def __init__(self):
"
17094,"def run_from_argv(self,argv):
"
17095,"def handle(self,* test_labels,** options):
"
17096,"def __init__(self,cursor):
"
17097,"def execute(self,query,args = None):
"
17098,"def executemany(self,query,args):
"
17099,"def __getattr__(self,attr):
"
17100,"def __iter__(self):
"
17101,"def __enter__(self):
"
17102,"def __exit__(self,type,value,traceback):
"
17103,"def data_types(self):
"
17104,"def __init__(self,* args,** kwargs):
"
17105,"def get_connection_params(self):
"
17106,"def get_new_connection(self,conn_params):
"
17107,"def init_connection_state(self):
"
17108,"def create_cursor(self):
"
17109,"def _rollback(self):
"
17110,"def _set_autocommit(self,autocommit):
"
17111,"def disable_constraint_checking(self):
"
17112,"def enable_constraint_checking(self):
"
17113,"def is_usable(self):
"
17114,"def mysql_version(self):
"
17115,"def __init__(self,name):
"
17116,"def name_lower(self):
"
17117,"def references_model(self,name,app_label = None):
"
17118,"def reduce(self,operation,in_between,app_label = None):
"
17119,"def __init__(self,name,fields,options = None,bases = None,managers = None):
"
17120,"def deconstruct(self):
"
17121,"def state_forwards(self,app_label,state):
"
17122,"def database_forwards(self,app_label,schema_editor,from_state,to_state):
"
17123,"def database_backwards(self,app_label,schema_editor,from_state,to_state):
"
17124,"def describe(self):
"
17125,"def references_model(self,name,app_label = None):
"
17126,"def model_to_key(self,model):
"
17127,"def reduce(self,operation,in_between,app_label = None):
"
17128,"def deconstruct(self):
"
17129,"def state_forwards(self,app_label,state):
"
17130,"def database_forwards(self,app_label,schema_editor,from_state,to_state):
"
17131,"def database_backwards(self,app_label,schema_editor,from_state,to_state):
"
17132,"def describe(self):
"
17133,"def __init__(self,old_name,new_name):
"
17134,"def old_name_lower(self):
"
17135,"def new_name_lower(self):
"
17136,"def deconstruct(self):
"
17137,"def state_forwards(self,app_label,state):
"
17138,"def database_forwards(self,app_label,schema_editor,from_state,to_state):
"
17139,"def database_backwards(self,app_label,schema_editor,from_state,to_state):
"
17140,"def references_model(self,name,app_label = None):
"
17141,"def describe(self):
"
17142,"def reduce(self,operation,in_between,app_label = None):
"
17143,"def __init__(self,name,table):
"
17144,"def deconstruct(self):
"
17145,"def state_forwards(self,app_label,state):
"
17146,"def database_forwards(self,app_label,schema_editor,from_state,to_state):
"
17147,"def database_backwards(self,app_label,schema_editor,from_state,to_state):
"
17148,"def describe(self):
"
17149,"def reduce(self,operation,in_between,app_label = None):
"
17150,"def reduce(self,operation,in_between,app_label = None):
"
17151,"def reduce(self,operation,in_between,app_label = None):
"
17152,"def __init__(self,name,unique_together):
"
17153,"def deconstruct(self):
"
17154,"def state_forwards(self,app_label,state):
"
17155,"def database_forwards(self,app_label,schema_editor,from_state,to_state):
"
17156,"def database_backwards(self,app_label,schema_editor,from_state,to_state):
"
17157,"def references_field(self,model_name,name,app_label = None):
"
17158,"def describe(self):
"
17159,"def __init__(self,name,index_together):
"
17160,"def deconstruct(self):
"
17161,"def state_forwards(self,app_label,state):
"
17162,"def database_forwards(self,app_label,schema_editor,from_state,to_state):
"
17163,"def database_backwards(self,app_label,schema_editor,from_state,to_state):
"
17164,"def references_field(self,model_name,name,app_label = None):
"
17165,"def describe(self):
"
17166,"def __init__(self,name,order_with_respect_to):
"
17167,"def deconstruct(self):
"
17168,"def state_forwards(self,app_label,state):
"
17169,"def database_forwards(self,app_label,schema_editor,from_state,to_state):
"
17170,"def database_backwards(self,app_label,schema_editor,from_state,to_state):
"
17171,"def references_field(self,model_name,name,app_label = None):
"
17172,"def describe(self):
"
17173,"def __init__(self,name,options):
"
17174,"def deconstruct(self):
"
17175,"def state_forwards(self,app_label,state):
"
17176,"def database_forwards(self,app_label,schema_editor,from_state,to_state):
"
17177,"def database_backwards(self,app_label,schema_editor,from_state,to_state):
"
17178,"def describe(self):
"
17179,"def __init__(self,name,managers):
"
17180,"def deconstruct(self):
"
17181,"def state_forwards(self,app_label,state):
"
17182,"def database_forwards(self,app_label,schema_editor,from_state,to_state):
"
17183,"def database_backwards(self,app_label,schema_editor,from_state,to_state):
"
17184,"def describe(self):
"
17185,"def __init__(self,* args,** kwargs):
"
17186,"def _resolve_references(self,sender,** kwargs):
"
17187,"def __init__(self,META,input_data,upload_handlers,encoding = None):
"
17188,"def handle_file_complete(self,old_field_name,counters):
"
17189,"def IE_sanitize(self,filename):
"
17190,"def _close_files(self):
"
17191,"def tell(self):
"
17192,"def close(self):
"
17193,"def __iter__(self):
"
17194,"def __init__(self,flo,chunk_size = 64 * 1024):
"
17195,"def __next__(self):
"
17196,"def __iter__(self):
"
17197,"def __init__(self,stream,boundary):
"
17198,"def __iter__(self):
"
17199,"def __next__(self):
"
17200,"def __init__(self,stream,boundary):
"
17201,"def __iter__(self):
"
17202,"def __iter__(self):
"
17203,"def get_dirs(self):
"
17204,"def __init__(self,file):
"
17205,"def __enter__(self):
"
17206,"def __exit__(self,exc_type,exc_value,traceback):
"
17207,"def extract(self,to_path = ''):
"
17208,"def list(self):
"
17209,"def close(self):
"
17210,"def split_leading_dir(self,path):
"
17211,"def has_leading_dir(self,paths):
"
17212,"def extract(self):
"
17213,"def list(self):
"
17214,"def __init__(self,file):
"
17215,"def list(self,* args,** kwargs):
"
17216,"def extract(self,to_path):
"
17217,"def close(self):
"
17218,"def __init__(self,file):
"
17219,"def list(self,* args,** kwargs):
"
17220,"def extract(self,to_path):
"
17221,"def close(self):
"
17222,"def __init__(self,tup,hash = hash):
"
17223,"def __hash__(self):
"
17224,"def get(self,request):
"
17225,"def add_arguments(self,parser):
"
17226,"def __str__(self):
"
17227,"def __str__(self):
"
17228,"def __str__(self):
"
17229,"def __str__(self):
"
17230,"def __str__(self):
"
17231,"def validate_key(self,key):
"
17232,"def test_request_attributes(self):
"
17233,"def test_debug(self):
"
17234,"def test_sql_queries(self):
"
17235,"def test_fails_with_keyerror_on_incomplete_config(self):
"
17236,"def test_basic_params_specified_in_settings(self):
"
17237,"def test_options_override_settings_proper_values(self):
"
17238,"def test_can_connect_using_sockets(self):
"
17239,"def test_ssl_certificate_is_added(self):
"
17240,"def get_command_line_arguments(self,connection_settings):
"
17241,"def get_valid_name(self,name):
"
17242,"def custom_upload_to(self,filename):
"
17243,"def random_upload_to(self,filename):
"
17244,"def __str__(self):
"
17245,"def __str__(self):
"
17246,"def __str__(self):
"
17247,"def __str__(self):
"
17248,"def test_typedchoicefield_1(self):
"
17249,"def test_typedchoicefield_2(self):
"
17250,"def test_typedchoicefield_3(self):
"
17251,"def test_typedchoicefield_4(self):
"
17252,"def test_typedchoicefield_5(self):
"
17253,"def test_typedchoicefield_6(self):
"
17254,"def test_typedchoicefield_has_changed(self):
"
17255,"def test_typedchoicefield_special_coerce(self):
"
17256,"def decompress(self,value):
"
17257,"def __init__(self,attrs = None):
"
17258,"def decompress(self,value):
"
17259,"def format_output(self,rendered_widgets):
"
17260,"def __init__(self,required = True,widget = None,label = None,initial = None):
"
17261,"def compress(self,data_list):
"
17262,"def __init__(self,choices =[]):
"
17263,"def _set_choices(self,choices):
"
17264,"def _get_choices(self):
"
17265,"def test_needs_multipart_true(self):
"
17266,"def test_needs_multipart_false(self):
"
17267,"def test_deepcopy(self):
"
17268,"def test_askml(self):
"
17269,"def test_assvg(self):
"
17270,"def test_bounding_circle(self):
"
17271,"def test_centroid(self):
"
17272,"def test_difference(self):
"
17273,"def test_difference_mixed_srid(self):
"
17274,"def test_envelope(self):
"
17275,"def test_force_rhr(self):
"
17276,"def test_geohash(self):
"
17277,"def test_intersection(self):
"
17278,"def test_isvalid(self):
"
17279,"def test_area_with_regular_aggregate(self):
"
17280,"def test_make_valid(self):
"
17281,"def test_memsize(self):
"
17282,"def test_num_geom(self):
"
17283,"def test_num_points(self):
"
17284,"def test_point_on_surface(self):
"
17285,"def test_reverse_geom(self):
"
17286,"def test_scale(self):
"
17287,"def test_sym_difference(self):
"
17288,"def test_transform(self):
"
17289,"def test_translate(self):
"
17290,"def test_diff_intersection_union(self):
"
17291,"def test_union(self):
"
17292,"def test_get_units(self):
"
17293,"def test_get_units_without_gdal(self):
"
17294,"def test_retrieve(self):
"
17295,"def test_osr(self):
"
17296,"def test_ellipsoid(self):
"
17297,"def test_add_entry(self):
"
17298,"def __str__(self):
"
17299,"def __str__(self):
"
17300,"def __str__(self):
"
17301,"def test_create_save_error(self):
"
17302,"def test_update_save_error(self):
"
17303,"def setUp(self):
"
17304,"def test_default_ordering(self):
"
17305,"def test_default_ordering_override(self):
"
17306,"def test_order_by_override(self):
"
17307,"def test_stop_slicing(self):
"
17308,"def test_stop_start_slicing(self):
"
17309,"def test_random_ordering(self):
"
17310,"def test_reversed_ordering(self):
"
17311,"def test_reverse_ordering_pure(self):
"
17312,"def test_extra_ordering(self):
"
17313,"def test_extra_ordering_quoting(self):
"
17314,"def test_extra_ordering_with_table_name(self):
"
17315,"def test_order_by_pk(self):
"
17316,"def test_order_by_fk_attname(self):
"
17317,"def test_order_by_f_expression(self):
"
17318,"def test_order_by_f_expression_duplicates(self):
"
17319,"def test_related_ordering_duplicate_table_reference(self):
"
17320,"def test_access_fks_without_select_related(self):
"
17321,"def test_access_fks_with_select_related(self):
"
17322,"def test_list_without_select_related(self):
"
17323,"def test_list_with_select_related(self):
"
17324,"def test_list_with_depth(self):
"
17325,"def test_select_related_with_extra(self):
"
17326,"def test_certain_fields(self):
"
17327,"def test_more_certain_fields(self):
"
17328,"def test_field_traversal(self):
"
17329,"def test_depth_fields_fails(self):
"
17330,"def test_none_clears_list(self):
"
17331,"def test_chaining(self):
"
17332,"def test_select_related_after_values(self):
"
17333,"def test_select_related_after_values_list(self):
"
17334,"def test_non_relational_field(self):
"
17335,"def test_non_relational_field_nested(self):
"
17336,"def test_many_to_many_field(self):
"
17337,"def test_reverse_relational_field(self):
"
17338,"def test_invalid_field(self):
"
17339,"def test_generic_relations(self):
"
17340,"def __str__(self):
"
17341,"def __str__(self):
"
17342,"def __str__(self):
"
17343,"def __str__(self):
"
17344,"def test_value(self):
"
17345,"def test_none(self):
"
17346,"def test_empty_string(self):
"
17347,"def test_slice01(self):
"
17348,"def test_slice02(self):
"
17349,"def test_zero_length(self):
"
17350,"def test_index(self):
"
17351,"def test_negative_index(self):
"
17352,"def test_range(self):
"
17353,"def test_range_multiple(self):
"
17354,"def test_range_step(self):
"
17355,"def __str__(self):
"
17356,"def test_custom_simple_validator_message(self):
"
17357,"def test_custom_null_message(self):
"
17358,"def request(self,** request):
"
17359,"def ready(self):
"
17360,"def __init__(self,** kwargs):
"
17361,"def to_representation(self,obj):
"
17362,"def to_internal_value(self,data):
"
17363,"def post(self,request,* args,** kwargs):
"
17364,"def get_object(self):
"
17365,"def delete(self,request,* args,** kwargs):
"
17366,"def add_arguments(self,parser):
"
17367,"def handle(self,* args,** options):
"
17368,"def __init__(self,s1,a1,r,s2,a2):
"
17369,"def __call__(self,s,a = None):
"
17370,"def __init__(self,nactions,input_size,max_experiences = 500,gamma = 0.6,alpha = 0.1,use_sarsa = False):
"
17371,"def GetValue(self,s,a = None):
"
17372,"def Update(self,s1,a1,r,s2,a2):
"
17373,"def RememberExperience(self,s1,a1,r,s2,a2):
"
17374,"def __init__(self,timing_data,label = ""Data""):
"
17375,"def style_name(self):
"
17376,"def __init__(self,attrs = None,choices =()):
"
17377,"def value_from_datadict(self,data,files,name):
"
17378,"def render_option(self,name,selected_choices,option_value,option_label):
"
17379,"def option_string(self):
"
17380,"def __init__(self,attrs = None):
"
17381,"def decompress(self,value):
"
17382,"def decompress(self,value):
"
17383,"def __init__(self,loaders = None):
"
17384,"def append(self,loader):
"
17385,"def load(self):
"
17386,"def __call__(self,* args):
"
17387,"def setUp(self):
"
17388,"def test_str(self):
"
17389,"def setUp(self):
"
17390,"def test_str(self):
"
17391,"def test_delete(self):
"
17392,"def transform(self,X):
"
17393,"def __init__(self,string):
"
17394,"def test_docker_client_no_home(self):
"
17395,"def test_docker_client_with_custom_timeout(self):
"
17396,"def test_simple_tls(self):
"
17397,"def test_tls_ca_cert(self):
"
17398,"def test_tls_ca_cert_explicit(self):
"
17399,"def test_tls_client_cert(self):
"
17400,"def test_tls_client_cert_explicit(self):
"
17401,"def test_tls_client_and_ca(self):
"
17402,"def test_tls_client_and_ca_explicit(self):
"
17403,"def test_tls_client_missing_key(self):
"
17404,"def test_assert_hostname_explicit_skip(self):
"
17405,"def get_image(self,image):
"
17406,"def history(self,image):
"
17407,"def images(self,name = None,quiet = False,all = False,viz = False,filters = None):
"
17408,"def import_image(self,src = None,repository = None,tag = None,image = None):
"
17409,"def import_image_from_data(self,data,repository = None,tag = None):
"
17410,"def import_image_from_file(self,filename,repository = None,tag = None):
"
17411,"def import_image_from_stream(self,stream,repository = None,tag = None):
"
17412,"def import_image_from_url(self,url,repository = None,tag = None):
"
17413,"def import_image_from_image(self,image,repository = None,tag = None):
"
17414,"def inspect_image(self,image):
"
17415,"def load_image(self,data):
"
17416,"def push(self,repository,tag = None,stream = False,insecure_registry = False,decode = False):
"
17417,"def remove_image(self,image,force = False,noprune = False):
"
17418,"def search(self,term):
"
17419,"def tag(self,image,repository,tag = None,force = False):
"
17420,"def test_images(self):
"
17421,"def test_images_quiet(self):
"
17422,"def test_pull(self):
"
17423,"def test_pull_streaming(self):
"
17424,"def test_commit(self):
"
17425,"def test_commit_with_changes(self):
"
17426,"def test_remove(self):
"
17427,"def write_dummy_tar_content(self,n_bytes,tar_fd):
"
17428,"def dummy_tar_stream(self,n_bytes):
"
17429,"def dummy_tar_file(self,n_bytes):
"
17430,"def test_import_from_bytes(self):
"
17431,"def test_import_from_file(self):
"
17432,"def test_import_from_stream(self):
"
17433,"def temporary_http_file_server(self,stream):
"
17434,"def test_import_from_url(self):
"
17435,"def read(self,size):
"
17436,"def __init__(self):
"
17437,"def tearDown(self):
"
17438,"def test_list_bucket(self):
"
17439,"def test_stream_write(self):
"
17440,"def test_init_path(self):
"
17441,"def test_debug_key(self):
"
17442,"def test_get_tags(self):
"
17443,"def test_consistency_latency(self):
"
17444,"def test_too_many_read_retries(self):
"
17445,"def __init__(self,storage,segment,schema):
"
17446,"def __repr__(self):
"
17447,"def __contains__(self,term):
"
17448,"def close(self):
"
17449,"def _open_vectors(self):
"
17450,"def vector(self,docnum,fieldid):
"
17451,"def stored_fields(self,docnum):
"
17452,"def field_length(self,fieldid):
"
17453,"def doc_field_length(self,docnum,fieldid):
"
17454,"def doc_field_lengths(self,docnum):
"
17455,"def has_vector(self,docnum,fieldnum):
"
17456,"def __iter__(self):
"
17457,"def iter_from(self,fieldnum,text):
"
17458,"def _term_info(self,fieldnum,text):
"
17459,"def doc_frequency(self,fieldid,text):
"
17460,"def frequency(self,fieldid,text):
"
17461,"def lexicon(self,fieldid):
"
17462,"def expand_prefix(self,fieldid,prefix):
"
17463,"def postings(self,fieldid,text,exclude_docs = frozenset()):
"
17464,"def __init__(self,fname):
"
17465,"def parse_rules(self):
"
17466,"def add(self,rule):
"
17467,"def match_rule(self,target):
"
17468,"def set_header(self,header):
"
17469,"def set_pofile(self,fname):
"
17470,"def applies_to(self,target):
"
17471,"def apply(self,target):
"
17472,"def do_copy(self,targets,lines):
"
17473,"def __str__(self):
"
17474,"def __init__(self):
"
17475,"def add(self,line):
"
17476,"def do_copy(self):
"
17477,"def __unicode__(self):
"
17478,"def __init__(self,settings):
"
17479,"def capture_payment(self,testing = False,order = None,amount = None):
"
17480,"def forwards(self,orm):
"
17481,"def backwards(self,orm):
"
17482,"def _get_subtype(self):
"
17483,"def __unicode__(self):
"
17484,"def _get_fullPrice(self):
"
17485,"def get_qty_price(self,qty,show_trial = True,include_discount = True):
"
17486,"def recurring_price(self):
"
17487,"def get_trial_terms(self,trial = None):
"
17488,"def calc_expire_date(self,date = None):
"
17489,"def save(self,** kwargs):
"
17490,"def __unicode__(self):
"
17491,"def _occurrences(self):
"
17492,"def calc_expire_date(self,date = None):
"
17493,"def process_response(self,request,response):
"
17494,"def __init__(self):
"
17495,"def _options(self):
"
17496,"def __str__(self):
"
17497,"def _options(self):
"
17498,"def areas(self):
"
17499,"def countries(self):
"
17500,"def _base_url(self,secure = False):
"
17501,"def save(self,** kwargs):
"
17502,"def __unicode__(self):
"
17503,"def add_item(self,* args,** kwargs):
"
17504,"def remove_item(self,* args,** kwargs):
"
17505,"def empty(self):
"
17506,"def __str__(self):
"
17507,"def __iter__(self):
"
17508,"def __len__(self):
"
17509,"def __init__(self,order):
"
17510,"def _numItems(self):
"
17511,"def _cartitem_set(self):
"
17512,"def _total(self):
"
17513,"def __str__(self):
"
17514,"def __len__(self):
"
17515,"def from_request(self,request,create = False,return_nullcart = True):
"
17516,"def _get_count(self):
"
17517,"def _get_discount(self):
"
17518,"def _get_total(self,include_discount = True):
"
17519,"def _get_undiscounted_total(self):
"
17520,"def __iter__(self):
"
17521,"def __len__(self):
"
17522,"def __nonzero__(self):
"
17523,"def _is_empty(self):
"
17524,"def add_item(self,chosen_item,number_added,details =[]):
"
17525,"def remove_item(self,chosen_item_id,number_removed):
"
17526,"def merge_carts(self,src_cart):
"
17527,"def empty(self):
"
17528,"def save(self,** kwargs):
"
17529,"def _get_shippable(self):
"
17530,"def get_shipment_list(self):
"
17531,"def __init__(self,itemid):
"
17532,"def _get_line_unitprice(self,include_discount = True):
"
17533,"def _get_undiscounted_unitprice(self):
"
17534,"def get_detail_price(self):
"
17535,"def get_qty_price(self,qty,include_discount = True):
"
17536,"def _get_line_total(self):
"
17537,"def _get_undiscounted_line_total(self):
"
17538,"def _get_description(self):
"
17539,"def _is_shippable(self):
"
17540,"def add_detail(self,data):
"
17541,"def _has_details(self):
"
17542,"def from_request(self,request):
"
17543,"def remove_partial_order(self,request):
"
17544,"def __unicode__(self):
"
17545,"def add_status(self,status = None,notes = """"):
"
17546,"def add_variable(self,key,value):
"
17547,"def _authorized_remaining(self):
"
17548,"def _get_count(self):
"
17549,"def get_variable(self,key,default = None):
"
17550,"def copy_addresses(self):
"
17551,"def remove_all_items(self):
"
17552,"def _balance(self):
"
17553,"def balance_forward(self):
"
17554,"def _balance_paid(self):
"
17555,"def _credit_card(self):
"
17556,"def _full_bill_street(self,delim = ""\n""):
"
17557,"def _full_ship_street(self,delim = ""\n""):
"
17558,"def _ship_country_name(self):
"
17559,"def _bill_country_name(self):
"
17560,"def _ship_first_name(self):
"
17561,"def _ship_last_name(self):
"
17562,"def _discounted_sub_total(self):
"
17563,"def _get_balance_remaining_url(self):
"
17564,"def _partially_paid(self):
"
17565,"def _is_partially_paid(self):
"
17566,"def payments_completed(self):
"
17567,"def save(self,** kwargs):
"
17568,"def _item_discount(self):
"
17569,"def recalculate_total(self,save = True):
"
17570,"def force_recalculate_total(self,save = True):
"
17571,"def _order_total(self):
"
17572,"def order_success(self):
"
17573,"def order_cancel(self):
"
17574,"def _paid_in_full(self):
"
17575,"def _has_downloads(self):
"
17576,"def _is_downloadable(self):
"
17577,"def _is_shippable(self):
"
17578,"def _shipping_sub_total(self):
"
17579,"def _shipping_tax(self):
"
17580,"def _shipping_with_tax(self):
"
17581,"def sub_total_with_tax(self):
"
17582,"def update_status(self,status):
"
17583,"def validate(self,request):
"
17584,"def __unicode__(self):
"
17585,"def _get_category(self):
"
17586,"def _is_shippable(self):
"
17587,"def _has_details(self):
"
17588,"def get_detail_price(self):
"
17589,"def _sub_total(self):
"
17590,"def _total_with_tax(self):
"
17591,"def _unit_price_with_tax(self):
"
17592,"def _get_description(self):
"
17593,"def _get_line_total(self):
"
17594,"def save(self,** kwargs):
"
17595,"def update_tax(self):
"
17596,"def __unicode__(self):
"
17597,"def save(self,** kwargs):
"
17598,"def _credit_card(self):
"
17599,"def _amount_total(self):
"
17600,"def save(self,** kwargs):
"
17601,"def remaining(self):
"
17602,"def save(self,** kwargs):
"
17603,"def create_linked(self,other,** kwargs):
"
17604,"def save(self,** kwargs):
"
17605,"def __str__(self):
"
17606,"def __unicode__(self):
"
17607,"def description(self):
"
17608,"def cost(self):
"
17609,"def method(self):
"
17610,"def valid(self,order = None):
"
17611,"def _process_request(self,connection,request):
"
17612,"def calculate(self,cart,contact):
"
17613,"def verbose_log(self,* args,** kwargs):
"
17614,"def testCreate(self):
"
17615,"def setUp(self):
"
17616,"def testBase(self):
"
17617,"def test2Prices(self):
"
17618,"def setUp(self):
"
17619,"def testExpired(self):
"
17620,"def testNotExpired(self):
"
17621,"def clean(self):
"
17622,"def forwards(self,orm):
"
17623,"def backwards(self,orm):
"
17624,"def walk(self,N = 20,freq_min = 0,freq_max = 7040.,win = 2048,step = 1024,start = 0,end = None,win_shape = np.hanning):
"
17625,"def test_check_balance(self):
"
17626,"def test_hanoi(self):
"
17627,"def __init__(self,* args,** kwargs):
"
17628,"def config_name(self):
"
17629,"def normalize_config(self,config):
"
17630,"def tfidf(self):
"
17631,"def google(self):
"
17632,"def setUp(self):
"
17633,"def test_set_identifier_on_creation(self):
"
17634,"def test_set_no_identifier_on_creation(self):
"
17635,"def test_set_invalid_identifier_on_creation(self):
"
17636,"def test_query_url_of_undefined_doi_object(self):
"
17637,"def test_query_url_of_undefined_doi_object(self):
"
17638,"def test_query_url_of_doi_object(self):
"
17639,"def test_query_url_of_doi_object_with_protocol(self):
"
17640,"def __init__(self):
"
17641,"def setUp(self):
"
17642,"def tearDown(self):
"
17643,"def __init__(self,zero,addInPlace):
"
17644,"def __getstate__(self):
"
17645,"def __setstate__(self,state):
"
17646,"def __init__(self,initialValue = 0,param = numAcc):
"
17647,"def add(self,v):
"
17648,"def reset(self):
"
17649,"def __getstate__(self):
"
17650,"def __setstate__(self,s):
"
17651,"def __init__(self,key,value):
"
17652,"def __init__(self,key,item):
"
17653,"def __init__(self,key,item):
"
17654,"def __init__(self,key):
"
17655,"def __init__(self):
"
17656,"def start(self):
"
17657,"def stop(self):
"
17658,"def get(self,key):
"
17659,"def set(self,key,value):
"
17660,"def add(self,key,item):
"
17661,"def remove(self,key,item):
"
17662,"def run(self):
"
17663,"def __init__(self,addr):
"
17664,"def call(self,msg):
"
17665,"def test_resolve_commit(self):
"
17666,"def index(self):
"
17667,"def back(self):
"
17668,"def this_form_get(self):
"
17669,"def this_form_post(self):
"
17670,"def this_form_get(self):
"
17671,"def this_form_post(self):
"
17672,"def _search_form_json(self):
"
17673,"def _get_api_urls(self,api_urls = None):
"
17674,"def _get_modelview_urls(self,modelview_urls = None):
"
17675,"def api(self):
"
17676,"def api_read(self):
"
17677,"def api_create(self):
"
17678,"def api_update(self,pk):
"
17679,"def api_delete(self,pk):
"
17680,"def api_column(self,col_name):
"
17681,"def __init__(self,** kwargs):
"
17682,"def list(self):
"
17683,"def show(self,pk):
"
17684,"def add(self):
"
17685,"def edit(self,pk):
"
17686,"def delete(self,pk):
"
17687,"def download(self,filename):
"
17688,"def action(self,name,pk):
"
17689,"def action_post(self):
"
17690,"def list(self,pk = None):
"
17691,"def __init__(self,** kwargs):
"
17692,"def get_uninit_inner_views(self):
"
17693,"def get_init_inner_views(self):
"
17694,"def list(self):
"
17695,"def _get_list_widget(self,** args):
"
17696,"def list(self):
"
17697,"def add(self):
"
17698,"def edit(self,pk):
"
17699,"def __init__(self,get_optimizer,n_x,n_y,n_hidden_q,n_z,n_hidden_p,nonlinear_q = 'softplus',nonlinear_p = 'softplus',type_px = 'bernoulli',type_qz = 'gaussianmarg',type_pz = 'gaussianmarg',prior_sd = 1,init_sd = 1e-3,var_smoothing = 0,n_mixture = 0,uniform_y = False):
"
17700,"def factors(self,x,z,A):
"
17701,"def gen_eps(self,n_batch):
"
17702,"def gen_xz(self,x,z,n_batch):
"
17703,"def variables(self):
"
17704,"def init_w(self,std = 1e-2):
"
17705,"def init(self,metrics):
"
17706,"def metric_change(self,metric):
"
17707,"def metric_removal(self,metric):
"
17708,"def configure(self,configs):
"
17709,"def close(self):
"
17710,"def __init__(self,* args,** kwargs):
"
17711,"def send_messages(self,topic,* msg):
"
17712,"def test_init_with_list(self):
"
17713,"def test_init_with_csv(self):
"
17714,"def test_send_broker_unaware_request_fail(self,load_metadata,conn):
"
17715,"def test_send_broker_unaware_request(self):
"
17716,"def test_load_metadata(self,protocol,conn):
"
17717,"def test_has_metadata_for_topic(self,protocol,conn):
"
17718,"def test_ensure_topic_exists(self,decode_metadata_response,conn):
"
17719,"def test_get_leader_for_partitions_reloads_metadata(self,protocol,conn):
"
17720,"def test_get_leader_for_unassigned_partitions(self,protocol,conn):
"
17721,"def test_get_leader_exceptions_when_noleader(self,protocol,conn):
"
17722,"def test_send_produce_request_raises_when_noleader(self,protocol,conn):
"
17723,"def test_send_produce_request_raises_when_topic_unknown(self,protocol,conn):
"
17724,"def test_timeout(self):
"
17725,"def test_correlation_rollover(self):
"
17726,"def cgiHeaders(self):
"
17727,"def cgiHeadersHook(self):
"
17728,"def isCgi(self):
"
17729,"def unpack(self,buf):
"
17730,"def unpack(self,buf):
"
17731,"def reset(self):
"
17732,"def findFootnotesPlaceholder(self,root):
"
17733,"def setFootnote(self,id,text):
"
17734,"def get_separator(self):
"
17735,"def makeFootnoteId(self,id):
"
17736,"def makeFootnoteRefId(self,id):
"
17737,"def makeFootnotesDiv(self,root):
"
17738,"def __init__(self,footnotes):
"
17739,"def run(self,lines):
"
17740,"def detectTabbed(self,lines):
"
17741,"def __init__(self,pattern,footnotes):
"
17742,"def handleMatch(self,m):
"
17743,"def __init__(self,footnotes):
"
17744,"def run(self,root):
"
17745,"def __init__(self,footnotes):
"
17746,"def run(self,text):
"
17747,"def setUp(self):
"
17748,"def test_unique_biased_histogram(self):
"
17749,"def test_unique_uniform_histogram(self):
"
17750,"def test_empty_histogram(self):
"
17751,"def get(self,build_id):
"
17752,"def post(self,build_id):
"
17753,"def get(self,job_id,source_id):
"
17754,"def _get_avg_duration(self,project,start_period,end_period):
"
17755,"def _get_green_percent(self,project,start_period,end_period):
"
17756,"def _get_stats(self,project):
"
17757,"def post(self,project_id):
"
17758,"def crumble(self,instance,attrs):
"
17759,"def get(self):
"
17760,"def get_html_label(self,build):
"
17761,"def __init__(self,app,options):
"
17762,"def __getattr__(self,name):
"
17763,"def lock(self,lock_key,expire = None,blocking_timeout = 3,nowait = False):
"
17764,"def incr(self,key):
"
17765,"def decr(self,key):
"
17766,"def __init__(self,** kwargs):
"
17767,"def get_config_path(self):
"
17768,"def __init__(self,** kwargs):
"
17769,"def test_simple(self):
"
17770,"def test_simple(self):
"
17771,"def test_more_searches(self):
"
17772,"def test_include_patches(self):
"
17773,"def test_patches_only(self):
"
17774,"def test_by_cause(self):
"
17775,"def test_author(self):
"
17776,"def test_simple(self):
"
17777,"def setUp(self):
"
17778,"def test_simple(self):
"
17779,"def test_invalid_status(self):
"
17780,"def setUp(self):
"
17781,"def test_in_progress(self,get_implementation,queue_delay):
"
17782,"def test_finished(self,get_implementation,queue_delay,mock_fire_signal):
"
17783,"def test_should_retry_jobstep(self):
"
17784,"def test_find_and_retry_jobsteps(self,should_retry_jobstep):
"
17785,"def test_add_get(self):
"
17786,"def test_get_without_add(self):
"
17787,"def test_add_delete(self):
"
17788,"def test_delete_without_add(self):
"
17789,"def test_conversations(self):
"
17790,"def get(self):
"
17791,"def post(self):
"
17792,"def get(self,user_id = None,name = None):
"
17793,"def audited(self):
"
17794,"def handle(self,** options):
"
17795,"def as_lwp_str(self,ignore_discard = True,ignore_expires = True):
"
17796,"def save(self,filename = None,ignore_discard = False,ignore_expires = False):
"
17797,"def _really_load(self,f,filename,ignore_discard,ignore_expires):
"
17798,"def __init__(self):
"
17799,"def __repr__(self):
"
17800,"def __cmp__(self,other):
"
17801,"def assertIn(self,a,b,msg = None):
"
17802,"def setUp(self):
"
17803,"def tearDown(self):
"
17804,"def mk(self,key):
"
17805,"def populateDB(self,d):
"
17806,"def do_open(self):
"
17807,"def do_close(self):
"
17808,"def test04_iterable(self):
"
17809,"def checkrec(self,key,value):
"
17810,"def do_open(self):
"
17811,"def do_close(self):
"
17812,"def do_open(self):
"
17813,"def do_close(self):
"
17814,"def setUp(self):
"
17815,"def tearDown(self):
"
17816,"def setUp(self):
"
17817,"def mk(self,key):
"
17818,"def checkrec(self,intkey,value):
"
17819,"def assertSame(self,a,b):
"
17820,"def test_ints(self):
"
17821,"def test_c_char_p(self):
"
17822,"def test_simple_struct(self):
"
17823,"def test_embedded_structs(self):
"
17824,"def test_xxx(self):
"
17825,"def test_ptr_struct(self):
"
17826,"def test_resize(self):
"
17827,"def test_array_invalid_length(self):
"
17828,"def test_zerosized_array(self):
"
17829,"def __init__(self,delegate = None):
"
17830,"def __getattr__(self,name):
"
17831,"def resetcache(self):
"
17832,"def setdelegate(self,delegate):
"
17833,"def __init__(self,canvas,parent,item):
"
17834,"def destroy(self):
"
17835,"def geticonimage(self,name):
"
17836,"def select(self,event = None):
"
17837,"def deselect(self,event = None):
"
17838,"def deselectall(self):
"
17839,"def deselecttree(self):
"
17840,"def flip(self,event = None):
"
17841,"def expand(self,event = None):
"
17842,"def collapse(self,event = None):
"
17843,"def view(self):
"
17844,"def lastvisiblechild(self):
"
17845,"def update(self):
"
17846,"def draw(self,x,y):
"
17847,"def drawicon(self):
"
17848,"def drawtext(self):
"
17849,"def select_or_edit(self,event = None):
"
17850,"def edit(self,event = None):
"
17851,"def edit_finish(self,event = None):
"
17852,"def edit_cancel(self,event = None):
"
17853,"def IsExpandable(self):
"
17854,"def _GetSubList(self):
"
17855,"def GetText(self):
"
17856,"def IsEditable(self):
"
17857,"def SetText(self,text):
"
17858,"def GetIconName(self):
"
17859,"def IsExpandable(self):
"
17860,"def GetSubList(self):
"
17861,"def __init__(self,master,** opts):
"
17862,"def page_up(self,event):
"
17863,"def page_down(self,event):
"
17864,"def unit_up(self,event):
"
17865,"def unit_down(self,event):
"
17866,"def zoom_height(self,event):
"
17867,"def __init__(self,master = None,** kw):
"
17868,"def __str__(self):
"
17869,"def __init__(self,type = None,name = None):
"
17870,"def __repr__(self):
"
17871,"def leaf_to_root(self):
"
17872,"def get_linear_subpattern(self):
"
17873,"def leaves(self):
"
17874,"def __init__(self,fixers,options,explicit,nobackups,show_diffs,input_base_dir = '',output_dir = '',append_suffix = ''):
"
17875,"def log_error(self,msg,* args,** kwargs):
"
17876,"def __init__(self,typeid,address,id):
"
17877,"def __getstate__(self):
"
17878,"def __setstate__(self,state):
"
17879,"def __repr__(self):
"
17880,"def __str__(self):
"
17881,"def __init__(self,registry,address,authkey,serializer):
"
17882,"def serve_forever(self):
"
17883,"def fallback_getvalue(self,conn,ident,obj):
"
17884,"def fallback_str(self,conn,ident,obj):
"
17885,"def fallback_repr(self,conn,ident,obj):
"
17886,"def dummy(self,c):
"
17887,"def debug_info(self,c):
"
17888,"def number_of_objects(self,c):
"
17889,"def shutdown(self,c):
"
17890,"def create(self,c,typeid,* args,** kwds):
"
17891,"def get_methods(self,c,token):
"
17892,"def accept_connection(self,c,name):
"
17893,"def incref(self,c,ident):
"
17894,"def decref(self,c,ident):
"
17895,"def __init__(self,address = None,authkey = None,serializer = 'pickle'):
"
17896,"def __reduce__(self):
"
17897,"def get_server(self):
"
17898,"def connect(self):
"
17899,"def start(self,initializer = None,initargs =()):
"
17900,"def _create(self,typeid,* args,** kwds):
"
17901,"def join(self,timeout = None):
"
17902,"def _debug_info(self):
"
17903,"def _number_of_objects(self):
"
17904,"def __enter__(self):
"
17905,"def __exit__(self,exc_type,exc_val,exc_tb):
"
17906,"def __init__(self):
"
17907,"def __reduce__(self):
"
17908,"def __init__(self,token,serializer,manager = None,authkey = None,exposed = None,incref = True):
"
17909,"def _connect(self):
"
17910,"def _callmethod(self,methodname,args =(),kwds = { }):
"
17911,"def _getvalue(self):
"
17912,"def _incref(self):
"
17913,"def __reduce__(self):
"
17914,"def __deepcopy__(self,memo):
"
17915,"def __repr__(self):
"
17916,"def __str__(self):
"
17917,"def __init__(self,** kwds):
"
17918,"def __repr__(self):
"
17919,"def __init__(self,typecode,value,lock = True):
"
17920,"def get(self):
"
17921,"def set(self,value):
"
17922,"def __repr__(self):
"
17923,"def __iter__(self):
"
17924,"def __next__(self,* args):
"
17925,"def next(self,* args):
"
17926,"def send(self,* args):
"
17927,"def throw(self,* args):
"
17928,"def close(self,* args):
"
17929,"def acquire(self,blocking = True):
"
17930,"def release(self):
"
17931,"def __enter__(self):
"
17932,"def __exit__(self,exc_type,exc_val,exc_tb):
"
17933,"def wait(self,timeout = None):
"
17934,"def notify(self):
"
17935,"def notify_all(self):
"
17936,"def is_set(self):
"
17937,"def set(self):
"
17938,"def clear(self):
"
17939,"def wait(self,timeout = None):
"
17940,"def __getattr__(self,key):
"
17941,"def __setattr__(self,key,value):
"
17942,"def __delattr__(self,key):
"
17943,"def get(self):
"
17944,"def set(self,value):
"
17945,"def __iadd__(self,value):
"
17946,"def __imul__(self,value):
"
17947,"def __init__(self,** kwargs):
"
17948,"def setup(self):
"
17949,"def build(self):
"
17950,"def preProcess(self):
"
17951,"def postProcess(self):
"
17952,"def _copyFiles(self):
"
17953,"def message(self,msg,level = 0):
"
17954,"def report(self):
"
17955,"def postProcess(self):
"
17956,"def addPythonFramework(self):
"
17957,"def _getSiteCode(self):
"
17958,"def addPythonModules(self):
"
17959,"def findDependencies(self):
"
17960,"def read(self):
"
17961,"def readlines(self):
"
17962,"def close(self,remove = os.unlink,error = os.error):
"
17963,"def write(self,data):
"
17964,"def getpeercert(self,binary_form = False):
"
17965,"def cipher(self):
"
17966,"def sendto(self,data,flags_or_addr,addr = None):
"
17967,"def sendall(self,data,flags = 0):
"
17968,"def recv(self,buflen = 1024,flags = 0):
"
17969,"def recv_into(self,buffer,nbytes = None,flags = 0):
"
17970,"def recvfrom(self,buflen = 1024,flags = 0):
"
17971,"def recvfrom_into(self,buffer,nbytes = None,flags = 0):
"
17972,"def pending(self):
"
17973,"def unwrap(self):
"
17974,"def shutdown(self,how):
"
17975,"def close(self):
"
17976,"def do_handshake(self):
"
17977,"def _real_connect(self,addr,return_errno):
"
17978,"def connect(self,addr):
"
17979,"def connect_ex(self,addr):
"
17980,"def accept(self):
"
17981,"def makefile(self,mode = 'r',bufsize = - 1):
"
17982,"def _reuse(self):
"
17983,"def _drop(self):
"
17984,"def test_names(self):
"
17985,"def items(self):
"
17986,"def keys(self):
"
17987,"def values(self):
"
17988,"def fromstring(self,string,defaults = None):
"
17989,"def test_case_sensitivity(self):
"
17990,"def test_default_case_sensitivity(self):
"
17991,"def test_parse_errors(self):
"
17992,"def parse_error(self,exc,src):
"
17993,"def test_weird_errors(self):
"
17994,"def test_set_string_types(self):
"
17995,"def test_set_unicode(self):
"
17996,"def test_read_returns_file_list(self):
"
17997,"def test_interpolation(self):
"
17998,"def test_interpolation_missing_value(self):
"
17999,"def test_items(self):
"
18000,"def test_set_nonstring_types(self):
"
18001,"def setUp(self):
"
18002,"def tearDown(self):
"
18003,"def test_dominating_multiline_values(self):
"
18004,"def test_interpolation(self):
"
18005,"def test_items(self):
"
18006,"def test_set_nonstring_types(self):
"
18007,"def test_set_malformatted_interpolation(self):
"
18008,"def test_set_nonstring_types(self):
"
18009,"def test_add_section_default_1(self):
"
18010,"def test_add_section_default_2(self):
"
18011,"def test_issue_12717(self):
"
18012,"def prepare(self,config_class):
"
18013,"def test_none_as_value_stringified(self):
"
18014,"def test_none_as_value_stringified_raw(self):
"
18015,"def newconfig(self,defaults = None):
"
18016,"def test_error(self):
"
18017,"def test_nosectionerror(self):
"
18018,"def test_nooptionerror(self):
"
18019,"def test_duplicatesectionerror(self):
"
18020,"def test_interpolationerror(self):
"
18021,"def test_interpolationmissingoptionerror(self):
"
18022,"def test_interpolationsyntaxerror(self):
"
18023,"def test_interpolationdeptherror(self):
"
18024,"def test_parsingerror(self):
"
18025,"def test_missingsectionheadererror(self):
"
18026,"def setUp(self):
"
18027,"def tearDown(self):
"
18028,"def data(self):
"
18029,"def recreation_check(self,metadata):
"
18030,"def test_mtime(self):
"
18031,"def test_compile_files(self):
"
18032,"def test_basic_examples(self):
"
18033,"def test_attributes(self):
"
18034,"def test_argument_checking(self):
"
18035,"def test_protection_of_callers_dict_argument(self):
"
18036,"def test_arg_combinations(self):
"
18037,"def test_kw_combinations(self):
"
18038,"def test_positional(self):
"
18039,"def test_keyword(self):
"
18040,"def test_no_side_effects(self):
"
18041,"def test_error_propagation(self):
"
18042,"def test_weakref(self):
"
18043,"def test_with_bound_and_unbound_methods(self):
"
18044,"def test_pickle(self):
"
18045,"def test_setstate_refcount(self):
"
18046,"def check_wrapper(self,wrapper,wrapped,assigned = functools.WRAPPER_ASSIGNMENTS,updated = functools.WRAPPER_UPDATES):
"
18047,"def _default_update(self):
"
18048,"def test_default_update(self):
"
18049,"def test_default_update_doc(self):
"
18050,"def test_no_update(self):
"
18051,"def test_selective_update(self):
"
18052,"def test_builtin_update(self):
"
18053,"def _default_update(self):
"
18054,"def test_default_update(self):
"
18055,"def test_default_update_doc(self):
"
18056,"def test_no_update(self):
"
18057,"def test_selective_update(self):
"
18058,"def test_cmp_to_key(self):
"
18059,"def test_hash(self):
"
18060,"def test_total_ordering_lt(self):
"
18061,"def test_total_ordering_le(self):
"
18062,"def test_total_ordering_gt(self):
"
18063,"def test_total_ordering_ge(self):
"
18064,"def test_total_ordering_no_overwrite(self):
"
18065,"def test_no_operations_defined(self):
"
18066,"def test_bug_10042(self):
"
18067,"def verify_lock_state(self,expected):
"
18068,"def testLock(self):
"
18069,"def test_source(self):
"
18070,"def test_extension(self):
"
18071,"def test_builtin(self):
"
18072,"def setUp(self):
"
18073,"def tearDown(self):
"
18074,"def test_basic(self):
"
18075,"def test_bad_file_desc(self):
"
18076,"def test_tougher_find(self):
"
18077,"def test_find_end(self):
"
18078,"def test_rfind(self):
"
18079,"def test_double_close(self):
"
18080,"def test_entire_file(self):
"
18081,"def test_move(self):
"
18082,"def test_extended_getslice(self):
"
18083,"def test_extended_set_del_slice(self):
"
18084,"def make_mmap_file(self,f,halfsize):
"
18085,"def test_empty_file(self):
"
18086,"def test_offset(self):
"
18087,"def test_subclass(self):
"
18088,"def test_prot_readonly(self):
"
18089,"def test_error(self):
"
18090,"def test_tagname(self):
"
18091,"def test_crasher_on_windows(self):
"
18092,"def test_invalid_descriptor(self):
"
18093,"def setUp(self):
"
18094,"def tearDown(self):
"
18095,"def _make_test_file(self,num_zeroes,tail):
"
18096,"def test_around_2GB(self):
"
18097,"def test_around_4GB(self):
"
18098,"def dumps(self,arg,proto = 0,fast = 0):
"
18099,"def loads(self,buf):
"
18100,"def dumps(self,arg,proto = 0,fast = 0):
"
18101,"def loads(self,buf):
"
18102,"def dumps(self,arg,proto = 0,fast = 0):
"
18103,"def loads(self,buf):
"
18104,"def dumps(self,arg,proto = 0,fast = 0):
"
18105,"def loads(self,buf):
"
18106,"def __init__(self,* args,** kw):
"
18107,"def _commit_removals(self):
"
18108,"def __delitem__(self,key):
"
18109,"def __contains__(self,key):
"
18110,"def has_key(self,key):
"
18111,"def __repr__(self):
"
18112,"def __setitem__(self,key,value):
"
18113,"def clear(self):
"
18114,"def copy(self):
"
18115,"def __deepcopy__(self,memo):
"
18116,"def get(self,key,default = None):
"
18117,"def items(self):
"
18118,"def popitem(self):
"
18119,"def setdefault(self,key,default = None):
"
18120,"def update(self,dict = None,** kwargs):
"
18121,"def valuerefs(self):
"
18122,"def values(self):
"
18123,"def __init__(self,ob,callback,key):
"
18124,"def __init__(self,dict = None):
"
18125,"def _commit_removals(self):
"
18126,"def __delitem__(self,key):
"
18127,"def __getitem__(self,key):
"
18128,"def __repr__(self):
"
18129,"def __setitem__(self,key,value):
"
18130,"def copy(self):
"
18131,"def __deepcopy__(self,memo):
"
18132,"def get(self,key,default = None):
"
18133,"def has_key(self,key):
"
18134,"def __contains__(self,key):
"
18135,"def items(self):
"
18136,"def keyrefs(self):
"
18137,"def keys(self):
"
18138,"def popitem(self):
"
18139,"def pop(self,key,* args):
"
18140,"def setdefault(self,key,default = None):
"
18141,"def update(self,dict = None,** kwargs):
"
18142,"def __init__(self,initx,inity,initz):
"
18143,"def __str__(self):
"
18144,"def __repr__(self):
"
18145,"def magnitude(self):
"
18146,"def __add__(self,other):
"
18147,"def __sub__(self,other):
"
18148,"def scale(self,factor):
"
18149,"def dot(self,other):
"
18150,"def cross(self,other):
"
18151,"def normalized(self):
"
18152,"def negated(self):
"
18153,"def __eq__(self,other):
"
18154,"def isVector(self):
"
18155,"def isPoint(self):
"
18156,"def reflectThrough(self,normal):
"
18157,"def __init__(self,initx,inity,initz):
"
18158,"def __str__(self):
"
18159,"def __repr__(self):
"
18160,"def __add__(self,other):
"
18161,"def __sub__(self,other):
"
18162,"def isVector(self):
"
18163,"def isPoint(self):
"
18164,"def __init__(self,centre,radius):
"
18165,"def __repr__(self):
"
18166,"def intersectionTime(self,ray):
"
18167,"def normalAt(self,p):
"
18168,"def __init__(self,point,normal):
"
18169,"def __repr__(self):
"
18170,"def intersectionTime(self,ray):
"
18171,"def normalAt(self,p):
"
18172,"def __init__(self,point,vector):
"
18173,"def __repr__(self):
"
18174,"def pointAtTime(self,t):
"
18175,"def __init__(self,width,height,filenameBase):
"
18176,"def plot(self,x,y,r,g,b):
"
18177,"def save(self):
"
18178,"def __init__(self):
"
18179,"def lookAt(self,p):
"
18180,"def addObject(self,on,oi,sc):
"
18181,"def addLight(self,p):
"
18182,"def _lightIsVisible(self,l,p):
"
18183,"def visibleLights(self,p):
"
18184,"def __init__(self,baseColour):
"
18185,"def baseColourAt(self,p):
"
18186,"def colourAt(self,scene,ray,p,normal):
"
18187,"def __init__(self):
"
18188,"def baseColourAt(self,p):
"
18189,"def colourAt(self,scene,ray,p,normal):
"
18190,"def f(self,m):
"
18191,"def __init__(self,n):
"
18192,"def describe_mismatch(self,item,desc):
"
18193,"def __init__(self):
"
18194,"def evaluate(self,line):
"
18195,"def __del__(self):
"
18196,"def test_number_names_von_parts(self):
"
18197,"def __init__(self,directory,filename):
"
18198,"def close(self):
"
18199,"def create_structures(self):
"
18200,"def get_queues(self):
"
18201,"def get_items(self,queue_name):
"
18202,"def push(self,queue_name,item):
"
18203,"def delete_items(self,items):
"
18204,"def delete_all(self):
"
18205,"def update_items_ttl(self,items):
"
18206,"def create(self):
"
18207,"def delete(self):
"
18208,"def as_dict(self):
"
18209,"def process_request(self,request):
"
18210,"def __init__(self):
"
18211,"def test_flavor_list(self):
"
18212,"def test_flavor_show(self):
"
18213,"def test_flavor_properties(self):
"
18214,"def test_image_list(self):
"
18215,"def test_image_show(self):
"
18216,"def test_image_set(self):
"
18217,"def test_image_metadata(self):
"
18218,"def __init__(self,namespace,convert_underscores = True):
"
18219,"def load_commands(self,namespace):
"
18220,"def add_command_group(self,group = None):
"
18221,"def get_command_groups(self):
"
18222,"def get_command_names(self,group = None):
"
18223,"def get_parser(self,prog_name):
"
18224,"def take_action(self,parsed_args):
"
18225,"def get_parser(self,prog_name):
"
18226,"def take_action(self,parsed_args):
"
18227,"def take_action(self,parsed_args):
"
18228,"def get_parser(self,prog_name):
"
18229,"def take_action(self,parsed_args):
"
18230,"def get_parser(self,prog_name):
"
18231,"def take_action(self,parsed_args):
"
18232,"def setUp(self):
"
18233,"def setUp(self):
"
18234,"def test_container_create(self):
"
18235,"def test_container_delete(self):
"
18236,"def test_container_list_no_options(self):
"
18237,"def test_container_list_prefix(self):
"
18238,"def test_container_list_marker_limit_end(self):
"
18239,"def test_container_show(self):
"
18240,"def setUp(self):
"
18241,"def base_object_create(self,file_contents,mock_open):
"
18242,"def test_object_create(self):
"
18243,"def test_object_delete(self):
"
18244,"def test_object_list_no_options(self):
"
18245,"def test_object_list_delimiter(self):
"
18246,"def test_object_list_prefix(self):
"
18247,"def test_object_list_marker_limit_end(self):
"
18248,"def test_object_show(self):
"
18249,"def setUp(self):
"
18250,"def setUp(self):
"
18251,"def test_project_create_no_options(self):
"
18252,"def test_project_create_description(self):
"
18253,"def test_project_create_enable(self):
"
18254,"def test_project_create_disable(self):
"
18255,"def test_project_create_property(self):
"
18256,"def test_project_create_or_show_exists(self):
"
18257,"def test_project_create_or_show_not_exists(self):
"
18258,"def setUp(self):
"
18259,"def test_project_delete_no_options(self):
"
18260,"def setUp(self):
"
18261,"def test_project_list_no_options(self):
"
18262,"def test_project_list_long(self):
"
18263,"def setUp(self):
"
18264,"def test_project_set_no_options(self):
"
18265,"def test_project_set_name(self):
"
18266,"def test_project_set_description(self):
"
18267,"def test_project_set_enable(self):
"
18268,"def test_project_set_disable(self):
"
18269,"def test_project_set_property(self):
"
18270,"def setUp(self):
"
18271,"def test_project_show(self):
"
18272,"def setUp(self):
"
18273,"def test_project_unset_key(self):
"
18274,"def __init__(self,** kwargs):
"
18275,"def setUp(self):
"
18276,"def setUp(self):
"
18277,"def setUp(self):
"
18278,"def test_service_list(self):
"
18279,"def create(self,* args,** kwargs):
"
18280,"def update(self,* args,** kwargs):
"
18281,"def delete(self,* args,** kwargs):
"
18282,"def grant(self,obj):
"
18283,"def get(self,* args,** kwargs):
"
18284,"def revoke(self):
"
18285,"def _get(self,path,params):
"
18286,"def get(self,limit):
"
18287,"def get(self,limit = None,offset = None,query = None,lang = None,cities = None,domain = None,fields = None):
"
18288,"def bursting_phrases(self):
"
18289,"def hot_phrases(self):
"
18290,"def clickrate(self,phrase):
"
18291,"def __init__(self,api_key):
"
18292,"def get_url(self):
"
18293,"def add_api_key(self,request):
"
18294,"def use_json(self,request):
"
18295,"def enhanced(self,email):
"
18296,"def names(self):
"
18297,"def locations(self):
"
18298,"def update(self,* args,** kwargs):
"
18299,"def patch(self,* args,** kwargs):
"
18300,"def delete(self,* args,** kwargs):
"
18301,"def create(self,* args,** kwargs):
"
18302,"def get(self,from_ = None,to = None,limit = None,offset = None):
"
18303,"def get_raw_analysis(self,analysisid):
"
18304,"def get(self,email,password):
"
18305,"def get(self):
"
18306,"def delete(self,* args,** kwargs):
"
18307,"def update(self,* args,** kwargs):
"
18308,"def find(self,term):
"
18309,"def merge(self,merge_with_id):
"
18310,"def activities(self,start = None,limit = None,done = None,exclude = None):
"
18311,"def followers(self):
"
18312,"def updates(self,start = None,limit = None):
"
18313,"def create(self,obj):
"
18314,"def get(self,page = None,per_page = None,filter = None,sort = None):
"
18315,"def public(self,page = None,per_page = None,sort = None):
"
18316,"def expect(self,method = None,uri = None,params = { }):
"
18317,"def test_users(self):
"
18318,"def test_links(self):
"
18319,"def test_highvalue(self):
"
18320,"def test_search(self):
"
18321,"def test_realtime(self):
"
18322,"def expect(self,method = None,uri = None,params = { },headers = None):
"
18323,"def test_account(self):
"
18324,"def test_plans(self):
"
18325,"def test_charges(self):
"
18326,"def test_customers(self):
"
18327,"def test_tokens(self):
"
18328,"def test_invoices(self):
"
18329,"def test_events(self):
"
18330,"def test_coupons(self):
"
18331,"def test_invoiceitems(self):
"
18332,"def setUp(self):
"
18333,"def tearDown(self):
"
18334,"def test_captures_stdout(self):
"
18335,"def test_captures_stdout_stderr(self):
"
18336,"def handle(self,* args,** options):
"
18337,"def get_child_accounts(self):
"
18338,"def create_account(self,name):
"
18339,"def delete_account(self,account_id):
"
18340,"def __init__(self,disabled_capabilities,disabled_methods,service_name = 'capability_service'):
"
18341,"def _Dynamic_IsEnabled(self,request,response):
"
18342,"def __init__(self,wrapped_stub,disabled_capabilities,disabled_methods):
"
18343,"def CreateRPC(self):
"
18344,"def MakeSyncCall(self,service,call,request,response):
"
18345,"def delete_trigger(self,model,field):
"
18346,"def create_fts_trigger(self,model,vector_field):
"
18347,"def update_vector(self,model,vector_field):
"
18348,"def _get_vector_for_field(self,field,weight,dictionary):
"
18349,"def create_index(self,model,vector_field,index):
"
18350,"def delete_index(self,model,vector_field):
"
18351,"def __init__(self,name,fts_vector):
"
18352,"def state_forwards(self,app_label,state):
"
18353,"def database_forwards(self,app_label,schema_editor,from_state,to_state):
"
18354,"def database_backwards(self,app_label,schema_editor,from_state,to_state):
"
18355,"def describe(self):
"
18356,"def __init__(self,name,fts_vector):
"
18357,"def database_backwards(self,app_label,schema_editor,from_state,to_state):
"
18358,"def describe(self):
"
18359,"def __init__(self,name,fts_vector):
"
18360,"def database_backwards(self,app_label,schema_editor,from_state,to_state):
"
18361,"def describe(self):
"
18362,"def __init__(self,name,fts_vector):
"
18363,"def describe(self):
"
18364,"def __init__(self,name,fts_vector,index):
"
18365,"def state_forwards(self,app_label,state):
"
18366,"def database_forwards(self,app_label,schema_editor,from_state,to_state):
"
18367,"def database_backwards(self,app_label,schema_editor,from_state,to_state):
"
18368,"def describe(self):
"
18369,"def database_forwards(self,app_label,schema_editor,from_state,to_state):
"
18370,"def database_backwards(self,app_label,schema_editor,from_state,to_state):
"
18371,"def describe(self):
"
18372,"def forwards(self,orm):
"
18373,"def backwards(self,orm):
"
18374,"def setUp(self):
"
18375,"def test_lookup(self):
"
18376,"def setUp(self):
"
18377,"def test_related_save_signal(self):
"
18378,"def test_related_delete_signal(self):
"
18379,"def setUp(self):
"
18380,"def test_rsa(self):
"
18381,"def test_login_token_failed_hax0r(self):
"
18382,"def assert_login_url(self,encoded_url,expected_url):
"
18383,"def test_url_encoded_template_tag(self):
"
18384,"def test_url_encoded_template_tag_with_args(self):
"
18385,"def test_url_encoded_template_tag_with_as_var(self):
"
18386,"def test_encode_url_string_template_tag(self):
"
18387,"def test_get_all_analytics_names(self):
"
18388,"def test_get_all_analytics(self):
"
18389,"def setUp(self):
"
18390,"def test_id_from_user(self):
"
18391,"def test_id_from_session(self):
"
18392,"def test_compute_id(self):
"
18393,"def test_identify(self):
"
18394,"def test_enroll(self):
"
18395,"def test_record(self):
"
18396,"def test_event(self):
"
18397,"def web_user(self,user):
"
18398,"def setUp(self):
"
18399,"def tearDown(self):
"
18400,"def test_id_from_user(self):
"
18401,"def test_id_from_session(self):
"
18402,"def test_compute_id(self):
"
18403,"def test_identify(self):
"
18404,"def test_enroll(self):
"
18405,"def test_record(self):
"
18406,"def test_event(self):
"
18407,"def web_user(self,user):
"
18408,"def is_leaf(self):
"
18409,"def get_sent_messages(self):
"
18410,"def get_target(self):
"
18411,"def get_neighbour_by_name(self,name):
"
18412,"def __init__(self,name,domain =[True,False]):
"
18413,"def construct_message(self):
"
18414,"def __repr__(self):
"
18415,"def reset(self):
"
18416,"def verify_neighbour_types(self):
"
18417,"def __init__(self,name,func,neighbours =[]):
"
18418,"def construct_message(self):
"
18419,"def verify_neighbour_types(self):
"
18420,"def __repr__(self):
"
18421,"def marginal(self,val_dict):
"
18422,"def add_evidence(self,node,value):
"
18423,"def reset(self):
"
18424,"def __call__(self,var):
"
18425,"def __init__(self,source,destination,factors,func):
"
18426,"def __repr__(self):
"
18427,"def __init__(self,source,destination,factors,func):
"
18428,"def __repr__(self):
"
18429,"def inference_method(self):
"
18430,"def inference_method(self,value):
"
18431,"def sample_db_filename(self):
"
18432,"def reset(self):
"
18433,"def get_leaves(self):
"
18434,"def get_eligible_senders(self):
"
18435,"def propagate(self):
"
18436,"def variable_nodes(self):
"
18437,"def factor_nodes(self):
"
18438,"def get_normalizer(self):
"
18439,"def status(self,omit =[False,0]):
"
18440,"def query_by_propagation(self,** kwds):
"
18441,"def query(self,** kwds):
"
18442,"def discover_sample_ordering(self):
"
18443,"def get_sample(self,evidence = { }):
"
18444,"def export(self,filename = None,format = 'graphviz'):
"
18445,"def __hash__(self):
"
18446,"def __iter__(self):
"
18447,"def __next__(self):
"
18448,"def __iter__(self):
"
18449,"def __len__(self):
"
18450,"def __contains__(self,x):
"
18451,"def __call__(self,* args,** kwds):
"
18452,"def __le__(self,other):
"
18453,"def __lt__(self,other):
"
18454,"def __gt__(self,other):
"
18455,"def __ge__(self,other):
"
18456,"def __eq__(self,other):
"
18457,"def __ne__(self,other):
"
18458,"def __and__(self,other):
"
18459,"def isdisjoint(self,other):
"
18460,"def __or__(self,other):
"
18461,"def __sub__(self,other):
"
18462,"def __xor__(self,other):
"
18463,"def _hash(self):
"
18464,"def add(self,value):
"
18465,"def discard(self,value):
"
18466,"def remove(self,value):
"
18467,"def pop(self):
"
18468,"def clear(self):
"
18469,"def __ior__(self,it):
"
18470,"def __iand__(self,c):
"
18471,"def __ixor__(self,it):
"
18472,"def __isub__(self,it):
"
18473,"def __getitem__(self,key):
"
18474,"def get(self,key,default = None):
"
18475,"def __contains__(self,key):
"
18476,"def iterkeys(self):
"
18477,"def itervalues(self):
"
18478,"def iteritems(self):
"
18479,"def keys(self):
"
18480,"def items(self):
"
18481,"def values(self):
"
18482,"def __eq__(self,other):
"
18483,"def __ne__(self,other):
"
18484,"def __init__(self,mapping):
"
18485,"def __len__(self):
"
18486,"def __contains__(self,key):
"
18487,"def __iter__(self):
"
18488,"def __contains__(self,item):
"
18489,"def __iter__(self):
"
18490,"def __contains__(self,value):
"
18491,"def __iter__(self):
"
18492,"def __setitem__(self,key,value):
"
18493,"def __delitem__(self,key):
"
18494,"def pop(self,key,default = __marker):
"
18495,"def popitem(self):
"
18496,"def clear(self):
"
18497,"def update(self,other =(),** kwds):
"
18498,"def setdefault(self,key,default = None):
"
18499,"def __getitem__(self,index):
"
18500,"def __iter__(self):
"
18501,"def __contains__(self,value):
"
18502,"def __reversed__(self):
"
18503,"def index(self,value):
"
18504,"def count(self,value):
"
18505,"def __setitem__(self,index,value):
"
18506,"def __delitem__(self,index):
"
18507,"def insert(self,index,value):
"
18508,"def append(self,value):
"
18509,"def reverse(self):
"
18510,"def extend(self,values):
"
18511,"def pop(self,index = - 1):
"
18512,"def remove(self,value):
"
18513,"def __iadd__(self,values):
"
18514,"def __init__(self,skipkeys = False,ensure_ascii = True,check_circular = True,allow_nan = True,sort_keys = False,indent = None,separators = None,encoding = 'utf-8',default = None):
"
18515,"def _newline_indent(self):
"
18516,"def _iterencode_list(self,lst,markers = None):
"
18517,"def _iterencode(self,o,markers = None):
"
18518,"def _iterencode_default(self,o,markers = None):
"
18519,"def default(self,o):
"
18520,"def encode(self,o):
"
18521,"def iterencode(self,o):
"
18522,"def real(self):
"
18523,"def imag(self):
"
18524,"def __add__(self,other):
"
18525,"def __radd__(self,other):
"
18526,"def __neg__(self):
"
18527,"def __pos__(self):
"
18528,"def __sub__(self,other):
"
18529,"def __rsub__(self,other):
"
18530,"def __mul__(self,other):
"
18531,"def __rmul__(self,other):
"
18532,"def __div__(self,other):
"
18533,"def __rdiv__(self,other):
"
18534,"def __truediv__(self,other):
"
18535,"def __rtruediv__(self,other):
"
18536,"def __pow__(self,exponent):
"
18537,"def __rpow__(self,base):
"
18538,"def __abs__(self):
"
18539,"def conjugate(self):
"
18540,"def __eq__(self,other):
"
18541,"def __ne__(self,other):
"
18542,"def __float__(self):
"
18543,"def __trunc__(self):
"
18544,"def __divmod__(self,other):
"
18545,"def __rdivmod__(self,other):
"
18546,"def __floordiv__(self,other):
"
18547,"def __rfloordiv__(self,other):
"
18548,"def __mod__(self,other):
"
18549,"def __rmod__(self,other):
"
18550,"def __lt__(self,other):
"
18551,"def __le__(self,other):
"
18552,"def __complex__(self):
"
18553,"def real(self):
"
18554,"def imag(self):
"
18555,"def conjugate(self):
"
18556,"def numerator(self):
"
18557,"def denominator(self):
"
18558,"def __float__(self):
"
18559,"def __long__(self):
"
18560,"def __index__(self):
"
18561,"def __pow__(self,exponent,modulus = None):
"
18562,"def __lshift__(self,other):
"
18563,"def __rlshift__(self,other):
"
18564,"def __rshift__(self,other):
"
18565,"def __rrshift__(self,other):
"
18566,"def __and__(self,other):
"
18567,"def __rand__(self,other):
"
18568,"def __xor__(self,other):
"
18569,"def __rxor__(self,other):
"
18570,"def __or__(self,other):
"
18571,"def __ror__(self,other):
"
18572,"def __invert__(self):
"
18573,"def __float__(self):
"
18574,"def numerator(self):
"
18575,"def denominator(self):
"
18576,"def __init__(self,rlobj):
"
18577,"def __repr__(self):
"
18578,"def add_key_logger(self,logfun):
"
18579,"def previous_history(self,e):
"
18580,"def next_history(self,e):
"
18581,"def beginning_of_history(self,e):
"
18582,"def end_of_history(self,e):
"
18583,"def _i_search(self,searchfun,direction,init_event):
"
18584,"def reverse_search_history(self,e):
"
18585,"def forward_search_history(self,e):
"
18586,"def non_incremental_reverse_search_history(self,e):
"
18587,"def non_incremental_forward_search_history(self,e):
"
18588,"def history_search_forward(self,e):
"
18589,"def history_search_backward(self,e):
"
18590,"def yank_nth_arg(self,e):
"
18591,"def yank_last_arg(self,e):
"
18592,"def forward_backward_delete_char(self,e):
"
18593,"def quoted_insert(self,e):
"
18594,"def tab_insert(self,e):
"
18595,"def transpose_chars(self,e):
"
18596,"def transpose_words(self,e):
"
18597,"def overwrite_mode(self,e):
"
18598,"def kill_line(self,e):
"
18599,"def backward_kill_line(self,e):
"
18600,"def unix_line_discard(self,e):
"
18601,"def kill_whole_line(self,e):
"
18602,"def kill_word(self,e):
"
18603,"def backward_kill_word(self,e):
"
18604,"def unix_word_rubout(self,e):
"
18605,"def kill_region(self,e):
"
18606,"def copy_region_as_kill(self,e):
"
18607,"def copy_backward_word(self,e):
"
18608,"def copy_forward_word(self,e):
"
18609,"def yank(self,e):
"
18610,"def yank_pop(self,e):
"
18611,"def digit_argument(self,e):
"
18612,"def universal_argument(self,e):
"
18613,"def delete_char_or_list(self,e):
"
18614,"def start_kbd_macro(self,e):
"
18615,"def end_kbd_macro(self,e):
"
18616,"def call_last_kbd_macro(self,e):
"
18617,"def re_read_init_file(self,e):
"
18618,"def abort(self,e):
"
18619,"def do_uppercase_version(self,e):
"
18620,"def prefix_meta(self,e):
"
18621,"def undo(self,e):
"
18622,"def revert_line(self,e):
"
18623,"def tilde_expand(self,e):
"
18624,"def set_mark(self,e):
"
18625,"def exchange_point_and_mark(self,e):
"
18626,"def character_search(self,e):
"
18627,"def character_search_backward(self,e):
"
18628,"def insert_comment(self,e):
"
18629,"def dump_variables(self,e):
"
18630,"def dump_macros(self,e):
"
18631,"def init_editing_mode(self,e):
"
18632,"def push(self,msg):
"
18633,"def collect_incoming_data(self,data):
"
18634,"def smtp_HELO(self,arg):
"
18635,"def smtp_NOOP(self,arg):
"
18636,"def smtp_QUIT(self,arg):
"
18637,"def __getaddr(self,keyword,arg):
"
18638,"def smtp_RSET(self,arg):
"
18639,"def smtp_DATA(self,arg):
"
18640,"def process_message(self,peer,mailfrom,rcpttos,data):
"
18641,"def __init__(self,message,category,filename,lineno,file = None,line = None):
"
18642,"def __str__(self):
"
18643,"def __init__(self,record = False,module = None):
"
18644,"def __repr__(self):
"
18645,"def __enter__(self):
"
18646,"def __exit__(self,* exc_info):
"
18647,"def __init__(self,* args,** kwargs):
"
18648,"def spawn(self,factory,name = None):
"
18649,"def get(self,* patterns,** kwargs):
"
18650,"def get_nowait(self,* patterns,** kwargs):
"
18651,"def flush(self):
"
18652,"def children(self):
"
18653,"def watch(self,actor,* actors,** kwargs):
"
18654,"def unwatch(self,actor,* actors):
"
18655,"def ref(self):
"
18656,"def root(self):
"
18657,"def node(self):
"
18658,"def _set_cell(self,cell):
"
18659,"def send(self,* args,** kwargs):
"
18660,"def send_later(self,* args,** kwargs):
"
18661,"def __lshift__(self,message):
"
18662,"def stop(self):
"
18663,"def reply(self,msg):
"
18664,"def __eq__(self,other):
"
18665,"def __ne__(self,other):
"
18666,"def __repr__(self):
"
18667,"def pre_start(self,address,responders,default_content_type = 'text/html'):
"
18668,"def post_stop(self):
"
18669,"def handle_wsgi_request(self,env,start_response):
"
18670,"def receive(self,msg):
"
18671,"def get_responder(self,path):
"
18672,"def run(self,req,responder,args,kwargs):
"
18673,"def check_error(self,error):
"
18674,"def __repr__(self):
"
18675,"def __init__(self,ch,env,start_response,content_type):
"
18676,"def set_status(self,status):
"
18677,"def start_response(self,* args):
"
18678,"def write(self,data):
"
18679,"def close(self):
"
18680,"def test_channel_id(self):
"
18681,"def test_channel_close(self):
"
18682,"def test_channel_basic_handler(self):
"
18683,"def test_channel_exchange_handler(self):
"
18684,"def test_channel_queue_handler(self):
"
18685,"def test_chanel_invalid_close_parameter(self):
"
18686,"def test_chanel_callback_not_set(self):
"
18687,"def test_channel_throw_exception_check_for_error(self):
"
18688,"def test_channel_check_error_no_exception(self):
"
18689,"def test_channel_check_error_when_closed(self):
"
18690,"def test_channel_check_error_connection_closed(self):
"
18691,"def test_channel_raises_when_closed(self):
"
18692,"def test_channel_closed_after_connection_closed(self):
"
18693,"def test_channel_closed_after_connection_exception(self):
"
18694,"def test_channel_consume_exception_when_recoverable(self):
"
18695,"def test_channel_build_empty_inbound_messages(self):
"
18696,"def setUp(self):
"
18697,"def test_channel_consume_ok_frame(self):
"
18698,"def test_channel_cancel_ok_frame(self):
"
18699,"def test_channel_flow_frame(self):
"
18700,"def test_channel_basic_cancel_frame(self):
"
18701,"def test_channel_close_frame(self):
"
18702,"def test_channel_basic_return_raises_when_500(self):
"
18703,"def __init__(self,host = DEFAULT_HOST,port = DEFAULT_PORT,parse_yaml = True,connect_timeout = socket.getdefaulttimeout()):
"
18704,"def __enter__(self):
"
18705,"def __exit__(self,exc_type,exc_value,traceback):
"
18706,"def connect(self):
"
18707,"def close(self):
"
18708,"def reconnect(self):
"
18709,"def _interact(self,command,expected_ok,expected_err =[]):
"
18710,"def _read_response(self):
"
18711,"def _read_body(self,size):
"
18712,"def _interact_value(self,command,expected_ok,expected_err =[]):
"
18713,"def _interact_job(self,command,expected_ok,expected_err,reserved = True):
"
18714,"def _interact_yaml(self,command,expected_ok,expected_err =[]):
"
18715,"def _interact_peek(self,command):
"
18716,"def put(self,body,priority = DEFAULT_PRIORITY,delay = 0,ttr = DEFAULT_TTR):
"
18717,"def reserve(self,timeout = None):
"
18718,"def kick(self,bound = 1):
"
18719,"def kick_job(self,jid):
"
18720,"def peek(self,jid):
"
18721,"def peek_ready(self):
"
18722,"def peek_delayed(self):
"
18723,"def peek_buried(self):
"
18724,"def tubes(self):
"
18725,"def using(self):
"
18726,"def use(self,name):
"
18727,"def watching(self):
"
18728,"def watch(self,name):
"
18729,"def ignore(self,name):
"
18730,"def stats(self):
"
18731,"def stats_tube(self,name):
"
18732,"def pause_tube(self,name,delay):
"
18733,"def delete(self,jid):
"
18734,"def release(self,jid,priority = DEFAULT_PRIORITY,delay = 0):
"
18735,"def bury(self,jid,priority = DEFAULT_PRIORITY):
"
18736,"def touch(self,jid):
"
18737,"def stats_job(self,jid):
"
18738,"def __init__(self,conn,jid,body,reserved = True):
"
18739,"def _priority(self):
"
18740,"def delete(self):
"
18741,"def release(self,priority = None,delay = 0):
"
18742,"def bury(self,priority = None):
"
18743,"def kick(self):
"
18744,"def touch(self):
"
18745,"def stats(self):
"
18746,"def __init__(self,root):
"
18747,"def __repr__(self):
"
18748,"def root(self):
"
18749,"def sortkey(self):
"
18750,"def serialize(self):
"
18751,"def walk(self,node_type = None):
"
18752,"def build_query(self,page = 1,page_size = 10):
"
18753,"def index(self):
"
18754,"def query_with_string(self):
"
18755,"def __init__(self):
"
18756,"def run(self):
"
18757,"def get_channels(self):
"
18758,"def get_channels_threads(self):
"
18759,"def connect_to_rabbitmq(self):
"
18760,"def cleanup_logs(self):
"
18761,"def new_message(self,topic,body,bonusHeaders,when):
"
18762,"def checks_channels(self):
"
18763,"def __init__(self,* a,** kw):
"
18764,"def __init__(self,** kwargs):
"
18765,"def remote_address(self):
"
18766,"def remote_address(self,val):
"
18767,"def remote_address(self):
"
18768,"def local_address(self):
"
18769,"def local_address(self,val):
"
18770,"def local_address(self):
"
18771,"def read_delimiter(self):
"
18772,"def read_delimiter(self,value):
"
18773,"def buffer_size(self):
"
18774,"def buffer_size(self,value):
"
18775,"def startSSL(self,ssl_options = { }):
"
18776,"def connect(self,address):
"
18777,"def close(self,flush = True):
"
18778,"def write(self,data,flush = False):
"
18779,"def write_file(self,sfile,nbytes = 0,offset = 0,flush = False):
"
18780,"def write_packed(self,* data,** kwargs):
"
18781,"def flush(self):
"
18782,"def on_ssl_handshake(self):
"
18783,"def on_ssl_handshake_error(self,exception):
"
18784,"def on_ssl_error(self,exception):
"
18785,"def _do_connect(self,address,family,error = None):
"
18786,"def _handle_read_event(self):
"
18787,"def _handle_write_event(self):
"
18788,"def _handle_error_event(self):
"
18789,"def _handle_connect_event(self):
"
18790,"def _process_recv_buffer(self):
"
18791,"def _process_send_buffer(self):
"
18792,"def _process_send_string(self,data):
"
18793,"def _process_send_file(self,sfile,offset,nbytes):
"
18794,"def _process_send_ssl_handshake(self,ssl_options):
"
18795,"def _socket_recv(self):
"
18796,"def _socket_send(self,data):
"
18797,"def _socket_sendfile(self,sfile,offset,nbytes):
"
18798,"def _ssl_do_handshake(self):
"
18799,"def __init__(self,num_visible,num_hidden,learning_rate = 0.1):
"
18800,"def train(self,data,max_epochs = 1000):
"
18801,"def run_visible(self,data):
"
18802,"def run_hidden(self,data):
"
18803,"def daydream(self,num_samples):
"
18804,"def _logistic(self,x):
"
18805,"def setUp(self):
"
18806,"def _expected(self,expected_id):
"
18807,"def _test(self,expected_id,result):
"
18808,"def test_simple(self):
"
18809,"def test_no_newline_in_base(self):
"
18810,"def test_no_newline_in_changed(self):
"
18811,"def test_diff_to_hdf_expandtabs(self):
"
18812,"def test_diff_to_hdf_leading_ws(self):
"
18813,"def setUp(self):
"
18814,"def tearDown(self):
"
18815,"def test_add_component(self):
"
18816,"def test_remove_component(self):
"
18817,"def test_remove_multiple_components(self):
"
18818,"def test_set_default_component(self):
"
18819,"def test_remove_default_component(self):
"
18820,"def test_add_milestone(self):
"
18821,"def test_set_default_milestone(self):
"
18822,"def test_set_default_retarget_to(self):
"
18823,"def test_remove_default_milestone(self):
"
18824,"def _test_add(self,panel,name):
"
18825,"def _test_set_default(self,panel,name):
"
18826,"def _test_remove_default(self,panel,name):
"
18827,"def test_add_priority(self):
"
18828,"def test_set_default_priority(self):
"
18829,"def test_remove_default_priority(self):
"
18830,"def test_add_resolution(self):
"
18831,"def test_set_default_resolution(self):
"
18832,"def test_remove_default_resolution(self):
"
18833,"def test_add_severity(self):
"
18834,"def test_set_default_severity(self):
"
18835,"def test_remove_default_severity(self):
"
18836,"def test_add_type(self):
"
18837,"def test_set_default_type(self):
"
18838,"def test_remove_default_type(self):
"
18839,"def test_add_version(self):
"
18840,"def test_set_default_version(self):
"
18841,"def test_remove_default_version(self):
"
18842,"def __init__(self,conn):
"
18843,"def _shrinkBuffer(self):
"
18844,"def _waitForData(self):
"
18845,"def read(self,n = - 1):
"
18846,"def readline(self,length = None):
"
18847,"def readlines(self,sizehint = 0):
"
18848,"def __iter__(self):
"
18849,"def next(self):
"
18850,"def add_data(self,data):
"
18851,"def __init__(self,conn):
"
18852,"def _waitForData(self):
"
18853,"def read(self,n = - 1):
"
18854,"def readline(self,length = None):
"
18855,"def add_data(self,data):
"
18856,"def __init__(self,conn,req,type,buffered = False):
"
18857,"def _write(self,data):
"
18858,"def write(self,data):
"
18859,"def writelines(self,lines):
"
18860,"def flush(self):
"
18861,"def close(self):
"
18862,"def __init__(self,streamList):
"
18863,"def write(self,data):
"
18864,"def writelines(self,lines):
"
18865,"def flush(self):
"
18866,"def __init__(self,stdout):
"
18867,"def write(self,data):
"
18868,"def writelines(self,lines):
"
18869,"def __getattr__(self,name):
"
18870,"def __init__(self,type = FCGI_UNKNOWN_TYPE,requestId = FCGI_NULL_REQUEST_ID):
"
18871,"def read(self,sock):
"
18872,"def write(self,sock):
"
18873,"def __init__(self,conn,inputStreamClass):
"
18874,"def run(self):
"
18875,"def _flush(self):
"
18876,"def __init__(self,server):
"
18877,"def _flush(self):
"
18878,"def __init__(self,sock,addr,server):
"
18879,"def _cleanupSocket(self):
"
18880,"def run(self):
"
18881,"def process_input(self):
"
18882,"def writeRecord(self,rec):
"
18883,"def _do_get_values(self,inrec):
"
18884,"def _do_abort_request(self,inrec):
"
18885,"def _start_request(self,req):
"
18886,"def _do_params(self,inrec):
"
18887,"def _do_stdin(self,inrec):
"
18888,"def _do_data(self,inrec):
"
18889,"def _do_unknown_type(self,inrec):
"
18890,"def __init__(self,sock,addr,server):
"
18891,"def _cleanupSocket(self):
"
18892,"def writeRecord(self,rec):
"
18893,"def _do_begin_request(self,inrec):
"
18894,"def _do_abort_request(self,inrec):
"
18895,"def _start_request(self,req):
"
18896,"def _do_params(self,inrec):
"
18897,"def _do_stdin(self,inrec):
"
18898,"def _do_data(self,inrec):
"
18899,"def __init__(self,handler = None,maxwrite = 8192,bindAddress = None,umask = None,multiplexed = False):
"
18900,"def _setupSocket(self):
"
18901,"def _cleanupSocket(self,sock):
"
18902,"def _installSignalHandlers(self):
"
18903,"def _restoreSignalHandlers(self):
"
18904,"def _hupHandler(self,signum,frame):
"
18905,"def _intHandler(self,signum,frame):
"
18906,"def run(self,timeout = 1.0):
"
18907,"def _mainloopPeriodic(self):
"
18908,"def _exit(self,reload = False):
"
18909,"def error(self,req):
"
18910,"def __init__(self,application,environ = None,multithreaded = True,** kw):
"
18911,"def _sanitizeEnv(self,environ):
"
18912,"def resource(self):
"
18913,"def __init__(self,env,name = None,version = None):
"
18914,"def _fetch(self,name,version = None):
"
18915,"def delete(self,version = None):
"
18916,"def save(self,author,comment,remote_addr = None,t = None):
"
18917,"def rename(self,new_name):
"
18918,"def edit_comment(self,new_comment):
"
18919,"def get_history(self):
"
18920,"def items(self):
"
18921,"def lastmod(self,urlnode):
"
18922,"def location(self,urlnode):
"
18923,"def items(self):
"
18924,"def lastmod(self,category):
"
18925,"def location(self,category):
"
18926,"def items(self):
"
18927,"def lastmod(self,author):
"
18928,"def location(self,author):
"
18929,"def items(self):
"
18930,"def lastmod(self,tag):
"
18931,"def location(self,tag):
"
18932,"def get_queryset(self,request):
"
18933,"def user_name_col(self,comment):
"
18934,"def has_add_permission(self,request):
"
18935,"def formfield_for_dbfield(self,db_field,** kwargs):
"
18936,"def __str__(self):
"
18937,"def align_class(self):
"
18938,"def init_with_context(self,context):
"
18939,"def __nonzero__(self):
"
18940,"def __bool__(self):
"
18941,"def __repr__(self):
"
18942,"def __init__(self,seq =(),css_class = None):
"
18943,"def test_page_existence(self):
"
18944,"def __init__(self):
"
18945,"def __init__(self):
"
18946,"def add_log_line(self,line):
"
18947,"def __init__(self,bottom_w):
"
18948,"def selectable(self):
"
18949,"def keypress(self,size,key):
"
18950,"def focus(self):
"
18951,"def focus_position(self):
"
18952,"def focus_position(self,position):
"
18953,"def render(self,size,focus = False):
"
18954,"def _close_handler(self,widget,* args):
"
18955,"def change_overlay(self,widget,onclose = None,** kwargs):
"
18956,"def __init__(self,x = 0,y = 0):
"
18957,"def move_rocket(self,x_increment = 0,y_increment = 1):
"
18958,"def get_distance(self,other_rocket):
"
18959,"def __init__(self,x = 0,y = 0,flights_completed = 0):
"
18960,"def __init__(self,_shift = 0x08):
"
18961,"def start_session(self,_id):
"
18962,"def delete_session(self,_id):
"
18963,"def check_status(self,_input_message):
"
18964,"def handle_message(self,_input_message):
"
18965,"def add_request(self,_id,_service,_subcommand,_data):
"
18966,"def add_raw_request(self,_input_message):
"
18967,"def add_raw_response(self,_input_message):
"
18968,"def get_last_response(self,_id,_service):
"
18969,"def __init__(self,fv):
"
18970,"def initialize(self,container):
"
18971,"def start(self):
"
18972,"def stop(self):
"
18973,"def redo(self,channel,image):
"
18974,"def __init__(self,fv,fitsimage):
"
18975,"def modes_off(self):
"
18976,"def start(self):
"
18977,"def stop(self):
"
18978,"def pause(self):
"
18979,"def resume(self):
"
18980,"def redo(self):
"
18981,"def __init__(self,* objects):
"
18982,"def __init__(self,* objects):
"
18983,"def __init__(self):
"
18984,"def __init__(self,logger = None,rgbmap = None,settings = None,bindmap = None,bindings = None):
"
18985,"def __init__(self,numlines = 1000):
"
18986,"def set_limit(self,numlines):
"
18987,"def get_history(self):
"
18988,"def set_history(self,lines):
"
18989,"def append(self,text):
"
18990,"def prev(self):
"
18991,"def next(self):
"
18992,"def save(self,path):
"
18993,"def load(self,path):
"
18994,"def __init__(self,fv):
"
18995,"def build_gui(self,container):
"
18996,"def _create_info_window(self):
"
18997,"def add_channel(self,viewer,chinfo):
"
18998,"def delete_channel(self,viewer,chinfo):
"
18999,"def new_image_cb(self,fitsimage,image,info):
"
19000,"def image_update_cb(self,image,fitsimage,info):
"
19001,"def focus_cb(self,viewer,channel):
"
19002,"def zoomset_cb(self,setting,value,fitsimage,info):
"
19003,"def cutset_cb(self,setting,value,fitsimage,info):
"
19004,"def autocuts_cb(self,setting,option,fitsimage,info):
"
19005,"def autozoom_cb(self,setting,option,fitsimage,info):
"
19006,"def autocenter_cb(self,setting,option,fitsimage,info):
"
19007,"def trunc(self,s):
"
19008,"def set_info(self,info,fitsimage):
"
19009,"def field_info(self,viewer,fitsimage,info):
"
19010,"def cut_levels(self,w,fitsimage,info):
"
19011,"def auto_levels(self,w,fitsimage,info):
"
19012,"def __str__(self):
"
19013,"def __init__(self,viewer):
"
19014,"def __get_color(self,color,alpha):
"
19015,"def set_line_from_shape(self,shape):
"
19016,"def set_fill_from_shape(self,shape):
"
19017,"def set_font_from_shape(self,shape):
"
19018,"def initialize_from_shape(self,shape,line = True,fill = True,font = True):
"
19019,"def set_line(self,color,alpha = 1.0,linewidth = 1,style = 'solid'):
"
19020,"def set_fill(self,color,alpha = 1.0):
"
19021,"def set_font(self,fontname,fontsize,color = 'black',alpha = 1.0):
"
19022,"def text_extents(self,text):
"
19023,"def draw_text(self,cx,cy,text,rot_deg = 0.0):
"
19024,"def draw_polygon(self,cpoints):
"
19025,"def draw_circle(self,cx,cy,cradius):
"
19026,"def draw_ellipse(self,cx,cy,cradius,cyradius,theta):
"
19027,"def draw_line(self,cx1,cy1,cx2,cy2):
"
19028,"def draw_path(self,cpoints):
"
19029,"def draw_bezier_curve(self,cp):
"
19030,"def __init__(self,viewer):
"
19031,"def setup_cr(self,shape):
"
19032,"def get_dimensions(self,shape):
"
19033,"def setUp(self):
"
19034,"def test_lookup_color_white_tuple(self):
"
19035,"def test_lookup_color_black_tuple(self):
"
19036,"def test_lookup_color_white_hash(self):
"
19037,"def test_lookup_color_black_black(self):
"
19038,"def test_lookup_color_yellow_tuple(self):
"
19039,"def test_lookup_color_unknown(self):
"
19040,"def test_lookup_color_raise_exception_unknown_key(self):
"
19041,"def test_lookup_color_raise_exception_unknown_format(self):
"
19042,"def test_get_colors_len(self):
"
19043,"def test_add_and_get_colors_len(self):
"
19044,"def test_add_and_remove_color_len(self):
"
19045,"def test_add_and_remove_color_rbg(self):
"
19046,"def test_add_color_wrong_rbg_type(self):
"
19047,"def test_add_color_wrong_rbg_values(self):
"
19048,"def test_add_color_wrong_tuple_length(self):
"
19049,"def test_remove_color_unknown(self):
"
19050,"def test_recalc_color_list(self):
"
19051,"def test_scan_rgbtxt_buf(self):
"
19052,"def tearDown(self):
"
19053,"def __init__(self,logger = None,rgbmap = None,settings = None):
"
19054,"def set_figure(self,figure):
"
19055,"def get_figure(self):
"
19056,"def update_image(self):
"
19057,"def reschedule_redraw(self,time_sec):
"
19058,"def configure_window(self,width,height):
"
19059,"def _setup_handlers(self,source):
"
19060,"def set_cursor(self,cursor):
"
19061,"def onscreen_message(self,text,delay = None):
"
19062,"def __init__(self,logger = None,rgbmap = None,settings = None):
"
19063,"def set_figure(self,figure):
"
19064,"def get_figure(self):
"
19065,"def get_rgb_order(self):
"
19066,"def render_image(self,rgbobj,dst_x,dst_y):
"
19067,"def configure_window(self,width,height):
"
19068,"def _setup_handlers(self,source):
"
19069,"def _resize_cb(self,event):
"
19070,"def get_png_image_as_buffer(self,output = None):
"
19071,"def update_image(self):
"
19072,"def set_cursor(self,cursor):
"
19073,"def define_cursor(self,ctype,cursor):
"
19074,"def get_cursor(self,ctype):
"
19075,"def switch_cursor(self,ctype):
"
19076,"def set_fg(self,r,g,b):
"
19077,"def onscreen_message(self,text,delay = None):
"
19078,"def onscreen_message_off(self):
"
19079,"def reschedule_redraw(self,time_sec):
"
19080,"def show_pan_mark(self,tf):
"
19081,"def timer_cb(self,* args):
"
19082,"def __init__(self,logger = None,rgbmap = None,settings = None):
"
19083,"def set_figure(self,figure):
"
19084,"def _setup_handlers(self,source):
"
19085,"def transkey(self,keyname):
"
19086,"def get_keyTable(self):
"
19087,"def set_enter_focus(self,tf):
"
19088,"def focus_event(self,event,hasFocus):
"
19089,"def enter_notify_event(self,event):
"
19090,"def leave_notify_event(self,event):
"
19091,"def key_press_event(self,event):
"
19092,"def key_release_event(self,event):
"
19093,"def button_press_event(self,event):
"
19094,"def button_release_event(self,event):
"
19095,"def select_event_cb(self,attrname,old_val,new_val):
"
19096,"def get_last_win_xy(self):
"
19097,"def get_last_data_xy(self):
"
19098,"def motion_notify_event(self,event):
"
19099,"def scroll_event(self,event):
"
19100,"def __init__(self,logger = None,rgbmap = None,settings = None,bindmap = None,bindings = None):
"
19101,"def get_bindmap(self):
"
19102,"def get_bindings(self):
"
19103,"def set_bindings(self,bindings):
"
19104,"def __init__(self,logger = None,settings = None,rgbmap = None,bindmap = None,bindings = None):
"
19105,"def set_canvas(self,canvas,private_canvas = None):
"
19106,"def get_context_data(self,** kwargs):
"
19107,"def __init__(self,name = None,extra_settings = { }):
"
19108,"def remove(self,ilo):
"
19109,"def body(self):
"
19110,"def do_action(self):
"
19111,"def do_dry_run(self):
"
19112,"def __init__(self,ilo):
"
19113,"def do_dry_run(self):
"
19114,"def do_action(self):
"
19115,"def __init__(self,client,name,extra_settings = { }):
"
19116,"def do_dry_run(self):
"
19117,"def do_action(self):
"
19118,"def __init__(self,ilo,max_num_segments = None,delay = 0):
"
19119,"def do_dry_run(self):
"
19120,"def __init__(self,ilo):
"
19121,"def do_dry_run(self):
"
19122,"def do_action(self):
"
19123,"def __init__(self,ilo,count = None):
"
19124,"def do_dry_run(self):
"
19125,"def __init__(self,slo,retry_interval = 120,retry_count = 3):
"
19126,"def do_dry_run(self):
"
19127,"def report_state(self):
"
19128,"def do_dry_run(self):
"
19129,"def test_init_raise(self):
"
19130,"def test_add_raises_on_missing_parameter(self):
"
19131,"def test_add_raises_on_invalid_parameter(self):
"
19132,"def test_add_single(self):
"
19133,"def test_add_single_with_extra_settings(self):
"
19134,"def test_remove_single(self):
"
19135,"def test_add_multiple(self):
"
19136,"def test_remove_multiple(self):
"
19137,"def test_show_body(self):
"
19138,"def test_raise_on_empty_body(self):
"
19139,"def test_do_dry_run(self):
"
19140,"def test_do_action(self):
"
19141,"def test_do_action_raises_exception(self):
"
19142,"def success(self):
"
19143,"def __init__(self,response,callbacks = None):
"
19144,"def __iter__(self):
"
19145,"def __getitem__(self,key):
"
19146,"def __nonzero__(self):
"
19147,"def __repr__(self):
"
19148,"def __len__(self):
"
19149,"def success(self):
"
19150,"def _get_result(self,hit):
"
19151,"def hits(self):
"
19152,"def __init__(self,document,exclude =('_source','_fields')):
"
19153,"def __init__(self,document):
"
19154,"def __dir__(self):
"
19155,"def __repr__(self):
"
19156,"def test_dummy_cp_raises_exception_on_more_connections(self):
"
19157,"def test_raises_exception_when_no_connections_defined(self):
"
19158,"def test_default_round_robin(self):
"
19159,"def test_disable_shuffling(self):
"
19160,"def test_selectors_have_access_to_connection_opts(self):
"
19161,"def test_dead_nodes_are_removed_from_active_connections(self):
"
19162,"def test_connection_is_skipped_when_dead(self):
"
19163,"def test_connection_is_forcibly_resurrected_when_no_live_ones_are_availible(self):
"
19164,"def test_connection_is_resurrected_after_its_timeout(self):
"
19165,"def test_force_resurrect_always_returns_a_connection(self):
"
19166,"def test_already_failed_connection_has_longer_timeout(self):
"
19167,"def test_timeout_for_failed_connections_is_limitted(self):
"
19168,"def test_dead_count_is_wiped_clean_for_connection_if_marked_live(self):
"
19169,"def __init__(self):
"
19170,"def run(self,es):
"
19171,"def __init__(self):
"
19172,"def run(self,es):
"
19173,"def __init__(self):
"
19174,"def run(self,es):
"
19175,"def __init__(self,suffix = """",use_request_cache = True):
"
19176,"def run(self,es):
"
19177,"def __init__(self):
"
19178,"def run(self,es):
"
19179,"def close(self,es):
"
19180,"def __init__(self,doc):
"
19181,"def set_current_context(self,value):
"
19182,"def clusters(self):
"
19183,"def users(self):
"
19184,"def contexts(self):
"
19185,"def cluster(self):
"
19186,"def user(self):
"
19187,"def __init__(self,data):
"
19188,"def bytes(self):
"
19189,"def filename(self):
"
19190,"def handle(self,form):
"
19191,"def __init__(self,name,converter = None):
"
19192,"def __get__(self,instance,owner):
"
19193,"def __set__(self,instance,value):
"
19194,"def get(self,slug,cf = None,** kwargs):
"
19195,"def get_series(self,cf_from,cf_to,cols = 1):
"
19196,"def get_series_crossfilter(self,days,** kwargs):
"
19197,"def add(self,a,b):
"
19198,"def sub(self,a,b):
"
19199,"def mult(self,a,b):
"
19200,"def div(self,a,b):
"
19201,"def __init__(self,protocol_version):
"
19202,"def load_cert_chain(self,certfile = None,keyfile = None):
"
19203,"def load_verify_locations(self,cafile = None,capath = None):
"
19204,"def initialize_options(self):
"
19205,"def finalize_options(self):
"
19206,"def run(self):
"
19207,"def initialize_options(self):
"
19208,"def finalize_options(self):
"
19209,"def run(self):
"
19210,"def initialize_options(self):
"
19211,"def finalize_options(self):
"
19212,"def run(self):
"
19213,"def initialize_options(self):
"
19214,"def finalize_options(self):
"
19215,"def run(self):
"
19216,"def initialize_options(self):
"
19217,"def finalize_options(self):
"
19218,"def run(self):
"
19219,"def initialize_options(self):
"
19220,"def finalize_options(self):
"
19221,"def run(self):
"
19222,"def process_request(self,request):
"
19223,"def handle_noargs(self,** options):
"
19224,"def __init__(self,obj,view_name,args,kwargs,asvar,resolver = None):
"
19225,"def setUp(self):
"
19226,"def tearDown(self):
"
19227,"def test_formated_photo_from_master_format_is_used(self):
"
19228,"def test_formatted_photo_has_zero_crop_box_if_smaller_than_format(self):
"
19229,"def test_formated_filename_can_be_overridden(self):
"
19230,"def test_retrieving_formatted_photos_on_fly(self):
"
19231,"def test_formattedphoto_cleared_when_image_changed(self):
"
19232,"def test_formattedphoto_cleared_when_format_changed(self):
"
19233,"def test_retrieving_ratio(self):
"
19234,"def __init__(self,app = None,** kwargs):
"
19235,"def init_app(self,app):
"
19236,"def register_blueprint(self,app):
"
19237,"def __init__(self,* args,** kwargs):
"
19238,"def clean(self):
"
19239,"def save(self,commit = True):
"
19240,"def __init__(self,* args,** kwargs):
"
19241,"def save(self,commit = True):
"
19242,"def setup(self):
"
19243,"def get_request(self,url = '/'):
"
19244,"def test_should_raise_if_the_permission_required_attribute_is_set_with_an_incorrect_value(self):
"
19245,"def test_should_redirect_anonymous_users_to_login_url_if_access_is_not_granted(self):
"
19246,"def test_should_return_http_response_forbiden_to_logged_in_users_if_access_is_not_granted(self):
"
19247,"def test_should_return_a_valid_response_if_access_is_granted(self):
"
19248,"def test_should_consider_controlled_object_prior_to_builtin_objet_or_get_object_attributes(self):
"
19249,"def setup(self):
"
19250,"def test_can_tell_if_a_forum_is_unread(self):
"
19251,"def test_tells_that_the_ancestors_of_an_unread_forum_are_also_unread(self):
"
19252,"def test_cannot_tell_that_the_descendant_of_an_unread_forum_are_also_unread(self):
"
19253,"def test_considers_a_forum_without_tracks_as_unread_if_it_has_topics(self):
"
19254,"def test_cannot_consider_a_forum_without_tracks_as_unread_if_it_has_only_unapproved_topics(self):
"
19255,"def __init__(self):
"
19256,"def receive(self,signal,sender,** args):
"
19257,"def fillAndClear(self,text):
"
19258,"def setup(self):
"
19259,"def test_init(self):
"
19260,"def test__parse_emptyString(self):
"
19261,"def test__parse_nl(self):
"
19262,"def test__parse_x(self):
"
19263,"def test__parse_xnl(self):
"
19264,"def test__parse_xnlx(self):
"
19265,"def test__parse_xnlxnl(self):
"
19266,"def test__parse_withEmptyLine(self):
"
19267,"def test_fill(self):
"
19268,"def test__resolve_range_lines(self):
"
19269,"def test__resolve_range_in_line(self):
"
19270,"def test__resolve_range_positions(self):
"
19271,"def test_isEmpty(self):
"
19272,"def test_characterCount(self):
"
19273,"def test_countOfLines(self):
"
19274,"def test_lengthOfLine(self):
"
19275,"def test_lastPosition(self):
"
19276,"def test__checkBufferBounds_validInnerRange(self):
"
19277,"def test__checkBufferBounds_negativeException(self):
"
19278,"def test__checkBufferBounds_positiveException(self):
"
19279,"def test__checkBufferBounds_plus1_validInnerRange(self):
"
19280,"def test__checkBufferBounds_plus1_positiveException(self):
"
19281,"def test_copy_from_empty_buffer(self):
"
19282,"def test_copy_lines(self):
"
19283,"def test_copy_from_line(self):
"
19284,"def test_copy_from_range(self):
"
19285,"def deleted(self,key):
"
19286,"def test_delete_from_empty_buffer_does_nothing(self):
"
19287,"def test_delete_first_line(self):
"
19288,"def test_delete_intermediate_line(self):
"
19289,"def test_delete_last_line(self):
"
19290,"def test_delete_muliple_lines_at_start(self):
"
19291,"def test_delete_muliple_lines_inversed(self):
"
19292,"def test_delete_muliple_lines_at_end(self):
"
19293,"def test_delete_all_lines(self):
"
19294,"def test_delete_all_lines_inversed(self):
"
19295,"def test_delete_first_sign_in_line(self):
"
19296,"def test_delete_last_sign_in_line(self):
"
19297,"def test_delete_in_line_without_bounds(self):
"
19298,"def test_delete_last_singn_in_last_line_excepts(self):
"
19299,"def test_delete_last_singns_in_last_line_excepts(self):
"
19300,"def test_delete_from_range_of_end_of_lines(self):
"
19301,"def test_delete_from_range_amidst_lines(self):
"
19302,"def test_delete_from_range_amidst_lines_inversed(self):
"
19303,"def test_delete_from_range_amidst_to_end(self):
"
19304,"def test_delete_from_range_end_to_amidst(self):
"
19305,"def inserted(self,key):
"
19306,"def test_insert_lines_when_empty(self):
"
19307,"def test_insert_lines_between(self):
"
19308,"def test_insert_lines_on_top(self):
"
19309,"def test_insert_lines_at_bottom(self):
"
19310,"def test_insert_line_into_empty_buffer_without_nl(self):
"
19311,"def test_insert_line_at_bottom_without_nl(self):
"
19312,"def test_insert_lines_at_bottom_without_nl(self):
"
19313,"def test_insert_single_line(self):
"
19314,"def test_insert_empty_lines(self):
"
19315,"def test_insert_empty_string(self):
"
19316,"def test_insert_simple_string(self):
"
19317,"def test_insert_at_begin_of_line(self):
"
19318,"def test_insert_newline_at_begin_of_line(self):
"
19319,"def test_insert_at_end_of_line(self):
"
19320,"def test_insert_newline_at_end_of_line(self):
"
19321,"def test_insert_newline(self):
"
19322,"def test_insert_surrounding_newlines(self):
"
19323,"def test_insert_without_body(self):
"
19324,"def test_insert_with_body(self):
"
19325,"def __init__(self,code,message,key):
"
19326,"def get_code(self):
"
19327,"def get_message(self):
"
19328,"def set_code(self,code):
"
19329,"def set_message(self,message):
"
19330,"def add_message(self,message):
"
19331,"def send(self):
"
19332,"def getDeferred(self):
"
19333,"def __init__(self,code,message,key,redis_endpoint = None,response_channel = None):
"
19334,"def set_redis_client(self,redis_client):
"
19335,"def _send(self,result):
"
19336,"def send(self):
"
19337,"def get_response(self,code,message,key):
"
19338,"def __init__(self,redis_endpoint,response_channel):
"
19339,"def get_response(self,code,message,key):
"
19340,"def get_response(self,code,message,key):
"
19341,"def __init__(self,controller):
"
19342,"def get_operation(self,message):
"
19343,"def __init__(self,proxy,redis_endpoint,response_channel):
"
19344,"def __init__(self,hb_proxy,response_channel):
"
19345,"def __init__(self,controller,response_factory,key):
"
19346,"def execute(self):
"
19347,"def respond(self,result):
"
19348,"def addCallback(self,callback):
"
19349,"def __init__(self,controller,response_factory,key):
"
19350,"def stop(self,result):
"
19351,"def __init__(self,controller,response_factory,key):
"
19352,"def start(self,result):
"
19353,"def __init__(self,controller,response_factory,key,new_port):
"
19354,"def update(self,result):
"
19355,"def __init__(self,controller,response_factory,key,new_host):
"
19356,"def update(self,result):
"
19357,"def __init__(self,controller,response_factory,key):
"
19358,"def update_message(self,result):
"
19359,"def __init__(self,controller,response_factory,key):
"
19360,"def update_message(self,result):
"
19361,"def __init__(self,controller,response_factory,key,** params):
"
19362,"def stop_recording(self,result):
"
19363,"def __init__(self,controller,response_factory,key,** params):
"
19364,"def start_recording(self,result):
"
19365,"def __init__(self,controller,response_factory,key,** params):
"
19366,"def start_session(self,result):
"
19367,"def __init__(self,controller,response_factory,key,** params):
"
19368,"def stop_session(self,result):
"
19369,"def __init__(self,controller,response_factory,key):
"
19370,"def reset_plugins(self,result):
"
19371,"def update_message(self,result):
"
19372,"def __init__(self,controller,response_factory,key):
"
19373,"def reload_plugins(self,result):
"
19374,"def update_message(self,result):
"
19375,"def __init__(self,server,response_factory,key,module_name,response_file):
"
19376,"def run_test(self,result):
"
19377,"def _connect_echo_server(self):
"
19378,"def _disconnect_echo_server(self,unused):
"
19379,"def __init__(self,controller,response_factory,key,module_name):
"
19380,"def get_status(self,result):
"
19381,"def __init__(self):
"
19382,"def append(self,cmd):
"
19383,"def execute(self):
"
19384,"def reset(self):
"
19385,"def __init__(self):
"
19386,"def start(self):
"
19387,"def proxy_command(self,cmd,callbacks):
"
19388,"def __init__(self,s):
"
19389,"def __repr__(self):
"
19390,"def __eq__(self,k):
"
19391,"def __init__(self,s):
"
19392,"def __repr__(self):
"
19393,"def __eq__(self,k):
"
19394,"def setUp(self):
"
19395,"def tearDown(self):
"
19396,"def test(self):
"
19397,"def tearDown(self):
"
19398,"def test_mycomobject(self):
"
19399,"def test_ie(self):
"
19400,"def __init__(self,repositories = None,** kw):
"
19401,"def has_package(self,package):
"
19402,"def add_repository(self,repository):
"
19403,"def package_by_id(self,package_id):
"
19404,"def what_provides(self,requirement,mode = 'composer'):
"
19405,"def matches(self,candidate,requirement):
"
19406,"def id_to_string(self,package_id):
"
19407,"def set_repository_order(self,repository_name,after = None,before = None):
"
19408,"def repository_priority(self,repository):
"
19409,"def setUp(self):
"
19410,"def test_simple_install(self):
"
19411,"def test_simple_update(self):
"
19412,"def test_simple_remove(self):
"
19413,"def test_simple_upgrade(self):
"
19414,"def __str__(self):
"
19415,"def from_ast(self,namespace,node):
"
19416,"def __init__(self,extension_point_id = None,** kw):
"
19417,"def stop(self):
"
19418,"def _service_offers_default(self):
"
19419,"def _create_kernel(self):
"
19420,"def _kernel_default(self):
"
19421,"def my_MainLoop(self,* args,** kwargs):
"
19422,"def _subscriptions_changed(self,old,new):
"
19423,"def _subscriptions_items_changed(self,event):
"
19424,"def _listener(self,obj,trait_name,old,new):
"
19425,"def _add_subscription(self,subscription):
"
19426,"def _remove_subscription(self,subscription):
"
19427,"def run(self):
"
19428,"def _about_dialog_default(self):
"
19429,"def _gui_default(self):
"
19430,"def _workbench_default(self):
"
19431,"def about(self):
"
19432,"def create_workbench(self):
"
19433,"def exit(self):
"
19434,"def _on_workbench_exited(self):
"
19435,"def delete_context_item(self,context,item_name):
"
19436,"def _get_tooltip(self):
"
19437,"def _get_name(self):
"
19438,"def create(self,parent):
"
19439,"def load(self,path = None):
"
19440,"def save(self,path = None):
"
19441,"def select_line(self,lineno):
"
19442,"def _path_changed(self):
"
19443,"def _show_line_numbers_changed(self):
"
19444,"def _create_control(self,parent):
"
19445,"def _on_dirty_changed(self,dirty):
"
19446,"def _on_text_changed(self):
"
19447,"def __init__(self,editor,parent):
"
19448,"def eventFilter(self,obj,event):
"
19449,"def make_data(self):
"
19450,"def set_view(self,s):
"
19451,"def check(self):
"
19452,"def test(self):
"
19453,"def do(self):
"
19454,"def perform(self,event):
"
19455,"def perform(self,event):
"
19456,"def perform(self,event):
"
19457,"def __init__(self,** traits):
"
19458,"def __get_pure_state__(self):
"
19459,"def __set_pure_state__(self,state):
"
19460,"def __getstate__(self):
"
19461,"def __setstate__(self,str_state):
"
19462,"def start(self):
"
19463,"def stop(self):
"
19464,"def add_source(self,src,scene = None):
"
19465,"def add_module(self,mod,obj = None):
"
19466,"def save_visualization(self,file_or_fname):
"
19467,"def load_visualization(self,file_or_fname):
"
19468,"def open(self,filename,scene = None):
"
19469,"def record(self,msg):
"
19470,"def add_scene(self,scene,name = None):
"
19471,"def remove_scene(self,scene,** kwargs):
"
19472,"def new_scene(self,viewer = None,name = None,** kwargs):
"
19473,"def close_scene(self,scene):
"
19474,"def get_viewer(self,scene):
"
19475,"def dialog_view(self):
"
19476,"def _on_select(self,object):
"
19477,"def _get_current_scene(self):
"
19478,"def _set_current_scene(self,scene):
"
19479,"def _get_current_object(self):
"
19480,"def _set_current_object(self,object):
"
19481,"def _get_current_selection(self):
"
19482,"def _set_current_selection(self,object):
"
19483,"def _on_scene_closed(self,obj,name,old,new):
"
19484,"def _on_scene_activated(self,obj,name,old,new):
"
19485,"def _closed_fired(self):
"
19486,"def _show_helper_nodes_changed(self):
"
19487,"def _get_children_ui_list(self):
"
19488,"def _trigger_children_ui_list(self,old,new):
"
19489,"def _recorder_changed(self,old,new):
"
19490,"def setup_pipeline(self):
"
19491,"def make_data(self):
"
19492,"def setUp(self):
"
19493,"def tearDown(self):
"
19494,"def check(self):
"
19495,"def test_image_plane_widget(self):
"
19496,"def test_save_and_restore(self):
"
19497,"def test_deepcopied(self):
"
19498,"def setUp(self):
"
19499,"def tearDown(self):
"
19500,"def check(self):
"
19501,"def test_vtk_xml_reader(self):
"
19502,"def test_save_and_restore(self):
"
19503,"def test_deepcopied(self):
"
19504,"def datagramReceived(self,data,host_port):
"
19505,"def connectionMade(self):
"
19506,"def connectionLost(self,reason):
"
19507,"def dataReceived(self,data):
"
19508,"def _get_scene_manager(self):
"
19509,"def perform(self,event):
"
19510,"def perform(self,event):
"
19511,"def perform(self,event):
"
19512,"def add_rgb_point(self,* args):
"
19513,"def add_hsv_point(self,* args):
"
19514,"def remove_all_points(self):
"
19515,"def initialize(self):
"
19516,"def add_point(self,x,val):
"
19517,"def remove_point(self,x):
"
19518,"def remove_all_points(self):
"
19519,"def print_stats(self,sort = - 1):
"
19520,"def dump_stats(self,file):
"
19521,"def create_stats(self):
"
19522,"def snapshot_stats(self):
"
19523,"def run(self,cmd):
"
19524,"def runcall(self,func,* args,** kw):
"
19525,"def setUp(self):
"
19526,"def tearDown(self):
"
19527,"def test_function_using_tuples(self):
"
19528,"def check_records(self,template,stream):
"
19529,"def method(self):
"
19530,"def test_get_module_level_function(self):
"
19531,"def test_get_class_level_function(self):
"
19532,"def test_focused_on_script_method(self):
"
19533,"def test_get_focused_on_script_class_method(self):
"
19534,"def test_get_focused_with_multiple_functions(self):
"
19535,"def _script_file(self):
"
19536,"def _python_path(self,path):
"
19537,"def change_message(self,message):
"
19538,"def __repr__(self):
"
19539,"def iterleaves(self):
"
19540,"def pargs(self):
"
19541,"def pformat(self,indent = 0,multiline = False):
"
19542,"def pprint(self,indent = 0,multiline = False):
"
19543,"def iterleaves(self):
"
19544,"def pargs(self):
"
19545,"def __init__(self,id = '',** traits):
"
19546,"def pargs(self):
"
19547,"def setUp(self):
"
19548,"def tearDown(self):
"
19549,"def test_lifecycle(self):
"
19550,"def test_show_line_numbers(self):
"
19551,"def test_load(self):
"
19552,"def test_select_line(self):
"
19553,"def _create_contents(self,parent):
"
19554,"def _create_control(self,parent):
"
19555,"def _show_modal(self):
"
19556,"def create(self,parent):
"
19557,"def destroy(self):
"
19558,"def set_focus(self):
"
19559,"def create_status_bar(self,parent):
"
19560,"def _get_message(self):
"
19561,"def _set_message(self,value):
"
19562,"def _messages_changed(self):
"
19563,"def _messages_items_changed(self):
"
19564,"def setUp(self):
"
19565,"def test_get_column_count(self):
"
19566,"def test_get_row_count(self):
"
19567,"def test_get_row_name(self):
"
19568,"def test_get_column_name(self):
"
19569,"def test_get_value(self):
"
19570,"def test_is_cell_empty(self):
"
19571,"def activate_editor(self,editor):
"
19572,"def activate_view(self,view):
"
19573,"def add_editor(self,editor,title):
"
19574,"def add_view(self,view,position = None,relative_to = None,size =(- 1,- 1)):
"
19575,"def close_editor(self,editor):
"
19576,"def close_view(self,view):
"
19577,"def close(self):
"
19578,"def create_initial_layout(self,parent):
"
19579,"def contains_view(self,view):
"
19580,"def hide_editor_area(self):
"
19581,"def hide_view(self,view):
"
19582,"def refresh(self):
"
19583,"def reset_editors(self):
"
19584,"def reset_views(self):
"
19585,"def show_editor_area(self):
"
19586,"def show_view(self,view):
"
19587,"def is_editor_area_visible(self):
"
19588,"def get_view_memento(self):
"
19589,"def set_view_memento(self,memento):
"
19590,"def get_editor_memento(self):
"
19591,"def set_editor_memento(self,memento):
"
19592,"def _wx_add_editor(self,editor,title):
"
19593,"def _wx_add_view(self,view,position,relative_to,size):
"
19594,"def _wx_add_view_relative(self,dock_control,relative_to,position,size):
"
19595,"def _wx_add_view_with(self,dock_control,with_obj):
"
19596,"def _wx_set_item_size(self,dock_control,size):
"
19597,"def _wx_create_editor_dock_control(self,editor):
"
19598,"def _wx_create_view_dock_control(self,view):
"
19599,"def _wx_get_editor_control(self,editor):
"
19600,"def _wx_initialize_editor_control(self,editor):
"
19601,"def _wx_get_view_control(self,view):
"
19602,"def _wx_initialize_view_control(self,view):
"
19603,"def _wx_add_focus_listeners(self,control,on_set_focus,on_kill_focus):
"
19604,"def _wx_initialize_editor_dock_control(self,editor,editor_dock_control):
"
19605,"def _wx_initialize_view_dock_control(self,view,view_dock_control):
"
19606,"def _window_changed(self,old,new):
"
19607,"def _wx_on_editor_area_size_changed(self,new):
"
19608,"def _wx_on_view_closed(self,dock_control,force):
"
19609,"def _wx_on_editor_closed(self,dock_control,force):
"
19610,"def perform(self,event):
"
19611,"def __init__(self):
"
19612,"def create_page(self,parent,index):
"
19613,"def __init__(self,parent,id,model,label = None,** kw):
"
19614,"def _on_selected_changed(self,selected):
"
19615,"def _on_combobox(self,event):
"
19616,"def _create_widget(self,model,label):
"
19617,"def _combo(self,parent,model,label):
"
19618,"def __init__(self,parent,id,model,label = None,cache = True,** kw):
"
19619,"def _on_selected_changed(self,selected):
"
19620,"def _create_widget(self,model,label):
"
19621,"def _show_page(self,index):
"
19622,"def __init__(self,parent,id,model,label = None,** kw):
"
19623,"def _create_widget(self,model,label):
"
19624,"def _get_num_players(self):
"
19625,"def _get_total_hits(self):
"
19626,"def _model_changed(self,model):
"
19627,"def _got_hit_changed(self):
"
19628,"def _team_changed(self,team):
"
19629,"def __init__(self,adaptee,** traits):
"
19630,"def _get_x(self):
"
19631,"def _set_x(self,x):
"
19632,"def _get_x(self):
"
19633,"def _set_x(self,x):
"
19634,"def test_any(self):
"
19635,"def test_instance(self):
"
19636,"def test_class_attribute_missing(self):
"
19637,"def test_Any_circular_references(self):
"
19638,"def test_Any_circular_references_deep(self):
"
19639,"def test_Instance_circular_references(self):
"
19640,"def test_Instance_circular_references_deep(self):
"
19641,"def __value_get(self):
"
19642,"def __value_set(self,value):
"
19643,"def validate(self,object,name,value):
"
19644,"def info(self):
"
19645,"def create_editor(self):
"
19646,"def get_default_value(self):
"
19647,"def copy_default_value(self,value):
"
19648,"def _default_for_dtype_and_shape(self,dtype,shape):
"
19649,"def __init__(self,dtype = None,shape = None,value = None,typecode = None,** metadata):
"
19650,"def __init__(self,dtype = None,shape = None,value = None,typecode = None,** metadata):
"
19651,"def __init__(self,* args,** metadata):
"
19652,"def validate(self,object,name,value):
"
19653,"def get_default_value(self):
"
19654,"def _default_for_dtype_and_shape(self,dtype,shape):
"
19655,"def rotate_z(self,theta):
"
19656,"def _get_index_text(self):
"
19657,"def _get_index_image(self):
"
19658,"def _my_button_trait_fired(self):
"
19659,"def __init__(self):
"
19660,"def OnInit(self):
"
19661,"def __call__(self,value):
"
19662,"def init(self,parent):
"
19663,"def update_low_on_enter(self):
"
19664,"def update_high_on_enter(self):
"
19665,"def update_object_on_scroll(self,pos):
"
19666,"def update_editor(self):
"
19667,"def _check_max_and_min(self):
"
19668,"def _step_size(self):
"
19669,"def _convert_from_slider(self,slider_val):
"
19670,"def _convert_to_slider(self,value):
"
19671,"def _low_changed(self,low):
"
19672,"def _high_changed(self,high):
"
19673,"def _get_simple_editor_class(self):
"
19674,"def _get_custom_editor_class(self):
"
19675,"def init(self,parent):
"
19676,"def _dates_changed(self,old,new):
"
19677,"def _styles_changed(self,old,new):
"
19678,"def _styles_items_changed(self,event):
"
19679,"def _apply_style(self,style,dates):
"
19680,"def _apply_styles(self,style_dict,date_dict):
"
19681,"def _reset_formatting(self,dates):
"
19682,"def _apply_cellformat(self,cf,textformat):
"
19683,"def _color_to_brush(self,color):
"
19684,"def undo(self):
"
19685,"def redo(self):
"
19686,"def merge_undo(self,undo_item):
"
19687,"def _get_old_value(self):
"
19688,"def _set_old_value(self,value):
"
19689,"def _get_new_value(self):
"
19690,"def _set_new_value(self,value):
"
19691,"def undo(self):
"
19692,"def redo(self):
"
19693,"def merge_undo(self,undo_item):
"
19694,"def __repr__(self):
"
19695,"def undo(self):
"
19696,"def redo(self):
"
19697,"def merge_undo(self,undo_item):
"
19698,"def __repr__(self):
"
19699,"def add(self,undo_item,extend = False):
"
19700,"def extend(self,undo_item):
"
19701,"def undo(self):
"
19702,"def redo(self):
"
19703,"def revert(self):
"
19704,"def clear(self):
"
19705,"def _get_can_undo(self):
"
19706,"def _get_can_redo(self):
"
19707,"def undo(self):
"
19708,"def redo(self):
"
19709,"def _control_changed(self,control):
"
19710,"def set_focus(self):
"
19711,"def update_editor(self):
"
19712,"def error(self,excp):
"
19713,"def set_tooltip(self,control = None):
"
19714,"def _enabled_changed(self,enabled):
"
19715,"def _visible_changed(self,visible):
"
19716,"def get_error_control(self):
"
19717,"def in_error_state(self):
"
19718,"def set_error_state(self,state = None,control = None):
"
19719,"def _invalid_changed(self,state):
"
19720,"def init(self,parent):
"
19721,"def dispose(self):
"
19722,"def _list_updated(self):
"
19723,"def list_updated(self,values):
"
19724,"def init(self,parent):
"
19725,"def init_ui(self,parent):
"
19726,"def update_editor(self):
"
19727,"def dispose(self):
"
19728,"def test_name_argument_is_None(self):
"
19729,"def __init__(self,arg,kwargs):
"
19730,"def validate_permissions(self):
"
19731,"def __enter__(self):
"
19732,"def __exit__(self,* exc_info):
"
19733,"def __unicode__(self):
"
19734,"def __unicode__(self):
"
19735,"def run(self,edit):
"
19736,"def __init__(self):
"
19737,"def process_request(self,request):
"
19738,"def process_response(self,request,response):
"
19739,"def __init__(self):
"
19740,"def __init__(self,tokens,arg_structures):
"
19741,"def __init__(self,tokens,heads,labels,pos = None):
"
19742,"def __len__(self):
"
19743,"def __init__(self,data_dir = None,language = 'en'):
"
19744,"def _load_data(self):
"
19745,"def _load_data(self):
"
19746,"def find_predicates(self,tokens):
"
19747,"def tag(self,text):
"
19748,"def tag_tokens(self,tokens,no_repeats = False):
"
19749,"def __init__(self,* args,** kwargs):
"
19750,"def _load_data(self):
"
19751,"def parse(self,text):
"
19752,"def tag_tokens(self,tokens):
"
19753,"def parse_sentence(self,tokens):
"
19754,"def tag(self,text):
"
19755,"def _load_data(self):
"
19756,"def tag(self,text):
"
19757,"def tag_tokens(self,tokens,return_tokens = False):
"
19758,"def resetTables(self):
"
19759,"def test_global_funcs(self):
"
19760,"def test_type_methods_list(self):
"
19761,"def test_type_methods_dict(self):
"
19762,"def test_type_methods_string(self):
"
19763,"def test_datetime(self):
"
19764,"def test_partial(self):
"
19765,"def to_string(self,value):
"
19766,"def to_integer(self,value):
"
19767,"def to_long(self,value):
"
19768,"def to_float(self,value):
"
19769,"def to_bool(self,value):
"
19770,"def to_list(self,value):
"
19771,"def to_dictionary(self,value):
"
19772,"def to_null(self,value):
"
19773,"def to_document(self,value):
"
19774,"def setUp(self):
"
19775,"def test_index(self):
"
19776,"def make_stub(self):
"
19777,"def after_created(self):
"
19778,"def __init__(self):
"
19779,"def handle_request(self,request):
"
19780,"def yep(self,request):
"
19781,"def __init__(self):
"
19782,"def handle_request(self,request):
"
19783,"def shutdown(self,params):
"
19784,"def test(self,request):
"
19785,"def _Options(self,p):
"
19786,"def Execute(self,opt,args):
"
19787,"def __init__(self,spritesheet,spritemap):
"
19788,"def load_sprites(self):
"
19789,"def get_image(self,x,y,width,height):
"
19790,"def __init__(self,spritesheet,spritemap):
"
19791,"def get_walk_frames(self,color_code):
"
19792,"def get_idle_frames(self,color_code):
"
19793,"def get_jump_frames(self,color_code):
"
19794,"def get_hurt_frames(self,color_code):
"
19795,"def __init__(self,spritesheet,spritemap):
"
19796,"def get_frame(self):
"
19797,"def __init__(self,msg):
"
19798,"def __init__(self,endpoint = None,credpath = None,aws_access_key_id = None,aws_secret_access_key = None,is_secure = False,path = ""/"",port = 80,boto_debug = 0):
"
19799,"def setup_s3_resource_trackers(self):
"
19800,"def get_s3_ip(self):
"
19801,"def get_s3_path(self):
"
19802,"def get_bucket_by_name(self,bucket_name):
"
19803,"def upload_object(self,bucket_name,key_name,path_to_file = None,contents = None):
"
19804,"def get_objects_by_prefix(self,bucket_name,prefix):
"
19805,"def clear_bucket(self,bucket_name = None):
"
19806,"def clear_keys_with_prefix(self,bucket,prefix):
"
19807,"def get_canned_acl(self,canned_acl = None,bucket_owner_id = None,bucket_owner_display_name = None):
"
19808,"def check_acl_equivalence(self,acl1 = None,acl2 = None):
"
19809,"def check_md5(self,eTag = None,data = None):
"
19810,"def show_bucket_summary(self,bucket,showkeys = True,format_size = True,force_refresh = False,printme = True):
"
19811,"def show_buckets(self,buckets = None,format_size = True,printme = True):
"
19812,"def __init__(self):
"
19813,"def create_tags(self,tags,timeout = 600):
"
19814,"def convert_tag_list_to_dict(self,list):
"
19815,"def delete_tags(self,tags,timeout = 600):
"
19816,"def setUp(self):
"
19817,"def tearDown(self):
"
19818,"def runInstances(self,numMax):
"
19819,"def doAuth(self):
"
19820,"def testEuca4229(self):
"
19821,"def __init__(self,extra_args = None,** kwargs):
"
19822,"def populate_resources_for_console_test(self):
"
19823,"def __init__(self,tester = None,config_file = None,password = ""foobar"",credpath = None,destpath = None,time_per_gig = 300,eof = True,worker_hostname = None,worker_keypath = None,worker_username = 'root',worker_password = None,worker_machine = None):
"
19824,"def _get_worker_machine(self,worker):
"
19825,"def getHttpRemoteImageSize(self,url,unit = None,maxredirect = 5):
"
19826,"def wget_image(self,url,destpath = None,dest_file_name = None,machine = None,user = None,password = None,retryconn = True,time_per_gig = 300):
"
19827,"def get_manifest_obj(self,path,machine = None,local = False,timeout = 30):
"
19828,"def get_manifest_part_count(self,path,machine = None,local = False,timeout = 30):
"
19829,"def get_manifest_image_name(self,path,machine = None,local = False,timeout = 30):
"
19830,"def euca2ools_bundle_image(self,path,machine = None,machine_credpath = None,prefix = None,kernel = None,ramdisk = None,block_device_mapping = None,destination = '/disk1/storage',arch = 'x86_64',debug = False,interbundle_timeout = 120,time_per_gig = None):
"
19831,"def euca2ools_upload_bundle(self,manifest,machine = None,bucketname = None,machine_credpath = None,debug = False,interbundle_timeout = 120,timeout = 0,image_check_timeout = 300,uniquebucket = True):
"
19832,"def euca2ools_bundle_and_upload(self,file,arch,bucket,prefix = None,directory = None,kernel = None,ramdisk = None,block_device_map =[],product_codes = None,acl = None,location = None,):
"
19833,"def euca2ools_register(self,manifest,name,description = None,arch = None,kernel = None,ramdisk = None,root_device_name = None,snapshot_id = None,block_dev_map =[],virtualization_type = None,platform = None,machine = None,machine_credpath = None):
"
19834,"def euca2ools_download_bundle(self,bucket,manifest = None,prefix = None,directory = None,image_name = None,machine = None,machine_credpath = None,):
"
19835,"def euca2ools_download_and_unbundle(self,bucket,manifest = None,prefix = None,directory = None,maxbytes = None,):
"
19836,"def _generate_unique_bucket_name_from_manifest(self,manifest,unique = True):
"
19837,"def _get_unique_bucket_name(self,basename,id = 'test',start = 0):
"
19838,"def _bundle_status_cb(self,buf,cmdtimeout,parttimeout,starttime,lasttime,check_image_stage):
"
19839,"def __init__(self,extra_args = None):
"
19840,"def clean_method(self):
"
19841,"def MyTest(self):
"
19842,"def get_data_for_template_chart(self):
"
19843,"def get_single_series_data(self):
"
19844,"def get_multi_series_data(self):
"
19845,"def get_data_for_pie_chart(self):
"
19846,"def get_data_for_column_chart(self):
"
19847,"def get_data_for_bar_chart(self):
"
19848,"def get_data_for_line_chart(self):
"
19849,"def __init__(self,* args,** kwargs):
"
19850,"def locks(self):
"
19851,"def tags(self):
"
19852,"def __senders_get(self):
"
19853,"def __senders_set(self,senders):
"
19854,"def __senders_del(self):
"
19855,"def remove_sender(self,senders):
"
19856,"def __receivers_get(self):
"
19857,"def __receivers_set(self,receivers):
"
19858,"def __receivers_del(self):
"
19859,"def remove_receiver(self,receivers):
"
19860,"def __channels_get(self):
"
19861,"def __channels_set(self,value):
"
19862,"def __channels_del(self):
"
19863,"def __hide_from_get(self):
"
19864,"def __hide_from_set(self,hiders):
"
19865,"def __hide_from_del(self):
"
19866,"def __str__(self):
"
19867,"def __init__(self,senders = None,receivers = None,channels = None,message = """",header = """",type = """",lockstring = """",hide_from = None):
"
19868,"def locks(self):
"
19869,"def __str__(self):
"
19870,"def remove_sender(self,sender):
"
19871,"def remove_receiver(self,receiver):
"
19872,"def access(self,accessing_obj,access_type = 'read',default = False):
"
19873,"def __init__(self,obj):
"
19874,"def has(self,entity):
"
19875,"def add(self,entity):
"
19876,"def remove(self,entity):
"
19877,"def all(self):
"
19878,"def clear(self):
"
19879,"def __str__(self):
"
19880,"def subscriptions(self):
"
19881,"def get_all_scripts_on_obj(self,obj,key = None):
"
19882,"def get_all_scripts(self,key = None):
"
19883,"def delete_script(self,dbref):
"
19884,"def remove_non_persistent(self,obj = None):
"
19885,"def validate(self,scripts = None,obj = None,key = None,dbref = None,init_mode = False):
"
19886,"def script_search(self,ostring,obj = None,only_timed = False):
"
19887,"def copy_script(self,original_script,new_key = None,new_obj = None,new_locks = None):
"
19888,"def signedOn(self):
"
19889,"def disconnect(self,reason = None):
"
19890,"def privmsg(self,user,channel,msg):
"
19891,"def action(self,user,channel,msg):
"
19892,"def data_in(self,text = None,** kwargs):
"
19893,"def data_out(self,text = None,** kwargs):
"
19894,"def __init__(self,sessionhandler,uid = None,botname = None,channel = None,network = None,port = None,ssl = None):
"
19895,"def buildProtocol(self,addr):
"
19896,"def startedConnecting(self,connector):
"
19897,"def clientConnectionFailed(self,connector,reason):
"
19898,"def clientConnectionLost(self,connector,reason):
"
19899,"def start(self):
"
19900,"def __init__(self,* args,** kwargs):
"
19901,"def configure(self,options,config):
"
19902,"def begin(self):
"
19903,"def startTest(self,test):
"
19904,"def stopTest(self,test):
"
19905,"def finalize(self,result):
"
19906,"def __init__(self,maxsize = 0):
"
19907,"def __init__(self,maxsize = 0):
"
19908,"def __init__(self,maxsize = 0):
"
19909,"def __init__(self,obj,autowrap =(),autowrap_names =()):
"
19910,"def __getattr__(self,attr_name):
"
19911,"def __getitem__(self,key):
"
19912,"def __setitem__(self,key,value):
"
19913,"def __deepcopy__(self,memo = None):
"
19914,"def __copy__(self,memo = None):
"
19915,"def __call__(self,* a,** kw):
"
19916,"def __enter__(self):
"
19917,"def __exit__(self,* exc):
"
19918,"def __eq__(self,rhs):
"
19919,"def __hash__(self):
"
19920,"def __repr__(self):
"
19921,"def __str__(self):
"
19922,"def __len__(self):
"
19923,"def __nonzero__(self):
"
19924,"def __iter__(self):
"
19925,"def next(self):
"
19926,"def test_simple(self):
"
19927,"def __repr__(self):
"
19928,"def __eq__(self,other):
"
19929,"def __ne__(self,other):
"
19930,"def read(self,iprot):
"
19931,"def write(self,oprot):
"
19932,"def test_overflow1(self):
"
19933,"def test_overflow2(self):
"
19934,"def test_basic1(self):
"
19935,"def test_basic2(self):
"
19936,"def test_basic3(self):
"
19937,"def test_basic4(self):
"
19938,"def test_basic5(self):
"
19939,"def test_basic6(self):
"
19940,"def test_basic7(self):
"
19941,"def test_basic8(self):
"
19942,"def test_basic9(self):
"
19943,"def test_list1(self):
"
19944,"def test_list2(self):
"
19945,"def test_list3(self):
"
19946,"def test_list4(self):
"
19947,"def test_list5(self):
"
19948,"def test_list6(self):
"
19949,"def test_list7(self):
"
19950,"def test_list8(self):
"
19951,"def test_num0(self):
"
19952,"def test_num1(self):
"
19953,"def test_num2(self):
"
19954,"def test_num3(self):
"
19955,"def test_num4(self):
"
19956,"def test_num5(self):
"
19957,"def test_num6(self):
"
19958,"def test_num10(self):
"
19959,"def test_num7(self):
"
19960,"def test_num8(self):
"
19961,"def test_num9(self):
"
19962,"def test_any1(self):
"
19963,"def test_any2(self):
"
19964,"def test_any3(self):
"
19965,"def test_any4(self):
"
19966,"def test_any5(self):
"
19967,"def test_any6(self):
"
19968,"def test_any7(self):
"
19969,"def test_any8(self):
"
19970,"def test_any9(self):
"
19971,"def test_any10(self):
"
19972,"def test_any11(self):
"
19973,"def test_homophone1(self):
"
19974,"def test_homophone2(self):
"
19975,"def test_homophone3(self):
"
19976,"def test_homophone_not_in_list1(self):
"
19977,"def test_homophone_not_in_list2(self):
"
19978,"def test_mix1(self):
"
19979,"def test_mix2(self):
"
19980,"def test_mix3(self):
"
19981,"def test_mix4(self):
"
19982,"def test_mix5(self):
"
19983,"def test_end1(self):
"
19984,"def test_end2(self):
"
19985,"def test_wildcard1(self):
"
19986,"def test_wildcard2(self):
"
19987,"def test_repetition1(self):
"
19988,"def test_repetition2(self):
"
19989,"def test_repetition3(self):
"
19990,"def test_repetition4(self):
"
19991,"def test_num_range1(self):
"
19992,"def test_num_range2(self):
"
19993,"def test_num_range3(self):
"
19994,"def get(self,request,* args,** kwargs):
"
19995,"def setUp(self):
"
19996,"def tearDown(self):
"
19997,"def test_pre_auth_valid_client_default_scopes(self):
"
19998,"def test_pre_auth_valid_client(self):
"
19999,"def test_pre_auth_invalid_client(self):
"
20000,"def test_pre_auth_default_redirect(self):
"
20001,"def test_pre_auth_forbibben_redirect(self):
"
20002,"def test_post_auth_allow(self):
"
20003,"def test_skip_authorization_completely(self):
"
20004,"def test_token_post_auth_deny(self):
"
20005,"def test_implicit_redirection_uri_with_querystring(self):
"
20006,"def test_implicit_fails_when_redirect_uri_path_is_invalid(self):
"
20007,"def test_resource_access_allowed(self):
"
20008,"def stopTest(self,test):
"
20009,"def _makeResult(self):
"
20010,"def run_suite(self,suite,** kwargs):
"
20011,"def __init__(self,provision_response):
"
20012,"def __str__(self):
"
20013,"def __repr__(self):
"
20014,"def test_parse_ftpignore(self):
"
20015,"def test_split_pattern(self):
"
20016,"def test_is_ignored(self):
"
20017,"def check_membership(self,group):
"
20018,"def form_valid(self,form):
"
20019,"def get_success_url(self):
"
20020,"def form_valid(self,form):
"
20021,"def get_success_url(self):
"
20022,"def delete(self,request,* args,** kwargs):
"
20023,"def __init__(self,client):
"
20024,"def run(self):
"
20025,"def __init__(self,num_threads = 3):
"
20026,"def enqueue(self,method,* args,** kwargs):
"
20027,"def get(self,* args,** kwargs):
"
20028,"def post(self,* args,** kwargs):
"
20029,"def put(self,* args,** kwargs):
"
20030,"def delete(self,* args,** kwargs):
"
20031,"def refresh_threads(self):
"
20032,"def sync_flush(self):
"
20033,"def __init__(self):
"
20034,"def loadCoreClient(self):
"
20035,"def getCoreClient(self):
"
20036,"def loadExtension(self,extension):
"
20037,"def rtVal(self,dataType,defaultValue = None):
"
20038,"def isRTVal(self,value):
"
20039,"def getRTValTypeName(self,rtval):
"
20040,"def registerConfig(self,configClass):
"
20041,"def getConfigClass(self,className):
"
20042,"def getConfigClassNames(self):
"
20043,"def registerComponent(self,componentClass):
"
20044,"def getComponentClass(self,className):
"
20045,"def getComponentClassNames(self):
"
20046,"def __init__(self,name,parent = None):
"
20047,"def __init__(self,text,parent = None):
"
20048,"def setText(self,text):
"
20049,"def setTextColor(self,color):
"
20050,"def textSize(self):
"
20051,"def textHeight(self):
"
20052,"def nodeResized(self,width = None):
"
20053,"def getBackdropWidget(self):
"
20054,"def __init__(self,text,parent = None):
"
20055,"def getTitleWidget(self):
"
20056,"def setText(self,text):
"
20057,"def __init__(self,graph,name):
"
20058,"def createLayout(self):
"
20059,"def createConnections(self):
"
20060,"def getName(self):
"
20061,"def setName(self,name):
"
20062,"def getComment(self):
"
20063,"def setComment(self,comment):
"
20064,"def getColor(self):
"
20065,"def setColor(self,color):
"
20066,"def getUnselectedColor(self):
"
20067,"def setUnselectedColor(self,color):
"
20068,"def getSelectedColor(self):
"
20069,"def setSelectedColor(self,color):
"
20070,"def getHoveredColor(self):
"
20071,"def setHoveredColor(self,color):
"
20072,"def getGraph(self):
"
20073,"def getHeader(self):
"
20074,"def isSelected(self):
"
20075,"def setSelected(self,selected = True):
"
20076,"def getGraphPos(self):
"
20077,"def setGraphPos(self,graphPos):
"
20078,"def translate(self,x,y):
"
20079,"def paint(self,painter,option,widget):
"
20080,"def mousePressEvent(self,event):
"
20081,"def mouseMoveEvent(self,event):
"
20082,"def mouseReleaseEvent(self,event):
"
20083,"def mouseDoubleClickEvent(self,event):
"
20084,"def hoverEnterEvent(self,event):
"
20085,"def hoverMoveEvent(self,event):
"
20086,"def hoverLeaveEvent(self,event):
"
20087,"def getCorner(self,pos):
"
20088,"def getEdge(self,pos):
"
20089,"def inspectorClosed(self):
"
20090,"def disconnectAllPorts(self):
"
20091,"def getData(self):
"
20092,"def setData(self,data):
"
20093,"def __init__(self,valueController,parent = None):
"
20094,"def setEditable(self,editable):
"
20095,"def getEditorValue(self):
"
20096,"def setEditorValue(self,value):
"
20097,"def mousePressEvent(self,event):
"
20098,"def __onColorChanged(self,qcolor):
"
20099,"def __onAccepted(self):
"
20100,"def __onCanceled(self):
"
20101,"def __init__(self,parent = None):
"
20102,"def createLayout(self):
"
20103,"def createConnections(self):
"
20104,"def getKrakenUI(self):
"
20105,"def center(self):
"
20106,"def getSettings(self):
"
20107,"def writeSettings(self):
"
20108,"def readSettings(self):
"
20109,"def closeEvent(self,event):
"
20110,"def showOutputLog(self):
"
20111,"def __init__(self,parent = None):
"
20112,"def createLayout(self):
"
20113,"def createConnections(self):
"
20114,"def setText(self,text):
"
20115,"def createContextMenu(self):
"
20116,"def contextSelectAll(self):
"
20117,"def contextCopy(self):
"
20118,"def contextClear(self):
"
20119,"def __init__(self):
"
20120,"def run(self,* args,** kwargs):
"
20121,"def test_local_none_global_true(self):
"
20122,"def test_local_none_global_false(self):
"
20123,"def test_local_true_global_false(self):
"
20124,"def test_local_false_global_true(self):
"
20125,"def test_quiet_implies_warn_only(self):
"
20126,"def test_quiet_implies_hide_everything(self):
"
20127,"def test_warn_only_is_same_as_settings_warn_only(self):
"
20128,"def test_warn_only_does_not_imply_hide_everything(self):
"
20129,"def test_expand_to_include_1(self):
"
20130,"def test_command_timeout_via_env_var(self):
"
20131,"def test_command_timeout_via_kwarg(self):
"
20132,"def test_command_timeout_via_env_var_in_sudo(self):
"
20133,"def test_command_timeout_via_kwarg_of_sudo(self):
"
20134,"def test_get_relative_remote_dir_uses_home(self):
"
20135,"def test_get_with_format_chars_on_server(self):
"
20136,"def test_get_single_file(self):
"
20137,"def test_get_file_from_relative_path_with_spaces(self):
"
20138,"def test_get_sibling_globs(self):
"
20139,"def test_get_single_file_in_folder(self):
"
20140,"def test_get_tree(self):
"
20141,"def test_get_tree_with_implicit_local_path(self):
"
20142,"def test_get_absolute_path_should_save_relative(self):
"
20143,"def test_path_formatstr_nonrecursively_is_just_filename(self):
"
20144,"def _invalid_file_obj_situations(self,remote_path):
"
20145,"def test_glob_and_file_object_invalid(self):
"
20146,"def test_directory_and_file_object_invalid(self):
"
20147,"def test_get_single_file_absolutely(self):
"
20148,"def test_get_file_with_nonexistent_target(self):
"
20149,"def test_get_file_with_existing_file_target(self):
"
20150,"def test_get_file_to_directory(self):
"
20151,"def test_get_from_multiple_servers(self):
"
20152,"def test_get_from_empty_directory_uses_cwd(self):
"
20153,"def _get_to_cwd(self,arg):
"
20154,"def test_get_to_empty_string_uses_default_format_string(self):
"
20155,"def test_get_to_None_uses_default_format_string(self):
"
20156,"def test_get_should_accept_file_like_objects(self):
"
20157,"def test_get_interpolation_without_host(self):
"
20158,"def test_get_returns_list_of_local_paths(self):
"
20159,"def test_get_returns_none_for_stringio(self):
"
20160,"def test_get_return_value_failed_attribute(self):
"
20161,"def test_get_should_not_use_windows_slashes_in_remote_paths(self):
"
20162,"def test_get_use_sudo(self):
"
20163,"def test_get_use_sudo_temp_dir(self):
"
20164,"def test_put_file_to_existing_directory(self):
"
20165,"def test_put_to_empty_directory_uses_cwd(self):
"
20166,"def test_put_from_empty_directory_uses_cwd(self):
"
20167,"def test_put_should_accept_file_like_objects(self):
"
20168,"def test_put_should_raise_exception_for_nonexistent_local_path(self):
"
20169,"def test_put_returns_list_of_remote_paths(self):
"
20170,"def test_put_returns_list_of_remote_paths_with_stringio(self):
"
20171,"def test_put_return_value_failed_attribute(self):
"
20172,"def test_put_sends_all_files_with_glob(self):
"
20173,"def test_put_sends_correct_file_with_globbing_off(self):
"
20174,"def test_put_use_sudo(self):
"
20175,"def test_put_use_sudo_temp_dir(self):
"
20176,"def test_cd_should_apply_to_put(self):
"
20177,"def test_cd_should_apply_to_get(self):
"
20178,"def test_cd_should_not_apply_to_absolute_put(self):
"
20179,"def test_cd_should_not_apply_to_absolute_get(self):
"
20180,"def test_lcd_should_apply_to_put(self):
"
20181,"def test_lcd_should_apply_to_get(self):
"
20182,"def test_returns_command_given(self):
"
20183,"def test_returns_fully_wrapped_command(self):
"
20184,"def __init__(self,charInputs,maxX,maxY):
"
20185,"def getmaxyx(self):
"
20186,"def refresh(self):
"
20187,"def erase(self):
"
20188,"def move(self,y,x):
"
20189,"def attrset(self,attr):
"
20190,"def addstr(self,y,x,string,attr = None):
"
20191,"def delch(self,y,x):
"
20192,"def getch(self):
"
20193,"def getstr(self,y,x,maxLen):
"
20194,"def printScreen(self):
"
20195,"def printOldScreens(self):
"
20196,"def getNumPastScreens(self):
"
20197,"def getRowsForPastScreen(self,pastScreen):
"
20198,"def getRowsWithAttributesForPastScreen(self,pastScreen):
"
20199,"def getRowsWithAttributesForPastScreens(self,pastScreens):
"
20200,"def getAttributeSymbolForCode(self,code):
"
20201,"def initLogging(self):
"
20202,"def _syslog_address(self):
"
20203,"def __init__(self,short = '',long = '',arg = '',type = '',help = '',default = '',boolean = False):
"
20204,"def name(self):
"
20205,"def options(self):
"
20206,"def args(self):
"
20207,"def description(self):
"
20208,"def run(self,arguments,option):
"
20209,"def __init__(self,fbid = None,parent_id = None,api = None):
"
20210,"def api_create(self,parent_id,fields = None,params = None,batch = None,pending = False):
"
20211,"def api_delete(self,fields = None,params = None,batch = None,pending = False):
"
20212,"def api_get(self,fields = None,params = None,batch = None,pending = False):
"
20213,"def api_update(self,fields = None,params = None,batch = None,pending = False):
"
20214,"def get_ad_creatives(self,fields = None,params = None,batch = None,pending = False):
"
20215,"def delete_ad_labels(self,fields = None,params = None,batch = None,pending = False):
"
20216,"def create_ad_label(self,fields = None,params = None,batch = None,pending = False):
"
20217,"def get_insights_async(self,fields = None,params = None,batch = None,pending = False):
"
20218,"def get_keyword_stats(self,fields = None,params = None,batch = None,pending = False):
"
20219,"def get_leads(self,fields = None,params = None,batch = None,pending = False):
"
20220,"def get_previews(self,fields = None,params = None,batch = None,pending = False):
"
20221,"def get_reach_estimate(self,fields = None,params = None,batch = None,pending = False):
"
20222,"def get_targeting_sentence_lines(self,fields = None,params = None,batch = None,pending = False):
"
20223,"def __init__(self,api = None):
"
20224,"def __init__(self,api = None):
"
20225,"def add_users(self,schema,users,is_raw = False,app_ids = None,pre_hashed = None):
"
20226,"def remove_users(self,schema,users,is_raw = False,app_ids = None,pre_hashed = None):
"
20227,"def share_audience(self,account_ids):
"
20228,"def unshare_audience(self,account_ids):
"
20229,"def __init__(self,fbid = None,parent_id = None,api = None):
"
20230,"def api_create(self,parent_id,fields = None,params = None,batch = None,pending = False):
"
20231,"def api_get(self,fields = None,params = None,batch = None,pending = False):
"
20232,"def request_context(self):
"
20233,"def http_status(self):
"
20234,"def http_headers(self):
"
20235,"def body(self):
"
20236,"def api_error_message(self):
"
20237,"def api_error_code(self):
"
20238,"def api_error_subcode(self):
"
20239,"def api_error_type(self):
"
20240,"def api_blame_field_specs(self):
"
20241,"def api_transient_error(self):
"
20242,"def get_message(self):
"
20243,"def __init__(self,message):
"
20244,"def get_skip_error_msg(self):
"
20245,"def __init__(self,type_check_info,type_check_enum):
"
20246,"def is_primitive_type(self,type):
"
20247,"def convert_string_to_prim_type(self,primitive_type,value):
"
20248,"def get_type(self,param):
"
20249,"def is_valid_key(self,param):
"
20250,"def is_valid_pair(self,param,value):
"
20251,"def is_type(self,value_type,value,allow_dict_as_obj = True):
"
20252,"def is_type_collection(self,value_type,collection_name):
"
20253,"def get_type_from_collection(self,value_type,collection_name):
"
20254,"def is_list_param(self,param):
"
20255,"def is_map_param(self,param):
"
20256,"def is_file_param(self,param):
"
20257,"def get_typed_value(self,key,value):
"
20258,"def _create_field_object(self,field_type,data = None):
"
20259,"def _type_is_ad_object(self,value_type):
"
20260,"def __init__(self,d = { },validate = False):
"
20261,"def __repr__(self):
"
20262,"def ip(self):
"
20263,"def weight(self):
"
20264,"def port(self):
"
20265,"def fwd_method(self):
"
20266,"def validate(self):
"
20267,"def to_dict(self):
"
20268,"def to_attr_list(self):
"
20269,"def __eq__(self,other):
"
20270,"def __ne__(self,other):
"
20271,"def __init__(self,d = { },validate = False):
"
20272,"def __repr__(self):
"
20273,"def af(self):
"
20274,"def fwmark(self):
"
20275,"def proto(self):
"
20276,"def proto_num(self):
"
20277,"def port(self):
"
20278,"def vip(self):
"
20279,"def sched(self):
"
20280,"def validate(self):
"
20281,"def to_dict(self):
"
20282,"def to_attr_list(self):
"
20283,"def __eq__(self,other):
"
20284,"def __ne__(self,other):
"
20285,"def __init__(self,d = { },validate = False):
"
20286,"def service(self):
"
20287,"def dests(self):
"
20288,"def validate(self):
"
20289,"def to_dict(self):
"
20290,"def __init__(self,verbose = False):
"
20291,"def __modify_service(self,method,vip,port,protocol,** svc_kwargs):
"
20292,"def add_service(self,vip,port,protocol = socket.IPPROTO_TCP,sched_name = 'rr'):
"
20293,"def del_service(self,vip,port,protocol = socket.IPPROTO_TCP):
"
20294,"def __modify_fwm_service(self,method,fwmark,af,** svc_kwargs):
"
20295,"def add_fwm_service(self,fwmark,sched_name = 'rr',af = socket.AF_INET):
"
20296,"def del_fwm_service(self,fwmark,af = socket.AF_INET):
"
20297,"def __modify_dest(self,method,vip,port,rip,rport = None,protocol = socket.IPPROTO_TCP,** dest_kwargs):
"
20298,"def add_dest(self,vip,port,rip,rport = None,protocol = socket.IPPROTO_TCP,weight = 1,method = IPVS_TUNNELING):
"
20299,"def update_dest(self,vip,port,rip,rport = None,protocol = socket.IPPROTO_TCP,weight = None,method = IPVS_TUNNELING):
"
20300,"def del_dest(self,vip,port,rip,rport = None,protocol = socket.IPPROTO_TCP):
"
20301,"def __modify_fwm_dest(self,method,fwmark,rip,vaf,port,** dest_kwargs):
"
20302,"def add_fwm_dest(self,fwmark,rip,vaf = socket.AF_INET,port = 0,weight = 1):
"
20303,"def update_fwm_dest(self,fwmark,rip,vaf = socket.AF_INET,weight = None,port = 0):
"
20304,"def del_fwm_dest(self,fwmark,rip,vaf = socket.AF_INET,port = 0):
"
20305,"def flush(self):
"
20306,"def get_pools(self):
"
20307,"def get_pool(self,svc_lst):
"
20308,"def get_service(self,svc_lst):
"
20309,"def get_dests(self,svc_lst):
"
20310,"def appStart(self):
"
20311,"def make_form(self):
"
20312,"def initTask(self):
"
20313,"def execute(self):
"
20314,"def test_execute_happens(self):
"
20315,"def test_execute_async(self):
"
20316,"def test_trylater_after(self):
"
20317,"def test_multi_execute(self):
"
20318,"def __init__(self,config,dry_run = False):
"
20319,"def _get_metadata(self,path):
"
20320,"def _is_vpc(self):
"
20321,"def _get_mac(self):
"
20322,"def _get_instance_id(self):
"
20323,"def _get_public_ip(self):
"
20324,"def _get_private_ip(self):
"
20325,"def __init__(self,config,conn,dry_run = False):
"
20326,"def _zk_id_path(self):
"
20327,"def _zk_ip_path(self,ip):
"
20328,"def _tag_instance(self):
"
20329,"def _choose_overlay_ip(self):
"
20330,"def _find_available_overlay_ip(self):
"
20331,"def _set_ip_to_id_map(self,ip):
"
20332,"def register(self):
"
20333,"def _get_ip_map(self):
"
20334,"def _ips_from_entries(self,entries):
"
20335,"def _join_party(self):
"
20336,"def _load_param(self,path,default):
"
20337,"def _state_listener(self,state):
"
20338,"def _rejoin_party(self):
"
20339,"def run(self):
"
20340,"def __init__(self,* args,** kwargs):
"
20341,"def _watcher(self,event):
"
20342,"def __init__(self,entry):
"
20343,"def NAT_ips(self,is_vpc):
"
20344,"def filter_ip(self,is_vpc):
"
20345,"def __init__(self,docs,datas,matrix_size = 2000):
"
20346,"def search(self,docs,k = 1,min_distance = None,max_distance = None,k_clusters = 1,return_distance = False):
"
20347,"def __init__(self,docs):
"
20348,"def search(self,docs):
"
20349,"def __init__(self,name):
"
20350,"def update_menu(self,menu_name,menus,submenu):
"
20351,"def remove_menu(self,menu_name):
"
20352,"def update_context_menu(self):
"
20353,"def update_sidebar_menu(self):
"
20354,"def update_tab_menu(self):
"
20355,"def test_custom_values(self):
"
20356,"def filter(self,record):
"
20357,"def filter(self,record):
"
20358,"def filter(self,record):
"
20359,"def __init__(self,site,config):
"
20360,"def run(self):
"
20361,"def read_content(self):
"
20362,"def read_template(self):
"
20363,"def read_images(self):
"
20364,"def __init__(self,site,config):
"
20365,"def run(self):
"
20366,"def write_entities(self):
"
20367,"def write_assets(self):
"
20368,"def write_templates(self):
"
20369,"def write_images(self,entity):
"
20370,"def clean_dir(self):
"
20371,"def __init__(self,host = 'api.fastly.com',secure = True,port = None,root = '',timeout = 10.0):
"
20372,"def request(self,method,path,body = None,headers = { }):
"
20373,"def __init__(self,src = None):
"
20374,"def start_cam(self,src = None):
"
20375,"def size(self):
"
20376,"def size(self,shape):
"
20377,"def read(self):
"
20378,"def frame_rate(self):
"
20379,"def __enter__(self):
"
20380,"def __exit__(self,exc_type,exc_value,traceback):
"
20381,"def release(self):
"
20382,"def __init__(self,img0):
"
20383,"def set_thresh1(self,val):
"
20384,"def set_thresh2(self,val):
"
20385,"def on_segment(self):
"
20386,"def run(self):
"
20387,"def get_output_shape_for(self,input_shape):
"
20388,"def call(self,x,mask = None):
"
20389,"def __call__(self,p):
"
20390,"def get_config(self):
"
20391,"def __init__(self,m = 2,axis = 0):
"
20392,"def __call__(self,p):
"
20393,"def get_config(self):
"
20394,"def __call__(self,p):
"
20395,"def __init__(self,axis = 0):
"
20396,"def __call__(self,p):
"
20397,"def get_config(self):
"
20398,"def set_param(self,p):
"
20399,"def set_layer(self,layer):
"
20400,"def __call__(self,loss):
"
20401,"def get_config(self):
"
20402,"def __init__(self,l1 = 0.,l2 = 0.):
"
20403,"def set_param(self,p):
"
20404,"def get_config(self):
"
20405,"def __init__(self,l1 = 0.,l2 = 0.):
"
20406,"def set_layer(self,layer):
"
20407,"def get_config(self):
"
20408,"def __init__(self,text,token_type):
"
20409,"def setUp(self):
"
20410,"def test_get_queryset(self):
"
20411,"def test_get_queryset_with_kwargs(self):
"
20412,"def test_get_serializer(self):
"
20413,"def test_parser_classes_standard(self):
"
20414,"def test_parser_classes_with_composite_field(self):
"
20415,"def test_parser_classes_with_special_composite_field(self):
"
20416,"def test_parser_classes_with_special_composite_field_passthrough(self):
"
20417,"def test_get_serializer_nested(self):
"
20418,"def test_get_serializer_random_kwarg(self):
"
20419,"def test_get_serializer_double_nested_kwarg(self):
"
20420,"def test_get_serializer_excluded_nested_field(self):
"
20421,"def test_get_serializer_with_problematic_model_serializer(self):
"
20422,"def __init__(self,* args,** kwargs):
"
20423,"def clean(self,value):
"
20424,"def formfield(self,form_class = RichTextFormField,** kwargs):
"
20425,"def __init__(self,tag_name,in_var_name,args):
"
20426,"def render(self,context):
"
20427,"def __init__(self,tag_name,in_var_name,var_name,args):
"
20428,"def render(self,context):
"
20429,"def __init__(self,field):
"
20430,"def __get__(self,obj,objtype):
"
20431,"def __set__(self,obj,value):
"
20432,"def __init__(self):
"
20433,"def store_token(self,* args,** kwargs):
"
20434,"def modified(self):
"
20435,"def __init__(self,request):
"
20436,"def get_fb_session(self,request):
"
20437,"def modified(self,who = 'unknown'):
"
20438,"def app_is_authenticated(self):
"
20439,"def app_is_authenticated(self,status):
"
20440,"def access_token(self):
"
20441,"def access_token(self,token):
"
20442,"def token_expires(self):
"
20443,"def token_expires(self,expires):
"
20444,"def store_token(self,token = None,expires = None):
"
20445,"def _clear_token(self):
"
20446,"def user_id(self):
"
20447,"def user_id(self,id):
"
20448,"def me(self):
"
20449,"def me(self,value):
"
20450,"def signed_request(self):
"
20451,"def signed_request(self,parsed_request):
"
20452,"def user(self):
"
20453,"def user(self,user):
"
20454,"def app_requests(self):
"
20455,"def __init__(self):
"
20456,"def store_token(self,token = None,expires = None):
"
20457,"def modified(self,who = 'Unknown',* args,** kwargs):
"
20458,"def test_basic(self):
"
20459,"def test_topic(self):
"
20460,"def LoadLibrary(self):
"
20461,"def GetProcAddress(self):
"
20462,"def Close(self):
"
20463,"def __del__(self):
"
20464,"def __int__(self):
"
20465,"def __init__(self):
"
20466,"def __init__(self,dict):
"
20467,"def __init__(self,qdata,name,event_map,backends,** kwargs):
"
20468,"def run(self):
"
20469,"def _init_backend(self,backend):
"
20470,"def _cleanup(self):
"
20471,"def _store_stats(self):
"
20472,"def _store_data(self):
"
20473,"def __init__(self,start_message,pypi_id,end_message):
"
20474,"def __init__(self,api,auth_methods = None):
"
20475,"def __call__(self,request):
"
20476,"def parse_item(self,response):
"
20477,"def parse_item(self,response):
"
20478,"def _extractall(self,path = ""."",members = None):
"
20479,"def adjust_for_architecture(self):
"
20480,"def __init__(self,valobj,params):
"
20481,"def update(self):
"
20482,"def count(self):
"
20483,"def adjust_for_architecture(self):
"
20484,"def __init__(self,valobj,params):
"
20485,"def update(self):
"
20486,"def count(self):
"
20487,"def lookup(self):
"
20488,"def addTest(self,test):
"
20489,"def build_suite(self,test_labels,extra_tests = None,** kwargs):
"
20490,"def get_callback_url(self,** kwargs):
"
20491,"def get_user_info(self):
"
20492,"def authenticate(self):
"
20493,"def test_tag_renders_correctly(self):
"
20494,"def test_authentication_backend_should_be_configured_in_settings(self):
"
20495,"def index(self):
"
20496,"def get(self):
"
20497,"def initialize(self,server):
"
20498,"def get(self):
"
20499,"def initialize(self,server):
"
20500,"def post(self):
"
20501,"def initialize(self,server):
"
20502,"def get(self):
"
20503,"def add(self,a,b):
"
20504,"def __init__(self):
"
20505,"def clear(self):
"
20506,"def __init__(self):
"
20507,"def __call__(self,new_value):
"
20508,"def __init__(self,components):
"
20509,"def __iter__(self):
"
20510,"def __repr__(self):
"
20511,"def __str__(self):
"
20512,"def __bytes__(self):
"
20513,"def __eq__(self,other):
"
20514,"def __abs__(self):
"
20515,"def __bool__(self):
"
20516,"def __init__(self,filename,encoding = DEFAULT_ENCODING):
"
20517,"def __iter__(self):
"
20518,"def next(self):
"
20519,"def read(self,size):
"
20520,"def close(self):
"
20521,"def __init__(self,iso_file = None):
"
20522,"def __len__(self):
"
20523,"def load_label(self):
"
20524,"def show_label(self):
"
20525,"def load_directory(self):
"
20526,"def load_fields(self):
"
20527,"def __iter__(self):
"
20528,"def next(self):
"
20529,"def dump(self):
"
20530,"def __init__(self,tag,len,start,impl):
"
20531,"def show(self):
"
20532,"def __len__(self):
"
20533,"def __init__(self,description,weight,price):
"
20534,"def subtotal(self):
"
20535,"def get_weight(self):
"
20536,"def set_weight(self,value):
"
20537,"def __init__(self,description,weight,price):
"
20538,"def subtotal(self):
"
20539,"def __init__(self,x,y):
"
20540,"def __repr__(self):
"
20541,"def __eq__(self,other):
"
20542,"def __iter__(self,other):
"
20543,"def test_parse(self):
"
20544,"def test_parse(self):
"
20545,"def test_clean_header(self):
"
20546,"def test_parse(self):
"
20547,"def __init__(self,f,pbounds,verbose = 1):
"
20548,"def init(self,init_points):
"
20549,"def explore(self,points_dict):
"
20550,"def initialize(self,points_dict):
"
20551,"def set_bounds(self,new_bounds):
"
20552,"def maximize(self,init_points = 5,n_iter = 25,acq = 'ucb',kappa = 2.576,xi = 0.0,** gp_params):
"
20553,"def update(self,t,dt):
"
20554,"def draw(self):
"
20555,"def on_mouse_button(self,button,action,mods):
"
20556,"def update(self,t,dt):
"
20557,"def draw(self):
"
20558,"def on_mouse_button(self,button,action,mods):
"
20559,"def setup(self):
"
20560,"def __init__(self,scene_or_window,speed = 1.0,sensitivity = 2.5,invert = False,exclusive = True):
"
20561,"def position(self):
"
20562,"def look_at(self,position,target):
"
20563,"def enter(self):
"
20564,"def on_mouse_button(self,button,action,mods):
"
20565,"def on_key(self,key,scancode,action,mods):
"
20566,"def on_cursor_pos(self,mx,my):
"
20567,"def get_strafe(self):
"
20568,"def get_matrix(self,matrix = None,translate = True):
"
20569,"def get_sight_vector(self):
"
20570,"def get_motion_vector(self):
"
20571,"def update(self,t,dt):
"
20572,"def __init__(self,rename_func):
"
20573,"def close(self):
"
20574,"def handle_starttag(self,tag,attrs,startend = False):
"
20575,"def handle_startendtag(self,tag,attrs):
"
20576,"def handle_field(self,tag,attrs,startend):
"
20577,"def setUp(self):
"
20578,"def test_client_provided(self):
"
20579,"def test_client_created_automatically_if_events(self):
"
20580,"def setUp(self):
"
20581,"def test_invalid_event(self):
"
20582,"def test_default_acls(self):
"
20583,"def test_processors_depended_on(self):
"
20584,"def _create_cacheable(self):
"
20585,"def test_caching_two_calls_with_same_arguments(self):
"
20586,"def test_exceptions_should_not_be_cached(self):
"
20587,"def test_cache_cleared_when_watch_fired(self):
"
20588,"def test_cache_cleared_when_client_disconnects(self):
"
20589,"def test_events(self):
"
20590,"def test_parse_servers(self):
"
20591,"def __init__(self):
"
20592,"def _ensure_ordered_dicts_for_node(self,node):
"
20593,"def add_node(self,node,* a,** kw):
"
20594,"def add_nodes_from(self,nodes,** kw):
"
20595,"def add_edge(self,u,v,attr_dict = None,** attr):
"
20596,"def add_edges_from(self,ebunch,* a,** kw):
"
20597,"def replace_edge_from(self,from_node,old_to,new_to,** kw):
"
20598,"def __init__(self,input_path = 'trace',output_path = 'dot',show_unused_processors = True,** kw):
"
20599,"def configure(self,runtime_environment):
"
20600,"def process_input(self,input,baton):
"
20601,"def _calculate_mean_and_total_time(self,trace):
"
20602,"def _find_processors_and_unknowns(self,trace):
"
20603,"def _create_pipeline_subgraph(self,pipeline,processors):
"
20604,"def _create_traced_edge_entry(self,i,trace_step,mean_time):
"
20605,"def __init__(self,request_path = 'request',svg_path = 'dot',input_path = 'trace',output_path = 'content',skip_if_nonexistent = False,template = None,json_encoder = None,** kw):
"
20606,"def configure(self,runtime_environment):
"
20607,"def process_input(self,input,baton):
"
20608,"def setUp(self):
"
20609,"def test_get_with_path(self):
"
20610,"def test_set_with_path(self):
"
20611,"def test_loading_nonexistent(self):
"
20612,"def test_loading(self):
"
20613,"def test_loading_invalid(self):
"
20614,"def test_loading_includes(self):
"
20615,"def test_loading_nested_includes(self):
"
20616,"def test_loading_nonexistant_include_fails(self):
"
20617,"def test_empty_config(self):
"
20618,"def test_non_dict_config(self):
"
20619,"def setUp(self):
"
20620,"def load_config_from_string(self,string):
"
20621,"def test_simple_alias(self):
"
20622,"def test_partial_alias(self):
"
20623,"def test_nested_alises(self):
"
20624,"def test_recursiveness(self):
"
20625,"def serialize_fields(self,message):
"
20626,"def serialize_fields(self,message):
"
20627,"def __init__(self,board,serializer):
"
20628,"def _on_send(self,topic,pod):
"
20629,"def setUp(self):
"
20630,"def test_with_error(self):
"
20631,"def test_with_result(self):
"
20632,"def test_with_error_with_result(self):
"
20633,"def test_without_error_without_reuslt(self):
"
20634,"def stop_slice(self,slice):
"
20635,"def __init__(self):
"
20636,"def _dispatch(self,method,params,** kwargs):
"
20637,"def create_ch_slice(self):
"
20638,"def create_users(self):
"
20639,"def setUp(self):
"
20640,"def tearDown(self):
"
20641,"def test_GetVersion(self):
"
20642,"def test_ListResources(self,zipped = False):
"
20643,"def test_ZippedListResources(self):
"
20644,"def test_topoChange_ListResources(self):
"
20645,"def test_CreateSliver(self):
"
20646,"def test_CreateDeleteSliver(self):
"
20647,"def test_parse_slice(self):
"
20648,"def echo(self,arg):
"
20649,"def setUp(self):
"
20650,"def tearDown(self):
"
20651,"def __init__(self,interval,callable_fun,* args,** kwargs):
"
20652,"def run(self):
"
20653,"def cancel(self):
"
20654,"def __init__(self,log):
"
20655,"def recordAction(self,action,credentials =[],urn = None):
"
20656,"def pub_check_fv_set(self,func,* arg,** kwargs):
"
20657,"def pub_check_user(self,func,* args,** kwargs):
"
20658,"def pub_checkFlowVisor(self,* arg,** kwargs):
"
20659,"def pub_convert_star(self,fs):
"
20660,"def pub_convert_star_int(self,fs):
"
20661,"def pub_get_direction(self,direction):
"
20662,"def create_slice_fs(self,switch_slivers):
"
20663,"def purge_switch_slivers_from_null_fs(self,switch_slivers):
"
20664,"def pub_delete_slice(self,slice_id,** kwargs):
"
20665,"def pub_register_topology_callback(self,url,cookie,** kwargs):
"
20666,"def pub_change_password(self,new_password,** kwargs):
"
20667,"def pub_get_offered_vlans(self,set = None):
"
20668,"def pub_test_api_access(self,sayHello):
"
20669,"def successResult(self,value):
"
20670,"def errorResult(self,code,output):
"
20671,"def __init__(self,name):
"
20672,"def exists(self):
"
20673,"def __init__(self):
"
20674,"def delete(self,slice_name):
"
20675,"def add(self,slice_name):
"
20676,"def __init__(self):
"
20677,"def updateConfig(self,info):
"
20678,"def buildConnections(self):
"
20679,"def _xmlcall_time(self,method,* args):
"
20680,"def _xmlcall_fast(self,method,* args):
"
20681,"def rebuildCache(self):
"
20682,"def getDeviceList(self):
"
20683,"def getLinkList(self):
"
20684,"def getFVVersion(self):
"
20685,"def getDevicePorts(self,dpid):
"
20686,"def getCombinedStats(self,slice_name):
"
20687,"def deleteSlice(self,slice_name):
"
20688,"def sliceExists(self,slice_name):
"
20689,"def getSliceInfo(self,slice_name):
"
20690,"def createSlice(self,slice_name,controller,email):
"
20691,"def changeFlowspace(self,opslist):
"
20692,"def addVirtualLink(self,slice_name,action):
"
20693,"def updateInfo(self,key,value):
"
20694,"def __init__(self):
"
20695,"def getDataDict(self,detail = True):
"
20696,"def getGroups(self):
"
20697,"def getFlowspecs(self):
"
20698,"def getVirtualLinks(self):
"
20699,"def getControllers(self):
"
20700,"def addGroup(self,name,dplist =[]):
"
20701,"def addDatapathToGroup(self,gname,dp):
"
20702,"def addController(self,controller):
"
20703,"def addFlowSpec(self,fs):
"
20704,"def addVirtualLink(self,vl):
"
20705,"def getGroupDatapaths(self,gname):
"
20706,"def validate(self):
"
20707,"def createSlice(self):
"
20708,"def generateFlowEntries(self,priority = 100):
"
20709,"def insertFlowspace(self,priority):
"
20710,"def generateVLinkEntries(self):
"
20711,"def insertVirtualLink(self):
"
20712,"def call(self,ticket,creds):
"
20713,"def __init__(self,fields = { },element = None,keys = None):
"
20714,"def __init__(self,create = False,subject = None,string = None,filename = None):
"
20715,"def set_gid_caller(self,gid):
"
20716,"def get_gid_caller(self):
"
20717,"def set_gid_object(self,gid):
"
20718,"def get_gid_object(self):
"
20719,"def set_lifetime(self,lifeTime):
"
20720,"def get_lifetime(self):
"
20721,"def set_delegate(self,delegate):
"
20722,"def get_delegate(self):
"
20723,"def set_privileges(self,privs):
"
20724,"def get_privileges(self):
"
20725,"def can_perform(self,op_name):
"
20726,"def encode(self):
"
20727,"def decode(self):
"
20728,"def verify_chain(self,trusted_certs = None):
"
20729,"def dump_string(self,dump_parents = False):
"
20730,"def int(self):
"
20731,"def version(self):
"
20732,"def prefixlen(self):
"
20733,"def net(self):
"
20734,"def broadcast(self):
"
20735,"def _printPrefix(self,want):
"
20736,"def strBin(self,wantprefixlen = None):
"
20737,"def strNormal(self,wantprefixlen = None):
"
20738,"def strFullsize(self,wantprefixlen = None):
"
20739,"def strHex(self,wantprefixlen = None):
"
20740,"def strDec(self,wantprefixlen = None):
"
20741,"def netmask(self):
"
20742,"def strNetmask(self):
"
20743,"def len(self):
"
20744,"def __nonzero__(self):
"
20745,"def __len__(self):
"
20746,"def __getitem__(self,key):
"
20747,"def __contains__(self,item):
"
20748,"def overlaps(self,item):
"
20749,"def __str__(self):
"
20750,"def __repr__(self):
"
20751,"def __cmp__(self,other):
"
20752,"def __eq__(self,other):
"
20753,"def __lt__(self,other):
"
20754,"def __hash__(self):
"
20755,"def __json__(self):
"
20756,"def net(self):
"
20757,"def broadcast(self):
"
20758,"def netmask(self):
"
20759,"def _getIPv4Map(self):
"
20760,"def reverseName(self):
"
20761,"def make_net(self,netmask):
"
20762,"def __getitem__(self,key):
"
20763,"def __repr__(self):
"
20764,"def __add__(self,other):
"
20765,"def __init__(self):
"
20766,"def process_request(self,request):
"
20767,"def __init__(self,use_datetime = 0,keyfile = None,certfile = None):
"
20768,"def make_connection(self,host):
"
20769,"def get_networks(self):
"
20770,"def add_network(self,network):
"
20771,"def get_nodes(self,filter = None):
"
20772,"def get_nodes_with_slivers(self):
"
20773,"def add_nodes(self,nodes,network = None,no_dupes = False):
"
20774,"def merge_node(self,source_node_tag,network,no_dupes = False):
"
20775,"def add_slivers(self,hostnames,attributes =[],sliver_urn = None,append = False):
"
20776,"def remove_slivers(self,slivers,network = None,no_dupes = False):
"
20777,"def get_slice_attributes(self,network = None):
"
20778,"def add_sliver_attribute(self,component_id,name,value,network = None):
"
20779,"def get_sliver_attributes(self,component_id,network = None):
"
20780,"def remove_sliver_attribute(self,component_id,name,value,network = None):
"
20781,"def add_default_sliver_attribute(self,name,value,network = None):
"
20782,"def get_default_sliver_attributes(self,network = None):
"
20783,"def remove_default_sliver_attribute(self,name,value,network = None):
"
20784,"def get_links(self,network = None):
"
20785,"def get_link_requests(self):
"
20786,"def add_links(self,links):
"
20787,"def add_link_requests(self,links):
"
20788,"def merge(self,in_rspec):
"
20789,"def get_leases(self,filter = None):
"
20790,"def add_leases(self,leases,network = None,no_dupes = False):
"
20791,"def __init__(self,faultCode,faultString,extra = None):
"
20792,"def __init__(self,value = '',extra = None):
"
20793,"def __init__(self,value = '',method = '',extra = None):
"
20794,"def __init__(self,method,interface = None,extra = None):
"
20795,"def __init__(self,got,min,max = min,extra = None):
"
20796,"def __init__(self,extra = None,name = None):
"
20797,"def __init__(self,extra = None):
"
20798,"def __init__(self,extra = None):
"
20799,"def __init__(self,extra = None):
"
20800,"def __init__(self,interface = None,extra = None):
"
20801,"def __init__(self,extra = None):
"
20802,"def __init__(self,value,extra = None):
"
20803,"def __str__(self):
"
20804,"def __init__(self,value,extra = None):
"
20805,"def __str__(self):
"
20806,"def __init__(self,value,extra = None):
"
20807,"def __str__(self):
"
20808,"def __init__(self,value,extra = None):
"
20809,"def __str__(self):
"
20810,"def __init__(self,value,extra = None):
"
20811,"def __str__(self):
"
20812,"def __init__(self,value,extra = None):
"
20813,"def __str__(self):
"
20814,"def __init__(self,value,extra = None):
"
20815,"def __str__(self):
"
20816,"def __init__(self,value,extra = None):
"
20817,"def __str__(self):
"
20818,"def __init__(self,value,extra = None):
"
20819,"def __str__(self):
"
20820,"def __init__(self,value,extra = None):
"
20821,"def __str__(self):
"
20822,"def __init__(self,value,extra = None):
"
20823,"def __str__(self):
"
20824,"def __init__(self,value,extra = None):
"
20825,"def __str__(self):
"
20826,"def __init__(self,value,extra = None):
"
20827,"def __str__(self):
"
20828,"def __init__(self,value,extra = None):
"
20829,"def __str__(self):
"
20830,"def __init__(self,value,extra = None):
"
20831,"def __str__(self):
"
20832,"def __init__(self,value,extra = None):
"
20833,"def __str__(self):
"
20834,"def __init__(self,value,extra = None):
"
20835,"def __str__(self):
"
20836,"def __init__(self,value,extra = None):
"
20837,"def __str__(self):
"
20838,"def __init__(self,value,extra = None):
"
20839,"def __str__(self):
"
20840,"def __init__(self,value,extra = None):
"
20841,"def __str__(self):
"
20842,"def __init__(self,hash = None,extra = None):
"
20843,"def __init__(self,value,extra = None):
"
20844,"def __str__(self):
"
20845,"def __init__(self,value,extra = None):
"
20846,"def __str__(self):
"
20847,"def __init__(self,value,extra = None):
"
20848,"def __str__(self):
"
20849,"def __init__(self,value,extra = None):
"
20850,"def __str__(self):
"
20851,"def __init__(self,value,extra = None):
"
20852,"def __str__(self):
"
20853,"def __init__(self,value,extra = None):
"
20854,"def __str__(self):
"
20855,"def __init__(self,value,extra = None):
"
20856,"def __str__(self):
"
20857,"def __init__(self,extra = None):
"
20858,"def __str__(self):
"
20859,"def __init__(self,value,extra = None):
"
20860,"def __str__(self):
"
20861,"def __init__(self,value,extra = None):
"
20862,"def call(self,xrn,creds,type):
"
20863,"def __init__(self,xrn,gid_filename,privkey_filename):
"
20864,"def set_gid_filename(self,fn):
"
20865,"def get_privkey_filename(self):
"
20866,"def get_gid_filename(self):
"
20867,"def get_gid_object(self):
"
20868,"def get_pkey_object(self):
"
20869,"def update_gid_object(self,gid):
"
20870,"def __init__(self,basedir = None):
"
20871,"def get_auth_filenames(self,xrn):
"
20872,"def create_top_level_auth(self,hrn = None):
"
20873,"def get_interface_auth_info(self,create = True):
"
20874,"def create_gid(self,xrn,uuid,pkey,CA = False,email = None):
"
20875,"def get_subject(self,hrn):
"
20876,"def refresh_gid(self,gid,xrn = None,uuid = None,pubkey = None):
"
20877,"def get_auth_cred(self,xrn,kind = ""authority""):
"
20878,"def get_auth_ticket(self,xrn):
"
20879,"def getServers(self):
"
20880,"def __init__(self,graph,mods,folder,doc):
"
20881,"def _updateGraph(self,graph):
"
20882,"def _update(self,graph,mods):
"
20883,"def listinputs(self,node):
"
20884,"def listoutputs(self,node):
"
20885,"def resetall(self):
"
20886,"def clearall(self):
"
20887,"def undumpall(self):
"
20888,"def getinputs(self,mod):
"
20889,"def run(self,parallel = False):
"
20890,"def untrust(self,nodename):
"
20891,"def clear(self,filtername,verbose = True):
"
20892,"def reset(self,filtername):
"
20893,"def undump(self,filtername,verbose = True):
"
20894,"def provideSerial(self,resname):
"
20895,"def rebuild(self,resname):
"
20896,"def dumpOn(self):
"
20897,"def dumpOff(self):
"
20898,"def list(self):
"
20899,"def export(self,ofile,layout = 'LR'):
"
20900,"def _readabletime(self,secs):
"
20901,"def publish(self,ofile,odir = '',layout = 'LR'):
"
20902,"def _prettyPrint(self,x):
"
20903,"def provide(self,res,parallel = False):
"
20904,"def _runNodes(self,nodes,parallel = False):
"
20905,"def time(self,node):
"
20906,"def _findRunnable(self,nodes):
"
20907,"def _getBestStates(self,D):
"
20908,"def _findDependancies(self,nodes):
"
20909,"def _updateModules(self,mods):
"
20910,"def _manageGraphChange(self,newGraph):
"
20911,"def _getContents(self,mod):
"
20912,"def _setMod(self,modname,mod):
"
20913,"def _setMods(self,mods):
"
20914,"def _newResource(self,resname,resval,t):
"
20915,"def _clearFilter(self,nodename):
"
20916,"def _setWdir(self,wdir):
"
20917,"def _isAvailable(self,resname):
"
20918,"def _getResource(self,resname):
"
20919,"def _addResource(self,name,res):
"
20920,"def _getNodeNames(self):
"
20921,"def _isResFile(self,res):
"
20922,"def _provideResource(self,resname):
"
20923,"def _runNode(self,node):
"
20924,"def _getNodePar(self,node):
"
20925,"def _getModule(self,name):
"
20926,"def _callMod(self,node,nodeparams):
"
20927,"def _callModPar(self,node,nodeparams,queue):
"
20928,"def _checkIsFunction(self,x):
"
20929,"def _placeFileRes(self,fname):
"
20930,"def _buildResName(self,inode,onode,rawres):
"
20931,"def _isFileMod(self,node):
"
20932,"def _updateFilePath(self,path):
"
20933,"def _processRawRes(self,node,rawres):
"
20934,"def _setDumpFolder(self,f):
"
20935,"def _isDumped(self,resname):
"
20936,"def _loadResource(self,res):
"
20937,"def _ChangeME_resToPath(self,res):
"
20938,"def _getInNodes(self,node):
"
20939,"def getoutputs(self,node):
"
20940,"def _isLeaf(self,node):
"
20941,"def _getOutNodesRecursive(self,node):
"
20942,"def _getLeaves(self):
"
20943,"def _getResNames(self):
"
20944,"def _setDumping(self,d):
"
20945,"def _getGraph(self):
"
20946,"def _setMod(self,who,what):
"
20947,"def _loadMods(self):
"
20948,"def _setMetaFolder(self,f):
"
20949,"def _getresmap(self):
"
20950,"def setUp(self):
"
20951,"def test_sync_create(self):
"
20952,"def test_sync_create_existing(self):
"
20953,"def test_exception_paths(self):
"
20954,"def test_async_create(self):
"
20955,"def __init__(self):
"
20956,"def __init__(self,* args):
"
20957,"def read(self,* args):
"
20958,"def write(self,* args):
"
20959,"def close(self):
"
20960,"def __init__(self,ofp):
"
20961,"def write(self,data):
"
20962,"def _flush(self,force):
"
20963,"def close(self):
"
20964,"def __init__(self,ofp):
"
20965,"def write(self,data):
"
20966,"def close(self):
"
20967,"def __init__(self,name_finfo_dlen_rlen,ofp):
"
20968,"def _write(self,data):
"
20969,"def _writecrc(self):
"
20970,"def __init__(self,ifp):
"
20971,"def close(self):
"
20972,"def __init__(self,ifp):
"
20973,"def read(self,wtd):
"
20974,"def _fill(self,wtd):
"
20975,"def close(self):
"
20976,"def _read(self,len):
"
20977,"def _readheader(self):
"
20978,"def close(self):
"
20979,"def __init__(self,* args,** kw):
"
20980,"def dumps(self,item):
"
20981,"def loads(self,item):
"
20982,"def test_simple(self):
"
20983,"def test_struct(self):
"
20984,"def test_unpickable(self):
"
20985,"def encode(self,input,errors = 'strict'):
"
20986,"def decode(self,input,errors = 'strict'):
"
20987,"def encode(self,input,final = False):
"
20988,"def decode(self,input,final = False):
"
20989,"def __init__(self,* args):
"
20990,"def color_breakpoint_text(self,color = True):
"
20991,"def set_breakpoint(self,lineno):
"
20992,"def set_breakpoint_here(self,event = None):
"
20993,"def clear_breakpoint_here(self,event = None):
"
20994,"def clear_file_breaks(self):
"
20995,"def store_file_breaks(self):
"
20996,"def restore_file_breaks(self):
"
20997,"def update_breakpoints(self):
"
20998,"def ranges_to_linenumbers(self,ranges):
"
20999,"def _close(self):
"
21000,"def open_shell(self,event = None):
"
21001,"def __init__(self):
"
21002,"def recolorize_main(self):
"
21003,"def LoadTagDefs(self):
"
21004,"def removecolors(self):
"
21005,"def insert(self,index,chars,tags = None):
"
21006,"def delete(self,index1,index2 = None):
"
21007,"def handle_EOF(self):
"
21008,"def __init__(self,tkconsole):
"
21009,"def spawn_subprocess(self):
"
21010,"def build_subprocess_arglist(self):
"
21011,"def start_subprocess(self):
"
21012,"def restart_subprocess(self,with_cwd = False):
"
21013,"def __request_interrupt(self):
"
21014,"def interrupt_subprocess(self):
"
21015,"def kill_subprocess(self):
"
21016,"def unix_terminate(self):
"
21017,"def transfer_path(self,with_cwd = False):
"
21018,"def poll_subprocess(self):
"
21019,"def setdebugger(self,debugger):
"
21020,"def getdebugger(self):
"
21021,"def open_remote_stack_viewer(self):
"
21022,"def remote_stack_viewer(self):
"
21023,"def execsource(self,source):
"
21024,"def execfile(self,filename,source = None):
"
21025,"def runsource(self,source):
"
21026,"def stuffsource(self,source):
"
21027,"def prepend_syspath(self,filename):
"
21028,"def showsyntaxerror(self,filename = None):
"
21029,"def unpackerror(self):
"
21030,"def showtraceback(self):
"
21031,"def checklinecache(self):
"
21032,"def write(self,s):
"
21033,"def __init__(self,flist = None):
"
21034,"def get_standard_extension_names(self):
"
21035,"def set_warning_stream(self,stream):
"
21036,"def get_warning_stream(self):
"
21037,"def toggle_debugger(self,event = None):
"
21038,"def set_debugger_indicator(self):
"
21039,"def toggle_jit_stack_viewer(self,event = None):
"
21040,"def close_debugger(self):
"
21041,"def open_debugger(self):
"
21042,"def beginexecuting(self):
"
21043,"def endexecuting(self):
"
21044,"def close(self):
"
21045,"def _close(self):
"
21046,"def ispythonsource(self,filename):
"
21047,"def short_title(self):
"
21048,"def begin(self):
"
21049,"def stop_readline(self):
"
21050,"def readline(self):
"
21051,"def isatty(self):
"
21052,"def cancel_callback(self,event = None):
"
21053,"def eof_callback(self,event):
"
21054,"def linefeed_callback(self,event):
"
21055,"def enter_callback(self,event):
"
21056,"def runit(self):
"
21057,"def view_restart_mark(self,event = None):
"
21058,"def restart_shell(self,event = None):
"
21059,"def showprompt(self):
"
21060,"def resetoutput(self):
"
21061,"def write(self,s,tags =()):
"
21062,"def rmenu_check_cut(self):
"
21063,"def rmenu_check_paste(self):
"
21064,"def __init__(self,shell,tags,encoding = None):
"
21065,"def encoding(self):
"
21066,"def name(self):
"
21067,"def isatty(self):
"
21068,"def writable(self):
"
21069,"def write(self,s):
"
21070,"def __init__(self,shell,tags,encoding = None):
"
21071,"def readable(self):
"
21072,"def read(self,size = - 1):
"
21073,"def readline(self,size = - 1):
"
21074,"def close(self):
"
21075,"def setUp(self):
"
21076,"def test_configure(self):
"
21077,"def test_map(self):
"
21078,"def test_lookup(self):
"
21079,"def test_layout(self):
"
21080,"def test_theme_use(self):
"
21081,"def __call__(self):
"
21082,"def test_resource_filename_rewrites_on_change(self):
"
21083,"def test_get_cache_path(self):
"
21084,"def setUp(self):
"
21085,"def cannot_set_attr(self,obj,name,value,exceptions):
"
21086,"def test_module(self):
"
21087,"def test_duplicate_function_equality(self):
"
21088,"def test_copying_func_code(self):
"
21089,"def test_func_globals(self):
"
21090,"def test_func_code(self):
"
21091,"def test_blank_func_defaults(self):
"
21092,"def test_func_default_args(self):
"
21093,"def test_im_class(self):
"
21094,"def test_im_func(self):
"
21095,"def test_im_self(self):
"
21096,"def test_im_func_non_method(self):
"
21097,"def test_implicit_method_properties(self):
"
21098,"def test_set_attr(self):
"
21099,"def test_delete_unknown_attr(self):
"
21100,"def test_setting_attrs_duplicates(self):
"
21101,"def test_unset_attr(self):
"
21102,"def test_setting_dict_to_invalid(self):
"
21103,"def test_setting_dict_to_valid(self):
"
21104,"def test_delete_func_dict(self):
"
21105,"def test_unassigned_dict(self):
"
21106,"def test_func_as_dict_key(self):
"
21107,"def test_set_docstring_attr(self):
"
21108,"def test_delete_docstring(self):
"
21109,"def test_func_attribute(self):
"
21110,"def test_truth(self):
"
21111,"def test_identity(self):
"
21112,"def test_len(self):
"
21113,"def test_overflow(self):
"
21114,"def run(self):
"
21115,"def test_main(self):
"
21116,"def __init__(self):
"
21117,"def statargs(self,args):
"
21118,"def statdir(self,dir):
"
21119,"def addstats(self,ext,key,n):
"
21120,"def report(self):
"
21121,"def __init__(self):
"
21122,"def reset(self):
"
21123,"def note(self,level,format,* args):
"
21124,"def __getstate__(self):
"
21125,"def addroot(self,root,add_to_do = 1):
"
21126,"def run(self):
"
21127,"def status(self):
"
21128,"def report(self):
"
21129,"def report_errors(self):
"
21130,"def newlink(self,url,origin):
"
21131,"def newdonelink(self,url,origin):
"
21132,"def newtodolink(self,url,origin):
"
21133,"def format_url(self,url):
"
21134,"def markdone(self,url):
"
21135,"def inroots(self,url):
"
21136,"def isallowed(self,root,url):
"
21137,"def getpage(self,url_pair):
"
21138,"def readhtml(self,url_pair):
"
21139,"def openhtml(self,url_pair):
"
21140,"def checkforhtml(self,info,url):
"
21141,"def setgood(self,url):
"
21142,"def setbad(self,url,msg):
"
21143,"def markerror(self,url):
"
21144,"def seterror(self,url,triple):
"
21145,"def show(self,p1,link,p2,origins):
"
21146,"def sanitize(self,msg):
"
21147,"def safeclose(self,f):
"
21148,"def save_pickle(self,dumpfile = DUMPFILE):
"
21149,"def __init__(self,text,url,verbose = VERBOSE,maxpage = MAXPAGE,checker = None):
"
21150,"def getnames(self):
"
21151,"def getlinkinfos(self):
"
21152,"def __init__(self,url,info):
"
21153,"def info(self):
"
21154,"def geturl(self):
"
21155,"def http_error_401(self,url,fp,errcode,errmsg,headers):
"
21156,"def __init__(self,url,verbose = VERBOSE,checker = None):
"
21157,"def check_name_id(self,attributes):
"
21158,"def unknown_starttag(self,tag,attributes):
"
21159,"def start_a(self,attributes):
"
21160,"def do_body(self,attributes):
"
21161,"def do_img(self,attributes):
"
21162,"def do_frame(self,attributes):
"
21163,"def do_iframe(self,attributes):
"
21164,"def do_link(self,attributes):
"
21165,"def do_object(self,attributes):
"
21166,"def do_script(self,attributes):
"
21167,"def do_table(self,attributes):
"
21168,"def do_td(self,attributes):
"
21169,"def do_th(self,attributes):
"
21170,"def do_tr(self,attributes):
"
21171,"def link_attr(self,attributes,* args):
"
21172,"def do_base(self,attributes):
"
21173,"def getlinks(self):
"
21174,"def getbase(self):
"
21175,"def __unicode__(self):
"
21176,"def save(self,* args,** kwargs):
"
21177,"def __unicode__(self):
"
21178,"def save(self,* args,** kwargs):
"
21179,"def validate(self):
"
21180,"def on_update(self):
"
21181,"def validate(self):
"
21182,"def extract_images(self):
"
21183,"def on_update(self):
"
21184,"def export_doc(self):
"
21185,"def on_trash(self):
"
21186,"def test_hello(self):
"
21187,"def test_open_notifications(self):
"
21188,"def test_find(self):
"
21189,"def test_not_found(self):
"
21190,"def test_list(self):
"
21191,"def test_how_many(self):
"
21192,"def __init__(self,encoding = ""utf-8""):
"
21193,"def writerow(self,row):
"
21194,"def getvalue(self):
"
21195,"def forwards(self,orm):
"
21196,"def test_get_list_unauthorzied(self):
"
21197,"def test_Create(self):
"
21198,"def test_Update(self):
"
21199,"def test_Delete(self):
"
21200,"def test_Password(self):
"
21201,"def test_Groups_retrieve(self):
"
21202,"def test_Groups_update(self):
"
21203,"def test_get_list_unauthorzied(self):
"
21204,"def test_Update(self):
"
21205,"def test_Delete(self):
"
21206,"def __init__(self,blocking = True,mntpt = MNTPT):
"
21207,"def __del__(self):
"
21208,"def __exit__(self,exc_type,value,traceback):
"
21209,"def lock_try(self):
"
21210,"def lock(self):
"
21211,"def unlock(self):
"
21212,"def forwards(self,orm):
"
21213,"def backwards(self,orm):
"
21214,"def forwards(self,orm):
"
21215,"def forwards(self,orm):
"
21216,"def backwards(self,orm):
"
21217,"def forwards(self,orm):
"
21218,"def backwards(self,orm):
"
21219,"def forwards(self,orm):
"
21220,"def backwards(self,orm):
"
21221,"def forwards(self,orm):
"
21222,"def backwards(self,orm):
"
21223,"def forwards(self,orm):
"
21224,"def backwards(self,orm):
"
21225,"def forwards(self,orm):
"
21226,"def backwards(self,orm):
"
21227,"def forwards(self,orm):
"
21228,"def forwards(self,orm):
"
21229,"def backwards(self,orm):
"
21230,"def forwards(self,orm):
"
21231,"def backwards(self,orm):
"
21232,"def forwards(self,orm):
"
21233,"def backwards(self,orm):
"
21234,"def backwards(self,orm):
"
21235,"def run(self):
"
21236,"def forwards(self,orm):
"
21237,"def backwards(self,orm):
"
21238,"def forwards(self,orm):
"
21239,"def backwards(self,orm):
"
21240,"def forwards(self,orm):
"
21241,"def create_event_keyvalue_pairs(self):
"
21242,"def get_extensionKey(self):
"
21243,"def __unicode__(self):
"
21244,"def test_as_list(self):
"
21245,"def test_as_tuple(self):
"
21246,"def __init__(self):
"
21247,"def object_deflate(self,obj,** kwargs):
"
21248,"def list_deflate(self,obj_list,** kwargs):
"
21249,"def object_inflate(self,data,instance = None,** kwargs):
"
21250,"def list_inflate(self,data_list,** kwargs):
"
21251,"def restore_object(self,objdata,** kwargs):
"
21252,"def __init__(self,on_recv,on_connect,on_not_connected):
"
21253,"def isConnected(self):
"
21254,"def connect(self):
"
21255,"def send(self,type,msg):
"
21256,"def startSendMessages(self):
"
21257,"def sendMessages(self):
"
21258,"def stopSendMessages(self):
"
21259,"def startPullMessages(self):
"
21260,"def stopPullMessages(self):
"
21261,"def pullMessages(self):
"
21262,"def parseLength(self,lenStr):
"
21263,"def disconnect(self):
"
21264,"def get_full_name(self):
"
21265,"def get_short_name(self):
"
21266,"def test_field_with_choices(self):
"
21267,"def test_date_fields(self):
"
21268,"def test_field_as_div_allows_html_in_help_text(self):
"
21269,"def test_content_type_radio_labels(self):
"
21270,"def forwards(self,orm):
"
21271,"def backwards(self,orm):
"
21272,"def forwards(self,orm):
"
21273,"def backwards(self,orm):
"
21274,"def is_published(self):
"
21275,"def __str__(self):
"
21276,"def orphan(self):
"
21277,"def published(self):
"
21278,"def commit(self,user = None,** kwargs):
"
21279,"def revert_to(self,commit,user = None,** kwargs):
"
21280,"def reset(self):
"
21281,"def commit_is_ready(self,commit):
"
21282,"def get_published_node(self,request):
"
21283,"def get_history(self):
"
21284,"def get_history_list(self):
"
21285,"def has_changes(self):
"
21286,"def delete(self):
"
21287,"def owners(self):
"
21288,"def clone(self):
"
21289,"def _commits_to_clone(self):
"
21290,"def toProtocolElement(self):
"
21291,"def getSampleName(self):
"
21292,"def __init__(self,parentContainer,localId):
"
21293,"def getCreationTime(self):
"
21294,"def getUpdatedTime(self):
"
21295,"def addCallSet(self,sampleName):
"
21296,"def getCallSets(self):
"
21297,"def getNumCallSets(self):
"
21298,"def getCallSetByName(self,name):
"
21299,"def getCallSetByIndex(self,index):
"
21300,"def getCallSet(self,id_):
"
21301,"def toProtocolElement(self):
"
21302,"def getNumVariants(self):
"
21303,"def _createGaVariant(self):
"
21304,"def _createGaVariantAnnotation(self):
"
21305,"def _createGaTranscriptEffect(self):
"
21306,"def _createGaOntologyTermSo(self):
"
21307,"def _createGaAlleleLocation(self):
"
21308,"def getVariantId(self,gaVariant):
"
21309,"def getCallSetId(self,sampleName):
"
21310,"def __init__(self,parentContainer,localId,randomSeed = 1,numCalls = 1,variantDensity = 1):
"
21311,"def getNumVariants(self):
"
21312,"def getMetadata(self):
"
21313,"def getVariant(self,compoundId):
"
21314,"def getVariants(self,referenceName,startPosition,endPosition,callSetIds = None):
"
21315,"def generateVariant(self,referenceName,position,randomNumberGenerator):
"
21316,"def __init__(self,parentContainer,localId,variantSet,randomSeed = 1):
"
21317,"def getAnalysis(self):
"
21318,"def toProtocolElement(self):
"
21319,"def getNumVariantAnnotations(self):
"
21320,"def getVariantAnnotation(self,variant,randomNumberGenerator):
"
21321,"def getVariantAnnotations(self,referenceName,start,end):
"
21322,"def generateVariantAnnotation(self,variant):
"
21323,"def getTranscriptEffectId(self,gaTranscriptEffect):
"
21324,"def getVariantAnnotationId(self,gaVariant,gaAnnotation):
"
21325,"def _addTranscriptEffectLocations(self,effect,ann):
"
21326,"def _addTranscriptEffectId(self,effect):
"
21327,"def _getRandomOntologyTerm(self,randomNumberGenerator):
"
21328,"def _addTranscriptEffectOntologyTerm(self,effect,randomNumberGenerator):
"
21329,"def _generateAnalysisResult(self,effect,ann,randomNumberGenerator):
"
21330,"def _addAnalysisResult(self,effect,ann,randomNumberGenerator):
"
21331,"def generateTranscriptEffect(self,ann,alts,randomNumberGenerator):
"
21332,"def __init__(self,parentContainer,localId,dataDir,dataRepository):
"
21333,"def _updateMetadata(self,variantFile):
"
21334,"def _checkMetadata(self,variantFile):
"
21335,"def _checkCallSetIds(self,variantFile):
"
21336,"def checkConsistency(self):
"
21337,"def getNumVariants(self):
"
21338,"def _updateCallSetIds(self,variantFile):
"
21339,"def openFile(self,filename):
"
21340,"def _addDataFile(self,filename):
"
21341,"def getVariant(self,compoundId):
"
21342,"def getVariants(self,referenceName,startPosition,endPosition,callSetIds = None):
"
21343,"def getMetadata(self):
"
21344,"def getMetadataId(self,metadata):
"
21345,"def _getMetadataFromVcf(self,varFile):
"
21346,"def isAnnotated(self,path):
"
21347,"def hasAnnField(self,path):
"
21348,"def hasConsequenceField(self,path):
"
21349,"def _getHeaderItems(self,path):
"
21350,"def __init__(self,parentContainer,localId,dataDir,backend,variantSet):
"
21351,"def getVariantAnnotations(self,referenceName,startPosition,endPosition):
"
21352,"def convertLocation(self,pos):
"
21353,"def convertLocationHgvsC(self,hgvsc):
"
21354,"def convertLocationHgvsP(self,hgvsp):
"
21355,"def addCDSLocation(self,effect,cdnaPos):
"
21356,"def addProteinLocation(self,effect,protPos):
"
21357,"def addCDNALocation(self,effect,cdnaPos):
"
21358,"def addLocations(self,effect,protPos,cdnaPos):
"
21359,"def _createCsqTranscriptEffect(self,alt,term,protPos,cdnaPos,featureId):
"
21360,"def convertSeqOntology(self,seqOntStr):
"
21361,"def convertVariantAnnotation(self,record,transcriptConverter):
"
21362,"def _convertAnnotations(self,annotations,variant,hgvsG,transcriptConverter):
"
21363,"def getVariantAnnotationId(self,gaVariant,gaAnnotation):
"
21364,"def getVariantId(self,gaVariant):
"
21365,"def getAnalysis(self):
"
21366,"def _getMetadataFromVcf(self,varFile):
"
21367,"def toProtocolElement(self):
"
21368,"def getTranscriptEffectId(self,gaTranscriptEffect):
"
21369,"def testOidc(self):
"
21370,"def testOidcBadLoginPassword(self):
"
21371,"def testOidcBadLoginKey(self):
"
21372,"def testMultipleOidcClients(self):
"
21373,"def runVariantsRequest(self,client):
"
21374,"def setUp(self):
"
21375,"def getBadIds(self):
"
21376,"def sendJsonPostRequest(self,path,data):
"
21377,"def sendSearchRequest(self,path,request,responseClass):
"
21378,"def sendObjectGetRequest(self,path,id_):
"
21379,"def sendGetObject(self,path,id_,responseClass):
"
21380,"def sendListReferenceBasesRequest(self,id_,request):
"
21381,"def verifyVariantSetsEqual(self,gaVariantSet,variantSet):
"
21382,"def verifyCallSetsEqual(self,gaCallSet,callSet):
"
21383,"def verifyReadGroupSetsEqual(self,gaReadGroupSet,readGroupSet):
"
21384,"def verifyReadGroupsEqual(self,gaReadGroup,readGroup):
"
21385,"def verifyDatasetsEqual(self,gaDataset,dataset):
"
21386,"def verifyReferenceSetsEqual(self,gaReferenceSet,referenceSet):
"
21387,"def verifyFeatureSetsEqual(self,gaFeatureSet,featureSet):
"
21388,"def verifyFeaturesEquivalent(self,f1,f2):
"
21389,"def verifyReferencesEqual(self,gaReference,reference):
"
21390,"def verifySearchMethod(self,request,path,responseClass,objects,objectVerifier):
"
21391,"def verifySearchResultsEmpty(self,request,path,responseClass):
"
21392,"def assertObjectNotFound(self,response):
"
21393,"def assertObjectNotSupported(self,response):
"
21394,"def verifySearchMethodFails(self,request,path):
"
21395,"def verifySearchMethodNotSupported(self,request,path):
"
21396,"def verifyGetMethodFails(self,path,id_):
"
21397,"def testGetDataset(self):
"
21398,"def testDatasetsSearch(self):
"
21399,"def testVariantSetsSearch(self):
"
21400,"def testCallSetsSearch(self):
"
21401,"def testReadGroupSetsSearch(self):
"
21402,"def testReferenceSetsSearch(self):
"
21403,"def testReferencesSearch(self):
"
21404,"def verifyReferenceSearchFilters(self,objectList,hasAssemblyId,path,requestFactory,responseClass,objectVerifier):
"
21405,"def testReferencesSearchFilters(self):
"
21406,"def testReferenceSetsSearchFilters(self):
"
21407,"def testGetVariantSet(self):
"
21408,"def testGetVariantAnnotationSet(self):
"
21409,"def testGetVariant(self):
"
21410,"def testGetReferenceSet(self):
"
21411,"def testGetReference(self):
"
21412,"def testGetCallSet(self):
"
21413,"def testGetReadGroup(self):
"
21414,"def testVariantsSearch(self):
"
21415,"def testVariantAnnotationSetsSearch(self):
"
21416,"def testVariantAnnotationsSearch(self):
"
21417,"def testGetFeatureSet(self):
"
21418,"def testFeatureSetsSearch(self):
"
21419,"def testGetFeature(self):
"
21420,"def testFeaturesSearch(self):
"
21421,"def testListReferenceBases(self):
"
21422,"def testListReferenceBasesErrors(self):
"
21423,"def testListReferenceBasesPaging(self):
"
21424,"def testReads(self):
"
21425,"def testUnsupportedReadOperations(self):
"
21426,"def testReadsMultipleReadGroupSets(self):
"
21427,"def __init__(self,host = None,port = None,prefix = None,sample_rate = None):
"
21428,"def __init__(self,bucket,host = None,port = None,prefix = None,sample_rate = None):
"
21429,"def __add__(self,num):
"
21430,"def __sub__(self,num):
"
21431,"def __init__(self,bucket,host = None,port = None,prefix = None,sample_rate = None):
"
21432,"def __enter__(self):
"
21433,"def __init__(self,client,client_job_description,job_config):
"
21434,"def __handle_setup(self,job_config):
"
21435,"def __parse_remote_separator(self,job_config):
"
21436,"def __initialize_referenced_tool_files(self):
"
21437,"def __initialize_referenced_arbitrary_files(self):
"
21438,"def __upload_tool_files(self):
"
21439,"def __upload_arbitrary_files(self):
"
21440,"def __upload_input_files(self):
"
21441,"def __upload_input_file(self,input_file):
"
21442,"def __upload_input_extra_files(self,input_file):
"
21443,"def __upload_working_directory_files(self):
"
21444,"def __upload_metadata_directory_files(self):
"
21445,"def __working_directory_files(self):
"
21446,"def __metadata_directory_files(self):
"
21447,"def __list_files(self,directory):
"
21448,"def __initialize_version_file_rename(self):
"
21449,"def __initialize_output_file_renames(self):
"
21450,"def __initialize_task_output_file_renames(self):
"
21451,"def __initialize_config_file_renames(self):
"
21452,"def __handle_rewrites(self):
"
21453,"def __upload_rewritten_config_files(self):
"
21454,"def get_command_line(self):
"
21455,"def __stage_input(self,file_path):
"
21456,"def __init__(self,command_line,config_files):
"
21457,"def find_pattern_references(self,pattern):
"
21458,"def rewrite_paths(self,local_path,remote_path):
"
21459,"def __rewrite_command_line(self,local_path,remote_path):
"
21460,"def __rewrite_config_files(self,local_path,remote_path):
"
21461,"def __items(self):
"
21462,"def __init__(self,client,path_helper,action_mapper,job_inputs,rewrite_paths):
"
21463,"def handle_transfer(self,path,type,name = None,contents = None):
"
21464,"def __add_remote_staging_input(self,action,name,type):
"
21465,"def __action_for_transfer(self,path,type,contents):
"
21466,"def register_rewrite(self,local_path,remote_path,type,force = False):
"
21467,"def rewrite_input_paths(self):
"
21468,"def __action(self,path,type):
"
21469,"def __init__(self,job_directory,action_executor):
"
21470,"def collect_output(self,results_collector,output_type,action,name):
"
21471,"def __init__(self,args):
"
21472,"def _run(self,logger):
"
21473,"def __parse_nmap_scan(self,logger):
"
21474,"def __take_screenshot(self,logger):
"
21475,"def __run_phantomjs(self,cmd):
"
21476,"def __init__(self,pts,polys):
"
21477,"def ppts(self):
"
21478,"def connected(self):
"
21479,"def adj(self):
"
21480,"def face_normals(self):
"
21481,"def vertex_normals(self):
"
21482,"def face_areas(self):
"
21483,"def cotangent_weights(self):
"
21484,"def laplace_operator(self):
"
21485,"def mean_curvature(self):
"
21486,"def smooth(self,scalars,factor = 1.0,iterations = 1):
"
21487,"def avg_edge_length(self):
"
21488,"def surface_gradient(self,scalars,at_verts = True):
"
21489,"def _create_biharmonic_solver(self,boundary_verts,clip_D = 0.1):
"
21490,"def _create_interp(self,verts,bhsolver = None):
"
21491,"def interp(self,verts,vals):
"
21492,"def _facenorm_cross_edge(self):
"
21493,"def approx_geodesic_distance(self,verts,m = 0.1):
"
21494,"def geodesic_distance(self,verts,m = 1.0,fem = False):
"
21495,"def _cot_edge(self):
"
21496,"def _polyconn(self):
"
21497,"def graph(self):
"
21498,"def get_graph(self):
"
21499,"def extract_chunk(self,nfaces = 100,seed = None,auxpts = None):
"
21500,"def polyhedra(self,wm):
"
21501,"def patches(self,auxpts = None,n = 1):
"
21502,"def edge_collapse(self,p1,p2,target):
"
21503,"def __init__(self):
"
21504,"def __getitem__(self,idx):
"
21505,"def points(self):
"
21506,"def __init__(self):
"
21507,"def __call__(self,quad):
"
21508,"def triangles(self):
"
21509,"def __init__(self,flat,ref,polys):
"
21510,"def areal(self):
"
21511,"def metric(self):
"
21512,"def __init__(self):
"
21513,"def Create(self,max_connections = 1):
"
21514,"def Destroy(self):
"
21515,"def ExpandNames(self):
"
21516,"def _UninterruptibleDelay(self):
"
21517,"def _TestDelay(self):
"
21518,"def Exec(self,feedback_fn):
"
21519,"def _SendNotification(self,test,arg,sockname):
"
21520,"def _Notify(self,prereq,test,arg):
"
21521,"def CheckArguments(self):
"
21522,"def ExpandNames(self):
"
21523,"def Exec(self,feedback_fn):
"
21524,"def ExpandNames(self):
"
21525,"def Exec(self,feedback_fn):
"
21526,"def Exec(self,feedback_fn):
"
21527,"def get_method(self):
"
21528,"def __init__(self):
"
21529,"def _GetVcpuThreadIds(self,instance_name):
"
21530,"def _ExecuteCpuAffinity(self,instance_name,cpu_mask,worker_cpu_mask):
"
21531,"def ListInstances(self,hvparams = None):
"
21532,"def GetInstanceInfo(self,instance_name,hvparams = None):
"
21533,"def GetAllInstancesInfo(self,hvparams = None):
"
21534,"def _GenerateKVMBlockDevicesOptions(self,up_hvp,kvm_disks,kvmhelp,devlist):
"
21535,"def _GenerateKVMRuntime(self,instance,block_devices,startup_paused,kvmhelp):
"
21536,"def _SaveKVMRuntime(self,instance,kvm_runtime):
"
21537,"def _LoadKVMRuntime(self,instance,serialized_runtime = None):
"
21538,"def _RunKVMCmd(self,name,kvm_cmd,tap_fds = None):
"
21539,"def _GetNetworkDeviceFeatures(self,up_hvp,devlist,kvmhelp):
"
21540,"def StartInstance(self,instance,block_devices,startup_paused):
"
21541,"def VerifyHotplugSupport(self,instance,action,dev_type):
"
21542,"def HotplugSupported(self,instance):
"
21543,"def _GetBusSlots(self,hvp = None,runtime = None):
"
21544,"def _VerifyHotplugCommand(self,_instance,kvm_devid,should_exist):
"
21545,"def HotDelDevice(self,instance,dev_type,device,_,seq):
"
21546,"def HotModDevice(self,instance,dev_type,device,_,seq):
"
21547,"def StopInstance(self,instance,force = False,retry = False,name = None,timeout = None):
"
21548,"def CleanupInstance(self,instance_name):
"
21549,"def RebootInstance(self,instance):
"
21550,"def MigrationInfo(self,instance):
"
21551,"def AcceptInstance(self,instance,info,target):
"
21552,"def MigrateInstance(self,cluster_name,instance,target,live):
"
21553,"def FinalizeMigrationSource(self,instance,success,live):
"
21554,"def GetMigrationStatus(self,instance):
"
21555,"def BalloonInstanceMemory(self,instance,mem):
"
21556,"def GetNodeInfo(self,hvparams = None):
"
21557,"def Verify(self,hvparams = None):
"
21558,"def __init__(self,cfg_location = None,_lockfile = pathutils.SSCONF_LOCK_FILE):
"
21559,"def KeyToFilename(self,key):
"
21560,"def ReadAll(self):
"
21561,"def GetFileList(self):
"
21562,"def GetClusterName(self):
"
21563,"def GetFileStorageDir(self):
"
21564,"def GetSharedFileStorageDir(self):
"
21565,"def GetGlusterStorageDir(self):
"
21566,"def GetMasterCandidates(self):
"
21567,"def GetMasterCandidatesIPList(self):
"
21568,"def GetMasterCandidatesCertMap(self):
"
21569,"def GetSshPortMap(self):
"
21570,"def GetMasterIP(self):
"
21571,"def GetMasterNetdev(self):
"
21572,"def GetMasterNetmask(self):
"
21573,"def GetMasterNode(self):
"
21574,"def GetNodeList(self):
"
21575,"def GetOnlineNodeList(self):
"
21576,"def GetNodePrimaryIPList(self):
"
21577,"def GetNodeSecondaryIPList(self):
"
21578,"def GetNodegroupList(self):
"
21579,"def GetNetworkList(self):
"
21580,"def GetClusterTags(self):
"
21581,"def GetHypervisorList(self):
"
21582,"def GetHvparamsForHypervisor(self,hvname):
"
21583,"def GetHvparams(self):
"
21584,"def GetMaintainNodeHealth(self):
"
21585,"def GetUidPool(self):
"
21586,"def GetEnabledUserShutdown(self):
"
21587,"def __init__(self):
"
21588,"def __call__(self,fh):
"
21589,"def __init__(self):
"
21590,"def __del__(self):
"
21591,"def Add(self,filename):
"
21592,"def Remove(self,filename):
"
21593,"def Cleanup(self):
"
21594,"def setUp(self):
"
21595,"def testPerformNodeInfoCall(self):
"
21596,"def testCheckVgCapacityForNode(self):
"
21597,"def testCheckVgCapacityForNodeNotEnough(self):
"
21598,"def testCheckVgCapacityForNodeNoStorageData(self):
"
21599,"def testCheckVgCapacityForNodeBogusSize(self):
"
21600,"def setUp(self):
"
21601,"def testComputeDisksInfo(self):
"
21602,"def testComputeDisksInfoPlainToDrbd(self):
"
21603,"def testComputeDisksInfoFails(self):
"
21604,"def setUp(self):
"
21605,"def MakeOpCode(self,disks,early_release = False,ignore_ipolicy = False,remote_node = False,mode = 'replace_auto',iallocator = None):
"
21606,"def testInvalidTemplate(self):
"
21607,"def SimulateDiskFailure(self,node,disk):
"
21608,"def testReplacePrimary(self):
"
21609,"def testReplaceSecondary(self):
"
21610,"def testReplaceSecondaryNew(self):
"
21611,"def __init__(self,* args,** kwargs):
"
21612,"def Reset(self):
"
21613,"def Reset(self):
"
21614,"def Reset(self):
"
21615,"def enqueue_send(self,address,port,payload):
"
21616,"def Reset(self):
"
21617,"def __call__(self,up):
"
21618,"def Reset(self):
"
21619,"def time(self):
"
21620,"def increase(self,delta):
"
21621,"def setUp(self):
"
21622,"def testRequest(self):
"
21623,"def testClientSend(self):
"
21624,"def testClientExpire(self):
"
21625,"def testClientCascadeExpire(self):
"
21626,"def testUpdatePeerList(self):
"
21627,"def testSetPeersFamily(self):
"
21628,"def setUp(self):
"
21629,"def setUp(self):
"
21630,"def setUp(self):
"
21631,"def tearDown(self):
"
21632,"def testFileDoesNotExistError(self):
"
21633,"def testWrongInputFileExtensionError(self):
"
21634,"def testOVAUnpackingDirectories(self):
"
21635,"def testOVFUnpackingDirectories(self):
"
21636,"def testOVFSetOutputDirDirectories(self):
"
21637,"def testWrongOVAArchiveError(self):
"
21638,"def testNoOVFFileInOVAPackageError(self):
"
21639,"def testParseGanetiOvf(self):
"
21640,"def testParseVirtualboxOvf(self):
"
21641,"def testParseEmptyOvf(self):
"
21642,"def testParseNameOptions(self):
"
21643,"def testParseHypervisorOptions(self):
"
21644,"def testParseOSOptions(self):
"
21645,"def testParseBackendOptions(self):
"
21646,"def testParseTags(self):
"
21647,"def testParseNicOptions(self):
"
21648,"def testParseDiskOptionsFromGanetiOVF(self):
"
21649,"def testParseTemplateOptions(self):
"
21650,"def testParseDiskOptionsFromCmdLine(self):
"
21651,"def testGetDiskFormat(self):
"
21652,"def testNoInstanceNameOVF(self):
"
21653,"def testErrorNoOSNameOVF(self):
"
21654,"def setUp(self):
"
21655,"def tearDown(self):
"
21656,"def testErrorWrongConfigFile(self):
"
21657,"def testErrorPathToTheDiskIncorrect(self):
"
21658,"def testErrorDiskImageNotExist(self):
"
21659,"def testParseNetworks(self):
"
21660,"def testErrorWrongNetworkMode(self):
"
21661,"def testParseVCPusMem(self):
"
21662,"def testErrorNoVCPUs(self):
"
21663,"def testErrorNoMemory(self):
"
21664,"def testParseGaneti(self):
"
21665,"def testErrorNoHypervisor(self):
"
21666,"def testErrorNoOS(self):
"
21667,"def testErrorParseNoInstanceName(self):
"
21668,"def setUp(self):
"
21669,"def tearDown(self):
"
21670,"def testXMLParsingError(self):
"
21671,"def testFileInResourcesDoesNotExistError(self):
"
21672,"def testWrongManifestChecksumError(self):
"
21673,"def testGoodManifestChecksum(self):
"
21674,"def testGetDisksNamesOVFCorruptedError(self):
"
21675,"def testGetDisksNamesVirtualbox(self):
"
21676,"def testGetDisksNamesEmpty(self):
"
21677,"def testGetDisksNamesCompressed(self):
"
21678,"def testGetNetworkDataGaneti(self):
"
21679,"def testGetNetworkDataVirtualbox(self):
"
21680,"def testGetNetworkDataEmpty(self):
"
21681,"def testGetHypervisorDataGaneti(self):
"
21682,"def testGetHypervisorDataEmptyOvf(self):
"
21683,"def testGetOSDataGaneti(self):
"
21684,"def testGetOSDataEmptyOvf(self):
"
21685,"def testGetBackendDataGaneti(self):
"
21686,"def testGetBackendDataVirtualbox(self):
"
21687,"def testGetBackendDataEmptyOvf(self):
"
21688,"def testGetInstanceNameGaneti(self):
"
21689,"def testGetInstanceNameDataEmptyOvf(self):
"
21690,"def testGetDiskTemplateGaneti(self):
"
21691,"def testGetDiskTemplateEmpty(self):
"
21692,"def testGetTagsGaneti(self):
"
21693,"def testGetTagsEmpty(self):
"
21694,"def testGetVersionGaneti(self):
"
21695,"def testGetVersionEmpty(self):
"
21696,"def setUp(self):
"
21697,"def tearDown(self):
"
21698,"def testOVFWriterInit(self):
"
21699,"def testSaveDisksDataEmpty(self):
"
21700,"def testSaveDisksData(self):
"
21701,"def testSaveNetworkDataEmpty(self):
"
21702,"def testSaveNetworksData(self):
"
21703,"def testSaveGanetiDataIncomplete(self):
"
21704,"def testSaveGanetiDataComplete(self):
"
21705,"def testSaveVirtualSystem(self):
"
21706,"def setUp(self):
"
21707,"def tearDown(self):
"
21708,"def testParseUidPool(self):
"
21709,"def testCheckUidPool(self):
"
21710,"def testFormatUidPool(self):
"
21711,"def testRequestUnusedUid(self):
"
21712,"def setUp(self):
"
21713,"def tearDown(self):
"
21714,"def testNoReset(self):
"
21715,"def testReset(self):
"
21716,"def _return_value(self,output,exit_code):
"
21717,"def handle(self,* args,** options):
"
21718,"def swap_buffers(self):
"
21719,"def mock_pool(self):
"
21720,"def test_no_warnings(self):
"
21721,"def get_master_password(self,error = None):
"
21722,"def clear_master_password(self):
"
21723,"def prompt(self,prompt = '',required = True,password = False):
"
21724,"def get_record(self,domain = None):
"
21725,"def edit_record(self,record):
"
21726,"def find_record(self,query,records):
"
21727,"def read_records(self,error = None):
"
21728,"def add_action(self):
"
21729,"def show_action(self,clipboard = 10):
"
21730,"def edit_transaction(self,callback):
"
21731,"def edit_action(self):
"
21732,"def delete_action(self):
"
21733,"def raw_action(self):
"
21734,"def __init__(self,** kwargs):
"
21735,"def compile(self,* args,** kwargs):
"
21736,"def __repr__(self):
"
21737,"def __call__(self,callback):
"
21738,"def default_result_processor(self,results = None,** value):
"
21739,"def __init__(self,context):
"
21740,"def process_results(self,results = None,** value):
"
21741,"def __call__(self,** kwargs):
"
21742,"def callFTU(self):
"
21743,"def __init__(self,prefix):
"
21744,"def get_generator(self):
"
21745,"def get_instances(self):
"
21746,"def __call__(self):
"
21747,"def __repr__(self):
"
21748,"def __init__(self,data = None,** kwargs):
"
21749,"def __setitem__(self,key,value):
"
21750,"def __contains__(self,key):
"
21751,"def __getattr__(self,attr):
"
21752,"def __getitem__(self,key):
"
21753,"def __delitem__(self,key):
"
21754,"def __iter__(self):
"
21755,"def __len__(self):
"
21756,"def __repr__(self):
"
21757,"def __init__(self,cash,barFeed,fee = 0.0025):
"
21758,"def getInstrumentTraits(self,instrument):
"
21759,"def submitOrder(self,order):
"
21760,"def createMarketOrder(self,action,instrument,quantity,onClose = False):
"
21761,"def createLimitOrder(self,action,instrument,limitPrice,quantity):
"
21762,"def createStopOrder(self,action,instrument,stopPrice,quantity):
"
21763,"def createStopLimitOrder(self,action,instrument,stopPrice,limitPrice,quantity):
"
21764,"def belongs(self,dateTime):
"
21765,"def getBeginning(self):
"
21766,"def getEnding(self):
"
21767,"def __init__(self,dateTime,frequency):
"
21768,"def belongs(self,dateTime):
"
21769,"def getBeginning(self):
"
21770,"def getEnding(self):
"
21771,"def __init__(self,dateTime):
"
21772,"def belongs(self,dateTime):
"
21773,"def getBeginning(self):
"
21774,"def getEnding(self):
"
21775,"def __init__(self,dateTime):
"
21776,"def belongs(self,dateTime):
"
21777,"def getBeginning(self):
"
21778,"def getEnding(self):
"
21779,"def __init__(self,groupDateTime):
"
21780,"def getDateTime(self):
"
21781,"def addValue(self,value):
"
21782,"def getGrouped(self):
"
21783,"def __init__(self,csvFile):
"
21784,"def __writeLine(self,* values):
"
21785,"def writeBar(self,bar_):
"
21786,"def close(self):
"
21787,"def __init__(self,feed,instrument):
"
21788,"def onBars(self,bars):
"
21789,"def testBacktestingLog1(self):
"
21790,"def testNonBacktestingLog3(self):
"
21791,"def testLsreg1(self):
"
21792,"def testLsreg2(self):
"
21793,"def testLsreg3(self):
"
21794,"def testStraightLine(self):
"
21795,"def __init__(self,consumers):
"
21796,"def debug(self,msg,* args,** kw):
"
21797,"def info(self,msg,* args,** kw):
"
21798,"def notify(self,msg,* args,** kw):
"
21799,"def warn(self,msg,* args,** kw):
"
21800,"def error(self,msg,* args,** kw):
"
21801,"def fatal(self,msg,* args,** kw):
"
21802,"def log(self,level,msg,* args,** kw):
"
21803,"def end_progress(self,msg = 'done.'):
"
21804,"def show_progress(self):
"
21805,"def stdout_level_matches(self,level):
"
21806,"def _stdout_level(self):
"
21807,"def level_matches(self,level,consumer_level):
"
21808,"def expand_default(self,option):
"
21809,"def __init__(self,* args,** kwargs):
"
21810,"def get_config_files(self):
"
21811,"def update_defaults(self,defaults):
"
21812,"def get_config_section(self,name):
"
21813,"def get_environ_vars(self,prefix = 'VIRTUALENV_'):
"
21814,"def get_default_values(self):
"
21815,"def __init__(self,name,key):
"
21816,"def update(self,data):
"
21817,"def digest(self):
"
21818,"def __del__(self):
"
21819,"def emit(self,record):
"
21820,"def __unicode__(self):
"
21821,"def __init__(self,ddict = ''):
"
21822,"def serialize(self):
"
21823,"def name(self):
"
21824,"def name(self,value):
"
21825,"def fname(self):
"
21826,"def fname(self,value):
"
21827,"def alt_keys(self):
"
21828,"def pretty(self):
"
21829,"def pretty_min(self):
"
21830,"def _pretty_base(self,keylist):
"
21831,"def _line_helper(self,line):
"
21832,"def vcf(self):
"
21833,"def send(self,data):
"
21834,"def recv(self,size = 2 ** 16):
"
21835,"def settimeout(self,timeout):
"
21836,"def isalive(self):
"
21837,"def shutdown(self):
"
21838,"def close(self):
"
21839,"def __init__(self,address = None,timeout = None):
"
21840,"def open(self):
"
21841,"def __init__(self,address = None,timeout = None):
"
21842,"def open(self):
"
21843,"def accept(self):
"
21844,"def settimeout(self):
"
21845,"def isalive(self):
"
21846,"def shutdown(self):
"
21847,"def close(self):
"
21848,"def __init__(self,db_host,db_port,db_num,db_pw):
"
21849,"def create_object(self,dbo_class,dbo_dict,update_timestamp = True):
"
21850,"def save_object(self,dbo,update_timestamp = False,autosave = False):
"
21851,"def save_raw(self,key,raw):
"
21852,"def load_raw(self,key,default = None):
"
21853,"def load_cached(self,dbo_key):
"
21854,"def load_object(self,dbo_key,key_type = None,silent = False):
"
21855,"def load_from_json(self,json_str,key_type,dbo_id):
"
21856,"def object_exists(self,obj_type,obj_id):
"
21857,"def load_object_set(self,dbo_class,set_key = None):
"
21858,"def delete_object_set(self,dbo_class,set_key = None):
"
21859,"def update_object(self,dbo,dbo_dict):
"
21860,"def delete_object(self,dbo):
"
21861,"def reload_object(self,dbo_key):
"
21862,"def evict_object(self,dbo):
"
21863,"def fetch_set_keys(self,set_key):
"
21864,"def add_set_key(self,set_key,* values):
"
21865,"def delete_set_key(self,set_key,value):
"
21866,"def set_key_exists(self,set_key,value):
"
21867,"def db_counter(self,counter_id,inc = 1):
"
21868,"def delete_key(self,key):
"
21869,"def set_index(self,index_name,key,value):
"
21870,"def get_index(self,index_name,key):
"
21871,"def get_full_index(self,index_name):
"
21872,"def delete_index(self,index_name,key):
"
21873,"def get_all_hash(self,index_name):
"
21874,"def get_hash_keys(self,hash_id):
"
21875,"def set_db_hash(self,hash_id,hash_key,value):
"
21876,"def get_db_hash(self,hash_id,hash_key):
"
21877,"def remove_db_hash(self,hash_id,hash_key):
"
21878,"def get_all_db_hash(self,hash_id):
"
21879,"def get_db_list(self,list_id,start = 0,end = - 1):
"
21880,"def add_db_list(self,list_id,value):
"
21881,"def trim_db_list(self,list_id,start,end):
"
21882,"def _update_indexes(self,dbo):
"
21883,"def _clear_old_refs(self,dbo):
"
21884,"def _set_new_refs(self,dbo,new_refs):
"
21885,"def __init__(self):
"
21886,"def baptise(self):
"
21887,"def add_skill(self,skill):
"
21888,"def _apply_skill(self,skill):
"
21889,"def remove_skill(self,skill_id):
"
21890,"def check_costs(self,costs):
"
21891,"def apply_costs(self,costs):
"
21892,"def filter_actions(self,matches):
"
21893,"def start_action(self,action,act_args):
"
21894,"def handle_parse_error(self,error,command):
"
21895,"def _finish_action(self):
"
21896,"def entity_leave_env(self,entity,exit_action):
"
21897,"def start_refresh(self):
"
21898,"def _refresh(self):
"
21899,"def weapon_type(self):
"
21900,"def attacked(self,source,attack):
"
21901,"def start_combat(self,source):
"
21902,"def check_fight(self):
"
21903,"def end_combat(self,source,victory):
"
21904,"def equip_article(self,article):
"
21905,"def remove_article(self,article):
"
21906,"def considered(self,** _):
"
21907,"def _do_equip(self,article,equip_slot):
"
21908,"def _find_slot(self,equip_slot):
"
21909,"def _slot_filled(self,equip_slot):
"
21910,"def _remove_by_slot(self,equip_slot):
"
21911,"def check_status(self):
"
21912,"def _cancel_actions(self):
"
21913,"def die(self):
"
21914,"def _death_effects(self):
"
21915,"def status_change(self):
"
21916,"def on_detach(self):
"
21917,"def display_status(self):
"
21918,"def combat_status(self):
"
21919,"def __init__(self):
"
21920,"def baptise(self):
"
21921,"def enhance_soul(self,action):
"
21922,"def diminish_soul(self,action):
"
21923,"def add_inven(self,article):
"
21924,"def remove_inven(self,article):
"
21925,"def entity_enter_env(self,* _):
"
21926,"def entity_leave_env(self,* _):
"
21927,"def parse(self,command):
"
21928,"def filter_actions(self,matches):
"
21929,"def start_action(self,action,act_args):
"
21930,"def process_action(self,action,act_args):
"
21931,"def check_follow(self,action,act_args):
"
21932,"def handle_parse_error(self,error,command):
"
21933,"def social(self,** _):
"
21934,"def follow(self,source,** _):
"
21935,"def unfollow(self):
"
21936,"def examine(self,source,** _):
"
21937,"def change_env(self,new_env,exit_action = None):
"
21938,"def leave_env(self,exit_action = None):
"
21939,"def enter_env(self,new_env,enter_action = None):
"
21940,"def broadcast(self,** kwargs):
"
21941,"def display_line(self,line,display = 'default'):
"
21942,"def output(self,response):
"
21943,"def can_see(self,target):
"
21944,"def check_inven(self,article,quantity):
"
21945,"def check_drop(self,article,quantity):
"
21946,"def die(self):
"
21947,"def on_detach(self):
"
21948,"def display_status(self):
"
21949,"def dead(self):
"
21950,"def emit(self,record):
"
21951,"def test_integer(self):
"
21952,"def test_float(self):
"
21953,"def test_string(self):
"
21954,"def test_boolean(self):
"
21955,"def open(self):
"
21956,"def _reconfigurePort(self):
"
21957,"def close(self):
"
21958,"def makeDeviceName(self,port):
"
21959,"def inWaiting(self):
"
21960,"def read(self,size = 1):
"
21961,"def write(self,data):
"
21962,"def flush(self):
"
21963,"def flushInput(self):
"
21964,"def flushOutput(self):
"
21965,"def sendBreak(self,duration = 0.25):
"
21966,"def setBreak(self,level = 1):
"
21967,"def setRTS(self,level = 1):
"
21968,"def setDTR(self,level = 1):
"
21969,"def getCTS(self):
"
21970,"def getDSR(self):
"
21971,"def getRI(self):
"
21972,"def getCD(self):
"
21973,"def drainOutput(self):
"
21974,"def nonblocking(self):
"
21975,"def fileno(self):
"
21976,"def flowControl(self,enable):
"
21977,"def read(self,size = 1):
"
21978,"def __init__(self,configuration):
"
21979,"def _get_bigquery_service(self):
"
21980,"def _get_project_id(self):
"
21981,"def _get_total_bytes_processed(self,jobs,query):
"
21982,"def _get_query_result(self,jobs,query):
"
21983,"def _get_project_id(self):
"
21984,"def _get_bigquery_service(self):
"
21985,"def default(self,o):
"
21986,"def __init__(self,f,dialect = csv.excel,encoding = ""utf-8"",** kwds):
"
21987,"def _encode_utf8(self,val):
"
21988,"def writerow(self,row):
"
21989,"def writerows(self,rows):
"
21990,"def get_options(self):
"
21991,"def check(self,app,sha,config):
"
21992,"def get_options(self):
"
21993,"def send_deploy(self,deploy,task,config,event):
"
21994,"def test_simple(self):
"
21995,"def process_response(self,request,response):
"
21996,"def process_response(self,request,response):
"
21997,"def process_request(self,request):
"
21998,"def __init__(self,message,code = 0):
"
21999,"def __unicode__(self):
"
22000,"def __init__(self,message,retry_after = 0):
"
22001,"def __init__(self):
"
22002,"def serializers(self):
"
22003,"def register(self,serializer):
"
22004,"def __init__(self,manager):
"
22005,"def close(self):
"
22006,"def transform(self,value,** kwargs):
"
22007,"def setUp(self):
"
22008,"def test_does_send(self,send,done):
"
22009,"def get_queryset(self,request,organization,member,project_list):
"
22010,"def get(self,request,organization,member):
"
22011,"def _on_results(self,request,results,stats_period):
"
22012,"def get(self,request,organization,member):
"
22013,"def get(self,request,project):
"
22014,"def post(self,request,project):
"
22015,"def to_native(self,obj):
"
22016,"def from_native(self,data):
"
22017,"def __init__(self,target,callback):
"
22018,"def __enter__(self):
"
22019,"def __exit__(self,exc_type,exc_value,traceback):
"
22020,"def patch(self):
"
22021,"def unpatch(self):
"
22022,"def get_api_context(self,is_public = False):
"
22023,"def get_path(self):
"
22024,"def get_hash(self):
"
22025,"def handle(self,** options):
"
22026,"def forwards(self,orm):
"
22027,"def backwards(self,orm):
"
22028,"def forwards(self,orm):
"
22029,"def backwards(self,orm):
"
22030,"def forwards(self,orm):
"
22031,"def backwards(self,orm):
"
22032,"def forwards(self,orm):
"
22033,"def backwards(self,orm):
"
22034,"def forwards(self,orm):
"
22035,"def backwards(self,orm):
"
22036,"def forwards(self,orm):
"
22037,"def backwards(self,orm):
"
22038,"def forwards(self,orm):
"
22039,"def backwards(self,orm):
"
22040,"def forwards(self,orm):
"
22041,"def backwards(self,orm):
"
22042,"def _set_group(self,group):
"
22043,"def _get_group(self):
"
22044,"def _set_project(self,project):
"
22045,"def _get_project(self):
"
22046,"def error(self):
"
22047,"def has_two_part_message(self):
"
22048,"def message_short(self):
"
22049,"def team(self):
"
22050,"def organization(self):
"
22051,"def version(self):
"
22052,"def ip_address(self):
"
22053,"def interfaces(self):
"
22054,"def get_tags(self,with_internal = True):
"
22055,"def get_tag(self,key):
"
22056,"def get_level_display(self):
"
22057,"def level(self):
"
22058,"def logger(self):
"
22059,"def site(self):
"
22060,"def server_name(self):
"
22061,"def culprit(self):
"
22062,"def checksum(self):
"
22063,"def __init__(self,warning_set):
"
22064,"def check(self):
"
22065,"def __init__(self,options_manager):
"
22066,"def get(self,key):
"
22067,"def get_form(self,request):
"
22068,"def handle(self,request,member_id,token):
"
22069,"def handle(self,request,organization,team,project,group_id,slug):
"
22070,"def get_form(self,request,organization):
"
22071,"def handle(self,request,organization):
"
22072,"def test_simple(self):
"
22073,"def test_simple(self):
"
22074,"def test_query(self):
"
22075,"def setUp(self):
"
22076,"def get_provider(self):
"
22077,"def test_refresh_identity_without_refresh_token(self):
"
22078,"def setUp(self):
"
22079,"def test_incr(self,mock_incr):
"
22080,"def test_timing(self,mock_timing):
"
22081,"def test_calls_process(self,process):
"
22082,"def test_basic(self):
"
22083,"def test_context(self):
"
22084,"def test_concurrent(self):
"
22085,"def setUp(self):
"
22086,"def test_teamless_admin_can_load(self):
"
22087,"def test_team_admin_can_load(self):
"
22088,"def test_member_cannot_load(self):
"
22089,"def test_owner_can_load(self):
"
22090,"def test_renders_with_context(self):
"
22091,"def test_submission(self):
"
22092,"def test_admin_can_create_team(self):
"
22093,"def setUp(self):
"
22094,"def test_renders_with_context(self):
"
22095,"def test_implicit_delete(self):
"
22096,"def test_explicit_delete(self):
"
22097,"def __init__(self):
"
22098,"def ready(self):
"
22099,"def _check_and_notify(self):
"
22100,"def rawlink(self,callback):
"
22101,"def unlink(self,callback):
"
22102,"def _notify_links(self):
"
22103,"def _wait_core(self,timeout,catch = Timeout):
"
22104,"def _wait_return_value(self,waited,wait_success):
"
22105,"def _wait(self,timeout = None):
"
22106,"def __str__(self):
"
22107,"def is_set(self):
"
22108,"def set(self):
"
22109,"def clear(self):
"
22110,"def _wait_return_value(self,waited,gotit):
"
22111,"def wait(self,timeout = None):
"
22112,"def _reset_internal_locks(self):
"
22113,"def _exception(self):
"
22114,"def value(self):
"
22115,"def exc_info(self):
"
22116,"def __str__(self):
"
22117,"def ready(self):
"
22118,"def successful(self):
"
22119,"def exception(self):
"
22120,"def set(self,value = None):
"
22121,"def set_exception(self,exception,exc_info = None):
"
22122,"def _raise_exception(self):
"
22123,"def get(self,block = True,timeout = None):
"
22124,"def get_nowait(self):
"
22125,"def _wait_return_value(self,waited,gotit):
"
22126,"def wait(self,timeout = None):
"
22127,"def __call__(self,source):
"
22128,"def result(self,timeout = None):
"
22129,"def done(self):
"
22130,"def cancel(self):
"
22131,"def cancelled(self):
"
22132,"def wait(self,timeout):
"
22133,"def wait(self,timeout):
"
22134,"def test_errno(self):
"
22135,"def wait(self,timeout):
"
22136,"def test_unregister_never_registered(self):
"
22137,"def test_poll_invalid(self):
"
22138,"def test_int(self):
"
22139,"def test_long(self):
"
22140,"def test_string(self):
"
22141,"def __init__(self):
"
22142,"def __init__(self):
"
22143,"def __init__(self,repo_dir):
"
22144,"def status(self):
"
22145,"def add(self,file_name = None,all_files = True,track = True):
"
22146,"def commit(self,message):
"
22147,"def log(self,n = 10):
"
22148,"def diff(self,mode = 'raw'):
"
22149,"def remote(self):
"
22150,"def push(self,remote = None,branch = None):
"
22151,"def run(self):
"
22152,"def on_activated_async(self,view):
"
22153,"def on_modified(self,view):
"
22154,"def on_pre_save_async(self,view):
"
22155,"def run(self,args):
"
22156,"def setUp(self):
"
22157,"def test_first_quantize(self):
"
22158,"def test_second_quantizer(self):
"
22159,"def setUp(self):
"
22160,"def test_partitionABCD_1(self):
"
22161,"def test_partitionABCD_2(self):
"
22162,"def test_partitionABCD_3(self):
"
22163,"def test_partitionABCD_4(self):
"
22164,"def test_partitionABCD_5(self):
"
22165,"def test_total(self):
"
22166,"def test_used(self):
"
22167,"def test_free(self):
"
22168,"def test_buffers(self):
"
22169,"def test_cached(self):
"
22170,"def test_shared(self):
"
22171,"def test_warnings_mocked(self):
"
22172,"def test_total(self):
"
22173,"def test_used(self):
"
22174,"def test_free(self):
"
22175,"def test_cpu_times(self):
"
22176,"def test_cpu_count_logical_w_nproc(self):
"
22177,"def test_cpu_count_logical_w_lscpu(self):
"
22178,"def test_cpu_count_physical_mocked(self):
"
22179,"def test_net_if_addrs_ips(self):
"
22180,"def test_net_if_stats(self):
"
22181,"def test_net_io_counters(self):
"
22182,"def test_net_connections_ipv6_unsupported(self,supports_ipv6,inet_ntop):
"
22183,"def test_disk_partitions_and_usage(self):
"
22184,"def test_disk_partitions_mocked(self):
"
22185,"def test_no_procfs_on_import(self,tb):
"
22186,"def test_prlimit_availability(self):
"
22187,"def test_resource_consts_kernel_v(self):
"
22188,"def test_boot_time_mocked(self):
"
22189,"def test_users_mocked(self):
"
22190,"def test_procfs_path(self):
"
22191,"def test_sector_size_mock(self):
"
22192,"def setUp(self):
"
22193,"def test_memory_maps(self):
"
22194,"def test_memory_full_info(self):
"
22195,"def test_open_files_mode(self):
"
22196,"def test_open_files_file_gone(self):
"
22197,"def test_terminal_mocked(self):
"
22198,"def test_num_ctx_switches_mocked(self):
"
22199,"def test_num_threads_mocked(self):
"
22200,"def test_ppid_mocked(self):
"
22201,"def test_uids_mocked(self):
"
22202,"def test_gids_mocked(self):
"
22203,"def test_cmdline_mocked(self):
"
22204,"def test_io_counters_mocked(self):
"
22205,"def test_readlink_path_deleted_mocked(self):
"
22206,"def test_threads_mocked(self):
"
22207,"def test_exe_mocked(self):
"
22208,"def title(self):
"
22209,"def description(self):
"
22210,"def link(self):
"
22211,"def items(self):
"
22212,"def item_pubdate(self,item):
"
22213,"def title(self,obj):
"
22214,"def description(self,obj):
"
22215,"def link(self,obj):
"
22216,"def get_object(self,bits):
"
22217,"def items(self,obj):
"
22218,"def item_pubdate(self,item):
"
22219,"def __init__(self,summary):
"
22220,"def asDict(self):
"
22221,"def responseClass(self,obj):
"
22222,"def param(self,name,description,paramType = 'query',dataType = 'string',required = True,enum = None,default = None):
"
22223,"def pagingParams(self,defaultSort,defaultSortDir = 1,defaultLimit = 50):
"
22224,"def consumes(self,value):
"
22225,"def notes(self,notes):
"
22226,"def errorResponse(self,reason = 'A parameter was invalid.',code = 400):
"
22227,"def __init__(self,templatePath = None):
"
22228,"def __init__(self):
"
22229,"def listResources(self,params):
"
22230,"def _compareRoutes(self,routeOp1,routeOp2):
"
22231,"def _compareOperations(self,op1,op2):
"
22232,"def describeResource(self,resource,params):
"
22233,"def __init__(self,description):
"
22234,"def __call__(self,fun):
"
22235,"def initialize(self):
"
22236,"def validate(self,doc):
"
22237,"def createToken(self,user = None,days = 180,scope = None):
"
22238,"def addScope(self,token,scope):
"
22239,"def getAllowedScopes(self,token):
"
22240,"def hasScope(self,token,scope):
"
22241,"def testCryptographicSecurity(self):
"
22242,"def testGetAndDeleteSession(self):
"
22243,"def test_divmod_iter_basic(self):
"
22244,"def test_basics(self):
"
22245,"def test_bad_chunk_sizes(self):
"
22246,"def test_huge_number_1(self):
"
22247,"def test_huge_number_2(self):
"
22248,"def test_huge_number_3(self):
"
22249,"def mime_type(self):
"
22250,"def _query_commit_info(self,c):
"
22251,"def test_iteration(self):
"
22252,"def test_commit_traversal(self):
"
22253,"def test_commit_iteration(self):
"
22254,"def parse(self,stream,media_type = None,parser_context = None):
"
22255,"def setUp(self):
"
22256,"def render_template(self,template,context):
"
22257,"def setUp(self):
"
22258,"def test_check_metadata(self):
"
22259,"def test_contents(self):
"
22260,"def test_more_tag(self):
"
22261,"def test_all_published_articles(self):
"
22262,"def test_open_private_and_public_article_details(self):
"
22263,"def test_preview_page(self):
"
22264,"def test_slugs(self):
"
22265,"def test_tags(self):
"
22266,"def test_access_not_published_article(self):
"
22267,"def test_context_data(self):
"
22268,"def test_radpress_get_url_tag(self):
"
22269,"def test_pygmentize(self):
"
22270,"def __init__(self,toolsPath,pipelinesPath,definedPath):
"
22271,"def checkPipeline(self,toolsPath,pipelinesPath,definedPath,pipeline):
"
22272,"def checkFileExistence(self,fileList,resourcesPath,toolsPath):
"
22273,"def getRandomString(self,pipeline):
"
22274,"def test_K4_normalized(self):
"
22275,"def test_K4(self):
"
22276,"def test_P4_normalized(self):
"
22277,"def test_P4(self):
"
22278,"def test_star(self):
"
22279,"def test_K4_normalized(self):
"
22280,"def test_K4(self):
"
22281,"def test_C4(self):
"
22282,"def test_P4(self):
"
22283,"def setUp(self):
"
22284,"def test_preorder_nodes(self):
"
22285,"def test_postorder_nodes(self):
"
22286,"def test_successor(self):
"
22287,"def test_predecessor(self):
"
22288,"def test_dfs_tree(self):
"
22289,"def test_dfs_edges(self):
"
22290,"def test_dfs_labeled_edges(self):
"
22291,"def test_dfs_labeled_disconnected_edges(self):
"
22292,"def test_dfs_tree_isolates(self):
"
22293,"def __init__(self,func,* args,** kw):
"
22294,"def __call__(self,* otherargs,** otherkw):
"
22295,"def __init__(self,f):
"
22296,"def __iter__(self):
"
22297,"def __init__(self,func = None,name = None,signature = None,defaults = None,doc = None,module = None,funcdict = None):
"
22298,"def update(self,func,** kw):
"
22299,"def smoke_test_random_graph(self):
"
22300,"def test_gnp(self):
"
22301,"def test_fast_gnp(self):
"
22302,"def test_gnm(self):
"
22303,"def test_watts_strogatz_big_k(self):
"
22304,"def test_graph(self):
"
22305,"def test_graph_attributes(self):
"
22306,"def edgelists_equal(self,e1,e2):
"
22307,"def test_simple_graphs(self):
"
22308,"def test_digraphs(self):
"
22309,"def test_graph(self):
"
22310,"def test_with_multiedges_self_loops(self):
"
22311,"def test_edgelists(self):
"
22312,"def test_directed_to_undirected(self):
"
22313,"def __init__(self):
"
22314,"def setUp(self):
"
22315,"def test_full_url(self):
"
22316,"def test_full_url_add_query(self):
"
22317,"def test_full_url_update_query(self):
"
22318,"def test_full_url_update_same_query(self):
"
22319,"def test_full_url_query(self):
"
22320,"def test_url_prefix_and_path(self):
"
22321,"def test_url_prefix_without_path(self):
"
22322,"def test_url_args_conflict(self):
"
22323,"def test_empty_kwargs(self):
"
22324,"def test_unused_path_argument(self):
"
22325,"def setUp(self):
"
22326,"def tearDown(self):
"
22327,"def mysql_client(self):
"
22328,"def test_mysqldb_app_installed(self):
"
22329,"def test_instantiate_mysqldb_using_engine_factory(self):
"
22330,"def test_connection_string(self):
"
22331,"def test_get_user(self):
"
22332,"def test_get_password(self):
"
22333,"def test_get_default_port(self):
"
22334,"def test_connection_with_database(self):
"
22335,"def setUp(self):
"
22336,"def tearDown(self):
"
22337,"def test_mysqldb_create_and_drop_database(self):
"
22338,"def setUp(self):
"
22339,"def tearDown(self):
"
22340,"def test_mysqldb_create__and_remove_credential(self):
"
22341,"def __init__(self,* args,** kwargs):
"
22342,"def has_delete_permission(self,request,obj = None):
"
22343,"def has_add_permission(self,request,obj = None):
"
22344,"def get_step_id(self,databaseregionmigration,):
"
22345,"def schedule_next_step_html(self,databaseregionmigration):
"
22346,"def schedule_rollback_html(self,databaseregionmigration):
"
22347,"def database_engine(self,databaseregionmigration):
"
22348,"def user_friendly_warning(self,databaseregionmigration):
"
22349,"def get_database_team(self,databaseregionmigration):
"
22350,"def steps_information(self,databaseregionmigration):
"
22351,"def databaseregionmigration_view(self,request,databaseregionmigration_id):
"
22352,"def __unicode__(self):
"
22353,"def do(self,workflow_dict):
"
22354,"def undo(self,workflow_dict):
"
22355,"def __unicode__(self):
"
22356,"def do(self,workflow_dict):
"
22357,"def undo(self,workflow_dict):
"
22358,"def __unicode__(self):
"
22359,"def do(self,workflow_dict):
"
22360,"def undo(self,workflow_dict):
"
22361,"def __unicode__(self):
"
22362,"def do(self,workflow_dict):
"
22363,"def undo(self,workflow_dict):
"
22364,"def __unicode__(self):
"
22365,"def do(self,workflow_dict):
"
22366,"def undo(self,workflow_dict):
"
22367,"def __init__(self,version = None,base_url = None):
"
22368,"def add(self,path,handler):
"
22369,"def get_basic_methods(self,handler):
"
22370,"def is_overridden(self,method):
"
22371,"def get_instance_methods(self,handler):
"
22372,"def introspect_methods(self,** mapping):
"
22373,"def introspect_params(self,method):
"
22374,"def __init__(self,app):
"
22375,"def update_setting(self,row,column):
"
22376,"def widget(self):
"
22377,"def font(self):
"
22378,"def icon(self):
"
22379,"def label(self):
"
22380,"def __init__(self,dc):
"
22381,"def child(self,row):
"
22382,"def __init__(self,dc,parent):
"
22383,"def child(self,row):
"
22384,"def children_count(self):
"
22385,"def font(self):
"
22386,"def __init__(self,dc,row,parent):
"
22387,"def data(self):
"
22388,"def glue_data(self):
"
22389,"def label(self):
"
22390,"def label(self,value):
"
22391,"def tooltip(self):
"
22392,"def style(self):
"
22393,"def icon(self):
"
22394,"def __init__(self,dc,parent):
"
22395,"def child(self,row):
"
22396,"def children_count(self):
"
22397,"def font(self):
"
22398,"def __init__(self,dc,row,parent):
"
22399,"def subset_group(self):
"
22400,"def glue_data(self):
"
22401,"def label(self):
"
22402,"def label(self,value):
"
22403,"def tooltip(self):
"
22404,"def style(self):
"
22405,"def children_count(self):
"
22406,"def child(self,row):
"
22407,"def icon(self):
"
22408,"def __init__(self,dc,subset_group,subset_idx,parent):
"
22409,"def subset(self):
"
22410,"def label(self):
"
22411,"def icon(self):
"
22412,"def style(self):
"
22413,"def glue_data(self):
"
22414,"def __init__(self,data_collection,parent = None):
"
22415,"def supportedDragActions(self):
"
22416,"def index(self,row,column,parent = QtCore.QModelIndex()):
"
22417,"def _get_item(self,index):
"
22418,"def _make_index(self,row,column,item):
"
22419,"def to_indices(self,items):
"
22420,"def flags(self,index = QtCore.QModelIndex()):
"
22421,"def data(self,index,role):
"
22422,"def setData(self,index,value,role = Qt.EditRole):
"
22423,"def _tooltip_data(self,index):
"
22424,"def _user_data(self,index):
"
22425,"def _display_data(self,index):
"
22426,"def _font_data(self,index):
"
22427,"def _icon_data(self,index):
"
22428,"def headerData(self,section,orientation,role = Qt.DisplayRole):
"
22429,"def data_index(self,data_number = None):
"
22430,"def subsets_index(self,subset_number = None):
"
22431,"def rowCount(self,index = QtCore.QModelIndex()):
"
22432,"def parent(self,index = None):
"
22433,"def columnCount(self,index):
"
22434,"def register_to_hub(self,hub):
"
22435,"def _on_add_data(self,message):
"
22436,"def _on_add_subset(self,message):
"
22437,"def invalidate(self):
"
22438,"def glue_data(self,indices):
"
22439,"def mimeData(self,indices):
"
22440,"def mimeTypes(self):
"
22441,"def __init__(self,parent = None):
"
22442,"def _update_viewport(self):
"
22443,"def selected_layers(self):
"
22444,"def set_selected_layers(self,layers):
"
22445,"def select_indices(self,* indices):
"
22446,"def set_data_collection(self,data_collection):
"
22447,"def edit_label(self,index):
"
22448,"def _edit(self,index):
"
22449,"def setEditorData(self,editor,index):
"
22450,"def toy_data(self):
"
22451,"def test_valid_init(self):
"
22452,"def test_valid_init_using(self):
"
22453,"def test_invalid_init_multi_from_no_using(self):
"
22454,"def test_invalid_init_scalar_from(self):
"
22455,"def test_compute_direct(self):
"
22456,"def test_compute_using(self):
"
22457,"def test_getters(self):
"
22458,"def test_str(self):
"
22459,"def test_repr(self):
"
22460,"def test_type_check(self):
"
22461,"def __init__(self,* args,** kwargs):
"
22462,"def rename_tab(self,index = None):
"
22463,"def mouseDoubleClickEvent(self,event):
"
22464,"def __init__(self,axes,release_callback = None):
"
22465,"def press(self,event):
"
22466,"def move(self,event):
"
22467,"def setup_method(self,method):
"
22468,"def teardown_method(self,method):
"
22469,"def _make_plot_widget(self,parent):
"
22470,"def callback(self,mode):
"
22471,"def assert_valid_mode_state(self,target_mode):
"
22472,"def test_callback(self):
"
22473,"def setup_method(self,method):
"
22474,"def teardown_method(self,method):
"
22475,"def assert_widget_synced(self):
"
22476,"def connect_to_hub(self):
"
22477,"def add_layer_via_hub(self):
"
22478,"def add_layer_via_method(self,index = 0):
"
22479,"def plot_data(self,layer):
"
22480,"def plot_limits(self):
"
22481,"def assert_layer_inside_limits(self,layer):
"
22482,"def is_layer_present(self,layer):
"
22483,"def is_layer_visible(self,layer):
"
22484,"def test_rescaled_on_init(self):
"
22485,"def test_hub_data_add_is_ignored(self):
"
22486,"def test_valid_add_data_via_method(self):
"
22487,"def test_add_first_data_updates_combos(self):
"
22488,"def test_flip_x(self):
"
22489,"def test_flip_y(self):
"
22490,"def test_log_x(self):
"
22491,"def test_log_y(self):
"
22492,"def test_double_add_ignored(self):
"
22493,"def test_subsets_dont_duplicate_fields(self):
"
22494,"def test_correct_title_single_data(self):
"
22495,"def test_title_updates_with_label_change(self):
"
22496,"def test_title_updates_with_second_data(self):
"
22497,"def test_second_data_add_preserves_plot_variables(self):
"
22498,"def test_set_limits(self):
"
22499,"def test_widget_props_synced_with_client(self):
"
22500,"def test_labels_sync_with_plot_limits(self):
"
22501,"def assert_component_present(self,label):
"
22502,"def test_component_change_syncs_with_combo(self):
"
22503,"def test_swap_axes(self):
"
22504,"def test_hidden(self):
"
22505,"def test_add_subset_preserves_plot_variables(self):
"
22506,"def test_title_synced_if_data_removed(self):
"
22507,"def patch_draw(self):
"
22508,"def test_xatt_redraws_once(self):
"
22509,"def test_swap_redraws_once(self):
"
22510,"def __init__(self,api_token,app_id,page_id):
"
22511,"def execute(self):
"
22512,"def setUp(self):
"
22513,"def test_empty_queue_name(self):
"
22514,"def test_invalid_queue_name(self):
"
22515,"def test_auto_delete_default(self):
"
22516,"def test_auto_delete_true(self):
"
22517,"def test_auto_delete_false(self):
"
22518,"def test_auto_delete_validation(self):
"
22519,"def test_durable_default(self):
"
22520,"def test_durable_true(self):
"
22521,"def test_durable_false(self):
"
22522,"def test_durable_validation(self):
"
22523,"def test_exclusive_default(self):
"
22524,"def test_exclusive_true(self):
"
22525,"def test_exclusive_false(self):
"
22526,"def test_exclusive_validation(self):
"
22527,"def test_expires_default(self):
"
22528,"def test_expires_named_value(self):
"
22529,"def test_expires_positional_value(self):
"
22530,"def test_expires_validation(self):
"
22531,"def test_max_length_default(self):
"
22532,"def test_max_length_named_value(self):
"
22533,"def test_max_length_positional_value(self):
"
22534,"def test_max_length_validation(self):
"
22535,"def test_message_ttl_default(self):
"
22536,"def test_message_ttl_value(self):
"
22537,"def test_message_ttl_positional_value(self):
"
22538,"def test_message_ttl_validation(self):
"
22539,"def test_dlx_default(self):
"
22540,"def test_dlx_value(self):
"
22541,"def test_dlx_str(self):
"
22542,"def test_dlx_unicode(self):
"
22543,"def test_message_dlx_validation(self):
"
22544,"def test_dlr_default(self):
"
22545,"def test_dlr_value(self):
"
22546,"def test_dlr_str(self):
"
22547,"def test_dlr_unicode(self):
"
22548,"def test_dlr_validation(self):
"
22549,"def test_stop_consuming_raises_exception(self):
"
22550,"def setUp(self):
"
22551,"def test_default_declare(self):
"
22552,"def test_default_declare_passive(self):
"
22553,"def test_queue_name(self):
"
22554,"def test_non_defaults(self):
"
22555,"def setUp(self):
"
22556,"def test_auto_delete_assign_true(self):
"
22557,"def test_auto_delete_assign_false(self):
"
22558,"def test_auto_delete_assign_raises_type_error(self):
"
22559,"def test_durable_assign_true(self):
"
22560,"def test_durable_assign_false(self):
"
22561,"def test_durable_assign_raises_type_error(self):
"
22562,"def test_exclusive_assign_true(self):
"
22563,"def test_exclusive_assign_false(self):
"
22564,"def test_exclusive_assign_raises_type_error(self):
"
22565,"def test_expires_assign_value(self):
"
22566,"def test_expires_assign_raises_type_error(self):
"
22567,"def test_max_length_assign_value(self):
"
22568,"def test_max_length_assign_raises_type_error(self):
"
22569,"def test_message_ttl_assign_value(self):
"
22570,"def test_message_ttl_assign_raises_type_error(self):
"
22571,"def test_dead_letter_exchange_assign_value(self):
"
22572,"def test_dead_letter_exchange_assign_raises_type_error(self):
"
22573,"def test_dead_letter_routing_key_assign_value(self):
"
22574,"def test_dead_letter_routing_key_assign_raises_type_error(self):
"
22575,"def test_arguments_assign_value(self):
"
22576,"def test_arguments_assign_raises_type_error(self):
"
22577,"def setUp(self):
"
22578,"def test_declare_invokes_write_frame_with_queue_declare(self,rpc):
"
22579,"def test_ha_declare_invokes_write_frame_with_queue_declare(self,rpc):
"
22580,"def test_ha_declare_list_invokes_write_frame_with_queue_declare(self,rpc):
"
22581,"def test_ha_declare_list_sets_proper_attributes(self,rpc):
"
22582,"def test_ha_declare_list_invokes_write_frame_with_queue_declare(self,rpc):
"
22583,"def test_bind_invokes_write_frame_with_queue_bind(self,rpc):
"
22584,"def test_unbind_invokes_write_frame_with_queue_declare(self,rpc):
"
22585,"def test_unbind_with_obj_invokes_write_frame_with_queue_declare(self,rpc):
"
22586,"def test_unbind_invokes_write_frame_with_queue_delete(self,rpc):
"
22587,"def test_purge_invokes_write_frame_with_queue_purge(self,rpc):
"
22588,"def __init__(self,group = None,target = None,name = None,args =(),kwargs = { }):
"
22589,"def create_application(self):
"
22590,"def create_http_server(self):
"
22591,"def http_config(self):
"
22592,"def on_sigabrt(self,signal_unused,frame_unused):
"
22593,"def on_sighup(self,signal_unused,frame_unused):
"
22594,"def run(self):
"
22595,"def settings(self):
"
22596,"def setup_logging(self):
"
22597,"def newrelic_ini_path(self):
"
22598,"def setup_newrelic(self):
"
22599,"def setup_signal_handlers(self):
"
22600,"def ssl_options(self):
"
22601,"def start_http_server(self,port,args):
"
22602,"def initialize_options(self):
"
22603,"def finalize_options(self):
"
22604,"def run(self):
"
22605,"def __init__(self,migration_context):
"
22606,"def _primary_key_constraint(self,name,table_name,cols,schema = None):
"
22607,"def _foreign_key_constraint(self,name,source,referent,local_cols,remote_cols,onupdate = None,ondelete = None,deferrable = None,source_schema = None,referent_schema = None,initially = None,match = None,** dialect_kw):
"
22608,"def _unique_constraint(self,name,source,local_cols,schema = None,** kw):
"
22609,"def _check_constraint(self,name,source,condition,schema = None,** kw):
"
22610,"def _metadata(self):
"
22611,"def _table(self,name,* columns,** kw):
"
22612,"def _column(self,name,type_,** kw):
"
22613,"def _index(self,name,tablename,columns,schema = None,** kw):
"
22614,"def _parse_table_key(self,table_key):
"
22615,"def _ensure_table_for_fk(self,metadata,fk):
"
22616,"def get_context(self):
"
22617,"def rename_table(self,old_table_name,new_table_name,schema = None):
"
22618,"def alter_column(self,table_name,column_name,nullable = None,server_default = False,new_column_name = None,type_ = None,autoincrement = None,existing_type = None,existing_server_default = False,existing_nullable = None,existing_autoincrement = None,schema = None):
"
22619,"def f(self,name):
"
22620,"def add_column(self,table_name,column,schema = None):
"
22621,"def drop_column(self,table_name,column_name,** kw):
"
22622,"def create_primary_key(self,name,table_name,cols,schema = None):
"
22623,"def create_foreign_key(self,name,source,referent,local_cols,remote_cols,onupdate = None,ondelete = None,deferrable = None,initially = None,match = None,source_schema = None,referent_schema = None,** dialect_kw):
"
22624,"def create_unique_constraint(self,name,source,local_cols,schema = None,** kw):
"
22625,"def create_check_constraint(self,name,source,condition,schema = None,** kw):
"
22626,"def create_table(self,name,* columns,** kw):
"
22627,"def drop_table(self,name,** kw):
"
22628,"def create_index(self,name,table_name,columns,schema = None,** kw):
"
22629,"def drop_index(self,name,table_name = None,schema = None):
"
22630,"def drop_constraint(self,name,table_name,type_ = None,schema = None):
"
22631,"def bulk_insert(self,table,rows,multiinsert = True):
"
22632,"def inline_literal(self,value,type_ = None):
"
22633,"def execute(self,sql,execution_options = None):
"
22634,"def get_bind(self):
"
22635,"def result_processor(self,dialect,coltype):
"
22636,"def plain_query(self):
"
22637,"def do_execute(self,cursor,statement,parameters,context = None):
"
22638,"def do_begin(self,connection):
"
22639,"def _xa_query(self,connection,query,xid):
"
22640,"def do_begin_twophase(self,connection,xid):
"
22641,"def do_prepare_twophase(self,connection,xid):
"
22642,"def do_rollback_twophase(self,connection,xid,is_prepared = True,recover = False):
"
22643,"def do_commit_twophase(self,connection,xid,is_prepared = True,recover = False):
"
22644,"def has_table(self,connection,table_name,schema = None):
"
22645,"def get_table_options(self,connection,table_name,schema = None,** kw):
"
22646,"def get_columns(self,connection,table_name,schema = None,** kw):
"
22647,"def get_view_names(self,connection,schema = None,** kw):
"
22648,"def get_table_names(self,connection,schema = None,** kw):
"
22649,"def get_schema_names(self,connection,** kw):
"
22650,"def initialize(self,connection):
"
22651,"def _show_create_table(self,connection,table,charset = None,full_name = None):
"
22652,"def is_disconnect(self,e,connection,cursor):
"
22653,"def create_connect_args(self,url):
"
22654,"def _get_server_version_info(self,connection):
"
22655,"def _extract_error_code(self,exception):
"
22656,"def _detect_charset(self,connection):
"
22657,"def _compat_fetchall(self,rp,charset = None):
"
22658,"def _compat_fetchone(self,rp,charset = None):
"
22659,"def _compat_first(self,rp,charset = None):
"
22660,"def __init__(self,func,expr = None):
"
22661,"def __get__(self,instance,owner):
"
22662,"def expression(self,expr):
"
22663,"def __init__(self,fget,fset = None,fdel = None,expr = None):
"
22664,"def __get__(self,instance,owner):
"
22665,"def __set__(self,instance,value):
"
22666,"def __delete__(self,instance):
"
22667,"def setter(self,fset):
"
22668,"def deleter(self,fdel):
"
22669,"def expression(self,expr):
"
22670,"def comparator(self,comparator):
"
22671,"def __init__(self,expression):
"
22672,"def __clause_element__(self):
"
22673,"def adapt_to_entity(self,adapt_to_entity):
"
22674,"def instrument_class(self,mapper):
"
22675,"def __init__(self,prop,parentmapper,adapt_to_entity = None,of_type = None):
"
22676,"def adapt_to_entity(self,adapt_to_entity):
"
22677,"def mapper(self):
"
22678,"def _parententity(self):
"
22679,"def _source_selectable(self):
"
22680,"def __clause_element__(self):
"
22681,"def of_type(self,cls):
"
22682,"def _criterion_exists(self,criterion = None,** kwargs):
"
22683,"def __negated_contains_or_equals(self,other):
"
22684,"def property(self):
"
22685,"def compare(self,op,value,value_is_parent = False,alias_secondary = True):
"
22686,"def _optimized_compare(self,value,value_is_parent = False,adapt_source = None,alias_secondary = True):
"
22687,"def __str__(self):
"
22688,"def merge(self,session,source_state,source_dict,dest_state,dest_dict,load,_recursive):
"
22689,"def _value_as_iterable(self,state,dict_,key,passive = attributes.PASSIVE_OFF):
"
22690,"def table(self):
"
22691,"def do_init(self):
"
22692,"def _process_dependent_arguments(self):
"
22693,"def _setup_join_conditions(self):
"
22694,"def _get_cascade(self):
"
22695,"def _set_cascade(self,cascade):
"
22696,"def _columns_are_mapped(self,* cols):
"
22697,"def _post_init(self):
"
22698,"def _use_get(self):
"
22699,"def _is_self_referential(self):
"
22700,"def _create_joins(self,source_polymorphic = False,source_selectable = None,dest_polymorphic = False,dest_selectable = None,of_type = None):
"
22701,"def __init__(self,parent_selectable,child_selectable,parent_local_selectable,child_local_selectable,primaryjoin = None,secondary = None,secondaryjoin = None,parent_equivalents = None,child_equivalents = None,consider_as_foreign_keys = None,local_remote_pairs = None,remote_side = None,self_referential = False,prop = None,support_sync = True,can_be_synced_fn = lambda * c:True):
"
22702,"def _log_joins(self):
"
22703,"def primaryjoin_minus_local(self):
"
22704,"def secondaryjoin_minus_local(self):
"
22705,"def primaryjoin_reverse_remote(self):
"
22706,"def _has_annotation(self,clause,annotation):
"
22707,"def _has_foreign_annotations(self):
"
22708,"def _has_remote_annotations(self):
"
22709,"def _annotate_fks(self):
"
22710,"def _annotate_from_fk_list(self):
"
22711,"def _annotate_present_fks(self):
"
22712,"def _refers_to_parent_table(self):
"
22713,"def _tables_overlap(self):
"
22714,"def _annotate_remote(self):
"
22715,"def _annotate_remote_secondary(self):
"
22716,"def _annotate_selfref(self,fn,remote_side_given):
"
22717,"def _annotate_remote_with_overlap(self):
"
22718,"def _annotate_remote_distinct_selectables(self):
"
22719,"def _annotate_local(self):
"
22720,"def _deannotate_pairs(self,collection):
"
22721,"def _setup_pairs(self):
"
22722,"def remote_columns(self):
"
22723,"def local_columns(self):
"
22724,"def foreign_key_columns(self):
"
22725,"def deannotated_primaryjoin(self):
"
22726,"def deannotated_secondaryjoin(self):
"
22727,"def _gather_join_annotations(self,annotation):
"
22728,"def _gather_columns_with_annotation(self,clause,* annotation):
"
22729,"def join_targets(self,source_selectable,dest_selectable,aliased,single_crit = None):
"
22730,"def create_lazy_clause(self,reverse_direction = False):
"
22731,"def __init__(self,name):
"
22732,"def __call__(self,c):
"
22733,"def _expression_adaptations(self):
"
22734,"def _adapt_expression(self,op,other_comparator):
"
22735,"def _adapt_expression(self,op,other_comparator):
"
22736,"def __init__(self,length = None,collation = None,convert_unicode = False,unicode_error = None,_warn_on_bytestring = False):
"
22737,"def literal_processor(self,dialect):
"
22738,"def bind_processor(self,dialect):
"
22739,"def result_processor(self,dialect,coltype):
"
22740,"def python_type(self):
"
22741,"def get_dbapi_type(self,dbapi):
"
22742,"def __init__(self,length = None,** kwargs):
"
22743,"def __init__(self,length = None,** kwargs):
"
22744,"def get_dbapi_type(self,dbapi):
"
22745,"def python_type(self):
"
22746,"def literal_processor(self,dialect):
"
22747,"def _expression_adaptations(self):
"
22748,"def __init__(self,precision = None,scale = None,decimal_return_scale = None,asdecimal = True):
"
22749,"def _effective_decimal_return_scale(self):
"
22750,"def get_dbapi_type(self,dbapi):
"
22751,"def literal_processor(self,dialect):
"
22752,"def python_type(self):
"
22753,"def bind_processor(self,dialect):
"
22754,"def _expression_adaptations(self):
"
22755,"def __init__(self,precision = None,asdecimal = False,decimal_return_scale = None,** kwargs):
"
22756,"def result_processor(self,dialect,coltype):
"
22757,"def _expression_adaptations(self):
"
22758,"def __init__(self,timezone = False):
"
22759,"def get_dbapi_type(self,dbapi):
"
22760,"def python_type(self):
"
22761,"def _expression_adaptations(self):
"
22762,"def get_dbapi_type(self,dbapi):
"
22763,"def python_type(self):
"
22764,"def _expression_adaptations(self):
"
22765,"def __init__(self,timezone = False):
"
22766,"def get_dbapi_type(self,dbapi):
"
22767,"def python_type(self):
"
22768,"def _expression_adaptations(self):
"
22769,"def __init__(self,length = None):
"
22770,"def literal_processor(self,dialect):
"
22771,"def python_type(self):
"
22772,"def bind_processor(self,dialect):
"
22773,"def result_processor(self,dialect,coltype):
"
22774,"def result_processor(self,dialect,coltype):
"
22775,"def coerce_compared_value(self,op,value):
"
22776,"def get_dbapi_type(self,dbapi):
"
22777,"def __init__(self,length = None):
"
22778,"def __init__(self,* arg,** kw):
"
22779,"def __init__(self,name = None,schema = None,metadata = None,inherit_schema = False,quote = None):
"
22780,"def _set_parent(self,column):
"
22781,"def _set_table(self,column,table):
"
22782,"def copy(self,** kw):
"
22783,"def adapt(self,impltype,** kw):
"
22784,"def bind(self):
"
22785,"def create(self,bind = None,checkfirst = False):
"
22786,"def drop(self,bind = None,checkfirst = False):
"
22787,"def _on_table_create(self,target,bind,** kw):
"
22788,"def _on_table_drop(self,target,bind,** kw):
"
22789,"def _on_metadata_create(self,target,bind,** kw):
"
22790,"def _on_metadata_drop(self,target,bind,** kw):
"
22791,"def __init__(self,* enums,** kw):
"
22792,"def __repr__(self):
"
22793,"def _should_create_constraint(self,compiler):
"
22794,"def _set_table(self,schema,column,table):
"
22795,"def adapt(self,impltype,** kw):
"
22796,"def __init__(self,protocol = pickle.HIGHEST_PROTOCOL,pickler = None,comparator = None):
"
22797,"def __reduce__(self):
"
22798,"def bind_processor(self,dialect):
"
22799,"def result_processor(self,dialect,coltype):
"
22800,"def compare_values(self,x,y):
"
22801,"def __init__(self,create_constraint = True,name = None):
"
22802,"def _should_create_constraint(self,compiler):
"
22803,"def _set_table(self,schema,column,table):
"
22804,"def python_type(self):
"
22805,"def literal_processor(self,dialect):
"
22806,"def bind_processor(self,dialect):
"
22807,"def result_processor(self,dialect,coltype):
"
22808,"def __init__(self,native = True,second_precision = None,day_precision = None):
"
22809,"def adapt(self,cls,** kw):
"
22810,"def python_type(self):
"
22811,"def bind_processor(self,dialect):
"
22812,"def result_processor(self,dialect,coltype):
"
22813,"def _expression_adaptations(self):
"
22814,"def _type_affinity(self):
"
22815,"def coerce_compared_value(self,op,value):
"
22816,"def get_dbapi_type(self,dbapi):
"
22817,"def literal_processor(self,dialect):
"
22818,"def _adapt_expression(self,op,other_comparator):
"
22819,"def keys(self):
"
22820,"def _fields(self):
"
22821,"def _asdict(self):
"
22822,"def _immutable(self,* arg,** kw):
"
22823,"def __init__(self,* args):
"
22824,"def __reduce__(self):
"
22825,"def union(self,d):
"
22826,"def __repr__(self):
"
22827,"def __init__(self,data):
"
22828,"def __len__(self):
"
22829,"def __iter__(self):
"
22830,"def __add__(self,other):
"
22831,"def __setitem__(self,key,object):
"
22832,"def __getitem__(self,key):
"
22833,"def __delitem__(self,key):
"
22834,"def __setattr__(self,key,object):
"
22835,"def __getstate__(self):
"
22836,"def __setstate__(self,state):
"
22837,"def __getattr__(self,key):
"
22838,"def __contains__(self,key):
"
22839,"def as_immutable(self):
"
22840,"def update(self,value):
"
22841,"def get(self,key,default = None):
"
22842,"def keys(self):
"
22843,"def values(self):
"
22844,"def items(self):
"
22845,"def has_key(self,key):
"
22846,"def clear(self):
"
22847,"def __init__(self):
"
22848,"def __init__(self,____sequence = None,** kwargs):
"
22849,"def clear(self):
"
22850,"def copy(self):
"
22851,"def __copy__(self):
"
22852,"def sort(self,* arg,** kw):
"
22853,"def update(self,____sequence = None,** kwargs):
"
22854,"def setdefault(self,key,value):
"
22855,"def __iter__(self):
"
22856,"def keys(self):
"
22857,"def values(self):
"
22858,"def items(self):
"
22859,"def itervalues(self):
"
22860,"def iterkeys(self):
"
22861,"def iteritems(self):
"
22862,"def __setitem__(self,key,object):
"
22863,"def __delitem__(self,key):
"
22864,"def pop(self,key,* default):
"
22865,"def popitem(self):
"
22866,"def __init__(self,d = None):
"
22867,"def add(self,element):
"
22868,"def remove(self,element):
"
22869,"def insert(self,pos,element):
"
22870,"def discard(self,element):
"
22871,"def clear(self):
"
22872,"def __getitem__(self,key):
"
22873,"def __iter__(self):
"
22874,"def __add__(self,other):
"
22875,"def __repr__(self):
"
22876,"def update(self,iterable):
"
22877,"def union(self,other):
"
22878,"def intersection(self,other):
"
22879,"def symmetric_difference(self,other):
"
22880,"def difference(self,other):
"
22881,"def intersection_update(self,other):
"
22882,"def symmetric_difference_update(self,other):
"
22883,"def difference_update(self,other):
"
22884,"def __init__(self,iterable = None):
"
22885,"def add(self,value):
"
22886,"def __contains__(self,value):
"
22887,"def remove(self,value):
"
22888,"def discard(self,value):
"
22889,"def pop(self):
"
22890,"def clear(self):
"
22891,"def __cmp__(self,other):
"
22892,"def __eq__(self,other):
"
22893,"def __ne__(self,other):
"
22894,"def issubset(self,iterable):
"
22895,"def __le__(self,other):
"
22896,"def __lt__(self,other):
"
22897,"def issuperset(self,iterable):
"
22898,"def __ge__(self,other):
"
22899,"def __gt__(self,other):
"
22900,"def union(self,iterable):
"
22901,"def __or__(self,other):
"
22902,"def update(self,iterable):
"
22903,"def __ior__(self,other):
"
22904,"def difference(self,iterable):
"
22905,"def __sub__(self,other):
"
22906,"def difference_update(self,iterable):
"
22907,"def __isub__(self,other):
"
22908,"def intersection(self,iterable):
"
22909,"def __and__(self,other):
"
22910,"def intersection_update(self,iterable):
"
22911,"def __iand__(self,other):
"
22912,"def symmetric_difference(self,iterable):
"
22913,"def _member_id_tuples(self):
"
22914,"def __xor__(self,other):
"
22915,"def symmetric_difference_update(self,iterable):
"
22916,"def __ixor__(self,other):
"
22917,"def copy(self):
"
22918,"def __len__(self):
"
22919,"def __iter__(self):
"
22920,"def __hash__(self):
"
22921,"def __repr__(self):
"
22922,"def __init__(self,__elements =()):
"
22923,"def append(self,item):
"
22924,"def _remove(self,ref):
"
22925,"def __len__(self):
"
22926,"def __iter__(self):
"
22927,"def __getitem__(self,index):
"
22928,"def __init__(self,iterable = None):
"
22929,"def __init__(self,creator):
"
22930,"def __missing__(self,key):
"
22931,"def __init__(self,data,via = None):
"
22932,"def append(self,item):
"
22933,"def __iter__(self):
"
22934,"def __init__(self,capacity = 100,threshold =.5):
"
22935,"def _inc_counter(self):
"
22936,"def __getitem__(self,key):
"
22937,"def values(self):
"
22938,"def setdefault(self,key,value):
"
22939,"def __setitem__(self,key,value):
"
22940,"def _manage_size(self):
"
22941,"def __init__(self,createfunc,scopefunc):
"
22942,"def __call__(self):
"
22943,"def has(self):
"
22944,"def set(self,obj):
"
22945,"def clear(self):
"
22946,"def __init__(self,createfunc):
"
22947,"def __call__(self):
"
22948,"def has(self):
"
22949,"def set(self,obj):
"
22950,"def clear(self):
"
22951,"def __init__(self):
"
22952,"def addReceivedMessage(self,fromActor,toActor,msgstr):
"
22953,"def addWakeups(self,wakeupdict):
"
22954,"def __init__(self,address,conventionLeader = None,capabilities = None,inShutdown = False):
"
22955,"def setSystemBase(self,newBase = 'simpleSystemBase',systemCapabilities = None,logDefs = 'BestForBase'):
"
22956,"def setUp(self):
"
22957,"def tearDown(self):
"
22958,"def __init__(self):
"
22959,"def receiveMessage(self,msg,sender):
"
22960,"def test_oneWakeup(self):
"
22961,"def test_threeWakeupsInSequence(self):
"
22962,"def test_multipleWakeupsPending(self):
"
22963,"def test_exitWithWakeupsPending(self):
"
22964,"def setUp(self):
"
22965,"def setUp(self):
"
22966,"def setUp(self):
"
22967,"def __init__(self,log,image,docker = None,from_layer = None,tag = None,tmp_dir = None,output_path = None,load_image = True,development = False):
"
22968,"def run(self):
"
22969,"def squash(self,image):
"
22970,"def __init__(self,parent = None):
"
22971,"def initUI(self):
"
22972,"def find(self):
"
22973,"def replace(self):
"
22974,"def replaceAll(self):
"
22975,"def moveCursor(self,start,end):
"
22976,"def notFound(self):
"
22977,"def continue_learning(self,model):
"
22978,"def __init__(self,high_trigger = 1.,shrink_amt =.99,low_trigger =.99,grow_amt = 1.01,min_lr = 1e-7,max_lr = 1.,dataset_name = None,channel_name = None):
"
22979,"def __init__(self,prop_decrease,initial_patience,patience_increase = 2.,channel_name = None):
"
22980,"def __call__(self,model):
"
22981,"def __init__(self,anneal_start):
"
22982,"def __call__(self,algorithm):
"
22983,"def current_learning_rate(self):
"
22984,"def __init__(self,decay_factor,min_lr):
"
22985,"def __call__(self,algorithm):
"
22986,"def __init__(self,start,saturate,decay_factor):
"
22987,"def __call__(self,algorithm):
"
22988,"def __init__(self,start,half_life = None,min_lr = 1e-6):
"
22989,"def on_monitor(self,model,dataset,algorithm):
"
22990,"def current_lr(self):
"
22991,"def __init__(self,start,saturate,decay_factor):
"
22992,"def on_monitor(self,model,dataset,algorithm):
"
22993,"def current_lr(self):
"
22994,"def __init__(self,model):
"
22995,"def __call__(self,algorithm):
"
22996,"def __init__(self,start,save_path = None,save_freq = 1):
"
22997,"def on_monitor(self,model,dataset,algorithm):
"
22998,"def test_init(self):
"
22999,"def __init__(self,name,new_extension = None,params = None,* args,** kwargs):
"
23000,"def begin(self):
"
23001,"def __init__(self,build_env,file_pairs,params,* args,** kwargs):
"
23002,"def execute(self):
"
23003,"def __init__(self,name,new_extension = None,* args,** kwargs):
"
23004,"def begin(self):
"
23005,"def __init__(self,build_env,file_pairs,* args,** kwargs):
"
23006,"def __init__(self,name,new_extension = None,defines = None,* args,** kwargs):
"
23007,"def begin(self):
"
23008,"def __init__(self,build_env,file_pairs,defines,* args,** kwargs):
"
23009,"def execute(self):
"
23010,"def _preprocess(self,source_lines,global_defines):
"
23011,"def __init__(self,discovery,language = 'cpp',language_model = None,options = None):
"
23012,"def _InnerModelClassesSupported(self):
"
23013,"def _HeaderFileName(self,path,filename):
"
23014,"def _DLifyDescription(self,text):
"
23015,"def AnnotateApiForLanguage(self,the_api):
"
23016,"def AnnotateApi(self,the_api):
"
23017,"def _AddDependencies(self,the_api,model,have,dep_list):
"
23018,"def AnnotateMethod(self,the_api,method,unused_rsrc):
"
23019,"def AnnotateParameter(self,unused_method,parameter):
"
23020,"def AnnotateProperty(self,unused_api,prop,unused_schema):
"
23021,"def AnnotateSchema(self,the_api,schema):
"
23022,"def _IsPrimitiveType(self,data_type):
"
23023,"def _HandleImports(self,element,import_manager = None):
"
23024,"def __init__(self,options = None):
"
23025,"def _BuildTypeMap(self,options = None):
"
23026,"def _Boolean(self,data_value):
"
23027,"def _Int(self,data_value):
"
23028,"def GetCodeTypeFromDictionary(self,def_dict):
"
23029,"def ArrayOf(self,unused_variable,type_name):
"
23030,"def MapOf(self,unused_variable,type_name):
"
23031,"def ToMemberName(self,s,the_api):
"
23032,"def ToSafeClassName(self,s,the_api,parent = None):
"
23033,"def DefaultContainerPathForOwner(self,module):
"
23034,"def __init__(self,discovery_doc,** unused_kwargs):
"
23035,"def TopLevelModelClasses(self):
"
23036,"def ToClassName(self,s,element,element_type = None):
"
23037,"def testDetermineGenerator(self):
"
23038,"def testSupportedLanguage(self):
"
23039,"def testVersion(self):
"
23040,"def testVersionFromFeature(self):
"
23041,"def setUp(self):
"
23042,"def testFullyQualifiedClassName(self):
"
23043,"def testModule(self):
"
23044,"def testModuleParenting(self):
"
23045,"def testModuleNaming(self):
"
23046,"def testParentPath(self):
"
23047,"def _TestRender(self,source,ctxt,expected):
"
23048,"def testSimpleUseableInTemplates(self):
"
23049,"def testUseableInTemplatesWithAttributes(self):
"
23050,"def setUp(self):
"
23051,"def testConstantNameFixer(self):
"
23052,"def __init__(self,absolute_paths = None,relative_paths = None):
"
23053,"def __init__(self):
"
23054,"def Filter(self,container,args):
"
23055,"def _Connect(self,username,password = None,ssh_keys = None,enable_password = None,ssl_cert_set = None):
"
23056,"def _Cmd(self,command,mode = None):
"
23057,"def _Disconnect(self):
"
23058,"def _DisablePager(self):
"
23059,"def __init__(self,include_only = None):
"
23060,"def _GetDataTypeItems(self,data_type_key):
"
23061,"def _FindHDDSerial(self):
"
23062,"def _FindMachineModel(self):
"
23063,"def _FindPlatformUuid(self):
"
23064,"def _FindSerialNumber(self):
"
23065,"def _FindMacAddresses(self):
"
23066,"def _FindBatteryInfo(self):
"
23067,"def _FindUSBDevices(self):
"
23068,"def _FindAll(self):
"
23069,"def GetProfile(self):
"
23070,"def __init__(self,state_tracker,error_handler):
"
23071,"def Check(self,start_token,limited_doc_checks = False,is_html = False,stop_token = None):
"
23072,"def _DependencyPass(self,token):
"
23073,"def __init__(self,name,formatter = None):
"
23074,"def EncodeCommandLine(self,parameters,bitrate,videofile,encodedfile):
"
23075,"def DecodeCommandLine(self,videofile,encodedfile,yuvfile):
"
23076,"def ResultData(self,encodedfile):
"
23077,"def VerifyEncode(self,parameters,bitrate,videofile,workdir):
"
23078,"def EncoderVersion(self):
"
23079,"def test_OneBlackFrame(self):
"
23080,"def test_ConfigurationFixups(self):
"
23081,"def test_SuggestedTweakRefersToSameContext(self):
"
23082,"def testModExp(self):
"
23083,"def testEncryptDecrypt(self):
"
23084,"def testAdd(self):
"
23085,"def testAddWraparound(self):
"
23086,"def testAffine(self):
"
23087,"def testEncryptDecryptRegression(self):
"
23088,"def testEncryptInt64DecryptInt64(self):
"
23089,"def testAddWithEncryptDecryptInt64(self):
"
23090,"def testEncryptInt64Fail(self):
"
23091,"def testFloatBasicMethods(self):
"
23092,"def testEncryptDecryptFloatInfAndNan(self):
"
23093,"def testEncryptDecryptFloatSmallNormalNumbers(self):
"
23094,"def testEncryptDecryptFloatSubNormalNumbers(self):
"
23095,"def testEncryptDecryptFloatLargeFiniteNumbers(self):
"
23096,"def testEncryptDecryptFloatAddFiniteNumbers(self):
"
23097,"def testEncryptDecryptMultipleInt64sFail(self):
"
23098,"def testTestSslRegression(self):
"
23099,"def __init__(self,arguments):
"
23100,"def _find_binary(self,binary,additional_paths = None):
"
23101,"def run_cmake(self,gen = 'Unix Makefiles'):
"
23102,"def __init__(self,http):
"
23103,"def _ProcessUserListPage(self,apps_domain,max_page,next_page_token = None):
"
23104,"def _ProcessDomainUsers(self,apps_domain,process_fn,max_results = None,max_page = 100):
"
23105,"def AddDomainUser(self,first_name,last_name,user_email,new_password):
"
23106,"def setUp(self):
"
23107,"def testCanGetBasicDomainUsersWithDefaults(self):
"
23108,"def testCanGetBasicDomainUsersWithSmallPages(self):
"
23109,"def testCanGetBasicDomainUsersWithUnknownDomain(self):
"
23110,"def testParseChecks(self):
"
23111,"def Run(self,unused_args):
"
23112,"def __init__(self,url = """",data = """",proxy = """",code = 500,duration = 0):
"
23113,"def Success(self):
"
23114,"def __init__(self,heart_beat_cb = None):
"
23115,"def _GetBaseURLs(self):
"
23116,"def _GetProxies(self):
"
23117,"def _ConcatenateURL(self,base,url):
"
23118,"def OpenServerEndpoint(self,path,verify_cb = lambda x:True,data = None,request_opts = None):
"
23119,"def OpenURL(self,url,verify_cb = lambda x:True,data = None,request_opts = None):
"
23120,"def _RetryRequest(self,request):
"
23121,"def __init__(self,heart_beat_cb = None):
"
23122,"def FastPoll(self):
"
23123,"def SlowPoll(self):
"
23124,"def RunOnce(self):
"
23125,"def __init__(self,** kwargs):
"
23126,"def __init__(self):
"
23127,"def ClientMachineIsIdle(self):
"
23128,"def __del__(self):
"
23129,"def Drain(self,max_size = 1024):
"
23130,"def SendReply(self,rdf_value = None,request_id = None,response_id = None,priority = None,session_id = ""W:0"",message_type = None,name = None,require_fastpoll = None,ttl = None,blocking = True,task_id = None):
"
23131,"def ChargeBytesToSession(self,session_id,length,limit = 0):
"
23132,"def QueueResponse(self,message,priority = rdf_flows.GrrMessage.Priority.MEDIUM_PRIORITY,blocking = True):
"
23133,"def HandleMessage(self,message):
"
23134,"def QueueMessages(self,messages):
"
23135,"def MemoryExceeded(self):
"
23136,"def InQueueSize(self):
"
23137,"def OutQueueSize(self):
"
23138,"def IsActive(self):
"
23139,"def CheckStats(self):
"
23140,"def SendNannyMessage(self):
"
23141,"def SendClientAlert(self,msg):
"
23142,"def __init__(self,maxsize = 1024,nanny = None):
"
23143,"def Put(self,item,priority = rdf_flows.GrrMessage.Priority.MEDIUM_PRIORITY,block = True,timeout = 1000):
"
23144,"def Get(self):
"
23145,"def Size(self):
"
23146,"def Full(self):
"
23147,"def __init__(self):
"
23148,"def Drain(self,max_size = 1024):
"
23149,"def QueueResponse(self,message,priority = rdf_flows.GrrMessage.Priority.MEDIUM_PRIORITY,blocking = True):
"
23150,"def QueueMessages(self,messages):
"
23151,"def InQueueSize(self):
"
23152,"def OutQueueSize(self):
"
23153,"def __del__(self):
"
23154,"def OnStartup(self):
"
23155,"def run(self):
"
23156,"def __init__(self,ca_cert = None,worker = None,private_key = None):
"
23157,"def VerifyServerPEM(self,http_object):
"
23158,"def VerifyServerControlResponse(self,http_object):
"
23159,"def MakeRequest(self,data):
"
23160,"def RunOnce(self):
"
23161,"def SendForemanRequest(self):
"
23162,"def _FetchServerCertificate(self):
"
23163,"def Run(self):
"
23164,"def InitiateEnrolment(self):
"
23165,"def _ParseRSAKey(self,rsa):
"
23166,"def _LoadOurCertificate(self):
"
23167,"def GetCSR(self):
"
23168,"def SavePrivateKey(self,pkey):
"
23169,"def LoadServerCertificate(self,server_certificate = None,ca_certificate = None):
"
23170,"def EncodeMessages(self,message_list,result,** kwargs):
"
23171,"def __init__(self,value = 0):
"
23172,"def __enter__(self):
"
23173,"def __exit__(self,exc_type = None,exc_val = None,exc_tb = None):
"
23174,"def Close(self):
"
23175,"def __del__(self):
"
23176,"def __init__(self,base_fd,pathspec = None,progress_callback = None,full_pathspec = None):
"
23177,"def Stat(self):
"
23178,"def _Stat(self,name,value,value_type):
"
23179,"def IsDirectory(self):
"
23180,"def Read(self,length):
"
23181,"def Seek(self,offset,whence = 0):
"
23182,"def __init__(self,delegate = None):
"
23183,"def StartGetFileOperation(self,args,token = None):
"
23184,"def GetFlowStatus(self,args,token = None):
"
23185,"def GetArgsClass(self):
"
23186,"def Render(self,args,token = None):
"
23187,"def Render(self,args,token = None):
"
23188,"def testNoClientActionIsDisplayed(self):
"
23189,"def testNoClientActionIsDisplayedWhenFlowIsStarted(self):
"
23190,"def testClientActionIsDisplayedWhenItReceiveByTheClient(self):
"
23191,"def RunOnce(self):
"
23192,"def testAddScan(self):
"
23193,"def testDuplicateTimestamps(self):
"
23194,"def testMultiResolve(self):
"
23195,"def testDelete(self):
"
23196,"def setUp(self):
"
23197,"def testAddGet(self):
"
23198,"def testStaticAddGet(self):
"
23199,"def testIndexCreate(self):
"
23200,"def testIndexedReads(self):
"
23201,"def testListing(self):
"
23202,"def testAutoIndexing(self):
"
23203,"def testAddGet(self):
"
23204,"def testInsertData(self,mock_http,mock_build,mock_creds):
"
23205,"def testRetryUpload(self):
"
23206,"def ProcessMessage(self,message = None,event = None):
"
23207,"def _CreateModelDatabase(self):
"
23208,"def _WaitUntilReadable(self,target_path):
"
23209,"def __init__(self,max_size,path):
"
23210,"def RecreatePathing(self,pathing = None):
"
23211,"def RootPath(self):
"
23212,"def ChangePath(self,new_path):
"
23213,"def KillObject(self,conn):
"
23214,"def Get(self,subject):
"
23215,"def GetPrefix(self,subject_prefix):
"
23216,"def DatabasesInDir(self,directory):
"
23217,"def DatabasesByPath(self,path_prefix):
"
23218,"def __init__(self,filename):
"
23219,"def Filename(self):
"
23220,"def Execute(self,* args):
"
23221,"def GetLock(self,subject):
"
23222,"def SetLock(self,subject,expires,token):
"
23223,"def RemoveLock(self,subject):
"
23224,"def GetNewestValue(self,subject,attribute):
"
23225,"def GetNewestFromPrefix(self,subject,prefix,limit = None):
"
23226,"def GetValuesFromPrefix(self,subject,prefix,start,end,limit = None):
"
23227,"def GetValues(self,subject,attribute,start,end,limit = None):
"
23228,"def ScanAttributes(self,subject_prefix,attributes,after_urn = None,max_records = None):
"
23229,"def DeleteAttribute(self,subject,attribute):
"
23230,"def SetAttribute(self,subject,attribute,value,timestamp):
"
23231,"def DeleteAttributeRange(self,subject,attribute,start,end):
"
23232,"def DeleteSubject(self,subject):
"
23233,"def __enter__(self):
"
23234,"def __exit__(self,exc_type,exc_value,traceback):
"
23235,"def Flush(self):
"
23236,"def _NeedsVacuum(self):
"
23237,"def _HasRecentVacuum(self):
"
23238,"def Vacuum(self):
"
23239,"def Close(self):
"
23240,"def __init__(self,path = None):
"
23241,"def RecreatePathing(self,pathing):
"
23242,"def _CalculateAttributeStorageTypes(self):
"
23243,"def _Encode(self,value):
"
23244,"def _Decode(self,attribute,value):
"
23245,"def MultiSet(self,subject,values,timestamp = None,replace = True,sync = True,to_delete = None,token = None):
"
23246,"def DeleteAttributes(self,subject,attributes,start = None,end = None,sync = True,token = None):
"
23247,"def DeleteSubject(self,subject,sync = False,token = None):
"
23248,"def _GetStartEndTimestamp(self,timestamp):
"
23249,"def ResolvePrefix(self,subject,attribute_prefix,timestamp = None,limit = None,token = None):
"
23250,"def _GroupSubjects(self,collection,max_records):
"
23251,"def ScanAttributes(self,subject_prefix,attributes,after_urn = None,max_records = None,token = None,relaxed_order = False):
"
23252,"def ResolveMulti(self,subject,attributes,timestamp = None,limit = None,token = None):
"
23253,"def DumpDatabase(self,token = None):
"
23254,"def Size(self):
"
23255,"def Location(self):
"
23256,"def ChangeLocation(self,location):
"
23257,"def Transaction(self,subject,lease_time = None,token = None):
"
23258,"def __init__(self,store,subject,lease_time = None,token = None):
"
23259,"def UpdateLease(self,duration):
"
23260,"def Abort(self):
"
23261,"def Commit(self):
"
23262,"def _RemoveLock(self):
"
23263,"def setUp(self):
"
23264,"def _CheckVersionStats(self,label,attribute,counts):
"
23265,"def testGRRVersionBreakDown(self):
"
23266,"def _CheckOSStats(self,label,attribute,counts):
"
23267,"def testOSBreakdown(self):
"
23268,"def testPurgeClientStats(self):
"
23269,"def _SetSummaries(self,client_id):
"
23270,"def testEndToEndTests(self):
"
23271,"def _CreateResult(self,success,clientid):
"
23272,"def testEndToEndTestsResultChecking(self):
"
23273,"def Validate(self):
"
23274,"def Start(self,unused_response):
"
23275,"def IterateFind(self,responses):
"
23276,"def Start(self):
"
23277,"def setUp(self):
"
23278,"def tearDown(self):
"
23279,"def testReceiveMessages(self):
"
23280,"def testReceiveMessagesWithStatus(self):
"
23281,"def testWellKnownFlows(self):
"
23282,"def testWellKnownFlowsRemote(self):
"
23283,"def testWellKnownFlowsNotifications(self):
"
23284,"def testDrainUpdateSessionRequestStates(self):
"
23285,"def testUpdateAndCheckIfShouldThrottle(self):
"
23286,"def testHandleMessageBundle(self):
"
23287,"def _ScheduleResponseAndStatus(self,client_id,flow_id):
"
23288,"def testHandleClientMessageRetransmission(self):
"
23289,"def __init__(self,arguments = None,value_expander = None):
"
23290,"def __str__(self):
"
23291,"def Matches(self,obj):
"
23292,"def Matches(self,obj):
"
23293,"def Matches(self,_):
"
23294,"def __init__(self,operand,** kwargs):
"
23295,"def __init__(self,arguments = None,** kwargs):
"
23296,"def Matches(self,obj):
"
23297,"def Operation(self,x,y):
"
23298,"def Operate(self,values):
"
23299,"def Operation(self,x,y):
"
23300,"def Operation(self,x,y):
"
23301,"def Operation(self,x,y):
"
23302,"def Operation(self,x,y):
"
23303,"def Operation(self,x,y):
"
23304,"def Operate(self,values):
"
23305,"def Operation(self,x,y):
"
23306,"def Operate(self,values):
"
23307,"def Operation(self,x,y):
"
23308,"def __init__(self,arguments = None,** kwargs):
"
23309,"def Matches(self,obj):
"
23310,"def _GetAttributeName(self,path):
"
23311,"def _GetValue(self,obj,attr_name):
"
23312,"def _AtLeaf(self,attr_value):
"
23313,"def _AtNonLeaf(self,attr_value,path):
"
23314,"def Expand(self,obj,path):
"
23315,"def _GetValue(self,obj,attr_name):
"
23316,"def _GetAttributeName(self,path):
"
23317,"def _GetValue(self,obj,attr_name):
"
23318,"def Compile(self,filter_implementation):
"
23319,"def __init__(self,attribute = """",part = None):
"
23320,"def __str__(self):
"
23321,"def SetExpression(self,expression):
"
23322,"def Compile(self,filter_implementation):
"
23323,"def Compile(self,filter_implemention):
"
23324,"def Compile(self,filter_implementation):
"
23325,"def InsertArg(self,string = """",** _):
"
23326,"def InsertFloatArg(self,string = """",** _):
"
23327,"def InsertIntArg(self,string = """",** _):
"
23328,"def InsertInt16Arg(self,string = """",** _):
"
23329,"def ListStart(self,** _):
"
23330,"def ListFinish(self,** _):
"
23331,"def StringFinish(self,** _):
"
23332,"def StringEscape(self,string,match,** _):
"
23333,"def HexEscape(self,string,match,** _):
"
23334,"def ContextOperator(self,string = """",** _):
"
23335,"def Reduce(self):
"
23336,"def Error(self,message = None,_ = None):
"
23337,"def _CombineBinaryExpressions(self,operator):
"
23338,"def _CombineContext(self):
"
23339,"def __init__(self):
"
23340,"def __del__(self):
"
23341,"def SendReply(self,rdf_value,message_type = rdf_flows.GrrMessage.Type.MESSAGE,** kw):
"
23342,"def Drain(self):
"
23343,"def Parse(self,stat_entries,knowledge_base,path_type):
"
23344,"def Parse(self,cmd,args,stdout,stderr,return_val,time_taken,knowledge_base):
"
23345,"def Parse(self,statentry,file_object,knowledge_base):
"
23346,"def ConfigureArgParser(self,parser):
"
23347,"def GetValuesSourceURN(self,unused_args):
"
23348,"def GetValuesForExport(self,unused_args):
"
23349,"def __init__(self,path):
"
23350,"def ReadTimeFile(self):
"
23351,"def WriteTimeFile(self,timestamp = None):
"
23352,"def GetOrCreateTimestamp(self):
"
23353,"def IsOlderThan(self,interval):
"
23354,"def __setitem__(self,key,value):
"
23355,"def __getitem__(self,key):
"
23356,"def __init__(self,request,remote_addr):
"
23357,"def get(self,argument_name,default_value = ''):
"
23358,"def get_all(self,argument_name):
"
23359,"def __init__(self,connection):
"
23360,"def write(self,value):
"
23361,"def __init__(self,connection):
"
23362,"def start_response(self,code):
"
23363,"def end_response(self):
"
23364,"def __init__(self,sock,addr,callback):
"
23365,"def handle_read(self):
"
23366,"def _CheckForNewRequest(self):
"
23367,"def ResponseComplete(self):
"
23368,"def __init__(self,host,port,callback):
"
23369,"def handle_accept(self):
"
23370,"def WaitUntilHTTPServerIsRunning(self):
"
23371,"def Loop(self):
"
23372,"def Shutdown(self):
"
23373,"def __init__(self,blame_server,connection_server):
"
23374,"def run(self,only_once = False,timeout = 5):
"
23375,"def __init__(self,service_name,user_name):
"
23376,"def locked_get(self):
"
23377,"def locked_put(self,credentials):
"
23378,"def locked_delete(self):
"
23379,"def __init__(self,filename_str,error_code):
"
23380,"def open_and_lock(self):
"
23381,"def is_locked(self):
"
23382,"def filename(self):
"
23383,"def test_key_conversions(self):
"
23384,"def tearDown(self):
"
23385,"def setUp(self):
"
23386,"def _create_test_credentials(self,client_id = 'some_client_id',expiration = None):
"
23387,"def test_lock_file_raises_ioerror(self):
"
23388,"def test_lock_file_raise_unexpected_error(self):
"
23389,"def test_read_only_file_fail_lock(self):
"
23390,"def test_read_only_file_fail_lock_no_warning(self):
"
23391,"def test_lock_skip_refresh(self):
"
23392,"def test_multistore_no_symbolic_link_files(self):
"
23393,"def test_multistore_non_existent_file(self):
"
23394,"def test_multistore_file(self):
"
23395,"def test_multistore_file_custom_key(self):
"
23396,"def test_multistore_file_custom_string_key(self):
"
23397,"def test_multistore_file_backwards_compatibility(self):
"
23398,"def test_multistore_file_get_all_keys(self):
"
23399,"def _refresh_data_cache_helper(self):
"
23400,"def test__refresh_data_cache_bad_json(self):
"
23401,"def test__refresh_data_cache_bad_version(self):
"
23402,"def test__refresh_data_cache_newer_version(self):
"
23403,"def test__refresh_data_cache_bad_credentials(self):
"
23404,"def test__delete_credential_nonexistent(self):
"
23405,"def __init__(self,filename_pattern):
"
23406,"def __call__(self,test_record):
"
23407,"def __init__(self):
"
23408,"def acquire_lock(self):
"
23409,"def release_lock(self):
"
23410,"def locked_get(self):
"
23411,"def locked_put(self,credentials):
"
23412,"def __init__(self,user,keydata,token_uri = TOKEN_URI):
"
23413,"def __call__(self,test_record):
"
23414,"def run(self):
"
23415,"def AsyncRaise(self,exc_type):
"
23416,"def _ThreadException(self,exception):
"
23417,"def __getattr__(self,_):
"
23418,"def __init__(self,injection_site_desc,binding_key,bindings):
"
23419,"def __init__(self,injection_site_desc,from_scope_id,to_scope_id,binding_key):
"
23420,"def __init__(self,configure_fn,possible_args):
"
23421,"def __init__(self,colliding_bindings):
"
23422,"def __init__(self,required_binding,colliding_bindings):
"
23423,"def __init__(self,binding_stack):
"
23424,"def __init__(self,decorator_name,fn):
"
23425,"def __init__(self,duplicated_args,injection_site_desc,provider_fn):
"
23426,"def __init__(self,decorator_name,second_decorator_loc):
"
23427,"def __init__(self,binding_spec):
"
23428,"def __init__(self,at_provides_loc):
"
23429,"def __init__(self,call_site_loc,arg_name):
"
23430,"def __init__(self,proviser_desc):
"
23431,"def __init__(self,binding_loc,binding_key,binding_target,expected_type_str):
"
23432,"def __init__(self,required_binding):
"
23433,"def __init__(self,arg_binding_key,decorator_loc):
"
23434,"def __init__(self,binding_loc,binding_key,arg_names):
"
23435,"def __init__(self,binding_loc,binding_key):
"
23436,"def __init__(self,call_site_loc,arg_name):
"
23437,"def __init__(self,decorator_loc,arg_binding_key,fn):
"
23438,"def __init__(self,binding_key,injection_site_desc):
"
23439,"def __init__(self,injection_site_fn,arg_binding_key,binding_target_desc):
"
23440,"def __init__(self,scope_id):
"
23441,"def __init__(self,decorator_name,fn,pargs_arg_name):
"
23442,"def __init__(self,decorator_loc):
"
23443,"def __init__(self,scope_id,binding_loc):
"
23444,"def __init__(self,arg_name,idx,expected_type_desc,actual_type_desc):
"
23445,"def __init__(self,arg_name,expected_type_desc,actual_type_desc):
"
23446,"def __init__(self,opcode):
"
23447,"def __init__(self,mux):
"
23448,"def _receive_message(self):
"
23449,"def request_stop(self):
"
23450,"def run(self):
"
23451,"def __init__(self,fin,rsv1,rsv2,rsv3,opcode,payload):
"
23452,"def __init__(self):
"
23453,"def __init__(self,options):
"
23454,"def _parse_inner_frame(self,data):
"
23455,"def _process_mux_control_blocks(self):
"
23456,"def _dispatch_frame(self,channel_id,payload):
"
23457,"def _process_control_message(self,opcode,message):
"
23458,"def _notify_reader_done(self):
"
23459,"def _assert_channel_slot_available(self):
"
23460,"def _assert_send_quota_available(self,channel_id):
"
23461,"def connect(self):
"
23462,"def _check_logical_channel_is_opened(self,channel_id):
"
23463,"def drop_channel(self,channel_id):
"
23464,"def send_flow_control(self,channel_id,replenished_quota):
"
23465,"def send_message(self,channel_id,message,end = True,binary = False):
"
23466,"def send_close(self,channel_id,code = None,reason = ''):
"
23467,"def send_physical_connection_close(self,code = None,reason = ''):
"
23468,"def assert_physical_connection_receive_close(self,code = client_for_testing.STATUS_NORMAL_CLOSURE,reason = ''):
"
23469,"def close_socket(self):
"
23470,"def __init__(self,msg):
"
23471,"def Set(self,flags = None,** opts):
"
23472,"def Check(self):
"
23473,"def setUp(self):
"
23474,"def test_chi_descends(self):
"
23475,"def test_upsilontonos_narrow(self):
"
23476,"def expected_unique_id(self,family,style):
"
23477,"def get(self):
"
23478,"def get(self):
"
23479,"def get(self):
"
23480,"def get(self):
"
23481,"def setUp(self):
"
23482,"def tearDown(self):
"
23483,"def MockDoUserAuth(self,user = None,is_admin = None,fail = False):
"
23484,"def MockDoOAuthAuth(self,user = None,is_admin = None,fail = False):
"
23485,"def MockDoMunkiAuth(self,fail = False,and_return = None,** kwargs):
"
23486,"def MockDoAnyAuth(self,fail = False,and_return = None):
"
23487,"def MockModelStaticBase(self,model_name,method_name,* args):
"
23488,"def MockModelStatic(self,model_name,method_name,* args):
"
23489,"def MockModelStaticNone(self,model_name,method_name,* args):
"
23490,"def MockModel(self,model_name,* args,** kwargs):
"
23491,"def _GetSettingsClassUnderTest(self):
"
23492,"def testCheckValuePemX509Cert(self):
"
23493,"def testCheckValuePemRsaPrivateKey(self):
"
23494,"def _GetSettingsClassUnderTest(self):
"
23495,"def setUp(self):
"
23496,"def testNonOverlappingPeriods(self):
"
23497,"def testOverlappingPeriods(self):
"
23498,"def testPeriodWithInvalidTripId(self):
"
23499,"def testExactTimesStringValueConversion(self):
"
23500,"def testExactTimesAsIntValue(self):
"
23501,"def testExactTimesInvalidValues(self):
"
23502,"def __init__(self,problem_reporter = None,memory_db = True,check_duplicate_trips = False,gtfs_factory = None):
"
23503,"def AddTableColumn(self,table,column):
"
23504,"def AddTableColumns(self,table,columns):
"
23505,"def GetTableColumns(self,table):
"
23506,"def __del__(self):
"
23507,"def GetStopBoundingBox(self):
"
23508,"def AddAgency(self,name,url,timezone,agency_id = None):
"
23509,"def AddAgencyObject(self,agency,problem_reporter = None,validate = False):
"
23510,"def GetAgency(self,agency_id):
"
23511,"def GetDefaultAgency(self):
"
23512,"def NewDefaultAgency(self,** kwargs):
"
23513,"def SetDefaultAgency(self,agency,validate = True):
"
23514,"def GetAgencyList(self):
"
23515,"def GetServicePeriod(self,service_id):
"
23516,"def GetDefaultServicePeriod(self):
"
23517,"def NewDefaultServicePeriod(self):
"
23518,"def SetDefaultServicePeriod(self,service_period,validate = True):
"
23519,"def AddServicePeriodObject(self,service_period,problem_reporter = None,validate = True):
"
23520,"def GetServicePeriodList(self):
"
23521,"def GetDateRangeWithOrigins(self):
"
23522,"def GetServicePeriodsActiveEachDate(self,date_start,date_end):
"
23523,"def AddStop(self,lat,lng,name,stop_id = None):
"
23524,"def AddStopObject(self,stop,problem_reporter = None):
"
23525,"def GetStopList(self):
"
23526,"def AddRoute(self,short_name,long_name,route_type,route_id = None):
"
23527,"def AddRouteObject(self,route,problem_reporter = None):
"
23528,"def GetRouteList(self):
"
23529,"def GetRoute(self,route_id):
"
23530,"def AddShapeObject(self,shape,problem_reporter = None):
"
23531,"def GetShapeList(self):
"
23532,"def GetShape(self,shape_id):
"
23533,"def AddTripObject(self,trip,problem_reporter = None,validate = False):
"
23534,"def GetTripList(self):
"
23535,"def GetTrip(self,trip_id):
"
23536,"def AddFareAttributeObject(self,fare,problem_reporter = None):
"
23537,"def GetFareAttributeList(self):
"
23538,"def GetFareAttribute(self,fare_id):
"
23539,"def AddFeedInfoObject(self,feed_info,problem_reporter = None,validate = False):
"
23540,"def AddTransferObject(self,transfer,problem_reporter = None):
"
23541,"def GetTransferIter(self):
"
23542,"def GetTransferList(self):
"
23543,"def GetStop(self,id):
"
23544,"def GetFareZones(self):
"
23545,"def GetNearestStops(self,lat,lon,n = 1):
"
23546,"def GetStopsInBoundingBox(self,north,east,south,west,n):
"
23547,"def Load(self,feed_path,extra_validation = False):
"
23548,"def WriteGoogleTransitFeed(self,file):
"
23549,"def GenerateDateTripsDeparturesList(self,date_start,date_end):
"
23550,"def ValidateAgenciesHaveSameAgencyTimezone(self,problems):
"
23551,"def ValidateFeedStartAndExpirationDates(self,problems,first_date,last_date,first_date_origin,last_date_origin,today):
"
23552,"def ValidateServiceGaps(self,problems,validation_start_date,validation_end_date,service_gap_interval):
"
23553,"def ValidateServiceExceptions(self,problems,first_service_day,last_service_day):
"
23554,"def ValidateNearbyStops(self,problems):
"
23555,"def ValidateTrips(self,problems):
"
23556,"def ValidateStopTimesForTrip(self,problems,trip,stop_times):
"
23557,"def ValidateBlocks(self,problems,trip_intervals_by_block_id):
"
23558,"def ValidateRouteAgencyId(self,problems):
"
23559,"def ValidateUnusedShapes(self,problems):
"
23560,"def Validate(self,problems = None,validate_children = True,today = None,service_gap_interval = None):
"
23561,"def __init__(self,* args,** kwargs):
"
23562,"def SetLineNumber(self,lineno):
"
23563,"def read_file(self,fp,source = None):
"
23564,"def setUp(self):
"
23565,"def testGetAPIScope_adwords(self):
"
23566,"def testGetAPIScope_badKey(self):
"
23567,"def testGetAPIScope_dfp(self):
"
23568,"def testCreateHttpHeader(self):
"
23569,"def testRefresh(self):
"
23570,"def setUp(self):
"
23571,"def testCreateHttpHeader_noRefresh(self):
"
23572,"def testCreateHttpHeader_refreshFails(self):
"
23573,"def setUp(self):
"
23574,"def testCreateHttpHeader_noRefresh(self):
"
23575,"def testCreateHttpHeader_refreshFails(self):
"
23576,"def _validate(self,value):
"
23577,"def _to_base_type(self,value):
"
23578,"def _from_base_type(self,value):
"
23579,"def unassign(self,user):
"
23580,"def unhandled_command(self,message = None):
"
23581,"def askme_command(self,message = None):
"
23582,"def text_message(self,message = None):
"
23583,"def tellme_command(self,message = None):
"
23584,"def post(self,status):
"
23585,"def jinja2(self):
"
23586,"def render_response(self,template,** context):
"
23587,"def get(self):
"
23588,"def __init__(self):
"
23589,"def __iter__(self):
"
23590,"def __call__(self,proxy):
"
23591,"def __release_local__(self):
"
23592,"def __getattr__(self,name):
"
23593,"def __setattr__(self,name,value):
"
23594,"def __delattr__(self,name):
"
23595,"def __init__(self):
"
23596,"def __release_local__(self):
"
23597,"def _get__ident_func__(self):
"
23598,"def _set__ident_func__(self,value):
"
23599,"def __call__(self):
"
23600,"def push(self,obj):
"
23601,"def pop(self):
"
23602,"def top(self):
"
23603,"def __init__(self,locals = None,ident_func = None):
"
23604,"def get_ident(self):
"
23605,"def cleanup(self):
"
23606,"def make_middleware(self,app):
"
23607,"def middleware(self,func):
"
23608,"def __repr__(self):
"
23609,"def __init__(self,local,name = None):
"
23610,"def _get_current_object(self):
"
23611,"def __dict__(self):
"
23612,"def __repr__(self):
"
23613,"def __bool__(self):
"
23614,"def __unicode__(self):
"
23615,"def __dir__(self):
"
23616,"def __getattr__(self,name):
"
23617,"def __setitem__(self,key,value):
"
23618,"def __delitem__(self,key):
"
23619,"def __setslice__(self,i,j,seq):
"
23620,"def __delslice__(self,i,j):
"
23621,"def __init__(self,bin_size = 100,filter_ref_matches = False,emit_ref_blocks = True):
"
23622,"def is_variant(self,fields):
"
23623,"def is_snp(self,fields):
"
23624,"def get_start(self,fields):
"
23625,"def get_end(self,fields):
"
23626,"def compute_start_bin(self,fields):
"
23627,"def compute_end_bin(self,fields):
"
23628,"def map(self,fields):
"
23629,"def reduce(self,pair):
"
23630,"def finalize(self):
"
23631,"def expand_binned_calls(self):
"
23632,"def expand_variant(self,variant_call):
"
23633,"def accumulate_block(self,ref_call):
"
23634,"def test_is_variant(self):
"
23635,"def test_is_snp(self):
"
23636,"def test_mapper_ref_block(self):
"
23637,"def test_mr_ref(self):
"
23638,"def test_mr(self):
"
23639,"def test_same_start(self):
"
23640,"def setUp(self):
"
23641,"def __init__(self,id = None,api_key = None,** params):
"
23642,"def __setattr__(self,k,v):
"
23643,"def request(self,method,url,params = None):
"
23644,"def __repr__(self):
"
23645,"def __str__(self):
"
23646,"def shippo_id(self):
"
23647,"def refresh(self):
"
23648,"def __init__(self,username,password,callback,log):
"
23649,"def _raise(self,code,message):
"
23650,"def handle(self):
"
23651,"def tearDown(self):
"
23652,"def setUp(self):
"
23653,"def test_fit(self):
"
23654,"def test_refit(self):
"
23655,"def test_ids_returns(self):
"
23656,"def test_score(self):
"
23657,"def test_fit_for_python_version(self):
"
23658,"def test_ids_returns_for_python_version(self):
"
23659,"def test_score_for_python_version(self):
"
23660,"def setUp(self):
"
23661,"def test_construct_features(self):
"
23662,"def test_extract_features(self):
"
23663,"def test_prepare_data(self):
"
23664,"def test_fit(self):
"
23665,"def test_predict(self):
"
23666,"def test_fit(self):
"
23667,"def test_score(self):
"
23668,"def setUp(self):
"
23669,"def test_fit(self):
"
23670,"def test_score(self):
"
23671,"def test_user_model(self):
"
23672,"def test_item_model(self):
"
23673,"def setUp(self):
"
23674,"def test_item_user_model(self):
"
23675,"def test_item_model(self):
"
23676,"def test_get_score(self):
"
23677,"def setUp(self):
"
23678,"def test_train(self):
"
23679,"def test_score(self):
"
23680,"def test_dump(self):
"
23681,"def test_fit(self):
"
23682,"def test_user_model_update(self):
"
23683,"def test_dynamic_updates(self):
"
23684,"def forwards(self,orm):
"
23685,"def backwards(self,orm):
"
23686,"def __init__(self,sentences,batch_size,sentence_max_len,randomize = False,infinite = False):
"
23687,"def __iter__(self):
"
23688,"def set_training_mode(self):
"
23689,"def set_testing_mode(self):
"
23690,"def fprop(self):
"
23691,"def __init__(self,* matrices,** kwargs):
"
23692,"def fprop(self):
"
23693,"def bprop(self):
"
23694,"def __init__(self,value):
"
23695,"def notify(self):
"
23696,"def slice_file(self,start_idx,end_idx,means,scaled):
"
23697,"def bind(self):
"
23698,"def unbind(self):
"
23699,"def draw(self):
"
23700,"def set_color_mode(self,mode,dim,start_idx,end_idx,data):
"
23701,"def heatmap(self,vec,mode = 1):
"
23702,"def __init__(self,file_object,mode,dim):
"
23703,"def main(self):
"
23704,"def read_data(self,mode,dim):
"
23705,"def reshape(self,w,h):
"
23706,"def timerEvent(self,arg):
"
23707,"def draw_points(self,num):
"
23708,"def rotate_vector(self,vec_rot,vec_about,theta):
"
23709,"def display(self):
"
23710,"def camera_reset(self):
"
23711,"def camera_move(self,ammount,axis = 1):
"
23712,"def camera_yaw(self,theta):
"
23713,"def camera_roll(self,theta):
"
23714,"def camera_pitch(self,theta):
"
23715,"def mouse(self,button,state,x,y):
"
23716,"def mouse_motion(self,x,y):
"
23717,"def keyboard(self,key,x,y):
"
23718,"def set_up_axis(self,key):
"
23719,"def __init__(self,cache = None,expire = None):
"
23720,"def __call__(self,func):
"
23721,"def process(self,metric,datapoint):
"
23722,"def setUp(self):
"
23723,"def tearDown(self):
"
23724,"def test_cache_is_a_dict(self):
"
23725,"def test_initial_size(self):
"
23726,"def test_store_new_metric(self):
"
23727,"def test_store_multiple_datapoints(self):
"
23728,"def test_store_duplicate_timestamp(self):
"
23729,"def test_store_checks_fullness(self):
"
23730,"def test_store_on_full_triggers_events(self):
"
23731,"def test_pop_multiple_datapoints(self):
"
23732,"def test_pop_reduces_size(self):
"
23733,"def test_pop_triggers_space_check(self):
"
23734,"def test_pop_triggers_space_event(self):
"
23735,"def test_pop_returns_sorted_timestamps(self):
"
23736,"def test_pop_raises_on_missing(self):
"
23737,"def test_get_datapoints(self):
"
23738,"def test_get_datapoints_doesnt_pop(self):
"
23739,"def test_get_datapoints_returns_empty_on_missing(self):
"
23740,"def test_get_datapoints_returns_sorted_timestamps(self):
"
23741,"def test_drain_metric_respects_strategy(self):
"
23742,"def test_drain_metric_works_without_strategy(self):
"
23743,"def test_is_full_short_circuits_on_inf(self):
"
23744,"def test_is_full(self):
"
23745,"def test_counts_one_datapoint(self):
"
23746,"def test_counts_two_datapoints(self):
"
23747,"def test_counts_multiple_datapoints(self):
"
23748,"def setUp(self):
"
23749,"def test_max_strategy(self):
"
23750,"def test_sorted_strategy_static_cache(self):
"
23751,"def test_sorted_strategy_changing_sizes(self):
"
23752,"def setUp(self):
"
23753,"def test_random_strategy(self):
"
23754,"def filter(self,qs,value):
"
23755,"def filter(self,qs,value):
"
23756,"def __init__(self,context):
"
23757,"def find_conflicts(self,field_map):
"
23758,"def find_conflict(self,response_name,field1,field2):
"
23759,"def leave_SelectionSet(self,node,key,parent,path,ancestors):
"
23760,"def collect_field_asts_and_defs(self,parent_type,selection_set,visited_fragment_names = None,ast_and_defs = None):
"
23761,"def test_executes_with_complex_input(self):
"
23762,"def test_uses_default_value_when_not_provided(self):
"
23763,"def test_properly_parses_single_value_to_list(self):
"
23764,"def test_executes_with_complex_scalar_input(self):
"
23765,"def test_errors_on_null_for_nested_non_null(self):
"
23766,"def test_errors_on_incorrect_type(self):
"
23767,"def test_errors_on_omission_of_nested_non_null(self):
"
23768,"def test_errors_on_addition_of_input_field_of_incorrect_type(self):
"
23769,"def test_errors_on_addition_of_unknown_input_field(self):
"
23770,"def test_when_no_argument_provided(self):
"
23771,"def test_when_nullable_variable_provided(self):
"
23772,"def test_when_argument_provided_cannot_be_parsed(self):
"
23773,"def __eq__(self,other):
"
23774,"def __ne__(self,other):
"
23775,"def get_payment_distribution(self):
"
23776,"def update(self,** kw):
"
23777,"def get_dues(self):
"
23778,"def get_upcoming_payment(self):
"
23779,"def set_review_url(self,review_url):
"
23780,"def get_og_title(self):
"
23781,"def update_receiving(self,cursor = None):
"
23782,"def status(self):
"
23783,"def to_dict(self):
"
23784,"def migrate_tips(self):
"
23785,"def get_image_url(self,size):
"
23786,"def save_image(self,original,large,small,image_type):
"
23787,"def load_image(self,size):
"
23788,"def setUp(self):
"
23789,"def hit(self,new_status,expecting_error = True,auth_as = 'admin'):
"
23790,"def test_admin_can_change_status(self):
"
23791,"def test_user_cant_change_status_except_for_applying(self):
"
23792,"def test_user_must_have_a_payout_route(self):
"
23793,"def test_invalid_is_400(self):
"
23794,"def __repr__(self):
"
23795,"def __init__(self,bus,spi_cs = 0,i2c_addr = 0x1d,spi_frequency = 4000000):
"
23796,"def getXYZ(self):
"
23797,"def setRange(self,accel_range):
"
23798,"def enableInterrupt(self,interrupt,int_pin):
"
23799,"def disableInterrupt(self,interrupt):
"
23800,"def enableTapDetection(self,threshold_g = 3,duration_ms = 20,latency_ms = 100,window_ms = 1000):
"
23801,"def setTapThreshold(self,threshold):
"
23802,"def setTapDuration(self,duration):
"
23803,"def setTapLatency(self,latency):
"
23804,"def setTapWindow(self,window):
"
23805,"def getInterrupts(self):
"
23806,"def writeReg(self,reg,val):
"
23807,"def readReg(self,reg,n_bytes = 1):
"
23808,"def get(self):
"
23809,"def post(self):
"
23810,"def get_params_and_process_message(self):
"
23811,"def get(self):
"
23812,"def test_init(self):
"
23813,"def test_add_operation(self):
"
23814,"def test_radd_operation(self):
"
23815,"def test_iadd_operation(self):
"
23816,"def test_subclassing(self):
"
23817,"def test_sub_subclassing(self):
"
23818,"def test_multiple_inheritance(self):
"
23819,"def __init__(self,client):
"
23820,"def get(self,repo,sha,user = None):
"
23821,"def create(self,repo,tag,message,object,type,tagger_name,tagger_email,tagger_date,user = None):
"
23822,"def _create(self,repo,msg,user = None):
"
23823,"def __init__(self,app,config,access_token,username = None,password = None):
"
23824,"def set_auth_type(self):
"
23825,"def auth(self):
"
23826,"def request(self,http_verb,path,data = None):
"
23827,"def head(self,path,query = None,msg_type = None):
"
23828,"def get(self,path,query = None,msg_type = None):
"
23829,"def post(self,path,query = None,data = None,msg_type = None):
"
23830,"def patch(self,path,query = None,data = None,msg_type = None):
"
23831,"def put(self,path,query = None,data = None,msg_type = None):
"
23832,"def delete(self,path,query = None,data = None,msg_type = None):
"
23833,"def msg(self,msg):
"
23834,"def message_to_json(self,* args,** kwargs):
"
23835,"def message_from_json(self,* args,** kwargs):
"
23836,"def username(self,user):
"
23837,"def user(self,user):
"
23838,"def password(self):
"
23839,"def to_dt(self,value):
"
23840,"def from_dt(self,value):
"
23841,"def get_all_permissions(self,user_obj,obj = None):
"
23842,"def has_perm(self,user_obj,perm,obj = None):
"
23843,"def has_module_perms(self,user_obj,app_label):
"
23844,"def get_user(self,user_id):
"
23845,"def wait_while(self,port_id,current_status,timeout = 60):
"
23846,"def wait_until(self,port_id,target_status,timeout = 60):
"
23847,"def _run(self):
"
23848,"def _filter_by_user_id(self,nets):
"
23849,"def _get_compute_client(self):
"
23850,"def _network_exists(self,network_id):
"
23851,"def _server_exists(self,server_id):
"
23852,"def _ip_exists(self,ip,network_id,error):
"
23853,"def main(self):
"
23854,"def _run(self):
"
23855,"def main(self):
"
23856,"def _run(self,network_id):
"
23857,"def main(self,network_id):
"
23858,"def value(self):
"
23859,"def value(self,new_value):
"
23860,"def _run(self):
"
23861,"def main(self):
"
23862,"def _run(self,network_id):
"
23863,"def main(self,network_id):
"
23864,"def _run(self,network_id):
"
23865,"def main(self,network_id):
"
23866,"def _run(self,network_id):
"
23867,"def main(self,network_id):
"
23868,"def _run(self):
"
23869,"def main(self):
"
23870,"def _run(self,subnet_id):
"
23871,"def main(self,subnet_id):
"
23872,"def value(self):
"
23873,"def value(self,new_pools):
"
23874,"def _run(self):
"
23875,"def main(self):
"
23876,"def _run(self,subnet_id):
"
23877,"def main(self,subnet_id):
"
23878,"def _run(self):
"
23879,"def main(self):
"
23880,"def _run(self,port_id):
"
23881,"def main(self,port_id):
"
23882,"def _run(self,port_id):
"
23883,"def main(self,port_id):
"
23884,"def _run(self,port_id):
"
23885,"def main(self,port_id):
"
23886,"def _subnet_exists(self,subnet_id):
"
23887,"def connect(self,network_id,device_id):
"
23888,"def _run(self):
"
23889,"def main(self):
"
23890,"def _run(self,port_id):
"
23891,"def _run(self):
"
23892,"def main(self):
"
23893,"def _run(self,ip_id):
"
23894,"def main(self,ip_id):
"
23895,"def _run(self):
"
23896,"def main(self):
"
23897,"def _run(self,ip):
"
23898,"def main(self,IP):
"
23899,"def _run(self,ip_id):
"
23900,"def main(self,ip_id):
"
23901,"def _run(self,ip_or_ip_id):
"
23902,"def main(self,ip_or_ip_id):
"
23903,"def _run(self,ip_or_ip_id):
"
23904,"def main(self,ip_or_ip_id):
"
23905,"def _run(self,network_id,server_id):
"
23906,"def main(self,network_id):
"
23907,"def _get_vm(self,server_id):
"
23908,"def _run(self,network_id,server_id):
"
23909,"def main(self,network_id):
"
23910,"def __init__(self,endpoint_url,token):
"
23911,"def list_public(self,detail = False,filters = { },order = ''):
"
23912,"def get_meta(self,image_id):
"
23913,"def register(self,name,location,params = { },properties = { }):
"
23914,"def unregister(self,image_id):
"
23915,"def list_members(self,image_id):
"
23916,"def list_shared(self,member):
"
23917,"def add_member(self,image_id,member):
"
23918,"def remove_member(self,image_id,member):
"
23919,"def set_members(self,image_id,members):
"
23920,"def update_image(self,image_id,name = None,disk_format = None,container_format = None,status = None,public = None,owner_id = None,** properties):
"
23921,"def __init__(self,bar,enabled,* args,** kwargs):
"
23922,"def run(self):
"
23923,"def setUp(self):
"
23924,"def test_eq(self):
"
23925,"def test_list_dir(self):
"
23926,"def test_read_file(self):
"
23927,"def test_write_file(self):
"
23928,"def test_list_collections(self):
"
23929,"def test_export(self):
"
23930,"def test_to_message(self):
"
23931,"def test_list_deployments(self):
"
23932,"def test_get_home_doc(self):
"
23933,"def test_get_static(self):
"
23934,"def test_list_statics(self):
"
23935,"def test_list_jinja_extensions(self):
"
23936,"def test_invalid_jinja_extension(self):
"
23937,"def test_list_preprocessors(self):
"
23938,"def test_custom_preprocessor(self):
"
23939,"def run(self,build = True):
"
23940,"def list_watched_dirs(self):
"
23941,"def __init__(self,regions):
"
23942,"def join_if_possible(self,regions,forward):
"
23943,"def set_clipboard(self):
"
23944,"def same_as(self,regions):
"
23945,"def __init__(self):
"
23946,"def add(self,regions,forward,join):
"
23947,"def get_current(self,n_regions,pop):
"
23948,"def __init__(self,view):
"
23949,"def get_key(self,index):
"
23950,"def clear(self):
"
23951,"def has_visible_mark(self):
"
23952,"def display(self):
"
23953,"def get(self):
"
23954,"def set(self,regions,reuse_index = False):
"
23955,"def exchange(self,regions):
"
23956,"def pop(self):
"
23957,"def __init__(self,view):
"
23958,"def reset(self):
"
23959,"def get_count(self,peek = False):
"
23960,"def last_was_kill_cmd(self):
"
23961,"def __init__(self,* args,** kwargs):
"
23962,"def on_close(self,view):
"
23963,"def on_modified(self,view):
"
23964,"def on_activated_async(self,view):
"
23965,"def on_query_context(self,view,key,operator,operand,match_all):
"
23966,"def on_post_save(self,view):
"
23967,"def __init__(self,* args,** kwargs):
"
23968,"def on_anything(self,view):
"
23969,"def on_window_command(self,window,cmd,args):
"
23970,"def on_text_command(self,view,cmd,args):
"
23971,"def on_post_text_command(self,view,cmd,args):
"
23972,"def on_selection_modified(self,view):
"
23973,"def on_modified(self,view):
"
23974,"def __init__(self,* args,** kwargs):
"
23975,"def on_window_command(self,window,cmd,args):
"
23976,"def __init__(self,view,state = None,edit = None):
"
23977,"def set_status(self,msg):
"
23978,"def get_point(self):
"
23979,"def reset_target_column(self):
"
23980,"def get_tab_size(self):
"
23981,"def get_mark(self):
"
23982,"def no_empty_regions(self,regions):
"
23983,"def all_empty_regions(self,regions):
"
23984,"def get_regions(self):
"
23985,"def get_encompassing_region(self):
"
23986,"def save_cursors(self,name):
"
23987,"def restore_cursors(self,name):
"
23988,"def for_each_line(self,region):
"
23989,"def set_mark(self,regions = None,update_status = True,and_selection = True):
"
23990,"def set_active_mark_mode(self):
"
23991,"def toggle_active_mark_mode(self,value = None):
"
23992,"def swap_point_and_mark(self):
"
23993,"def get_cursors(self,begin = False):
"
23994,"def count_cursors(self):
"
23995,"def get_last_cursor(self):
"
23996,"def set_cursors(self,regions,ensure_visible = True):
"
23997,"def make_cursors_empty(self):
"
23998,"def set_selection(self,regions):
"
23999,"def get_line_info(self,point):
"
24000,"def run_window_command(self,cmd,args):
"
24001,"def has_prefix_arg(self):
"
24002,"def just_one_cursor(self):
"
24003,"def get_count(self,peek = False):
"
24004,"def for_each_cursor(self,function,* args,** kwargs):
"
24005,"def goto_line(self,line):
"
24006,"def push_mark_and_goto_position(self,pos):
"
24007,"def is_visible(self,pos):
"
24008,"def ensure_visible(self,cursor,force = False):
"
24009,"def is_word_char(self,pos,forward,separators):
"
24010,"def is_one_of(self,pos,chars):
"
24011,"def to_other_end(self,point,direction):
"
24012,"def run_command(self,cmd,args,point = None):
"
24013,"def run(self,edit,** kwargs):
"
24014,"def run(self,** kwargs):
"
24015,"def run_cmd(self,util,commands,use_window = False):
"
24016,"def run_cmd(self,util,cmd,_times,** args):
"
24017,"def run_cmd(self,util,direction = 1):
"
24018,"def find_by_class_fallback(self,view,point,forward,classes,seperators):
"
24019,"def find_by_class_native(self,view,point,forward,classes,separators):
"
24020,"def run_cmd(self,util,direction = 1):
"
24021,"def run_cmd(self,util,direction = 1):
"
24022,"def run_cmd(self,util,direction = 1):
"
24023,"def run_cmd(self,util,mode):
"
24024,"def run_cmd(self,util,mode,direction = 1):
"
24025,"def run_cmd(self,util,direction = 1):
"
24026,"def run_cmd(self,util,direction = 1):
"
24027,"def run_cmd(self,util,move_cmd,** kwargs):
"
24028,"def run_cmd(self,util):
"
24029,"def run_cmd(self,util):
"
24030,"def delete_white_space(self,cursor,util,** kwargs):
"
24031,"def run_cmd(self,util,value):
"
24032,"def run_cmd(self,util,direction):
"
24033,"def rowdiff(self,start,end):
"
24034,"def run_cmd(self,util,center_only = False):
"
24035,"def cycle_center_view(self,start):
"
24036,"def run_cmd(self,util):
"
24037,"def run_cmd(self,util):
"
24038,"def run_cmd(self,util,toggle_active_mark_mode = False):
"
24039,"def run_cmd(self,util,to,always_push_mark = False):
"
24040,"def run_cmd(self,util):
"
24041,"def run_cmd(self,util,is_copy = False):
"
24042,"def run_cmd(self,util,cmd,** kwargs):
"
24043,"def grow(self,window,util,direction):
"
24044,"def split(self,window,util,stype):
"
24045,"def destroy(self,window,pane):
"
24046,"def move(self,window,** kwargs):
"
24047,"def run_cmd(self,util,pop = 0):
"
24048,"def __init__(self,search,regions,selected,current_index,forward,wrapped):
"
24049,"def get_point(self):
"
24050,"def clone(self):
"
24051,"def step(self,forward,keep):
"
24052,"def __init__(self,view,forward,regex):
"
24053,"def open(self):
"
24054,"def on_done(self,val):
"
24055,"def on_cancel(self):
"
24056,"def on_change(self,val):
"
24057,"def push(self,item):
"
24058,"def pop(self):
"
24059,"def hide_panel(self):
"
24060,"def done(self):
"
24061,"def set_text(self,text,is_pop = True):
"
24062,"def not_in_error(self):
"
24063,"def finish(self,abort = False):
"
24064,"def update(self):
"
24065,"def next(self,keep,forward = None):
"
24066,"def keep_all(self):
"
24067,"def quit(self):
"
24068,"def find_closest(self,regions,pos,forward):
"
24069,"def run_cmd(self,util,cmd = None,** kwargs):
"
24070,"def is_visible(self,** kwargs):
"
24071,"def run_cmd(self,util,next_cmd,next_args):
"
24072,"def run_cmd(self,util,indent_on_repeat = False):
"
24073,"def run_cmd(self,util):
"
24074,"def run(self,edit,begin,end):
"
24075,"def run_cmd(self,util,** args):
"
24076,"def zap(self):
"
24077,"def on_change(self,content):
"
24078,"def run_cmd(self,util):
"
24079,"def run_cmd(self,util):
"
24080,"def run(self,edit,trim_whitespace,ensure_newline):
"
24081,"def on_pre_save(self,view):
"
24082,"def scan_for_updated_files(self):
"
24083,"def forwards(self,orm):
"
24084,"def backwards(self,orm):
"
24085,"def __init__(self,code,reason):
"
24086,"def __init__(self):
"
24087,"def __repr__(self):
"
24088,"def __init__(self,io_loop,request):
"
24089,"def _on_http_response(self,response):
"
24090,"def _on_headers(self,data):
"
24091,"def __init__(self,start = None,end = None,separator = None):
"
24092,"def __str__(self):
"
24093,"def __rpr__(self):
"
24094,"def __eq__(self,other):
"
24095,"def is_empty(self):
"
24096,"def resolve_notation(self,view,token,current):
"
24097,"def resolve_mark(self,view,token):
"
24098,"def resolve_line_reference(self,view,line_reference,current = 0):
"
24099,"def resolve(self,view):
"
24100,"def __init__(self,line_range,command):
"
24101,"def __str__(self):
"
24102,"def validate(self):
"
24103,"def __init__(self,* args,** kwargs):
"
24104,"def __init__(self,* args,** kwargs):
"
24105,"def __init__(self,* args,** kwargs):
"
24106,"def __init__(self,* args,** kwargs):
"
24107,"def __init__(self,* args,** kwargs):
"
24108,"def __init__(self,content,* args,** kwargs):
"
24109,"def __str__(self):
"
24110,"def __init__(self,* args,** kwargs):
"
24111,"def __init__(self,* args,** kwargs):
"
24112,"def __init__(self,content,* args,** kwargs):
"
24113,"def __str__(self):
"
24114,"def __init__(self,content,* args,** kwargs):
"
24115,"def __str__(self):
"
24116,"def __init__(self,content,* args,** kwargs):
"
24117,"def __init__(self,content,* args,** kwargs):
"
24118,"def __str__(self):
"
24119,"def __repr__(self):
"
24120,"def exact(self):
"
24121,"def runTestsWithSkip(self,data):
"
24122,"def testNormalCases(self):
"
24123,"def testInternalNormalCases(self):
"
24124,"def testVisualMultipleCharacterCases(self):
"
24125,"def testVisualSingleCharacterCases(self):
"
24126,"def testVisualMultipleMatchesCases(self):
"
24127,"def testVisualMultipleLinesCases(self):
"
24128,"def testSkipCases(self):
"
24129,"def test_CanParseEmpty(self):
"
24130,"def test_CanParseDotAsStartLine(self):
"
24131,"def test_CanParseDotWithOffset(self):
"
24132,"def test_CanParseLoneOffset(self):
"
24133,"def test_FailsIfDotAfterOffset(self):
"
24134,"def test_CanParseMultipleOffsets(self):
"
24135,"def test_CanParseSearchForward(self):
"
24136,"def test_SearchForwardClearsPreviousReferences(self):
"
24137,"def test_SearchForwardClearsPreviousReferencesWithOffsets(self):
"
24138,"def test_CanParseSearchBackward(self):
"
24139,"def test_SearchBackwardClearsPreviousReferences(self):
"
24140,"def test_SearchBackwardClearsPreviousReferencesWithOffsets(self):
"
24141,"def test_CanParseSearchForwardWithOffset(self):
"
24142,"def test_CanParseSearchForwardWithOffsets(self):
"
24143,"def test_CanParseSearchBacwardWithOffset(self):
"
24144,"def test_CanParseSearchBacwardWithOffsets(self):
"
24145,"def test_CanParseDollarOnItsOwn(self):
"
24146,"def test_CanParseDollarWithCompany(self):
"
24147,"def test_FailsIfDollarOffset(self):
"
24148,"def test_FailsIfPrecededByAnything(self):
"
24149,"def test_CanParseLoneComma(self):
"
24150,"def test_CanParseDotComma(self):
"
24151,"def test_CanParseCommaDot(self):
"
24152,"def test_CanParseLoneSmicolon(self):
"
24153,"def test_CanParseDotSmicolon(self):
"
24154,"def test_CanParseSmicolonDot(self):
"
24155,"def test_CanParseCommaOffset(self):
"
24156,"def test_CanParseSemicolonOffset(self):
"
24157,"def test_CanParseOffsetCommaOffset(self):
"
24158,"def test_CanParseSemicolonOffset(self):
"
24159,"def test_CanParseNumber(self):
"
24160,"def test_CanParseNumberRightHandSide(self):
"
24161,"def test_FailsIfDotDigits(self):
"
24162,"def test_CanParseLongSequence(self):
"
24163,"def test_CanParseItOnItsOwn(self):
"
24164,"def test_CanParseAlias(self):
"
24165,"def test_CanParseWithSimpleRange(self):
"
24166,"def test_CanParseWithStartAndEndLines(self):
"
24167,"def test_CanParseWithSearchForward(self):
"
24168,"def test_CanParseWithSearchBackward(self):
"
24169,"def test_CanParseWithSearchBackwardAndSearchForward(self):
"
24170,"def test_CanParseWithZeroAndDollar(self):
"
24171,"def test_CanParsePercent(self):
"
24172,"def test_CanSetComma(self):
"
24173,"def test_CanSetSemicolon(self):
"
24174,"def test_CanSetCommaMultipleTimes(self):
"
24175,"def test_CanSetSemicolonMultipleTimes(self):
"
24176,"def test_CanSetMultipleTimesSemicolonLast(self):
"
24177,"def test_CanSetMultipleTimesCommaLast(self):
"
24178,"def test_CanParseItOnItsOwn(self):
"
24179,"def test_CanParseOnTwoSides(self):
"
24180,"def test_CanParseItOnItsOwn(self):
"
24181,"def test_CanParseAlias(self):
"
24182,"def test_CanParseItOnItsOwn(self):
"
24183,"def test_CanParseAlias(self):
"
24184,"def test_CanParseItOnItsOwn(self):
"
24185,"def test_CanParseAlias(self):
"
24186,"def set(self,short,full):
"
24187,"def get(self,short):
"
24188,"def get_all(self):
"
24189,"def contains(self,data,short):
"
24190,"def erase(self,short):
"
24191,"def raise_event(self,source,name,* args,** kwargs):
"
24192,"def add_event_handler(self,name,func):
"
24193,"def setUp(self):
"
24194,"def test_add_signature(self):
"
24195,"def get(self):
"
24196,"def patch(self):
"
24197,"def rotate(self,value):
"
24198,"def tilt(self,value):
"
24199,"def lean(self,value):
"
24200,"def __init__(self,testname):
"
24201,"def setUp(self):
"
24202,"def test_palette(self):
"
24203,"def test_fetch_chr_0(self):
"
24204,"def test_fetch_chr_1(self):
"
24205,"def test_acquire_chr(self):
"
24206,"def test_import_chr(self):
"
24207,"def test_export_chr(self):
"
24208,"def test_export_namespace(self):
"
24209,"def test_import_nametable(self):
"
24210,"def test_read_nametable(self):
"
24211,"def test_convert_to_nametable_pythonbrasil2(self):
"
24212,"def test_sei_sngl(self):
"
24213,"def tag(self,name,tag_sha = None,obj_sha = None):
"
24214,"def commit(self,sha):
"
24215,"def branch(self,ref,shortref):
"
24216,"def diff(self,diffspec):
"
24217,"def tree(self,sha):
"
24218,"def path(self,path,tree,commit):
"
24219,"def blob(self,sha,path,tree,commit,raw):
"
24220,"def join(self,* args):
"
24221,"def __init__(self,url,head_view = 'shortlog',commit_view = 'commitdiff',tag_view = 'commit'):
"
24222,"def commit(self,sha):
"
24223,"def tree(self,sha,path = None):
"
24224,"def branch(self,ref,shortref):
"
24225,"def tag(self,name,tag_sha = None,obj_sha = None):
"
24226,"def blob(self,sha,path,tree = None,commit = None,raw = False):
"
24227,"def path(self,path,tree = None,commit = None):
"
24228,"def __init__(self,url):
"
24229,"def commit(self,sha):
"
24230,"def tag(self,name,tag_sha = None,obj_sha = None):
"
24231,"def blob(self,sha,path,tree = None,commit = None,raw = False):
"
24232,"def path(self,path,tree,commit):
"
24233,"def __init__(self,url):
"
24234,"def commit(self,sha):
"
24235,"def tree(self,sha):
"
24236,"def branch(self,ref,shortref):
"
24237,"def tag(self,name,tag_sha = None,obj_sha = None):
"
24238,"def blob(self,sha,path,tree = None,commit = None,raw = False):
"
24239,"def path(self,path,tree = None,commit = None):
"
24240,"def __init__(self,api_key):
"
24241,"def read(self,path,size,offset,fh):
"
24242,"def _histories(self):
"
24243,"def _datasets(self,h):
"
24244,"def forwards(self,orm):
"
24245,"def backwards(self,orm):
"
24246,"def formfield_for_foreignkey(self,db_field,request,** kwargs):
"
24247,"def formfield_for_foreignkey(self,db_field,request,** kwargs):
"
24248,"def __init__(self,* args,** kwargs):
"
24249,"def get_method(self):
"
24250,"def __init__(self,action,variables):
"
24251,"def send(self,** kwargs):
"
24252,"def set_headers(self,** headers):
"
24253,"def set_data(self,data,override = False):
"
24254,"def set_url_params(self,** params):
"
24255,"def set_url_replacements(self,** replacements):
"
24256,"def render_url(self):
"
24257,"def __init__(self,static_format,response,traversal = None):
"
24258,"def mimetype(self):
"
24259,"def encoding(self):
"
24260,"def read(self,raw = False,perform_traversal = True):
"
24261,"def __init__(self,static_format,response):
"
24262,"def __str__(self):
"
24263,"def __init__(self,verbose = False):
"
24264,"def __enter__(self):
"
24265,"def __exit__(self,* args,** kwargs):
"
24266,"def __init__(self,handle):
"
24267,"def name(self):
"
24268,"def test_stats_with_entire_truth_vcf(self):
"
24269,"def test_stats_with_self(self):
"
24270,"def test_stats_with_truth_and_range(self):
"
24271,"def test_stats_with_truth_and_filters(self):
"
24272,"def __init__(self,args,suppress_stderr = False,redirect_stdout_file = None):
"
24273,"def poll(self):
"
24274,"def wait(self):
"
24275,"def __init__(self,host,port,username,password,ssl = False,tls = False,timeout = None,debug_level = None):
"
24276,"def __enter__(self):
"
24277,"def __exit__(self,exc_type,exc_val,exc_tb):
"
24278,"def _get_client(self):
"
24279,"def login(self):
"
24280,"def close(self):
"
24281,"def send(self,email):
"
24282,"def __init__(self,sender = None,recipients =[],cc =[],bcc =[],subject = None,text = None,html = None,charset = None,attachments =[],embedded =[],headers =[]):
"
24283,"def is_valid_message(self):
"
24284,"def get_root_message(self):
"
24285,"def get_header(self,name,value = None):
"
24286,"def format_email_address(self,email_type,emails = None):
"
24287,"def compile_message(self):
"
24288,"def get_payload(self):
"
24289,"def get_embedded_image(self,path):
"
24290,"def get_file_attachment(self,path):
"
24291,"def assert_file_mime_type(self,path,fallback = None):
"
24292,"def get_email_part(self,body,format = 'html'):
"
24293,"def add_header(self,header):
"
24294,"def add_recipient(self,recipient):
"
24295,"def add_attachment(self,file):
"
24296,"def add_embedded_image(self,image):
"
24297,"def _init_utils(self):
"
24298,"def _init_ctrls(self,prnt):
"
24299,"def getCtrlForProp(self,findprop):
"
24300,"def setStyles(self):
"
24301,"def updateStyle(self):
"
24302,"def findInStyles(self,txt,styles):
"
24303,"def rememberStyles(self):
"
24304,"def restoreStyles(self,style):
"
24305,"def clearCtrls(self,isDefault = false,disableDefs = false):
"
24306,"def populateProp(self,items,default,forceDisable = false):
"
24307,"def valIsCommonDef(self,val):
"
24308,"def populateCtrls(self):
"
24309,"def getCommonDefPropType(self,commonDefName):
"
24310,"def bindComboEvts(self,combo,btn,btnEvtMeth,comboEvtMeth,rdclickEvtMeth):
"
24311,"def populateCombosWithCommonDefs(self,fixedWidthOnly = None):
"
24312,"def populateStyleSelector(self):
"
24313,"def getColourDlg(self,colour,title = ''):
"
24314,"def editColProp(self,colBtn,colCb,prop):
"
24315,"def OnFgcolbtnButton(self,event):
"
24316,"def OnBgcolbtnButton(self,event):
"
24317,"def editColTCProp(self,colCb,colBtn,prop,val = None):
"
24318,"def OnfgColRet(self,event):
"
24319,"def OnfgColCombobox(self,event):
"
24320,"def OnbgColRet(self,event):
"
24321,"def OnbgColCombobox(self,event):
"
24322,"def OnTaeoffilledcbCheckbox(self,event):
"
24323,"def OnTaitaliccbCheckbox(self,event):
"
24324,"def OnTaboldcbCheckbox(self,event):
"
24325,"def OnTaunderlinedcbCheckbox(self,event):
"
24326,"def OnGotoCommonDef(self,event):
"
24327,"def OnfaceRet(self,event):
"
24328,"def OnfaceCombobox(self,event):
"
24329,"def setFace(self,val):
"
24330,"def OnsizeRet(self,event):
"
24331,"def OnsizeCombobox(self,event):
"
24332,"def setSize(self,val):
"
24333,"def OnElementlbListbox(self,event):
"
24334,"def OnDefaultCheckBox(self,event):
"
24335,"def OnCancelbtnButton(self,event):
"
24336,"def OnSpeedsettingchChoice(self,event):
"
24337,"def OnFixedwidthchkCheckbox(self,event):
"
24338,"def OnAddsharebtnButton(self,event):
"
24339,"def OnRemovesharebtnButton(self,event):
"
24340,"def OnUpdateUI(self,event):
"
24341,"def checkBraces(self,style):
"
24342,"def OnStcstyleeditdlgSize(self,event):
"
24343,"def OnMarginClick(self,event):
"
24344,"def _init_ctrls(self,prnt):
"
24345,"def __init__(self,parent,name = '',propIdx = 0):
"
24346,"def OnOkbtnButton(self,event):
"
24347,"def OnCancelbtnButton(self,event):
"
24348,"def __init__(self):
"
24349,"def canonic(self,filename):
"
24350,"def reset(self):
"
24351,"def dispatch_line(self,frame):
"
24352,"def dispatch_call(self,frame,arg):
"
24353,"def dispatch_return(self,frame,arg):
"
24354,"def dispatch_exception(self,frame,arg):
"
24355,"def stop_here(self,frame):
"
24356,"def break_anywhere(self,frame):
"
24357,"def user_call(self,frame,argument_list):
"
24358,"def user_line(self,frame):
"
24359,"def user_return(self,frame,return_value):
"
24360,"def set_step(self):
"
24361,"def set_next(self,frame):
"
24362,"def set_return(self,frame):
"
24363,"def set_trace(self,frame = None):
"
24364,"def set_continue(self):
"
24365,"def set_quit(self):
"
24366,"def set_break(self,filename,lineno,temporary = 0,cond = None,funcname = None):
"
24367,"def clear_break(self,filename,lineno):
"
24368,"def clear_bpbynumber(self,arg):
"
24369,"def clear_all_file_breaks(self,filename):
"
24370,"def clear_all_breaks(self):
"
24371,"def get_break(self,filename,lineno):
"
24372,"def get_breaks(self,filename,lineno):
"
24373,"def get_file_breaks(self,filename):
"
24374,"def get_all_breaks(self):
"
24375,"def get_stack(self,f,t):
"
24376,"def format_stack_entry(self,frame_lineno,lprefix = ':'):
"
24377,"def runeval(self,expr,globals = None,locals = None):
"
24378,"def runctx(self,cmd,globals,locals):
"
24379,"def runcall(self,func,* args,** kwds):
"
24380,"def __init__(self,file,line,temporary = 0,cond = None,funcname = None):
"
24381,"def deleteMe(self):
"
24382,"def enable(self):
"
24383,"def disable(self):
"
24384,"def __init__(self,x = None):
"
24385,"def seed(self,a = None):
"
24386,"def getstate(self):
"
24387,"def setstate(self,state):
"
24388,"def __getstate__(self):
"
24389,"def __setstate__(self,state):
"
24390,"def __reduce__(self):
"
24391,"def randint(self,a,b):
"
24392,"def choice(self,seq):
"
24393,"def uniform(self,a,b):
"
24394,"def normalvariate(self,mu,sigma):
"
24395,"def lognormvariate(self,mu,sigma):
"
24396,"def expovariate(self,lambd):
"
24397,"def vonmisesvariate(self,mu,kappa):
"
24398,"def gauss(self,mu,sigma):
"
24399,"def betavariate(self,alpha,beta):
"
24400,"def paretovariate(self,alpha):
"
24401,"def weibullvariate(self,alpha,beta):
"
24402,"def seed(self,a = None):
"
24403,"def random(self):
"
24404,"def getstate(self):
"
24405,"def setstate(self,state):
"
24406,"def jumpahead(self,n):
"
24407,"def __whseed(self,x = 0,y = 0,z = 0):
"
24408,"def whseed(self,a = None):
"
24409,"def random(self):
"
24410,"def getrandbits(self,k):
"
24411,"def _stub(self,* args,** kwds):
"
24412,"def _notimplemented(self,* args,** kwds):
"
24413,"def __init__(self,tagName,model = None):
"
24414,"def __getstate__(self):
"
24415,"def __setstate__(self,state):
"
24416,"def getAttributeType(self,aname):
"
24417,"def getAttributeTypeNS(self,namespaceURI,localName):
"
24418,"def isElementContent(self):
"
24419,"def isEmpty(self):
"
24420,"def isId(self,aname):
"
24421,"def isIdNS(self,euri,ename,auri,aname):
"
24422,"def __init__(self,options = None):
"
24423,"def createParser(self):
"
24424,"def getParser(self):
"
24425,"def reset(self):
"
24426,"def install(self,parser):
"
24427,"def parseFile(self,file):
"
24428,"def parseString(self,string):
"
24429,"def _setup_subset(self,buffer):
"
24430,"def start_doctype_decl_handler(self,doctypeName,systemId,publicId,has_internal_subset):
"
24431,"def end_doctype_decl_handler(self):
"
24432,"def pi_handler(self,target,data):
"
24433,"def character_data_handler_cdata(self,data):
"
24434,"def character_data_handler(self,data):
"
24435,"def entity_decl_handler(self,entityName,is_parameter_entity,value,base,systemId,publicId,notationName):
"
24436,"def notation_decl_handler(self,notationName,base,systemId,publicId):
"
24437,"def comment_handler(self,data):
"
24438,"def start_cdata_section_handler(self):
"
24439,"def end_cdata_section_handler(self):
"
24440,"def external_entity_ref_handler(self,context,base,systemId,publicId):
"
24441,"def first_element_handler(self,name,attributes):
"
24442,"def start_element_handler(self,name,attributes):
"
24443,"def _finish_start_element(self,node):
"
24444,"def end_element_handler(self,name):
"
24445,"def _finish_end_element(self,curNode):
"
24446,"def _handle_white_text_nodes(self,node,info):
"
24447,"def element_decl_handler(self,name,model):
"
24448,"def attlist_decl_handler(self,elem,name,type,default,required):
"
24449,"def xml_decl_handler(self,version,encoding,standalone):
"
24450,"def __init__(self,filter):
"
24451,"def __init__(self,builder):
"
24452,"def __init__(self,builder):
"
24453,"def start_element_handler(self,* args):
"
24454,"def end_element_handler(self,* args):
"
24455,"def start_element_handler(self,* args):
"
24456,"def end_element_handler(self,* args):
"
24457,"def __init__(self,context,options = None):
"
24458,"def reset(self):
"
24459,"def parseFile(self,file):
"
24460,"def parseString(self,string):
"
24461,"def _getDeclarations(self):
"
24462,"def _getNSattrs(self):
"
24463,"def external_entity_ref_handler(self,context,base,systemId,publicId):
"
24464,"def _initNamespaces(self):
"
24465,"def createParser(self):
"
24466,"def install(self,parser):
"
24467,"def start_namespace_decl_handler(self,prefix,uri):
"
24468,"def start_element_handler(self,name,attributes):
"
24469,"def reset(self):
"
24470,"def reset(self):
"
24471,"def _getNSattrs(self):
"
24472,"def getSubset(self):
"
24473,"def parseFile(self,file):
"
24474,"def parseString(self,string):
"
24475,"def install(self,parser):
"
24476,"def start_doctype_decl_handler(self,name,publicId,systemId,has_internal_subset):
"
24477,"def end_doctype_decl_handler(self):
"
24478,"def start_element_handler(self,name,attrs):
"
24479,"def setUp(self):
"
24480,"def test_asset_unversioned(self):
"
24481,"def test_asset_versioned(self):
"
24482,"def test_missing_asset(self):
"
24483,"def test_single_requires(self):
"
24484,"def test_single_requires_which_is_dict(self):
"
24485,"def test_provides_requires(self):
"
24486,"def test_version_copies(self):
"
24487,"def test_version_conflict(self):
"
24488,"def test_blacklist(self):
"
24489,"def setUp(self):
"
24490,"def __init__(self):
"
24491,"def __init__(self):
"
24492,"def check(self,ip,port = None):
"
24493,"def __init__(self):
"
24494,"def __init__(self):
"
24495,"def __init__(self):
"
24496,"def assemble(self,inputfile,outputfile = None,filetype = ""text""):
"
24497,"def disassemble(self,inputfile,outputfile = None,filetype = ""text""):
"
24498,"def __init__(self):
"
24499,"def __call__(self,name,task):
"
24500,"def pos(self,name,task):
"
24501,"def __init__(self,name,target = None,report = lambda n,o:(n,o),** kwargs):
"
24502,"def perform(self):
"
24503,"def get_ip(self):
"
24504,"def setUp(self):
"
24505,"def tearDown(self):
"
24506,"def test_autopep8_args(self):
"
24507,"def test_version_number(self):
"
24508,"def test_list_fixes(self):
"
24509,"def test_no_config(self):
"
24510,"def test_global_config(self):
"
24511,"def test_local_config(self):
"
24512,"def test_local_and_global_config(self):
"
24513,"def test_help(self):
"
24514,"def test_help_outside_project(self):
"
24515,"def check_help(self,cwd = TEMP_DIR):
"
24516,"def forwards(self,orm):
"
24517,"def backwards(self,orm):
"
24518,"def __init__(self,path,threaded = True):
"
24519,"def acquire(self,timeout = None):
"
24520,"def release(self):
"
24521,"def is_locked(self):
"
24522,"def i_am_locking(self):
"
24523,"def break_lock(self):
"
24524,"def __enter__(self):
"
24525,"def __exit__(self,* _exc):
"
24526,"def acquire(self,timeout = None):
"
24527,"def release(self):
"
24528,"def is_locked(self):
"
24529,"def i_am_locking(self):
"
24530,"def break_lock(self):
"
24531,"def __init__(self,path,threaded = True):
"
24532,"def attempt_acquire(self,timeout,end_time,wait):
"
24533,"def acquire(self,timeout = None):
"
24534,"def release(self):
"
24535,"def is_locked(self):
"
24536,"def i_am_locking(self):
"
24537,"def break_lock(self):
"
24538,"def i_am_the_only_lock(self,cursor):
"
24539,"def attempt_acquire(self,timeout,cursor,end_time,wait):
"
24540,"def acquire(self,timeout = None):
"
24541,"def release(self):
"
24542,"def _who_is_locking(self):
"
24543,"def is_locked(self):
"
24544,"def break_lock(self):
"
24545,"def __init__(self,client):
"
24546,"def start(self):
"
24547,"def shutdown(self):
"
24548,"def refresh(self):
"
24549,"def get_partition_owner(self,partition_id):
"
24550,"def get_partition_id(self,key):
"
24551,"def get_partition_count(self):
"
24552,"def _get_partition_count_blocking(self):
"
24553,"def _do_refresh(self,callback = None):
"
24554,"def add_entry_listener(self,key = None,predicate = None,added = None,removed = None,updated = None,evicted = None,clear_all = None):
"
24555,"def clear(self):
"
24556,"def contains_key(self,key):
"
24557,"def contains_value(self,value):
"
24558,"def entry_set(self):
"
24559,"def get(self,key):
"
24560,"def is_empty(self):
"
24561,"def key_set(self):
"
24562,"def put(self,key,value,ttl = 0):
"
24563,"def remove(self,key):
"
24564,"def remove_entry_listener(self,registration_id):
"
24565,"def size(self):
"
24566,"def values(self):
"
24567,"def _get_partition_id(self):
"
24568,"def _encode_invoke_on_target_partition(self,codec,response_handler = default_response_handler,** kwargs):
"
24569,"def test_no_given_address(self):
"
24570,"def test_single_given_address_with_no_port(self):
"
24571,"def test_single_address_and_port(self):
"
24572,"def test_multiple_addresses(self):
"
24573,"def test_multiple_addresses_non_unique(self):
"
24574,"def test_addresses_and_members(self):
"
24575,"def setUp(self):
"
24576,"def test_put(self):
"
24577,"def test_put_when_present(self):
"
24578,"def test_get(self):
"
24579,"def test_get_when_missing(self):
"
24580,"def test_size(self):
"
24581,"def test_remove_all(self):
"
24582,"def test_remove_all_when_missing(self):
"
24583,"def test_remove_when_same(self):
"
24584,"def test_remove_when_different(self):
"
24585,"def test_value_count(self):
"
24586,"def test_str(self):
"
24587,"def __init__(self,account,tweet,avatar,thumbnail,parent = None):
"
24588,"def setupUI(self):
"
24589,"def __init__(self,num_rows,num_cols):
"
24590,"def pure(self,M,cvtype,plot_id):
"
24591,"def special(self,M,cvtype,plot_id):
"
24592,"def __init__(self,* args,** kwargs):
"
24593,"def runTest(self):
"
24594,"def assert_results(self,node,true_value,true_mean,true_std = None,mean_tol = 0.1,std_tol = 0.2):
"
24595,"def normal_normal(self,add_shift,sigma_0,sigma_beta,sigma_y,true_mu,n_subjs,avg_samples,seed,use_metropolis):
"
24596,"def create_nodes_for_normal_normal(self,add_shift,tau_0,mu_0,sigma_beta,sigma_y,true_mu,n_subjs,avg_samples):
"
24597,"def normal_normal_bundle(self,use_metropolis):
"
24598,"def test_normal_normal_solution(self):
"
24599,"def test_kNormalNormal(self):
"
24600,"def create_nodes_for_PriorNormalstd(self,n_subjs,sigma_0,mu_0,prior,** kwargs):
"
24601,"def uniform_normalstd(self,sigma_0,mu_0,n_subjs,seed,use_metropolis):
"
24602,"def uniform_normalstd_multiple_conds_with_shared_sigma(self,sigma_0,mu_0,n_subjs,seed,use_metropolis):
"
24603,"def test_uniform_normalstd_numerical_solution(self):
"
24604,"def test_UniformNormalstd_step_method(self):
"
24605,"def test_uniform_normalstd_with_multiple_condition_numerical_solution(self):
"
24606,"def test_UniformNormalstd_step_method_with_multiple_condition(self):
"
24607,"def numerical_solution(self,defective_posterior,lb,ub):
"
24608,"def half_cauchy_normal_std(self,sigma_0 = 1.,mu_0 = 0.,S = 10,n_subjs = 8,seed = 1,use_metropolis = False):
"
24609,"def half_cauchy_bundle(self,use_metropolis):
"
24610,"def test_half_cauchy_numerical_solution(self):
"
24611,"def test_HCauchyNormalstd_step_method(self):
"
24612,"def test_SPX(self):
"
24613,"def create_hierarchical_model(self,sigma_x = 1,n_subjs = 5,size = 100,mu_value = 4,seed = 1,vec = False):
"
24614,"def test_SliceStep(self):
"
24615,"def setUp(self):
"
24616,"def post(self,url,data):
"
24617,"def test_it_works(self):
"
24618,"def test_it_assigns_channels(self):
"
24619,"def test_it_handles_missing_request_body(self):
"
24620,"def test_it_rejects_wrong_api_key(self):
"
24621,"def test_it_handles_invalid_json(self):
"
24622,"def test_it_rejects_small_timeout(self):
"
24623,"def test_it_rejects_large_timeout(self):
"
24624,"def test_it_rejects_non_number_timeout(self):
"
24625,"def test_it_rejects_non_string_name(self):
"
24626,"def version(self):
"
24627,"def __init__(self,client_id,client_secret,domain,user_id = None,access_token = None,refresh_token = None,token_updater = None,response_format = RESPONSE_FORMAT_JSON):
"
24628,"def _url(self,path,params = None,versioned = True):
"
24629,"def _extract_response(self,response):
"
24630,"def _format_datetime(self,value):
"
24631,"def _refresh_token(self):
"
24632,"def _call(self,url,method = 'get',body = None,headers = None):
"
24633,"def call(self,path,method = 'get',params = None,body = None,headers = None,versioned = True):
"
24634,"def versions(self):
"
24635,"def setUp(self):
"
24636,"def tearDown(self):
"
24637,"def write_file(self,filename,contents,mode = stat.S_IREAD | stat.S_IWUSR):
"
24638,"def make_recipe(self,buildout,name,options):
"
24639,"def test_working_directory_restored_after_failure(self):
"
24640,"def test_working_directory_restored_after_success(self):
"
24641,"def test_compile_directory_exists(self):
"
24642,"def test_restart_after_failure(self):
"
24643,"def test_environment_restored_after_building_a_part(self):
"
24644,"def test_run__unknown_command(self):
"
24645,"def test_call_script__bbb_for_callable_with_two_parameters(self):
"
24646,"def test_call_script__augmented_environment_as_third_parameter(self):
"
24647,"def __getitem__(self,k):
"
24648,"def __setitem__(self,k,v):
"
24649,"def __delitem__(self,k):
"
24650,"def __init__(self,models_dir,path_conf,pcaps = """",binaries = """",nmf_components = 0,process = False):
"
24651,"def generate_model(self):
"
24652,"def __init__(self,datapath,order = 2,ngram = 0,whitespace = "" \t\n"",subrules = False):
"
24653,"def minimizeModel(self):
"
24654,"def setColorStates(self):
"
24655,"def setStateLabel(self,msgIndex,stateLabel):
"
24656,"def getStartLabel(self):
"
24657,"def _calculateMarkovChain(self):
"
24658,"def __init__(self,tokenizedMessages,fieldIndices):
"
24659,"def getValuesForField(self,index):
"
24660,"def getNumberOfFields(self):
"
24661,"def addTokenizedMessage(self,toks):
"
24662,"def getFieldIndices(self):
"
24663,"def __init__(self,body = None,address = None):
"
24664,"def parse(self):
"
24665,"def __str__(self):
"
24666,"def localStr(self,local_addr = None,local_port = None):
"
24667,"def getCopy(self):
"
24668,"def setBody(self,body):
"
24669,"def getUri(self):
"
24670,"def getUrl(self):
"
24671,"def __init__(self,buf = None,scode = None,reason = None,sipver = None,to = None,fr0m = None,callid = None,vias = None,cseq = None,body = None,rrs =()):
"
24672,"def setSL(self,startline):
"
24673,"def setSCode(self,scode,reason):
"
24674,"def getSL(self):
"
24675,"def getSCode(self):
"
24676,"def __init__(self,global_config):
"
24677,"def recvEvent(self,event,ua):
"
24678,"def __init__(self,global_config):
"
24679,"def recvRequest(self,req):
"
24680,"def __init__(self,format_string,flags = 0):
"
24681,"def __call__(self,text):
"
24682,"def module(self):
"
24683,"def json(self):
"
24684,"def __init__(self,scope = None,authentication_method = AUTHENTICATION_METHOD,refreshable = REFRESHABLE):
"
24685,"def _validate(self):
"
24686,"def _validate_access_credentials(self):
"
24687,"def _validate_client_credentials(self):
"
24688,"def _validate_authorization_code(self):
"
24689,"def _validate_password(self):
"
24690,"def _validate_refresh_token(self):
"
24691,"def grant_response(self):
"
24692,"def _get_authorization_code_token(self):
"
24693,"def _get_password_token(self):
"
24694,"def _get_refresh_token(self):
"
24695,"def _get_client_credentials_token(self):
"
24696,"def before_all(self,context):
"
24697,"def check_for_hugo(self):
"
24698,"def check_for_another_name(self):
"
24699,"def before_each(self,context):
"
24700,"def check_for_hugo(self):
"
24701,"def check_still_for_hugo(self):
"
24702,"def __init__(self):
"
24703,"def run(self):
"
24704,"def clean(self):
"
24705,"def clean(self):
"
24706,"def rpts(self,obj):
"
24707,"def checkers(self,obj):
"
24708,"def last_scraper_save_(self,obj):
"
24709,"def last_checker_delete_(self,obj):
"
24710,"def clone_scrapers(self,request,queryset):
"
24711,"def lookups(self,request,model_admin):
"
24712,"def queryset(self,request,queryset):
"
24713,"def scraper_(self,instance):
"
24714,"def date_(self,instance):
"
24715,"def __init__(self,* args,** kwargs):
"
24716,"def _set_ref_object(self,ref_object_class,** kwargs):
"
24717,"def _set_config(self,log_msg,** kwargs):
"
24718,"def _check_mandatory_vars(self):
"
24719,"def _set_request_kwargs(self):
"
24720,"def _set_meta_splash_args(self):
"
24721,"def spider_closed(self):
"
24722,"def log(self,message,level = logging.DEBUG):
"
24723,"def test_scraper_get_scrape_elems(self):
"
24724,"def test_scraper_get_mandatory_scrape_elems(self):
"
24725,"def __init__(self,gateway,node_id,child_id,name,value_type,child_type):
"
24726,"def should_poll(self):
"
24727,"def name(self):
"
24728,"def device_state_attributes(self):
"
24729,"def is_on(self):
"
24730,"def sensor_class(self):
"
24731,"def available(self):
"
24732,"def update(self):
"
24733,"def __init__(self,config):
"
24734,"def scan_devices(self):
"
24735,"def get_device_name(self,device):
"
24736,"def _update_info(self):
"
24737,"def __init__(self,hass,name,state_topic,command_topic,qos,retain,state_open,state_closed,service_open,service_close,optimistic,value_template):
"
24738,"def name(self):
"
24739,"def is_opened(self):
"
24740,"def is_closed(self):
"
24741,"def assumed_state(self):
"
24742,"def close_door(self):
"
24743,"def open_door(self):
"
24744,"def __init__(self,tellstick_device,signal_repetitions):
"
24745,"def is_on(self):
"
24746,"def brightness(self):
"
24747,"def set_tellstick_state(self,last_command_sent,last_data_sent):
"
24748,"def _send_tellstick_command(self,command,data):
"
24749,"def turn_on(self,** kwargs):
"
24750,"def turn_off(self,** kwargs):
"
24751,"def __init__(self,hass,name,children,commands,attributes):
"
24752,"def _entity_lkp(self,entity_id,state_attr = None):
"
24753,"def _override_or_child_attr(self,attr_name):
"
24754,"def _child_attr(self,attr_name):
"
24755,"def _call_service(self,service_name,service_data = None,allow_override = False):
"
24756,"def should_poll(self):
"
24757,"def master_state(self):
"
24758,"def name(self):
"
24759,"def state(self):
"
24760,"def volume_level(self):
"
24761,"def is_volume_muted(self):
"
24762,"def media_content_id(self):
"
24763,"def media_content_type(self):
"
24764,"def media_duration(self):
"
24765,"def media_image_url(self):
"
24766,"def media_title(self):
"
24767,"def media_artist(self):
"
24768,"def media_album_name(self):
"
24769,"def media_album_artist(self):
"
24770,"def media_track(self):
"
24771,"def media_series_title(self):
"
24772,"def media_season(self):
"
24773,"def media_episode(self):
"
24774,"def media_channel(self):
"
24775,"def media_playlist(self):
"
24776,"def app_id(self):
"
24777,"def app_name(self):
"
24778,"def current_source(self):
"
24779,"def supported_media_commands(self):
"
24780,"def device_state_attributes(self):
"
24781,"def turn_on(self):
"
24782,"def turn_off(self):
"
24783,"def mute_volume(self,is_volume_muted):
"
24784,"def set_volume_level(self,volume_level):
"
24785,"def media_play(self):
"
24786,"def media_pause(self):
"
24787,"def media_previous_track(self):
"
24788,"def media_next_track(self):
"
24789,"def media_seek(self,position):
"
24790,"def play_media(self,media_type,media_id):
"
24791,"def volume_up(self):
"
24792,"def volume_down(self):
"
24793,"def media_play_pause(self):
"
24794,"def select_source(self,source):
"
24795,"def update(self):
"
24796,"def __init__(self,consumer_key,consumer_secret,access_token_key,access_token_secret):
"
24797,"def send_message(self,message = """",** kwargs):
"
24798,"def __init__(self,sensor_name,sensor_type,sensor_index):
"
24799,"def name(self):
"
24800,"def state(self):
"
24801,"def unique_id(self):
"
24802,"def unit_of_measurement(self):
"
24803,"def update(self):
"
24804,"def __init__(self,temper_device,temp_unit,name):
"
24805,"def name(self):
"
24806,"def state(self):
"
24807,"def unit_of_measurement(self):
"
24808,"def update(self):
"
24809,"def __init__(self,name,node,actions,states):
"
24810,"def turn_on(self,** kwargs):
"
24811,"def turn_off(self,** kwargs):
"
24812,"def __init__(self,name,target_temperature,unit_of_measurement,away,current_temperature,is_fan_on):
"
24813,"def should_poll(self):
"
24814,"def name(self):
"
24815,"def unit_of_measurement(self):
"
24816,"def current_temperature(self):
"
24817,"def target_temperature(self):
"
24818,"def is_away_mode_on(self):
"
24819,"def is_fan_on(self):
"
24820,"def set_temperature(self,temperature):
"
24821,"def turn_away_mode_on(self):
"
24822,"def turn_away_mode_off(self):
"
24823,"def turn_fan_on(self):
"
24824,"def turn_fan_off(self):
"
24825,"def test_name(self,mock_update):
"
24826,"def test_name_not_set(self,mock_update):
"
24827,"def test_state(self,mock_update):
"
24828,"def test_unit_of_measurement(self,mock_update):
"
24829,"def test_config_valid_keys(self,* args):
"
24830,"def test_validate_config_valid_keys(self):
"
24831,"def test_config_invalid_keys(self,mock_update):
"
24832,"def test_validate_config_invalid_keys(self):
"
24833,"def test_config_uses_defaults(self,mock_update):
"
24834,"def test_validate_config_missing_defaults(self):
"
24835,"def test_init_calls_update(self,mock_update):
"
24836,"def test_update_connects_to_host_and_port(self,mock_select,mock_socket):
"
24837,"def test_update_returns_if_connecting_fails(self,* args):
"
24838,"def test_update_returns_if_sending_fails(self,* args):
"
24839,"def test_update_returns_if_select_fails(self,* args):
"
24840,"def test_update_sends_payload(self,mock_select,mock_socket):
"
24841,"def test_update_calls_select_with_timeout(self,mock_select,mock_socket):
"
24842,"def test_update_receives_packet_and_sets_as_state(self,mock_select,mock_socket):
"
24843,"def test_update_renders_value_in_template(self,mock_select,mock_socket):
"
24844,"def test_update_returns_if_template_render_fails(self,mock_select,mock_socket):
"
24845,"def setUp(self):
"
24846,"def tearDown(self):
"
24847,"def test_logger_setup(self):
"
24848,"def test_logger_test_filters(self):
"
24849,"def setUp(self):
"
24850,"def tearDown(self):
"
24851,"def test_extract_domain_configs(self):
"
24852,"def respond(self,message):
"
24853,"def speak(self,message):
"
24854,"def handle(self,* args,** options):
"
24855,"def setUp(self):
"
24856,"def tearDown(self):
"
24857,"def test_submit_faq_get(self):
"
24858,"def test_submit_thanks(self):
"
24859,"def test_faq_index(self):
"
24860,"def test_topic_detail(self):
"
24861,"def test_question_detail(self):
"
24862,"def __init__(self,name):
"
24863,"def __call__(self,p):
"
24864,"def testFromdict_with_get_01(self):
"
24865,"def testFromdict_with_get_01_control(self):
"
24866,"def testFromdict_with_get_02(self):
"
24867,"def filters(self):
"
24868,"def setup(self):
"
24869,"def __init__(self,auth_url,user_name,key,logger,cache_file_path,object_store_url = None,auth_version = ""2"",os_options = None):
"
24870,"def metric_data_reset(self):
"
24871,"def dump_metric_data(self):
"
24872,"def latency_reset(self):
"
24873,"def latency_record(self,component_name,duration):
"
24874,"def latency_write_log(self):
"
24875,"def record_state(self,sev,component_name,new_state,reason):
"
24876,"def check_keystone_get_token(self):
"
24877,"def check_object_store(self):
"
24878,"def check_object_store_health_check(self,logger):
"
24879,"def __init__(self,version,instructions,models,controllers,slug):
"
24880,"def version(self):
"
24881,"def migrate(self,model):
"
24882,"def applies_to(self):
"
24883,"def __init__(self,instructions,models,controllers):
"
24884,"def get_dependencies(self):
"
24885,"def __init__(self,instructions,config_files):
"
24886,"def _load_inputs(self):
"
24887,"def _validate_servers(self,component_on_server_network):
"
24888,"def _check_server_interface(self,s,network):
"
24889,"def instructions(self):
"
24890,"def get_dependencies(self):
"
24891,"def __new__(self,val = '',skip_encode = False,encode_slash = False):
"
24892,"def __add__(self,other):
"
24893,"def __radd__(self,other):
"
24894,"def __mod__(self,fields):
"
24895,"def __repr__(self):
"
24896,"def __init__(self,handler = None,** kwargs):
"
24897,"def _auth_headers(self):
"
24898,"def connect(self):
"
24899,"def delete(self,path_segment,owner = None,app = None,sharing = None,** query):
"
24900,"def get(self,path_segment,owner = None,app = None,sharing = None,** query):
"
24901,"def post(self,path_segment,owner = None,app = None,sharing = None,headers = None,** query):
"
24902,"def request(self,path_segment,method = ""GET"",headers = None,body = """",owner = None,app = None,sharing = None):
"
24903,"def login(self):
"
24904,"def logout(self):
"
24905,"def _abspath(self,path_segment,owner = None,app = None,sharing = None):
"
24906,"def __init__(self,response,_message = None):
"
24907,"def __init__(self,message,cause):
"
24908,"def __init__(self,custom_handler = None):
"
24909,"def delete(self,url,headers = None,** kwargs):
"
24910,"def get(self,url,headers = None,** kwargs):
"
24911,"def post(self,url,headers = None,** kwargs):
"
24912,"def request(self,url,message,** kwargs):
"
24913,"def __init__(self,response):
"
24914,"def __str__(self):
"
24915,"def empty(self):
"
24916,"def peek(self,size):
"
24917,"def close(self):
"
24918,"def read(self,size = None):
"
24919,"def readable(self):
"
24920,"def readinto(self,byte_array):
"
24921,"def __init__(self,protocol_version):
"
24922,"def load_cert_chain(self,certfile,keyfile):
"
24923,"def load_verify_locations(self,location):
"
24924,"def wrap_socket(self,socket,server_hostname = None):
"
24925,"def __init__(self,state):
"
24926,"def build_model(self):
"
24927,"def __init__(self,site,vcs_name = 'vcs'):
"
24928,"def begin_site(self):
"
24929,"def get_dates(self):
"
24930,"def __init__(self,site):
"
24931,"def get_dates(self,resource):
"
24932,"def __init__(self,site):
"
24933,"def get_dates(self,resource):
"
24934,"def setUp(self):
"
24935,"def tearDown(self):
"
24936,"def test_can_set_standard_attributes(self):
"
24937,"def test_ignores_pattern_in_content(self):
"
24938,"def test_can_load_front_matter(self):
"
24939,"def test_can_load_from_node_meta(self):
"
24940,"def test_can_load_from_site_meta(self):
"
24941,"def test_multiple_levels(self):
"
24942,"def assertSuccess(self,response,msg = 'response status code:{code}\n{response}'):
"
24943,"def test_GetCapabilities(self):
"
24944,"def test_GetMap(self):
"
24945,"def test_GetFeatureInfo(self):
"
24946,"def test_GetTile(self):
"
24947,"def _recordDataUsage(self,request):
"
24948,"def _callbackCheckRestrictions(self,request):
"
24949,"def _threadDoGETJob(self,request):
"
24950,"def _threadDoGETJob(self,request):
"
24951,"def _threadDoGETJob(self,request):
"
24952,"def _threadDoGETJob(self,request):
"
24953,"def __init__(self,log_filename):
"
24954,"def __enter__(self):
"
24955,"def __exit__(self,exc_type,exc_val,exc_tb):
"
24956,"def flush(self):
"
24957,"def write(self,value):
"
24958,"def test_key(self):
"
24959,"def test_dh(self):
"
24960,"def test_loads_certifi(self):
"
24961,"def __init__(self):
"
24962,"def write(self,group):
"
24963,"def __init__(self):
"
24964,"def set_propagation_check_frequency(self,frequency):
"
24965,"def _read_propagation_check_frequency(self,group):
"
24966,"def _write_propagation_check_frequency(self,group):
"
24967,"def set_seed(self,seed):
"
24968,"def _read_seed(self,group):
"
24969,"def _write_seed(self,group):
"
24970,"def set_n_initial_iterations(self,n_iter):
"
24971,"def _read_n_initial_iterations(self,group):
"
24972,"def _write_n_initial_iterations(self,group):
"
24973,"def set_n_photons(self,initial = None,imaging = None,imaging_sources = None,imaging_dust = None,raytracing_sources = None,raytracing_dust = None,stats = 0):
"
24974,"def _read_n_photons(self,group):
"
24975,"def _write_n_photons(self,group):
"
24976,"def set_raytracing(self,raytracing):
"
24977,"def _read_raytracing(self,group):
"
24978,"def _write_raytracing(self,group):
"
24979,"def set_max_interactions(self,inter_max,warn = True):
"
24980,"def _read_max_interactions(self,group):
"
24981,"def _write_max_interactions(self,group):
"
24982,"def set_max_reabsorptions(self,reabs_max,warn = True):
"
24983,"def _read_max_reabsorptions(self,group):
"
24984,"def _write_max_reabsorptions(self,group):
"
24985,"def set_pda(self,pda):
"
24986,"def _read_pda(self,group):
"
24987,"def _write_pda(self,group):
"
24988,"def set_mrw(self,mrw,gamma = 1.0,inter_max = 1000,warn = True):
"
24989,"def _read_mrw(self,group):
"
24990,"def _write_mrw(self,group):
"
24991,"def set_convergence(self,convergence,percentile = 100.,absolute = 0.,relative = 0.):
"
24992,"def _read_convergence(self,group):
"
24993,"def _write_convergence(self,group):
"
24994,"def set_kill_on_absorb(self,kill_on_absorb):
"
24995,"def _read_kill_on_absorb(self,group):
"
24996,"def _write_kill_on_absorb(self,group):
"
24997,"def set_kill_on_scatter(self,kill_on_scatter):
"
24998,"def _read_kill_on_scatter(self,group):
"
24999,"def _write_kill_on_scatter(self,group):
"
25000,"def set_forced_first_scattering(self,forced_first_scattering):
"
25001,"def _read_forced_first_scattering(self,group):
"
25002,"def _write_forced_first_scattering(self,group):
"
25003,"def set_enforce_energy_range(self,enforce):
"
25004,"def _read_enforce_energy_range(self,group):
"
25005,"def _write_enforce_energy_range(self,group):
"
25006,"def set_copy_input(self,copy):
"
25007,"def _read_copy_input(self,group):
"
25008,"def _write_copy_input(self,group):
"
25009,"def set_output_bytes(self,io_bytes):
"
25010,"def _read_output_bytes(self,group):
"
25011,"def _write_output_bytes(self,group):
"
25012,"def set_sample_sources_evenly(self,sample_sources_evenly):
"
25013,"def _read_sample_sources_evenly(self,group):
"
25014,"def _write_sample_sources_evenly(self,group):
"
25015,"def set_specific_energy_type(self,specific_energy_type):
"
25016,"def _read_specific_energy_type(self,group):
"
25017,"def _write_specific_energy_type(self,group):
"
25018,"def read_run_conf(self,group):
"
25019,"def write_run_conf(self,group):
"
25020,"def __init__(self,sed = True,image = True):
"
25021,"def add_filter(self,** kwargs):
"
25022,"def _read_filters(self,group):
"
25023,"def _write_filters(self,group):
"
25024,"def set_output_bytes(self,io_bytes):
"
25025,"def _read_output_bytes(self,group):
"
25026,"def _write_output_bytes(self,group):
"
25027,"def set_image_size(self,n_x,n_y):
"
25028,"def _read_image_size(self,group):
"
25029,"def _write_image_size(self,group):
"
25030,"def set_image_limits(self,xmin,xmax,ymin,ymax):
"
25031,"def _read_image_limits(self,group):
"
25032,"def _write_image_limits(self,group):
"
25033,"def set_aperture_range(self,n_ap,ap_min,ap_max):
"
25034,"def set_aperture_radii(self,n_ap,ap_min,ap_max):
"
25035,"def _read_aperture_range(self,group):
"
25036,"def _write_aperture_range(self,group):
"
25037,"def _set_monochromatic(self,monochromatic,frequencies = None):
"
25038,"def _read_monochromatic(self,group):
"
25039,"def _write_monochromatic(self,group):
"
25040,"def set_wavelength_range(self,n_wav,wav_min,wav_max):
"
25041,"def _read_wavelength_range(self,group):
"
25042,"def _write_wavelength_range(self,group):
"
25043,"def set_wavelength_index_range(self,iwav_min,iwav_max):
"
25044,"def _read_wavelength_index_range(self,group):
"
25045,"def _write_wavelength_index_range(self,group):
"
25046,"def set_track_origin(self,track_origin,n_scat = None):
"
25047,"def _read_track_origin(self,group):
"
25048,"def _write_track_origin(self,group):
"
25049,"def set_uncertainties(self,uncertainties):
"
25050,"def _read_uncertainties(self,group):
"
25051,"def _write_uncertainties(self,group):
"
25052,"def set_stokes(self,stokes):
"
25053,"def _read_stokes(self,group):
"
25054,"def _write_stokes(self,group):
"
25055,"def write(self,group):
"
25056,"def _read_viewing_info(self,group):
"
25057,"def _validate_viewing_info(self):
"
25058,"def _write_viewing_info(self,group):
"
25059,"def _read_main_info(self,group):
"
25060,"def _write_main_info(self,group):
"
25061,"def __init__(self,n_theta = None,n_phi = None,** kwargs):
"
25062,"def set_viewing_bins(self,n_theta,n_phi):
"
25063,"def _read_viewing_bins(self,group):
"
25064,"def _write_viewing_bins(self,group):
"
25065,"def _read_viewing_info(self,group):
"
25066,"def _write_viewing_info(self,group):
"
25067,"def __init__(self,** kwargs):
"
25068,"def set_viewing_angles(self,theta,phi):
"
25069,"def _read_viewing_angles(self,group):
"
25070,"def _write_viewing_angles(self,group):
"
25071,"def set_inside_observer(self,position):
"
25072,"def _read_inside_observer(self,group):
"
25073,"def _write_inside_observer(self,group):
"
25074,"def set_ignore_optical_depth(self,ignore_optical_depth):
"
25075,"def _read_ignore_optical_depth(self,group):
"
25076,"def _write_ignore_optical_depth(self,group):
"
25077,"def set_peeloff_origin(self,position):
"
25078,"def _read_peeloff_origin(self,group):
"
25079,"def _write_peeloff_origin(self,group):
"
25080,"def set_depth(self,d_min,d_max):
"
25081,"def _read_depth(self,group):
"
25082,"def _write_depth(self,group):
"
25083,"def _read_viewing_info(self,group):
"
25084,"def _write_viewing_info(self,group):
"
25085,"def __init__(self):
"
25086,"def __getattr__(self,attribute):
"
25087,"def __init__(self):
"
25088,"def add_grid(self):
"
25089,"def __init__(self,amr_grid = None):
"
25090,"def remove_level(self,level_id):
"
25091,"def add_level(self):
"
25092,"def __getattr__(self,attribute):
"
25093,"def read(self,group,quantities = 'all'):
"
25094,"def read_geometry(self,group):
"
25095,"def read_quantities(self,group,quantities = 'all'):
"
25096,"def write(self,group,quantities = 'all',copy = True,absolute_paths = False,compression = True,wall_dtype = float,physics_dtype = float):
"
25097,"def write_single_array(self,group,name,amr_grid,copy = True,absolute_paths = False,compression = True,physics_dtype = float):
"
25098,"def get_geometry_id(self):
"
25099,"def __getitem__(self,item):
"
25100,"def __setitem__(self,item,value):
"
25101,"def __contains__(self,item):
"
25102,"def reset_quantities(self):
"
25103,"def add_derived_quantity(self,name,function):
"
25104,"def to_yt(self,dust_id = 0):
"
25105,"def __init__(self,amr_grid,quantity):
"
25106,"def append(self,amr_grid_view):
"
25107,"def add(self,amr_grid_view):
"
25108,"def __getitem__(self,item):
"
25109,"def __init__(self,filename):
"
25110,"def _get_origin_slice(self,group,component,source_id = None,dust_id = None,n_scat = None):
"
25111,"def get_available_sources(self):
"
25112,"def get_available_components(self,iteration = - 1):
"
25113,"def get_quantities(self,iteration = - 1):
"
25114,"def get_physical_grid(self,name,iteration = - 1,dust_id = 'all'):
"
25115,"def __init__(self,data):
"
25116,"def __getitem__(self,n):
"
25117,"def reset(self):
"
25118,"def read(self):
"
25119,"def seek_next_non_empty_line(self):
"
25120,"def eof(self):
"
25121,"def read_to_condition(self,condition_func):
"
25122,"def read_to_next_empty_line(self):
"
25123,"def read_to_next_unindented_line(self):
"
25124,"def peek(self,n = 0):
"
25125,"def is_empty(self):
"
25126,"def __init__(self,docstring,config = { },warn = None):
"
25127,"def __getitem__(self,key):
"
25128,"def __setitem__(self,key,val):
"
25129,"def _is_at_section(self):
"
25130,"def _strip(self,doc):
"
25131,"def _read_to_next_section(self):
"
25132,"def _read_sections(self):
"
25133,"def _parse_param_list(self,content):
"
25134,"def _parse_see_also(self,content):
"
25135,"def _parse_index(self,section,content):
"
25136,"def _parse_summary(self):
"
25137,"def _parse(self):
"
25138,"def _str_header(self,name,symbol = '-'):
"
25139,"def _str_indent(self,doc,indent = 4):
"
25140,"def _str_signature(self):
"
25141,"def _str_summary(self):
"
25142,"def _str_extended_summary(self):
"
25143,"def _str_param_list(self,name):
"
25144,"def _str_section(self,name):
"
25145,"def _str_see_also(self,func_role):
"
25146,"def __str__(self,func_role = ''):
"
25147,"def get_func(self):
"
25148,"def __str__(self):
"
25149,"def __init__(self,cls,doc = None,modulename = '',func_doc = FunctionDoc,config = { }):
"
25150,"def methods(self):
"
25151,"def properties(self):
"
25152,"def __init__(self,msg,obj):
"
25153,"def __init__(self,result):
"
25154,"def __init__(self,result):
"
25155,"def test_cdf_logcdf(self):
"
25156,"def test_cdf_ppf(self):
"
25157,"def test_pdf_logpdf(self):
"
25158,"def test_pdf(self):
"
25159,"def test_distribution_rvs(self):
"
25160,"def test_cdf_logcdf(self):
"
25161,"def test_cdf_ppf(self):
"
25162,"def test_pdf_logpdf(self):
"
25163,"def test_pdf(self):
"
25164,"def test_distribution_rvs(self):
"
25165,"def test_smallq(self):
"
25166,"def test_bigq(self):
"
25167,"def test_offgrid_int(self):
"
25168,"def test_offgrid_float(self):
"
25169,"def logp(self,x,low,high,q):
"
25170,"def test_smallq(self):
"
25171,"def test_bigq(self):
"
25172,"def test_point(self):
"
25173,"def test_2points(self):
"
25174,"def test_point_logpmf(self):
"
25175,"def test_rounding_logpmf(self):
"
25176,"def test_smallq_logpmf(self):
"
25177,"def test_smallq(self):
"
25178,"def test_bigq(self):
"
25179,"def test_offgrid_int(self):
"
25180,"def test_offgrid_float(self):
"
25181,"def test_numeric(self):
"
25182,"def test_smallq(self):
"
25183,"def test_bigq(self):
"
25184,"def test_offgrid_int(self):
"
25185,"def test_offgrid_float(self):
"
25186,"def test_numeric(self):
"
25187,"def __init__(self,request,annotation):
"
25188,"def created(self):
"
25189,"def updated(self):
"
25190,"def links(self):
"
25191,"def text(self):
"
25192,"def tags(self):
"
25193,"def target(self):
"
25194,"def asdict(self):
"
25195,"def permissions(self):
"
25196,"def asdict(self):
"
25197,"def id(self):
"
25198,"def bodies(self):
"
25199,"def __init__(self,document):
"
25200,"def asdict(self):
"
25201,"def __init__(self,document_meta):
"
25202,"def asdict(self):
"
25203,"def __init__(self,document_uri):
"
25204,"def asdict(self):
"
25205,"def rel(self):
"
25206,"def description(self):
"
25207,"def __repr__(self):
"
25208,"def __init__(self,annotation):
"
25209,"def __getattr__(self,attr):
"
25210,"def __getitem__(self,key):
"
25211,"def uri(self):
"
25212,"def filename(self):
"
25213,"def hostname_or_filename(self):
"
25214,"def title(self):
"
25215,"def href(self):
"
25216,"def link_text(self):
"
25217,"def document_link(self):
"
25218,"def description(self):
"
25219,"def created_day_string(self):
"
25220,"def __init__(self):
"
25221,"def __init__(self,path):
"
25222,"def load_module(self,full_name):
"
25223,"def find_module(self,fullname,path = None):
"
25224,"def CreateLabel(self,text,parent):
"
25225,"def CreateButton(self,text,parent):
"
25226,"def CreateLineEdit(self,parent):
"
25227,"def setupUi(self,parent):
"
25228,"def test_redis_version(self):
"
25229,"def test_redis_server(self):
"
25230,"def __repr__(self):
"
25231,"def head(self):
"
25232,"def handle_exception(self,exception,debug_mode):
"
25233,"def dispatch(self):
"
25234,"def locale(self):
"
25235,"def auth(self):
"
25236,"def current_user(self):
"
25237,"def logged_in(self):
"
25238,"def session_inc_pageviews(self):
"
25239,"def prep_html_response(self,template_name,template_vars = { }):
"
25240,"def handle_exception(self,exception,debug_mode):
"
25241,"def put(self):
"
25242,"def post(self):
"
25243,"def delete(self):
"
25244,"def prep_json_response(self,code,key = None,message = None):
"
25245,"def put(self,obj_t,* args):
"
25246,"def get(self,obj_t,identifier,* args):
"
25247,"def post(self,obj_t,identifier,* args):
"
25248,"def delete(self,obj_t,identifier,* args):
"
25249,"def __init__(self,data):
"
25250,"def __contains__(self,k):
"
25251,"def __delitem__(self,k):
"
25252,"def __getitem__(self,k):
"
25253,"def get(self,k,default = None):
"
25254,"def __setitem__(self,k,v):
"
25255,"def __init__(self,uri,http_method = 'GET',body = None,headers = None,encoding = 'utf-8'):
"
25256,"def __getattr__(self,name):
"
25257,"def __repr__(self):
"
25258,"def uri_query(self):
"
25259,"def uri_query_params(self):
"
25260,"def duplicate_params(self):
"
25261,"def __init__(self):
"
25262,"def available(self):
"
25263,"def available(self,available):
"
25264,"def catch_errors(self):
"
25265,"def catch_errors(self,catch_errors):
"
25266,"def test_not_implemented(self):
"
25267,"def test_check_length(self):
"
25268,"def test_check_realms(self):
"
25269,"def test_urldecode(self):
"
25270,"def test_extract_params_dict(self):
"
25271,"def test_extract_params_twotuple(self):
"
25272,"def test_extract_params_formencoded(self):
"
25273,"def test_extract_params_blank_string(self):
"
25274,"def test_extract_params_empty_list(self):
"
25275,"def test_extract_non_formencoded_string(self):
"
25276,"def test_extract_invalid(self):
"
25277,"def test_add_params_to_uri(self):
"
25278,"def test_generate_timestamp(self):
"
25279,"def test_generate_nonce(self):
"
25280,"def test_generate_token(self):
"
25281,"def test_generate_client_id(self):
"
25282,"def test_non_unicode_params(self):
"
25283,"def test_none_body(self):
"
25284,"def test_empty_list_body(self):
"
25285,"def test_empty_dict_body(self):
"
25286,"def test_empty_string_body(self):
"
25287,"def test_non_formencoded_string_body(self):
"
25288,"def test_param_free_sequence_body(self):
"
25289,"def test_list_body(self):
"
25290,"def test_dict_body(self):
"
25291,"def test_getattr_existing_attribute(self):
"
25292,"def test_getattr_return_default(self):
"
25293,"def test_getattr_raise_attribute_error(self):
"
25294,"def test_sanitizing_authorization_header(self):
"
25295,"def test_token_body(self):
"
25296,"def test_password_body(self):
"
25297,"def test_basic(self):
"
25298,"def __str__(self):
"
25299,"def is_public(self):
"
25300,"def is_confidential(self):
"
25301,"def __str__(self):
"
25302,"def save(self,force_insert = False,force_update = False,** kwargs):
"
25303,"def __str__(self):
"
25304,"def __str__(self):
"
25305,"def save(self,force_insert = False,force_update = False,** kwargs):
"
25306,"def __str__(self):
"
25307,"def save(self,force_insert = False,force_update = False,** kwargs):
"
25308,"def handle_form_valid(self,request,form):
"
25309,"def __str__(self):
"
25310,"def before_after_send_handling(self):
"
25311,"def send_test_message(self,to,text):
"
25312,"def _test_message(self,to,text):
"
25313,"def _init_delivery_statuses_dict(self):
"
25314,"def mark_pending(self,dispatch):
"
25315,"def mark_sent(self,dispatch):
"
25316,"def mark_error(self,dispatch,error_log,message_cls):
"
25317,"def mark_failed(self,dispatch,error_log):
"
25318,"def _update_dispatches(self):
"
25319,"def send(self,message_cls,message_model,dispatch_models):
"
25320,"def handle(self,* fixture_files,** options):
"
25321,"def syntax(self):
"
25322,"def short_desc(self):
"
25323,"def long_desc(self):
"
25324,"def add_options(self,parser):
"
25325,"def test_module_has_methods(self):
"
25326,"def __init__(self,rule_name,cls,position):
"
25327,"def __str__(self):
"
25328,"def __unicode__(self):
"
25329,"def __init__(self,cls_name,position = 0):
"
25330,"def first_pass(self,grammar_parser,node,children):
"
25331,"def second_pass(self,grammar_parser,model_parser):
"
25332,"def _setup(self):
"
25333,"def __unicode__(self):
"
25334,"def __init__(self,* args,** kwargs):
"
25335,"def __unicode__(self):
"
25336,"def __unicode__(self):
"
25337,"def __unicode__(self):
"
25338,"def __unicode__(self):
"
25339,"def __unicode__(self):
"
25340,"def url(self):
"
25341,"def __unicode__(self):
"
25342,"def __init__(self,name,labeler,description,dataMgr = None,labelNames = None,labelColors = None):
"
25343,"def removeFile(self,fileIndex):
"
25344,"def SetPickable(self,pickable):
"
25345,"def __init__(self,dataShape):
"
25346,"def Plane(self,axis):
"
25347,"def PlaneX(self):
"
25348,"def PlaneY(self):
"
25349,"def PlaneZ(self):
"
25350,"def ShowPlaneWidget(self,axis,show):
"
25351,"def TogglePlaneWidget(self,axis):
"
25352,"def SetInteractor(self,interactor):
"
25353,"def GetCoordinate(self):
"
25354,"def SetCoordinate(self,coor):
"
25355,"def __UpdateCross(self):
"
25356,"def __PlanePositionCallback(self,obj,event):
"
25357,"def __init__(self,parent = None):
"
25358,"def on_activation(self):
"
25359,"def on_deActivation(self):
"
25360,"def _initContent(self):
"
25361,"def _initConnects(self):
"
25362,"def on_otherProject(self):
"
25363,"def on_btnSelectFeatures_clicked(self):
"
25364,"def on_btnStartLive_clicked(self,state):
"
25365,"def on_btnTrainPredict_clicked(self):
"
25366,"def on_btnExportClassifier_clicked(self):
"
25367,"def on_btnClassifierOptions_clicked(self):
"
25368,"def __init__(self,* streams):
"
25369,"def write(self,str):
"
25370,"def __init__(self,guistream):
"
25371,"def write(self,str):
"
25372,"def __init__(self):
"
25373,"def __del__(self):
"
25374,"def customEvent(self,event):
"
25375,"def multipleRedirection(self,enabled):
"
25376,"def multipleStdOutRedirection(self,enabled = True):
"
25377,"def multipleStdErrRedirection(self,enabled = True):
"
25378,"def __init__(self,interpreter,message = """",log = '',parent = None):
"
25379,"def customEvent(self,event):
"
25380,"def clear(self):
"
25381,"def get_interpreter(self):
"
25382,"def flush(self):
"
25383,"def isatty(self):
"
25384,"def readline(self):
"
25385,"def write(self,s):
"
25386,"def __getEndPos(self):
"
25387,"def paste(self):
"
25388,"def __middleMouseButton(self):
"
25389,"def __executeLines(self,lines):
"
25390,"def __executeCommand(self,cmd):
"
25391,"def __insertText(self,s):
"
25392,"def __insertTextAtEnd(self,s):
"
25393,"def __isCursorOnLastLine(self):
"
25394,"def contextMenuEvent(self,e):
"
25395,"def mousePressEvent(self,event):
"
25396,"def keyPressEvent(self,ev):
"
25397,"def __QScintillaTab(self):
"
25398,"def __QScintillaDeleteBack(self):
"
25399,"def __QScintillaDelete(self):
"
25400,"def __QScintillaNewline(self):
"
25401,"def __QScintillaCharLeft(self,allLinesAllowed = False):
"
25402,"def __QScintillaCharRight(self):
"
25403,"def __QScintillaVCHome(self):
"
25404,"def __QScintillaLineEnd(self):
"
25405,"def __QScintillaLineUp(self):
"
25406,"def __QScintillaLineDown(self):
"
25407,"def __useHistory(self):
"
25408,"def __searchHistory(self,txt,startIdx = - 1):
"
25409,"def __rsearchHistory(self,txt,startIdx = - 1):
"
25410,"def focusNextPrevChild(self,next):
"
25411,"def __get_current_line(self):
"
25412,"def __showHelp(self,text):
"
25413,"def __showDynCompletion(self):
"
25414,"def __showCompletions(self,tcompletions,text):
"
25415,"def __completionListSelected(self,id,txt):
"
25416,"def dragEnterEvent(self,event):
"
25417,"def dragMoveEvent(self,event):
"
25418,"def dropEvent(self,event):
"
25419,"def __init__(self,dataItemImage):
"
25420,"def serialize(self,h5g,destbegin =(0,0,0),destend =(0,0,0),srcbegin =(0,0,0),srcend =(0,0,0),destshape =(0,0,0)):
"
25421,"def deserialize(self,h5g,offsets,shape):
"
25422,"def __init__(self,dataMgr):
"
25423,"def loadStack(self,fileList,options):
"
25424,"def onNewImage(self,dataItemImage):
"
25425,"def onDeleteImage(self,dataItemImage):
"
25426,"def serialize(self,h5g):
"
25427,"def deserialize(self,h5g):
"
25428,"def __init__(self,domains,use_https = True,sign_key = None,sign_mode = SIGNATURE_MODE_QUERY,shard_strategy = SHARD_STRATEGY_CRC,sign_with_library_version = True):
"
25429,"def create_url(self,path,opts = { }):
"
25430,"def all_periods(self):
"
25431,"def _total_date_range(self):
"
25432,"def segmented_consumption_data(self):
"
25433,"def __init__(self,dbg_ui,text,line_nr = '',attr = None,has_breakpoint = False):
"
25434,"def selectable(self):
"
25435,"def set_current(self,is_current):
"
25436,"def set_highlight(self,highlight):
"
25437,"def set_breakpoint(self,has_breakpoint):
"
25438,"def rows(self,size,focus = False):
"
25439,"def keypress(self,size,key):
"
25440,"def message(self):
"
25441,"def __init__(self,created_at = None,favorited = None,id = None,text = None,user = None,in_reply_to_screen_name = None,in_reply_to_user_id = None,in_reply_to_status_id = None,truncated = None,source = None,now = None):
"
25442,"def GetCreatedAt(self):
"
25443,"def SetCreatedAt(self,created_at):
"
25444,"def GetCreatedAtInSeconds(self):
"
25445,"def GetFavorited(self):
"
25446,"def SetFavorited(self,favorited):
"
25447,"def GetId(self):
"
25448,"def SetId(self,id):
"
25449,"def GetInReplyToScreenName(self):
"
25450,"def SetInReplyToScreenName(self,in_reply_to_screen_name):
"
25451,"def GetInReplyToUserId(self):
"
25452,"def SetInReplyToUserId(self,in_reply_to_user_id):
"
25453,"def GetInReplyToStatusId(self):
"
25454,"def SetInReplyToStatusId(self,in_reply_to_status_id):
"
25455,"def GetTruncated(self):
"
25456,"def SetTruncated(self,truncated):
"
25457,"def GetSource(self):
"
25458,"def SetSource(self,source):
"
25459,"def GetText(self):
"
25460,"def SetText(self,text):
"
25461,"def GetRelativeCreatedAt(self):
"
25462,"def GetUser(self):
"
25463,"def SetUser(self,user):
"
25464,"def GetNow(self):
"
25465,"def SetNow(self,now):
"
25466,"def __ne__(self,other):
"
25467,"def __eq__(self,other):
"
25468,"def __str__(self):
"
25469,"def AsJsonString(self):
"
25470,"def AsDict(self):
"
25471,"def __init__(self,id = None,name = None,screen_name = None,location = None,description = None,profile_image_url = None,profile_background_tile = None,profile_background_image_url = None,profile_sidebar_fill_color = None,profile_background_color = None,profile_link_color = None,profile_text_color = None,protected = None,utc_offset = None,time_zone = None,followers_count = None,friends_count = None,statuses_count = None,favourites_count = None,url = None,status = None):
"
25472,"def GetId(self):
"
25473,"def SetId(self,id):
"
25474,"def GetName(self):
"
25475,"def SetName(self,name):
"
25476,"def GetScreenName(self):
"
25477,"def SetScreenName(self,screen_name):
"
25478,"def GetLocation(self):
"
25479,"def SetLocation(self,location):
"
25480,"def GetDescription(self):
"
25481,"def SetDescription(self,description):
"
25482,"def GetUrl(self):
"
25483,"def SetUrl(self,url):
"
25484,"def GetProfileImageUrl(self):
"
25485,"def SetProfileImageUrl(self,profile_image_url):
"
25486,"def GetProfileBackgroundTile(self):
"
25487,"def SetProfileBackgroundTile(self,profile_background_tile):
"
25488,"def GetProfileBackgroundImageUrl(self):
"
25489,"def SetProfileBackgroundImageUrl(self,profile_background_image_url):
"
25490,"def GetProfileSidebarFillColor(self):
"
25491,"def SetProfileSidebarFillColor(self,profile_sidebar_fill_color):
"
25492,"def GetProfileBackgroundColor(self):
"
25493,"def SetProfileBackgroundColor(self,profile_background_color):
"
25494,"def GetProfileLinkColor(self):
"
25495,"def SetProfileLinkColor(self,profile_link_color):
"
25496,"def GetProfileTextColor(self):
"
25497,"def SetProfileTextColor(self,profile_text_color):
"
25498,"def GetProtected(self):
"
25499,"def SetProtected(self,protected):
"
25500,"def GetUtcOffset(self):
"
25501,"def SetUtcOffset(self,utc_offset):
"
25502,"def GetTimeZone(self):
"
25503,"def SetTimeZone(self,time_zone):
"
25504,"def GetStatus(self):
"
25505,"def SetStatus(self,status):
"
25506,"def GetFriendsCount(self):
"
25507,"def SetFriendsCount(self,count):
"
25508,"def GetFollowersCount(self):
"
25509,"def SetFollowersCount(self,count):
"
25510,"def GetStatusesCount(self):
"
25511,"def SetStatusesCount(self,count):
"
25512,"def GetFavouritesCount(self):
"
25513,"def SetFavouritesCount(self,count):
"
25514,"def __ne__(self,other):
"
25515,"def __eq__(self,other):
"
25516,"def __str__(self):
"
25517,"def AsJsonString(self):
"
25518,"def AsDict(self):
"
25519,"def __init__(self,id = None,created_at = None,sender_id = None,sender_screen_name = None,recipient_id = None,recipient_screen_name = None,text = None):
"
25520,"def GetId(self):
"
25521,"def SetId(self,id):
"
25522,"def GetCreatedAt(self):
"
25523,"def SetCreatedAt(self,created_at):
"
25524,"def GetCreatedAtInSeconds(self):
"
25525,"def GetSenderId(self):
"
25526,"def SetSenderId(self,sender_id):
"
25527,"def GetSenderScreenName(self):
"
25528,"def SetSenderScreenName(self,sender_screen_name):
"
25529,"def GetRecipientId(self):
"
25530,"def SetRecipientId(self,recipient_id):
"
25531,"def GetRecipientScreenName(self):
"
25532,"def SetRecipientScreenName(self,recipient_screen_name):
"
25533,"def GetText(self):
"
25534,"def SetText(self,text):
"
25535,"def __ne__(self,other):
"
25536,"def __eq__(self,other):
"
25537,"def __str__(self):
"
25538,"def AsJsonString(self):
"
25539,"def AsDict(self):
"
25540,"def __init__(self,username = None,password = None,input_encoding = None,request_headers = None):
"
25541,"def GetPublicTimeline(self,since_id = None):
"
25542,"def GetFriendsTimeline(self,user = None,count = None,since = None,since_id = None):
"
25543,"def GetUserTimeline(self,user = None,count = None,since = None,since_id = None):
"
25544,"def GetStatus(self,id):
"
25545,"def DestroyStatus(self,id):
"
25546,"def PostUpdate(self,status,in_reply_to_status_id = None):
"
25547,"def PostUpdates(self,status,continuation = None,** kwargs):
"
25548,"def GetReplies(self,since = None,since_id = None,page = None):
"
25549,"def GetFriends(self,user = None,page = None):
"
25550,"def GetFollowers(self,page = None):
"
25551,"def GetFeatured(self):
"
25552,"def GetUser(self,user):
"
25553,"def GetDirectMessages(self,since = None,since_id = None,page = None):
"
25554,"def PostDirectMessage(self,user,text):
"
25555,"def DestroyDirectMessage(self,id):
"
25556,"def CreateFriendship(self,user):
"
25557,"def DestroyFriendship(self,user):
"
25558,"def CreateFavorite(self,status):
"
25559,"def DestroyFavorite(self,status):
"
25560,"def GetUserByEmail(self,email):
"
25561,"def SetCredentials(self,username,password):
"
25562,"def ClearCredentials(self):
"
25563,"def SetCache(self,cache):
"
25564,"def SetUrllib(self,urllib):
"
25565,"def SetCacheTimeout(self,cache_timeout):
"
25566,"def SetUserAgent(self,user_agent):
"
25567,"def SetXTwitterHeaders(self,client,url,version):
"
25568,"def SetSource(self,source):
"
25569,"def _InitializeRequestHeaders(self,request_headers):
"
25570,"def _InitializeUserAgent(self):
"
25571,"def _InitializeDefaultParameters(self):
"
25572,"def _AddAuthorizationHeader(self,username,password):
"
25573,"def _RemoveAuthorizationHeader(self):
"
25574,"def _Encode(self,s):
"
25575,"def _EncodeParameters(self,parameters):
"
25576,"def _EncodePostData(self,post_data):
"
25577,"def _CheckForTwitterError(self,data):
"
25578,"def _FetchUrl(self,url,post_data = None,parameters = None,no_cache = None):
"
25579,"def __init__(self,root_directory = None):
"
25580,"def Get(self,key):
"
25581,"def Set(self,key,data):
"
25582,"def Remove(self,key):
"
25583,"def GetCachedTime(self,key):
"
25584,"def _GetTmpCachePath(self):
"
25585,"def _InitializeRootDirectory(self,root_directory):
"
25586,"def _GetPath(self,key):
"
25587,"def _GetPrefix(self,hashed_key):
"
25588,"def __init__(self,dburi = None):
"
25589,"def _connect(self):
"
25590,"def flush(self):
"
25591,"def _reset_cache(self):
"
25592,"def get_record(self,oai_id):
"
25593,"def get_set(self,oai_id):
"
25594,"def get_setrefs(self,oai_id,include_hidden_sets = False):
"
25595,"def record_count(self):
"
25596,"def set_count(self):
"
25597,"def remove_record(self,oai_id):
"
25598,"def remove_set(self,oai_id):
"
25599,"def oai_sets(self,offset = 0,batch_size = 20):
"
25600,"def oai_earliest_datestamp(self):
"
25601,"def oai_query(self,offset = 0,batch_size = 20,needed_sets = None,disallowed_sets = None,allowed_sets = None,from_date = None,until_date = None,identifier = None):
"
25602,"def __init__(self,** kwargs):
"
25603,"def convert_field_name(self,field_name):
"
